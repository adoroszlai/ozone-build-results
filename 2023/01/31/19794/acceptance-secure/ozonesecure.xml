<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230131 08:16:35.863" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:17.704" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:17.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:17.710" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:49:17.698" endtime="20230131 07:49:17.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:17.711" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:49:17.710" endtime="20230131 07:49:17.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:17.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:17.711" endtime="20230131 07:49:17.712"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.697" endtime="20230131 07:49:17.713"/>
</kw>
<msg timestamp="20230131 07:49:17.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:17.697" endtime="20230131 07:49:17.716"/>
</kw>
<msg timestamp="20230131 07:49:17.716" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20230131 07:49:17.696" endtime="20230131 07:49:17.716"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:17.722" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:17.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:17.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:49:17.719" endtime="20230131 07:49:17.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:17.757" level="INFO"/>
<status status="PASS" starttime="20230131 07:49:17.756" endtime="20230131 07:49:17.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:17.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:17.757" endtime="20230131 07:49:17.758"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.719" endtime="20230131 07:49:17.758"/>
</kw>
<msg timestamp="20230131 07:49:17.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:17.718" endtime="20230131 07:49:17.759"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.718" endtime="20230131 07:49:17.760"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.717" endtime="20230131 07:49:17.760"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.696" endtime="20230131 07:49:17.760"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.694" endtime="20230131 07:49:17.760"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:17.765" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:18.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:18.037" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230131 07:49:17.762" endtime="20230131 07:49:18.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:18.042" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 489

HTTP/1.1 200 OK
Date: Tue, 31 Jan 2023 07:49:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCK7tx+sc4SJ2i8zW0MMICBwU+ZKj13emLSyS3mRKlffkFqxamGKAfO3ZWwUwE7q7uJDL+UddY+hrgfLIRfR5qLfVV
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1675187358012&amp;s=DoL3V8/u3g1mD1t5VafKLpt4Zflt3G1yKZjBAsofEAA="; Path=/; HttpOnly
Last-Modified: Tue, 31 Jan 2023 07:31:08 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230131 07:49:18.038" endtime="20230131 07:49:18.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:18.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:18.042" endtime="20230131 07:49:18.043"/>
</kw>
<status status="PASS" starttime="20230131 07:49:17.761" endtime="20230131 07:49:18.044"/>
</kw>
<msg timestamp="20230131 07:49:18.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:17.761" endtime="20230131 07:49:18.045"/>
</kw>
<msg timestamp="20230131 07:49:18.046" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230131 07:49:17.760" endtime="20230131 07:49:18.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:18.047" endtime="20230131 07:49:18.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 07:49:17.693" endtime="20230131 07:49:18.049"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:18.058" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:18.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:18.063" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:49:18.055" endtime="20230131 07:49:18.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:18.065" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:49:18.064" endtime="20230131 07:49:18.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:18.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:18.065" endtime="20230131 07:49:18.066"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.054" endtime="20230131 07:49:18.066"/>
</kw>
<msg timestamp="20230131 07:49:18.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:18.054" endtime="20230131 07:49:18.067"/>
</kw>
<msg timestamp="20230131 07:49:18.067" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:49:18.053" endtime="20230131 07:49:18.067"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:49:18.070" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:49:18.067" endtime="20230131 07:49:18.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:18.075" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:18.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:18.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:49:18.072" endtime="20230131 07:49:18.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:18.098" level="INFO"/>
<status status="PASS" starttime="20230131 07:49:18.098" endtime="20230131 07:49:18.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:18.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:18.099" endtime="20230131 07:49:18.100"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.072" endtime="20230131 07:49:18.100"/>
</kw>
<msg timestamp="20230131 07:49:18.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:18.071" endtime="20230131 07:49:18.101"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.070" endtime="20230131 07:49:18.101"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.070" endtime="20230131 07:49:18.101"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.053" endtime="20230131 07:49:18.102"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.051" endtime="20230131 07:49:18.102"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 07:49:18.102" level="INFO">${random} = CQoV1JD2Dc</msg>
<status status="PASS" starttime="20230131 07:49:18.102" endtime="20230131 07:49:18.103"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:18.109" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p CQoV1JD2Dc  2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:32.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:32.432" level="INFO">${output} = 2023-01-31 07:49:21,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 07:49:21,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 07:49:18.106" endtime="20230131 07:49:32.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:32.434" level="INFO">2023-01-31 07:49:21,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 07:49:21,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-31 07:49:21,565 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-31 07:49:21,829 [main] INFO freon.BaseFreonGenerator: Executing test with prefix CQoV1JD2Dc and number-of-tests 1
2023-01-31 07:49:21,978 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:22,986 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:23,987 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:24,621 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-01-31 07:49:24,739 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2023-01-31 07:49:24,988 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:25,988 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:26,214 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-31 07:49:26,318 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-31 07:49:26,928 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-31 07:49:26,989 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:27,990 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:28,991 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:29,991 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:30,995 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-31 07:49:32,026 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=6112.630633, max=6112.630633, mean=6112.630633, stddev=0.0, median=6112.630633, p75=6112.630633, p95=6112.630633, p98=6112.630633, p99=6112.630633, p999=6112.630633, mean_rate=0.13870212074258234, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-31 07:49:32,027 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-01-31 07:49:32,027 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-31 07:49:32,027 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230131 07:49:32.433" endtime="20230131 07:49:32.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:32.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:32.435" endtime="20230131 07:49:32.436"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.106" endtime="20230131 07:49:32.436"/>
</kw>
<msg timestamp="20230131 07:49:32.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:18.105" endtime="20230131 07:49:32.438"/>
</kw>
<msg timestamp="20230131 07:49:32.438" level="INFO">${result} = 2023-01-31 07:49:21,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 07:49:21,565 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 07:49:18.104" endtime="20230131 07:49:32.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:32.438" endtime="20230131 07:49:32.439"/>
</kw>
<status status="PASS" starttime="20230131 07:49:18.103" endtime="20230131 07:49:32.440"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:32.451" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p CQoV1JD2Dc  2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:43.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:43.846" level="INFO">${output} = 2023-01-31 07:49:35,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 07:49:35,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 07:49:32.445" endtime="20230131 07:49:43.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:43.848" level="INFO">2023-01-31 07:49:35,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 07:49:35,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-31 07:49:35,876 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-31 07:49:36,226 [main] INFO freon.BaseFreonGenerator: Executing test with prefix CQoV1JD2Dc and number-of-tests 1
2023-01-31 07:49:36,478 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:37,496 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:38,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:39,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:39,975 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-31 07:49:40,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:41,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 07:49:42,530 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-31 07:49:43,478 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=106.189744, max=106.189744, mean=106.189744, stddev=0.0, median=106.189744, p75=106.189744, p95=106.189744, p98=106.189744, p99=106.189744, p999=106.189744, mean_rate=0.7250737883485698, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-31 07:49:43,479 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-01-31 07:49:43,479 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-31 07:49:43,479 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230131 07:49:43.846" endtime="20230131 07:49:43.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:43.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:43.848" endtime="20230131 07:49:43.849"/>
</kw>
<status status="PASS" starttime="20230131 07:49:32.444" endtime="20230131 07:49:43.850"/>
</kw>
<msg timestamp="20230131 07:49:43.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:32.444" endtime="20230131 07:49:43.850"/>
</kw>
<msg timestamp="20230131 07:49:43.851" level="INFO">${result} = 2023-01-31 07:49:35,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 07:49:35,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 07:49:32.442" endtime="20230131 07:49:43.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:43.851" endtime="20230131 07:49:43.852"/>
</kw>
<status status="PASS" starttime="20230131 07:49:32.440" endtime="20230131 07:49:43.852"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 07:49:18.050" endtime="20230131 07:49:43.852"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230131 07:49:17.636" endtime="20230131 07:49:43.854"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:43.882" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:46.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:46.697" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230131 07:49:43.879" endtime="20230131 07:49:46.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:46.702" level="INFO">om</msg>
<status status="PASS" starttime="20230131 07:49:46.698" endtime="20230131 07:49:46.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:46.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:46.703" endtime="20230131 07:49:46.704"/>
</kw>
<status status="PASS" starttime="20230131 07:49:43.878" endtime="20230131 07:49:46.710"/>
</kw>
<msg timestamp="20230131 07:49:46.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:43.878" endtime="20230131 07:49:46.711"/>
</kw>
<msg timestamp="20230131 07:49:46.711" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230131 07:49:43.877" endtime="20230131 07:49:46.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:46.719" endtime="20230131 07:49:46.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:46.729" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:49.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:49.385" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230131 07:49:46.722" endtime="20230131 07:49:49.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:49.386" level="INFO">om</msg>
<status status="PASS" starttime="20230131 07:49:49.385" endtime="20230131 07:49:49.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:49.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:49.386" endtime="20230131 07:49:49.387"/>
</kw>
<status status="PASS" starttime="20230131 07:49:46.722" endtime="20230131 07:49:49.388"/>
</kw>
<msg timestamp="20230131 07:49:49.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:46.721" endtime="20230131 07:49:49.388"/>
</kw>
<msg timestamp="20230131 07:49:49.389" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230131 07:49:46.720" endtime="20230131 07:49:49.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:49.389" endtime="20230131 07:49:49.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 07:49:43.875" endtime="20230131 07:49:49.390"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:49.396" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:51.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:51.583" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:49:49.393" endtime="20230131 07:49:51.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:51.584" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:49:51.584" endtime="20230131 07:49:51.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:51.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:51.585" endtime="20230131 07:49:51.585"/>
</kw>
<status status="PASS" starttime="20230131 07:49:49.392" endtime="20230131 07:49:51.586"/>
</kw>
<msg timestamp="20230131 07:49:51.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:49.392" endtime="20230131 07:49:51.586"/>
</kw>
<msg timestamp="20230131 07:49:51.587" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230131 07:49:49.391" endtime="20230131 07:49:51.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:51.587" endtime="20230131 07:49:51.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:51.594" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:53.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:53.936" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:49:51.591" endtime="20230131 07:49:53.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:53.937" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:49:53.936" endtime="20230131 07:49:53.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:53.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:53.938" endtime="20230131 07:49:53.938"/>
</kw>
<status status="PASS" starttime="20230131 07:49:51.590" endtime="20230131 07:49:53.939"/>
</kw>
<msg timestamp="20230131 07:49:53.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:51.590" endtime="20230131 07:49:53.939"/>
</kw>
<msg timestamp="20230131 07:49:53.940" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230131 07:49:51.588" endtime="20230131 07:49:53.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:53.940" endtime="20230131 07:49:53.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 07:49:49.391" endtime="20230131 07:49:53.941"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:53.949" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:56.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:56.117" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230131 07:49:53.945" endtime="20230131 07:49:56.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:56.119" level="INFO">om</msg>
<status status="PASS" starttime="20230131 07:49:56.118" endtime="20230131 07:49:56.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:56.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:56.119" endtime="20230131 07:49:56.120"/>
</kw>
<status status="PASS" starttime="20230131 07:49:53.944" endtime="20230131 07:49:56.120"/>
</kw>
<msg timestamp="20230131 07:49:56.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:53.944" endtime="20230131 07:49:56.121"/>
</kw>
<msg timestamp="20230131 07:49:56.121" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230131 07:49:53.943" endtime="20230131 07:49:56.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:56.122" endtime="20230131 07:49:56.122"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:56.122" endtime="20230131 07:49:56.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:56.130" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:58.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:58.168" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230131 07:49:56.125" endtime="20230131 07:49:58.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:58.171" level="INFO">om</msg>
<status status="PASS" starttime="20230131 07:49:58.168" endtime="20230131 07:49:58.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:58.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:58.172" endtime="20230131 07:49:58.172"/>
</kw>
<status status="PASS" starttime="20230131 07:49:56.124" endtime="20230131 07:49:58.173"/>
</kw>
<msg timestamp="20230131 07:49:58.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:56.124" endtime="20230131 07:49:58.174"/>
</kw>
<msg timestamp="20230131 07:49:58.174" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230131 07:49:56.123" endtime="20230131 07:49:58.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:58.174" endtime="20230131 07:49:58.175"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:49:58.175" endtime="20230131 07:49:58.176"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 07:49:53.942" endtime="20230131 07:49:58.176"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:58.182" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:00.615" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:50:00.615" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230131 07:49:58.179" endtime="20230131 07:50:00.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:00.617" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230131 07:50:00.615" endtime="20230131 07:50:00.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:00.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:00.617" endtime="20230131 07:50:00.618"/>
</kw>
<msg timestamp="20230131 07:50:00.619" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230131 07:49:58.178" endtime="20230131 07:50:00.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:50:00.619" endtime="20230131 07:50:00.620"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:00.627" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:02.864" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:50:02.864" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230131 07:50:00.621" endtime="20230131 07:50:02.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:02.866" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230131 07:50:02.864" endtime="20230131 07:50:02.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:02.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:02.866" endtime="20230131 07:50:02.867"/>
</kw>
<msg timestamp="20230131 07:50:02.867" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230131 07:50:00.620" endtime="20230131 07:50:02.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:50:02.868" endtime="20230131 07:50:02.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 07:49:58.177" endtime="20230131 07:50:02.870"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230131 07:49:43.859" endtime="20230131 07:50:02.871"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 07:50:02.904" level="INFO">${random} = 60337</msg>
<status status="PASS" starttime="20230131 07:50:02.903" endtime="20230131 07:50:02.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:50:02.906" level="INFO">${source} = 60337-source</msg>
<status status="PASS" starttime="20230131 07:50:02.904" endtime="20230131 07:50:02.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:50:02.908" level="INFO">${target} = 60337-target</msg>
<status status="PASS" starttime="20230131 07:50:02.906" endtime="20230131 07:50:02.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:02.914" level="INFO">Running command 'ozone sh volume create 60337-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:09.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:09.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:02.911" endtime="20230131 07:50:09.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:09.863" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:09.863" endtime="20230131 07:50:09.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:09.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:09.864" endtime="20230131 07:50:09.864"/>
</kw>
<status status="PASS" starttime="20230131 07:50:02.910" endtime="20230131 07:50:09.865"/>
</kw>
<msg timestamp="20230131 07:50:09.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:02.910" endtime="20230131 07:50:09.866"/>
</kw>
<status status="PASS" starttime="20230131 07:50:02.909" endtime="20230131 07:50:09.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:09.871" level="INFO">Running command 'ozone sh volume create 60337-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:17.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:17.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:09.868" endtime="20230131 07:50:17.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:17.521" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:17.520" endtime="20230131 07:50:17.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:17.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:17.521" endtime="20230131 07:50:17.522"/>
</kw>
<status status="PASS" starttime="20230131 07:50:09.867" endtime="20230131 07:50:17.523"/>
</kw>
<msg timestamp="20230131 07:50:17.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:09.867" endtime="20230131 07:50:17.524"/>
</kw>
<status status="PASS" starttime="20230131 07:50:09.866" endtime="20230131 07:50:17.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:17.532" level="INFO">Running command 'ozone sh bucket create 60337-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:24.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:24.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:17.528" endtime="20230131 07:50:24.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:24.268" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:24.267" endtime="20230131 07:50:24.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:24.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:24.268" endtime="20230131 07:50:24.269"/>
</kw>
<status status="PASS" starttime="20230131 07:50:17.527" endtime="20230131 07:50:24.269"/>
</kw>
<msg timestamp="20230131 07:50:24.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:17.527" endtime="20230131 07:50:24.270"/>
</kw>
<status status="PASS" starttime="20230131 07:50:17.526" endtime="20230131 07:50:24.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:24.276" level="INFO">Running command 'ozone sh key put 60337-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:36.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:36.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:24.272" endtime="20230131 07:50:36.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:36.172" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:36.171" endtime="20230131 07:50:36.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:36.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:36.172" endtime="20230131 07:50:36.173"/>
</kw>
<status status="PASS" starttime="20230131 07:50:24.272" endtime="20230131 07:50:36.174"/>
</kw>
<msg timestamp="20230131 07:50:36.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:24.271" endtime="20230131 07:50:36.175"/>
</kw>
<status status="PASS" starttime="20230131 07:50:24.271" endtime="20230131 07:50:36.175"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:36.180" level="INFO">Running command 'ozone sh bucket create 60337-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:43.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:43.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:36.177" endtime="20230131 07:50:43.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:43.414" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:43.413" endtime="20230131 07:50:43.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:43.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:43.414" endtime="20230131 07:50:43.415"/>
</kw>
<status status="PASS" starttime="20230131 07:50:36.176" endtime="20230131 07:50:43.416"/>
</kw>
<msg timestamp="20230131 07:50:43.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:36.176" endtime="20230131 07:50:43.416"/>
</kw>
<status status="PASS" starttime="20230131 07:50:36.175" endtime="20230131 07:50:43.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:43.422" level="INFO">Running command 'ozone sh bucket link 60337-source/readable-bucket 60337-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:50.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:50.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:43.419" endtime="20230131 07:50:50.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:50.903" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:50.903" endtime="20230131 07:50:50.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:50.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:50.904" endtime="20230131 07:50:50.904"/>
</kw>
<status status="PASS" starttime="20230131 07:50:43.419" endtime="20230131 07:50:50.905"/>
</kw>
<msg timestamp="20230131 07:50:50.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:43.418" endtime="20230131 07:50:50.906"/>
</kw>
<status status="PASS" starttime="20230131 07:50:43.418" endtime="20230131 07:50:50.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:50.911" level="INFO">Running command 'ozone sh bucket link 60337-source/readable-bucket 60337-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:50:57.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:50:57.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:50.908" endtime="20230131 07:50:57.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:50:57.792" level="INFO"/>
<status status="PASS" starttime="20230131 07:50:57.791" endtime="20230131 07:50:57.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:50:57.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:50:57.792" endtime="20230131 07:50:57.793"/>
</kw>
<status status="PASS" starttime="20230131 07:50:50.907" endtime="20230131 07:50:57.793"/>
</kw>
<msg timestamp="20230131 07:50:57.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:50.907" endtime="20230131 07:50:57.794"/>
</kw>
<status status="PASS" starttime="20230131 07:50:50.906" endtime="20230131 07:50:57.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:50:57.799" level="INFO">Running command 'ozone sh bucket link 60337-source/unreadable-bucket 60337-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:04.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:04.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:50:57.797" endtime="20230131 07:51:04.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:04.681" level="INFO"/>
<status status="PASS" starttime="20230131 07:51:04.681" endtime="20230131 07:51:04.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:04.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:04.681" endtime="20230131 07:51:04.682"/>
</kw>
<status status="PASS" starttime="20230131 07:50:57.796" endtime="20230131 07:51:04.683"/>
</kw>
<msg timestamp="20230131 07:51:04.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:50:57.796" endtime="20230131 07:51:04.683"/>
</kw>
<status status="PASS" starttime="20230131 07:50:57.795" endtime="20230131 07:51:04.684"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:04.688" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 60337-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:11.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:11.596" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:04.686" endtime="20230131 07:51:11.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:11.598" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:11.596" endtime="20230131 07:51:11.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:11.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:11.598" endtime="20230131 07:51:11.599"/>
</kw>
<status status="PASS" starttime="20230131 07:51:04.685" endtime="20230131 07:51:11.599"/>
</kw>
<msg timestamp="20230131 07:51:11.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:04.685" endtime="20230131 07:51:11.600"/>
</kw>
<status status="PASS" starttime="20230131 07:51:04.684" endtime="20230131 07:51:11.600"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:11.606" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 60337-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:18.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:18.244" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:11.603" endtime="20230131 07:51:18.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:18.246" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:18.245" endtime="20230131 07:51:18.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:18.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:18.247" endtime="20230131 07:51:18.248"/>
</kw>
<status status="PASS" starttime="20230131 07:51:11.602" endtime="20230131 07:51:18.248"/>
</kw>
<msg timestamp="20230131 07:51:18.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:11.601" endtime="20230131 07:51:18.249"/>
</kw>
<status status="PASS" starttime="20230131 07:51:11.600" endtime="20230131 07:51:18.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:18.260" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 60337-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:25.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:25.062" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:18.257" endtime="20230131 07:51:25.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:25.063" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:25.063" endtime="20230131 07:51:25.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:25.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:25.064" endtime="20230131 07:51:25.064"/>
</kw>
<status status="PASS" starttime="20230131 07:51:18.251" endtime="20230131 07:51:25.065"/>
</kw>
<msg timestamp="20230131 07:51:25.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:18.250" endtime="20230131 07:51:25.065"/>
</kw>
<status status="PASS" starttime="20230131 07:51:18.250" endtime="20230131 07:51:25.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:25.070" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 60337-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:31.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:31.733" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:25.068" endtime="20230131 07:51:31.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:31.735" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:31.734" endtime="20230131 07:51:31.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:31.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:31.735" endtime="20230131 07:51:31.736"/>
</kw>
<status status="PASS" starttime="20230131 07:51:25.067" endtime="20230131 07:51:31.736"/>
</kw>
<msg timestamp="20230131 07:51:31.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:25.067" endtime="20230131 07:51:31.737"/>
</kw>
<status status="PASS" starttime="20230131 07:51:25.066" endtime="20230131 07:51:31.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:31.742" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 60337-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:38.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:38.291" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:31.739" endtime="20230131 07:51:38.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:38.292" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:51:38.291" endtime="20230131 07:51:38.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:38.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:38.292" endtime="20230131 07:51:38.293"/>
</kw>
<status status="PASS" starttime="20230131 07:51:31.739" endtime="20230131 07:51:38.294"/>
</kw>
<msg timestamp="20230131 07:51:38.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:31.738" endtime="20230131 07:51:38.295"/>
</kw>
<status status="PASS" starttime="20230131 07:51:31.738" endtime="20230131 07:51:38.296"/>
</kw>
<status status="PASS" starttime="20230131 07:50:17.525" endtime="20230131 07:51:38.297"/>
</kw>
<status status="PASS" starttime="20230131 07:50:17.524" endtime="20230131 07:51:38.297"/>
</kw>
<status status="PASS" starttime="20230131 07:50:02.903" endtime="20230131 07:51:38.297"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:38.306" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:38.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:38.313" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:51:38.303" endtime="20230131 07:51:38.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:38.315" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:51:38.313" endtime="20230131 07:51:38.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:38.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:38.315" endtime="20230131 07:51:38.316"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.302" endtime="20230131 07:51:38.317"/>
</kw>
<msg timestamp="20230131 07:51:38.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:38.302" endtime="20230131 07:51:38.318"/>
</kw>
<msg timestamp="20230131 07:51:38.318" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:51:38.301" endtime="20230131 07:51:38.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:51:38.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:51:38.319" endtime="20230131 07:51:38.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:38.331" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:38.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:38.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:51:38.328" endtime="20230131 07:51:38.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:38.429" level="INFO"/>
<status status="PASS" starttime="20230131 07:51:38.428" endtime="20230131 07:51:38.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:38.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:38.430" endtime="20230131 07:51:38.431"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.327" endtime="20230131 07:51:38.431"/>
</kw>
<msg timestamp="20230131 07:51:38.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:38.327" endtime="20230131 07:51:38.432"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.325" endtime="20230131 07:51:38.432"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.321" endtime="20230131 07:51:38.433"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.300" endtime="20230131 07:51:38.433"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.300" endtime="20230131 07:51:38.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:38.439" level="INFO">Running command 'ozone sh bucket link 60337-source/no-such-bucket 60337-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:45.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:45.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:51:38.436" endtime="20230131 07:51:45.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:45.018" level="INFO"/>
<status status="PASS" starttime="20230131 07:51:45.017" endtime="20230131 07:51:45.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:45.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:45.019" endtime="20230131 07:51:45.020"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.436" endtime="20230131 07:51:45.021"/>
</kw>
<msg timestamp="20230131 07:51:45.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:38.435" endtime="20230131 07:51:45.022"/>
</kw>
<status status="PASS" starttime="20230131 07:51:38.434" endtime="20230131 07:51:45.022"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:45.026" level="INFO">Running command 'ozone sh key list 60337-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:51.722" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:51:51.722" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230131 07:51:45.024" endtime="20230131 07:51:51.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:51.724" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230131 07:51:51.723" endtime="20230131 07:51:51.724"/>
</kw>
<msg timestamp="20230131 07:51:51.725" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230131 07:51:45.023" endtime="20230131 07:51:51.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:51:51.725" endtime="20230131 07:51:51.726"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:51:38.298" endtime="20230131 07:51:51.726"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:51.735" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:51.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:51.740" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:51:51.732" endtime="20230131 07:51:51.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:51.742" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:51:51.740" endtime="20230131 07:51:51.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:51.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:51.742" endtime="20230131 07:51:51.743"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.731" endtime="20230131 07:51:51.743"/>
</kw>
<msg timestamp="20230131 07:51:51.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:51.731" endtime="20230131 07:51:51.744"/>
</kw>
<msg timestamp="20230131 07:51:51.744" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:51:51.730" endtime="20230131 07:51:51.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:51:51.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:51:51.745" endtime="20230131 07:51:51.746"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:51.751" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:51.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:51.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:51:51.748" endtime="20230131 07:51:51.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:51.798" level="INFO"/>
<status status="PASS" starttime="20230131 07:51:51.796" endtime="20230131 07:51:51.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:51.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:51.798" endtime="20230131 07:51:51.799"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.748" endtime="20230131 07:51:51.799"/>
</kw>
<msg timestamp="20230131 07:51:51.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:51.747" endtime="20230131 07:51:51.800"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.747" endtime="20230131 07:51:51.800"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.746" endtime="20230131 07:51:51.800"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.730" endtime="20230131 07:51:51.800"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.729" endtime="20230131 07:51:51.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:51.809" level="INFO">Running command 'ozone sh bucket link 60337-source/bucket1 60337-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:51:58.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:51:58.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:51:51.803" endtime="20230131 07:51:58.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:51:58.047" level="INFO"/>
<status status="PASS" starttime="20230131 07:51:58.046" endtime="20230131 07:51:58.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:51:58.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:51:58.047" endtime="20230131 07:51:58.049"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.802" endtime="20230131 07:51:58.049"/>
</kw>
<msg timestamp="20230131 07:51:58.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:51.802" endtime="20230131 07:51:58.050"/>
</kw>
<status status="PASS" starttime="20230131 07:51:51.801" endtime="20230131 07:51:58.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:51:58.059" level="INFO">Running command 'ozone sh bucket create 60337-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:04.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:04.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:51:58.053" endtime="20230131 07:52:04.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:04.197" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:04.196" endtime="20230131 07:52:04.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:04.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:04.197" endtime="20230131 07:52:04.198"/>
</kw>
<status status="PASS" starttime="20230131 07:51:58.052" endtime="20230131 07:52:04.198"/>
</kw>
<msg timestamp="20230131 07:52:04.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:51:58.051" endtime="20230131 07:52:04.199"/>
</kw>
<status status="PASS" starttime="20230131 07:51:58.051" endtime="20230131 07:52:04.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:04.206" level="INFO">Running command 'ozone sh key put 60337-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:13.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:13.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:04.201" endtime="20230131 07:52:13.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:13.973" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:13.971" endtime="20230131 07:52:13.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:13.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:13.973" endtime="20230131 07:52:13.974"/>
</kw>
<status status="PASS" starttime="20230131 07:52:04.200" endtime="20230131 07:52:13.974"/>
</kw>
<msg timestamp="20230131 07:52:13.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:04.200" endtime="20230131 07:52:13.975"/>
</kw>
<status status="PASS" starttime="20230131 07:52:04.199" endtime="20230131 07:52:13.975"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 07:52:13.978" level="INFO">${postfix} = 53562</msg>
<status status="PASS" starttime="20230131 07:52:13.977" endtime="20230131 07:52:13.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230131 07:52:13.978" level="INFO">${tmpfile} = /tmp/tempkey-53562</msg>
<status status="PASS" starttime="20230131 07:52:13.978" endtime="20230131 07:52:13.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:13.983" level="INFO">Running command 'ozone sh key get 60337-target/link1/key1 /tmp/tempkey-53562 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:23.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:23.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:13.980" endtime="20230131 07:52:23.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:23.509" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:23.508" endtime="20230131 07:52:23.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:23.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:23.510" endtime="20230131 07:52:23.511"/>
</kw>
<status status="PASS" starttime="20230131 07:52:13.980" endtime="20230131 07:52:23.511"/>
</kw>
<msg timestamp="20230131 07:52:23.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:13.979" endtime="20230131 07:52:23.512"/>
</kw>
<status status="PASS" starttime="20230131 07:52:13.979" endtime="20230131 07:52:23.512"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230131 07:52:23.516" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-53562 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:23.519" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230131 07:52:23.513" endtime="20230131 07:52:23.519"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:23.531" level="INFO">Running command 'rm -f /tmp/tempkey-53562 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:23.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:23.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:23.524" endtime="20230131 07:52:23.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:23.537" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:23.535" endtime="20230131 07:52:23.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:23.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:23.538" endtime="20230131 07:52:23.539"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.523" endtime="20230131 07:52:23.539"/>
</kw>
<msg timestamp="20230131 07:52:23.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:23.521" endtime="20230131 07:52:23.540"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.519" endtime="20230131 07:52:23.540"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230131 07:52:23.541" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230131 07:52:23.541" endtime="20230131 07:52:23.541"/>
</kw>
<msg timestamp="20230131 07:52:23.542" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230131 07:52:13.976" endtime="20230131 07:52:23.542"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230131 07:52:23.542" endtime="20230131 07:52:23.542"/>
</kw>
<status status="PASS" starttime="20230131 07:52:13.975" endtime="20230131 07:52:23.543"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:51:51.727" endtime="20230131 07:52:23.543"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:23.552" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:23.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:23.557" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:52:23.549" endtime="20230131 07:52:23.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:23.559" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:52:23.558" endtime="20230131 07:52:23.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:23.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:23.559" endtime="20230131 07:52:23.560"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.548" endtime="20230131 07:52:23.561"/>
</kw>
<msg timestamp="20230131 07:52:23.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:23.548" endtime="20230131 07:52:23.562"/>
</kw>
<msg timestamp="20230131 07:52:23.563" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:52:23.547" endtime="20230131 07:52:23.563"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:52:23.564" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:52:23.563" endtime="20230131 07:52:23.564"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:23.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:23.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:23.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:23.568" endtime="20230131 07:52:23.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:23.606" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:23.605" endtime="20230131 07:52:23.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:23.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:23.606" endtime="20230131 07:52:23.607"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.567" endtime="20230131 07:52:23.608"/>
</kw>
<msg timestamp="20230131 07:52:23.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:23.567" endtime="20230131 07:52:23.608"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.566" endtime="20230131 07:52:23.609"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.565" endtime="20230131 07:52:23.609"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.546" endtime="20230131 07:52:23.609"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.546" endtime="20230131 07:52:23.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:23.615" level="INFO">Running command 'ozone sh key put 60337-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:33.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:33.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:23.612" endtime="20230131 07:52:33.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:33.972" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:33.971" endtime="20230131 07:52:33.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:33.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:33.972" endtime="20230131 07:52:33.973"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.611" endtime="20230131 07:52:33.973"/>
</kw>
<msg timestamp="20230131 07:52:33.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:23.611" endtime="20230131 07:52:33.974"/>
</kw>
<status status="PASS" starttime="20230131 07:52:23.610" endtime="20230131 07:52:33.974"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 07:52:33.977" level="INFO">${postfix} = 96835</msg>
<status status="PASS" starttime="20230131 07:52:33.977" endtime="20230131 07:52:33.977"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230131 07:52:33.978" level="INFO">${tmpfile} = /tmp/tempkey-96835</msg>
<status status="PASS" starttime="20230131 07:52:33.977" endtime="20230131 07:52:33.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:33.984" level="INFO">Running command 'ozone sh key get 60337-source/bucket1/key2 /tmp/tempkey-96835 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:42.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:42.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:33.980" endtime="20230131 07:52:42.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:42.892" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:42.891" endtime="20230131 07:52:42.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:42.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:42.892" endtime="20230131 07:52:42.893"/>
</kw>
<status status="PASS" starttime="20230131 07:52:33.979" endtime="20230131 07:52:42.893"/>
</kw>
<msg timestamp="20230131 07:52:42.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:33.979" endtime="20230131 07:52:42.894"/>
</kw>
<status status="PASS" starttime="20230131 07:52:33.978" endtime="20230131 07:52:42.894"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230131 07:52:42.897" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-96835 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:42.901" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230131 07:52:42.895" endtime="20230131 07:52:42.901"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:42.906" level="INFO">Running command 'rm -f /tmp/tempkey-96835 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:42.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:42.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:42.904" endtime="20230131 07:52:42.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:42.911" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:42.911" endtime="20230131 07:52:42.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:42.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:42.912" endtime="20230131 07:52:42.912"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.903" endtime="20230131 07:52:42.913"/>
</kw>
<msg timestamp="20230131 07:52:42.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:42.903" endtime="20230131 07:52:42.913"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.902" endtime="20230131 07:52:42.914"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230131 07:52:42.914" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230131 07:52:42.914" endtime="20230131 07:52:42.915"/>
</kw>
<msg timestamp="20230131 07:52:42.915" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230131 07:52:33.975" endtime="20230131 07:52:42.915"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230131 07:52:42.915" endtime="20230131 07:52:42.916"/>
</kw>
<status status="PASS" starttime="20230131 07:52:33.974" endtime="20230131 07:52:42.916"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:52:23.544" endtime="20230131 07:52:42.916"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:42.926" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:42.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:42.933" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:52:42.922" endtime="20230131 07:52:42.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:42.936" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:52:42.934" endtime="20230131 07:52:42.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:42.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:42.937" endtime="20230131 07:52:42.938"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.921" endtime="20230131 07:52:42.938"/>
</kw>
<msg timestamp="20230131 07:52:42.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:42.920" endtime="20230131 07:52:42.939"/>
</kw>
<msg timestamp="20230131 07:52:42.940" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:52:42.920" endtime="20230131 07:52:42.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:52:42.941" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:52:42.940" endtime="20230131 07:52:42.941"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:42.950" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:42.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:42.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:42.945" endtime="20230131 07:52:42.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:42.998" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:42.997" endtime="20230131 07:52:42.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:42.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:42.999" endtime="20230131 07:52:42.999"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.944" endtime="20230131 07:52:43.000"/>
</kw>
<msg timestamp="20230131 07:52:43.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:42.943" endtime="20230131 07:52:43.001"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.942" endtime="20230131 07:52:43.001"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.941" endtime="20230131 07:52:43.001"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.919" endtime="20230131 07:52:43.002"/>
</kw>
<status status="PASS" starttime="20230131 07:52:42.919" endtime="20230131 07:52:43.002"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:43.014" level="INFO">Running command 'ozone sh key list 60337-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:49.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:49.952" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230131 07:52:43.009" endtime="20230131 07:52:49.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:49.954" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230131 07:52:49.953" endtime="20230131 07:52:49.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:49.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:49.954" endtime="20230131 07:52:49.955"/>
</kw>
<status status="PASS" starttime="20230131 07:52:43.008" endtime="20230131 07:52:49.955"/>
</kw>
<msg timestamp="20230131 07:52:49.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:43.008" endtime="20230131 07:52:49.956"/>
</kw>
<msg timestamp="20230131 07:52:49.957" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230131 07:52:43.002" endtime="20230131 07:52:49.957"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:49.962" level="INFO">Running command 'ozone sh key list 60337-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:56.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:56.702" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230131 07:52:49.959" endtime="20230131 07:52:56.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:56.704" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230131 07:52:56.703" endtime="20230131 07:52:56.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:56.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:56.704" endtime="20230131 07:52:56.705"/>
</kw>
<status status="PASS" starttime="20230131 07:52:49.958" endtime="20230131 07:52:56.706"/>
</kw>
<msg timestamp="20230131 07:52:56.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:49.958" endtime="20230131 07:52:56.707"/>
</kw>
<msg timestamp="20230131 07:52:56.707" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230131 07:52:49.957" endtime="20230131 07:52:56.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:52:56.708" endtime="20230131 07:52:56.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:52:56.709" endtime="20230131 07:52:56.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:52:56.710" endtime="20230131 07:52:56.710"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:52:42.918" endtime="20230131 07:52:56.711"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:56.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:56.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:56.724" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:52:56.716" endtime="20230131 07:52:56.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:56.725" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:52:56.725" endtime="20230131 07:52:56.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:56.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:56.726" endtime="20230131 07:52:56.727"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.715" endtime="20230131 07:52:56.728"/>
</kw>
<msg timestamp="20230131 07:52:56.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:56.715" endtime="20230131 07:52:56.728"/>
</kw>
<msg timestamp="20230131 07:52:56.729" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:52:56.714" endtime="20230131 07:52:56.729"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:52:56.730" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:52:56.729" endtime="20230131 07:52:56.730"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:56.736" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:52:56.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:52:56.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:56.733" endtime="20230131 07:52:56.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:52:56.768" level="INFO"/>
<status status="PASS" starttime="20230131 07:52:56.767" endtime="20230131 07:52:56.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:52:56.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:52:56.768" endtime="20230131 07:52:56.769"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.732" endtime="20230131 07:52:56.770"/>
</kw>
<msg timestamp="20230131 07:52:56.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:56.732" endtime="20230131 07:52:56.771"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.731" endtime="20230131 07:52:56.771"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.730" endtime="20230131 07:52:56.771"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.714" endtime="20230131 07:52:56.772"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.713" endtime="20230131 07:52:56.772"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:52:56.777" level="INFO">Running command 'ozone sh key delete 60337-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:02.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:02.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:52:56.774" endtime="20230131 07:53:02.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:02.964" level="INFO"/>
<status status="PASS" starttime="20230131 07:53:02.963" endtime="20230131 07:53:02.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:02.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:02.964" endtime="20230131 07:53:02.965"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.773" endtime="20230131 07:53:02.966"/>
</kw>
<msg timestamp="20230131 07:53:02.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:52:56.773" endtime="20230131 07:53:02.967"/>
</kw>
<status status="PASS" starttime="20230131 07:52:56.772" endtime="20230131 07:53:02.967"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:02.973" level="INFO">Running command 'ozone sh key list 60337-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:09.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:09.502" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230131 07:53:02.970" endtime="20230131 07:53:09.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:09.503" level="INFO">key1</msg>
<status status="PASS" starttime="20230131 07:53:09.502" endtime="20230131 07:53:09.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:09.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:09.504" endtime="20230131 07:53:09.504"/>
</kw>
<status status="PASS" starttime="20230131 07:53:02.969" endtime="20230131 07:53:09.505"/>
</kw>
<msg timestamp="20230131 07:53:09.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:02.968" endtime="20230131 07:53:09.506"/>
</kw>
<msg timestamp="20230131 07:53:09.506" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230131 07:53:02.967" endtime="20230131 07:53:09.506"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:09.506" endtime="20230131 07:53:09.507"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:52:56.712" endtime="20230131 07:53:09.507"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:09.522" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:09.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:09.527" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:53:09.513" endtime="20230131 07:53:09.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:09.531" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:53:09.530" endtime="20230131 07:53:09.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:09.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:09.531" endtime="20230131 07:53:09.532"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.512" endtime="20230131 07:53:09.532"/>
</kw>
<msg timestamp="20230131 07:53:09.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:09.512" endtime="20230131 07:53:09.533"/>
</kw>
<msg timestamp="20230131 07:53:09.534" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:53:09.511" endtime="20230131 07:53:09.534"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:53:09.535" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:53:09.534" endtime="20230131 07:53:09.535"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:09.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:09.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:09.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:53:09.538" endtime="20230131 07:53:09.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:09.584" level="INFO"/>
<status status="PASS" starttime="20230131 07:53:09.583" endtime="20230131 07:53:09.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:09.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:09.585" endtime="20230131 07:53:09.586"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.537" endtime="20230131 07:53:09.586"/>
</kw>
<msg timestamp="20230131 07:53:09.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:09.536" endtime="20230131 07:53:09.587"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.536" endtime="20230131 07:53:09.587"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.535" endtime="20230131 07:53:09.587"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.510" endtime="20230131 07:53:09.587"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.510" endtime="20230131 07:53:09.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:09.592" level="INFO">Running command 'ozone sh bucket list 60337-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:16.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:16.127" level="INFO">${output} = [ {
  "volumeName" : "60337-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-31T07:51:44.911Z",
  "modific...</msg>
<status status="PASS" starttime="20230131 07:53:09.590" endtime="20230131 07:53:16.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:16.129" level="INFO">[ {
  "volumeName" : "60337-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-31T07:51:44.911Z",
  "modificationTime" : "2023-01-31T07:51:44.911Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-31T07:51:04.259Z",
  "modificationTime" : "2023-01-31T07:51:37.998Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "link1",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:51:57.918Z",
  "modificationTime" : "2023-01-31T07:51:57.918Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-31T07:50:50.685Z",
  "modificationTime" : "2023-01-31T07:51:31.617Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-31T07:50:57.431Z",
  "modificationTime" : "2023-01-31T07:50:57.431Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230131 07:53:16.129" endtime="20230131 07:53:16.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:16.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:16.130" endtime="20230131 07:53:16.130"/>
</kw>
<status status="PASS" starttime="20230131 07:53:09.589" endtime="20230131 07:53:16.131"/>
</kw>
<msg timestamp="20230131 07:53:16.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:09.588" endtime="20230131 07:53:16.132"/>
</kw>
<msg timestamp="20230131 07:53:16.133" level="INFO">${result} = [ {
  "volumeName" : "60337-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-31T07:51:44.911Z",
  "modific...</msg>
<status status="PASS" starttime="20230131 07:53:09.588" endtime="20230131 07:53:16.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:16.133" endtime="20230131 07:53:16.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:16.134" endtime="20230131 07:53:16.136"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:53:09.508" endtime="20230131 07:53:16.136"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:16.145" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:16.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:16.150" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:53:16.143" endtime="20230131 07:53:16.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:16.152" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:53:16.151" endtime="20230131 07:53:16.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:16.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:16.152" endtime="20230131 07:53:16.156"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.142" endtime="20230131 07:53:16.156"/>
</kw>
<msg timestamp="20230131 07:53:16.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:16.142" endtime="20230131 07:53:16.160"/>
</kw>
<msg timestamp="20230131 07:53:16.162" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:53:16.141" endtime="20230131 07:53:16.162"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:53:16.164" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:53:16.163" endtime="20230131 07:53:16.164"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:16.171" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:16.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:16.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:53:16.168" endtime="20230131 07:53:16.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:16.213" level="INFO"/>
<status status="PASS" starttime="20230131 07:53:16.212" endtime="20230131 07:53:16.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:16.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:16.213" endtime="20230131 07:53:16.214"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.167" endtime="20230131 07:53:16.214"/>
</kw>
<msg timestamp="20230131 07:53:16.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:16.166" endtime="20230131 07:53:16.215"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.165" endtime="20230131 07:53:16.215"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.164" endtime="20230131 07:53:16.216"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.140" endtime="20230131 07:53:16.216"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.140" endtime="20230131 07:53:16.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:16.222" level="INFO">Running command 'ozone sh bucket info 60337-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:23.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:23.073" level="INFO">${output} = {
  "volumeName" : "60337-target",
  "bucketName" : "link1",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:51:57.918Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230131 07:53:16.218" endtime="20230131 07:53:23.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:23.075" level="INFO">{
  "volumeName" : "60337-target",
  "bucketName" : "link1",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:51:57.918Z",
  "modificationTime" : "2023-01-31T07:51:57.918Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230131 07:53:23.074" endtime="20230131 07:53:23.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:23.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:23.075" endtime="20230131 07:53:23.076"/>
</kw>
<status status="PASS" starttime="20230131 07:53:16.217" endtime="20230131 07:53:23.076"/>
</kw>
<msg timestamp="20230131 07:53:23.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:16.217" endtime="20230131 07:53:23.077"/>
</kw>
<msg timestamp="20230131 07:53:23.078" level="INFO">${result} = {
  "volumeName" : "60337-target",
  "bucketName" : "link1",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:51:57.918Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230131 07:53:16.216" endtime="20230131 07:53:23.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.078" endtime="20230131 07:53:23.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.079" endtime="20230131 07:53:23.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.079" endtime="20230131 07:53:23.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.080" endtime="20230131 07:53:23.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.081" endtime="20230131 07:53:23.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.082" endtime="20230131 07:53:23.082"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:53:23.082" endtime="20230131 07:53:23.083"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:53:16.139" endtime="20230131 07:53:23.083"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:23.094" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:23.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:23.101" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:53:23.091" endtime="20230131 07:53:23.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:23.102" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:53:23.101" endtime="20230131 07:53:23.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:23.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:23.103" endtime="20230131 07:53:23.103"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.091" endtime="20230131 07:53:23.104"/>
</kw>
<msg timestamp="20230131 07:53:23.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:23.090" endtime="20230131 07:53:23.105"/>
</kw>
<msg timestamp="20230131 07:53:23.105" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:53:23.089" endtime="20230131 07:53:23.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:53:23.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:53:23.106" endtime="20230131 07:53:23.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:23.113" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:23.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:23.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:53:23.110" endtime="20230131 07:53:23.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:23.146" level="INFO"/>
<status status="PASS" starttime="20230131 07:53:23.145" endtime="20230131 07:53:23.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:23.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:23.147" endtime="20230131 07:53:23.147"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.109" endtime="20230131 07:53:23.148"/>
</kw>
<msg timestamp="20230131 07:53:23.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:23.108" endtime="20230131 07:53:23.149"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.107" endtime="20230131 07:53:23.149"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.107" endtime="20230131 07:53:23.149"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.089" endtime="20230131 07:53:23.149"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.087" endtime="20230131 07:53:23.149"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:23.155" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 60337-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:29.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:29.526" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:53:23.151" endtime="20230131 07:53:29.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:29.529" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:53:29.527" endtime="20230131 07:53:29.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:29.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:29.529" endtime="20230131 07:53:29.530"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.151" endtime="20230131 07:53:29.531"/>
</kw>
<msg timestamp="20230131 07:53:29.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:23.150" endtime="20230131 07:53:29.531"/>
</kw>
<status status="PASS" starttime="20230131 07:53:23.150" endtime="20230131 07:53:29.532"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:29.540" level="INFO">Running command 'ozone sh bucket getacl 60337-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:36.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:36.111" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230131 07:53:29.536" endtime="20230131 07:53:36.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:36.114" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230131 07:53:36.112" endtime="20230131 07:53:36.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:36.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:36.114" endtime="20230131 07:53:36.116"/>
</kw>
<status status="PASS" starttime="20230131 07:53:29.535" endtime="20230131 07:53:36.116"/>
</kw>
<msg timestamp="20230131 07:53:36.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:29.535" endtime="20230131 07:53:36.117"/>
</kw>
<msg timestamp="20230131 07:53:36.118" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230131 07:53:29.533" endtime="20230131 07:53:36.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:53:36.118" endtime="20230131 07:53:36.119"/>
</kw>
<status status="PASS" starttime="20230131 07:53:29.532" endtime="20230131 07:53:36.119"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:36.128" level="INFO">Running command 'ozone sh bucket getacl 60337-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:42.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:42.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:53:36.124" endtime="20230131 07:53:42.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:42.651" level="INFO"/>
<status status="PASS" starttime="20230131 07:53:42.650" endtime="20230131 07:53:42.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:42.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:42.651" endtime="20230131 07:53:42.653"/>
</kw>
<status status="PASS" starttime="20230131 07:53:36.122" endtime="20230131 07:53:42.653"/>
</kw>
<msg timestamp="20230131 07:53:42.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:36.122" endtime="20230131 07:53:42.654"/>
</kw>
<msg timestamp="20230131 07:53:42.655" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230131 07:53:36.121" endtime="20230131 07:53:42.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:53:42.655" endtime="20230131 07:53:42.656"/>
</kw>
<status status="PASS" starttime="20230131 07:53:36.119" endtime="20230131 07:53:42.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:42.666" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 60337-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:49.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:49.049" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:53:42.659" endtime="20230131 07:53:49.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:49.050" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 07:53:49.049" endtime="20230131 07:53:49.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:49.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:49.051" endtime="20230131 07:53:49.052"/>
</kw>
<status status="PASS" starttime="20230131 07:53:42.658" endtime="20230131 07:53:49.052"/>
</kw>
<msg timestamp="20230131 07:53:49.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:42.657" endtime="20230131 07:53:49.053"/>
</kw>
<status status="PASS" starttime="20230131 07:53:42.656" endtime="20230131 07:53:49.053"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:49.060" level="INFO">Running command 'ozone sh bucket getacl 60337-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:53:55.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:53:55.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:53:49.057" endtime="20230131 07:53:55.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:53:55.083" level="INFO"/>
<status status="PASS" starttime="20230131 07:53:55.082" endtime="20230131 07:53:55.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:53:55.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:53:55.083" endtime="20230131 07:53:55.085"/>
</kw>
<status status="PASS" starttime="20230131 07:53:49.056" endtime="20230131 07:53:55.085"/>
</kw>
<msg timestamp="20230131 07:53:55.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:49.056" endtime="20230131 07:53:55.086"/>
</kw>
<msg timestamp="20230131 07:53:55.086" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230131 07:53:49.055" endtime="20230131 07:53:55.087"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:53:55.087" endtime="20230131 07:53:55.088"/>
</kw>
<status status="PASS" starttime="20230131 07:53:49.053" endtime="20230131 07:53:55.088"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:53:55.100" level="INFO">Running command 'ozone sh bucket getacl 60337-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:01.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:01.474" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230131 07:53:55.096" endtime="20230131 07:54:01.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:01.476" level="INFO">READ</msg>
<status status="PASS" starttime="20230131 07:54:01.475" endtime="20230131 07:54:01.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:01.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:01.477" endtime="20230131 07:54:01.478"/>
</kw>
<status status="PASS" starttime="20230131 07:53:55.095" endtime="20230131 07:54:01.478"/>
</kw>
<msg timestamp="20230131 07:54:01.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:53:55.095" endtime="20230131 07:54:01.479"/>
</kw>
<msg timestamp="20230131 07:54:01.479" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230131 07:53:55.089" endtime="20230131 07:54:01.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:54:01.479" endtime="20230131 07:54:01.480"/>
</kw>
<status status="PASS" starttime="20230131 07:53:55.088" endtime="20230131 07:54:01.481"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:53:23.086" endtime="20230131 07:54:01.481"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:01.490" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:01.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:01.493" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:01.487" endtime="20230131 07:54:01.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:01.495" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:01.494" endtime="20230131 07:54:01.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:01.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:01.495" endtime="20230131 07:54:01.496"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.486" endtime="20230131 07:54:01.496"/>
</kw>
<msg timestamp="20230131 07:54:01.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:01.485" endtime="20230131 07:54:01.497"/>
</kw>
<msg timestamp="20230131 07:54:01.497" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:01.485" endtime="20230131 07:54:01.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:01.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:01.497" endtime="20230131 07:54:01.498"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:01.504" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:01.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:01.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:01.500" endtime="20230131 07:54:01.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:01.579" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:01.578" endtime="20230131 07:54:01.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:01.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:01.579" endtime="20230131 07:54:01.580"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.500" endtime="20230131 07:54:01.580"/>
</kw>
<msg timestamp="20230131 07:54:01.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:01.500" endtime="20230131 07:54:01.581"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.499" endtime="20230131 07:54:01.581"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.498" endtime="20230131 07:54:01.581"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.484" endtime="20230131 07:54:01.582"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.483" endtime="20230131 07:54:01.582"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:01.586" level="INFO">Running command 'ozone sh bucket link 60337-source/bucket2 60337-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:08.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:08.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:01.584" endtime="20230131 07:54:08.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:08.310" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:08.309" endtime="20230131 07:54:08.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:08.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:08.310" endtime="20230131 07:54:08.311"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.583" endtime="20230131 07:54:08.312"/>
</kw>
<msg timestamp="20230131 07:54:08.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:01.583" endtime="20230131 07:54:08.312"/>
</kw>
<status status="PASS" starttime="20230131 07:54:01.582" endtime="20230131 07:54:08.313"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:08.317" level="INFO">Running command 'ozone sh bucket create 60337-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:15.195" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:54:15.195" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230131 07:54:08.314" endtime="20230131 07:54:15.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:15.198" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230131 07:54:15.196" endtime="20230131 07:54:15.198"/>
</kw>
<msg timestamp="20230131 07:54:15.198" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230131 07:54:08.313" endtime="20230131 07:54:15.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:15.199" endtime="20230131 07:54:15.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:15.206" level="INFO">Running command 'ozone sh bucket create 60337-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:21.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:21.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:15.203" endtime="20230131 07:54:21.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:21.530" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:21.528" endtime="20230131 07:54:21.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:21.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:21.531" endtime="20230131 07:54:21.532"/>
</kw>
<status status="PASS" starttime="20230131 07:54:15.201" endtime="20230131 07:54:21.533"/>
</kw>
<msg timestamp="20230131 07:54:21.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:15.200" endtime="20230131 07:54:21.534"/>
</kw>
<status status="PASS" starttime="20230131 07:54:15.200" endtime="20230131 07:54:21.535"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:21.539" level="INFO">Running command 'ozone sh bucket link 60337-source/bucket1 60337-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:28.263" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:54:28.263" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230131 07:54:21.536" endtime="20230131 07:54:28.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:28.265" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230131 07:54:28.263" endtime="20230131 07:54:28.265"/>
</kw>
<msg timestamp="20230131 07:54:28.265" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230131 07:54:21.535" endtime="20230131 07:54:28.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:28.266" endtime="20230131 07:54:28.266"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:54:01.482" endtime="20230131 07:54:28.267"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:28.279" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:28.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:28.284" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:28.275" endtime="20230131 07:54:28.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:28.285" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:28.284" endtime="20230131 07:54:28.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:28.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:28.286" endtime="20230131 07:54:28.288"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.275" endtime="20230131 07:54:28.288"/>
</kw>
<msg timestamp="20230131 07:54:28.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:28.274" endtime="20230131 07:54:28.290"/>
</kw>
<msg timestamp="20230131 07:54:28.291" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:28.274" endtime="20230131 07:54:28.291"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:28.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:28.292" endtime="20230131 07:54:28.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:28.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:28.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:28.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:28.297" endtime="20230131 07:54:28.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:28.374" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:28.373" endtime="20230131 07:54:28.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:28.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:28.374" endtime="20230131 07:54:28.375"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.296" endtime="20230131 07:54:28.376"/>
</kw>
<msg timestamp="20230131 07:54:28.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:28.295" endtime="20230131 07:54:28.377"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.294" endtime="20230131 07:54:28.377"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.293" endtime="20230131 07:54:28.377"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.272" endtime="20230131 07:54:28.378"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.270" endtime="20230131 07:54:28.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:28.386" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:28.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:28.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:28.382" endtime="20230131 07:54:28.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:28.395" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:28.394" endtime="20230131 07:54:28.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:28.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:28.396" endtime="20230131 07:54:28.396"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.381" endtime="20230131 07:54:28.397"/>
</kw>
<msg timestamp="20230131 07:54:28.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:28.381" endtime="20230131 07:54:28.397"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.380" endtime="20230131 07:54:28.398"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:28.405" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:28.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:28.409" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:28.402" endtime="20230131 07:54:28.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:28.411" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:28.410" endtime="20230131 07:54:28.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:28.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:28.411" endtime="20230131 07:54:28.412"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.401" endtime="20230131 07:54:28.412"/>
</kw>
<msg timestamp="20230131 07:54:28.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:28.401" endtime="20230131 07:54:28.413"/>
</kw>
<msg timestamp="20230131 07:54:28.413" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:28.400" endtime="20230131 07:54:28.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:28.414" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:28.413" endtime="20230131 07:54:28.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:28.420" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:28.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:28.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:28.417" endtime="20230131 07:54:28.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:28.475" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:28.473" endtime="20230131 07:54:28.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:28.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:28.475" endtime="20230131 07:54:28.476"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.416" endtime="20230131 07:54:28.476"/>
</kw>
<msg timestamp="20230131 07:54:28.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:28.416" endtime="20230131 07:54:28.477"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.415" endtime="20230131 07:54:28.477"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.414" endtime="20230131 07:54:28.477"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.399" endtime="20230131 07:54:28.477"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.398" endtime="20230131 07:54:28.478"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:28.483" level="INFO">Running command 'ozone sh key list 60337-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:35.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:35.589" level="INFO">${output} = [ {
  "volumeName" : "60337-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-31T07:50:31.933Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230131 07:54:28.478" endtime="20230131 07:54:35.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:35.591" level="INFO">[ {
  "volumeName" : "60337-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-31T07:50:31.933Z",
  "modificationTime" : "2023-01-31T07:50:35.584Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230131 07:54:35.589" endtime="20230131 07:54:35.591"/>
</kw>
<msg timestamp="20230131 07:54:35.593" level="INFO">${result} = [ {
  "volumeName" : "60337-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-31T07:50:31.933Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230131 07:54:28.478" endtime="20230131 07:54:35.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:35.594" endtime="20230131 07:54:35.596"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.379" endtime="20230131 07:54:35.597"/>
</kw>
<status status="PASS" starttime="20230131 07:54:28.379" endtime="20230131 07:54:35.597"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:54:28.268" endtime="20230131 07:54:35.598"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:35.615" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:35.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:35.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:35.611" endtime="20230131 07:54:35.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:35.621" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:35.620" endtime="20230131 07:54:35.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:35.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:35.621" endtime="20230131 07:54:35.622"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.609" endtime="20230131 07:54:35.623"/>
</kw>
<msg timestamp="20230131 07:54:35.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:35.609" endtime="20230131 07:54:35.624"/>
</kw>
<msg timestamp="20230131 07:54:35.624" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:35.608" endtime="20230131 07:54:35.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:35.625" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:35.624" endtime="20230131 07:54:35.625"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:35.631" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:35.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:35.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:35.628" endtime="20230131 07:54:35.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:35.676" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:35.675" endtime="20230131 07:54:35.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:35.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:35.676" endtime="20230131 07:54:35.677"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.628" endtime="20230131 07:54:35.677"/>
</kw>
<msg timestamp="20230131 07:54:35.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:35.627" endtime="20230131 07:54:35.678"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.626" endtime="20230131 07:54:35.678"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.625" endtime="20230131 07:54:35.679"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.607" endtime="20230131 07:54:35.679"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.607" endtime="20230131 07:54:35.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:35.686" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:35.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:35.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:35.683" endtime="20230131 07:54:35.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:35.694" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:35.693" endtime="20230131 07:54:35.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:35.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:35.694" endtime="20230131 07:54:35.695"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.682" endtime="20230131 07:54:35.696"/>
</kw>
<msg timestamp="20230131 07:54:35.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:35.682" endtime="20230131 07:54:35.697"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.681" endtime="20230131 07:54:35.697"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:35.704" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:35.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:35.718" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:35.701" endtime="20230131 07:54:35.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:35.725" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:35.719" endtime="20230131 07:54:35.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:35.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:35.725" endtime="20230131 07:54:35.726"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.700" endtime="20230131 07:54:35.726"/>
</kw>
<msg timestamp="20230131 07:54:35.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:35.699" endtime="20230131 07:54:35.728"/>
</kw>
<msg timestamp="20230131 07:54:35.728" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:35.699" endtime="20230131 07:54:35.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:35.729" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:35.728" endtime="20230131 07:54:35.730"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:35.739" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:35.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:35.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:35.735" endtime="20230131 07:54:35.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:35.774" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:35.772" endtime="20230131 07:54:35.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:35.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:35.775" endtime="20230131 07:54:35.776"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.732" endtime="20230131 07:54:35.776"/>
</kw>
<msg timestamp="20230131 07:54:35.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:35.732" endtime="20230131 07:54:35.778"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.731" endtime="20230131 07:54:35.779"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.730" endtime="20230131 07:54:35.779"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.698" endtime="20230131 07:54:35.779"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.698" endtime="20230131 07:54:35.779"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:35.784" level="INFO">Running command 'ozone sh key list 60337-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:42.220" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:54:42.220" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:60337-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230131 07:54:35.780" endtime="20230131 07:54:42.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:42.222" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:60337-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230131 07:54:42.221" endtime="20230131 07:54:42.222"/>
</kw>
<msg timestamp="20230131 07:54:42.222" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:60337-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230131 07:54:35.779" endtime="20230131 07:54:42.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:42.222" endtime="20230131 07:54:42.223"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.680" endtime="20230131 07:54:42.223"/>
</kw>
<status status="PASS" starttime="20230131 07:54:35.679" endtime="20230131 07:54:42.223"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:54:35.605" endtime="20230131 07:54:42.224"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:42.231" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:42.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:42.236" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:42.228" endtime="20230131 07:54:42.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:42.238" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:42.237" endtime="20230131 07:54:42.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:42.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:42.239" endtime="20230131 07:54:42.239"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.228" endtime="20230131 07:54:42.240"/>
</kw>
<msg timestamp="20230131 07:54:42.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:42.227" endtime="20230131 07:54:42.241"/>
</kw>
<msg timestamp="20230131 07:54:42.242" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:42.227" endtime="20230131 07:54:42.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:42.243" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:42.242" endtime="20230131 07:54:42.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:42.248" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:42.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:42.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:42.245" endtime="20230131 07:54:42.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:42.294" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:42.293" endtime="20230131 07:54:42.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:42.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:42.294" endtime="20230131 07:54:42.295"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.245" endtime="20230131 07:54:42.296"/>
</kw>
<msg timestamp="20230131 07:54:42.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:42.244" endtime="20230131 07:54:42.297"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.243" endtime="20230131 07:54:42.297"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.243" endtime="20230131 07:54:42.297"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.226" endtime="20230131 07:54:42.297"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.226" endtime="20230131 07:54:42.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:42.305" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:42.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:42.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:42.301" endtime="20230131 07:54:42.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:42.312" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:42.311" endtime="20230131 07:54:42.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:42.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:42.312" endtime="20230131 07:54:42.313"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.300" endtime="20230131 07:54:42.314"/>
</kw>
<msg timestamp="20230131 07:54:42.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:42.300" endtime="20230131 07:54:42.315"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.299" endtime="20230131 07:54:42.315"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:42.323" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:42.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:42.330" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:42.319" endtime="20230131 07:54:42.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:42.332" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:42.331" endtime="20230131 07:54:42.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:42.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:42.332" endtime="20230131 07:54:42.333"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.318" endtime="20230131 07:54:42.334"/>
</kw>
<msg timestamp="20230131 07:54:42.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:42.318" endtime="20230131 07:54:42.335"/>
</kw>
<msg timestamp="20230131 07:54:42.335" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:42.317" endtime="20230131 07:54:42.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:42.336" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:42.336" endtime="20230131 07:54:42.337"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:42.343" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:42.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:42.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:42.340" endtime="20230131 07:54:42.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:42.380" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:42.379" endtime="20230131 07:54:42.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:42.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:42.380" endtime="20230131 07:54:42.381"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.339" endtime="20230131 07:54:42.381"/>
</kw>
<msg timestamp="20230131 07:54:42.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:42.338" endtime="20230131 07:54:42.382"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.337" endtime="20230131 07:54:42.383"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.337" endtime="20230131 07:54:42.383"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.316" endtime="20230131 07:54:42.383"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.315" endtime="20230131 07:54:42.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:42.388" level="INFO">Running command 'ozone sh bucket info 60337-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:49.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:49.560" level="INFO">${output} = {
  "volumeName" : "60337-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-31T07:51:04.259Z...</msg>
<status status="PASS" starttime="20230131 07:54:42.385" endtime="20230131 07:54:49.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:49.561" level="INFO">{
  "volumeName" : "60337-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-31T07:51:04.259Z",
  "modificationTime" : "2023-01-31T07:51:37.998Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230131 07:54:49.560" endtime="20230131 07:54:49.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:49.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:49.561" endtime="20230131 07:54:49.562"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.385" endtime="20230131 07:54:49.562"/>
</kw>
<msg timestamp="20230131 07:54:49.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:42.384" endtime="20230131 07:54:49.563"/>
</kw>
<msg timestamp="20230131 07:54:49.563" level="INFO">${result} = {
  "volumeName" : "60337-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-31T07:51:04.259Z...</msg>
<status status="PASS" starttime="20230131 07:54:42.383" endtime="20230131 07:54:49.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:49.564" endtime="20230131 07:54:49.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:49.564" endtime="20230131 07:54:49.565"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:49.569" level="INFO">Running command 'ozone sh key list 60337-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:55.612" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:54:55.612" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:60337-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230131 07:54:49.566" endtime="20230131 07:54:55.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:55.614" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:60337-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230131 07:54:55.613" endtime="20230131 07:54:55.614"/>
</kw>
<msg timestamp="20230131 07:54:55.615" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:60337-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230131 07:54:49.565" endtime="20230131 07:54:55.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:54:55.615" endtime="20230131 07:54:55.615"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.299" endtime="20230131 07:54:55.616"/>
</kw>
<status status="PASS" starttime="20230131 07:54:42.298" endtime="20230131 07:54:55.616"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:54:42.225" endtime="20230131 07:54:55.616"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:55.625" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:55.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:55.631" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:54:55.622" endtime="20230131 07:54:55.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:55.633" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:54:55.632" endtime="20230131 07:54:55.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:55.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:55.633" endtime="20230131 07:54:55.634"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.622" endtime="20230131 07:54:55.635"/>
</kw>
<msg timestamp="20230131 07:54:55.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:55.621" endtime="20230131 07:54:55.636"/>
</kw>
<msg timestamp="20230131 07:54:55.636" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:54:55.621" endtime="20230131 07:54:55.636"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:54:55.637" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:54:55.636" endtime="20230131 07:54:55.637"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:55.643" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:54:55.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:54:55.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:55.640" endtime="20230131 07:54:55.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:54:55.668" level="INFO"/>
<status status="PASS" starttime="20230131 07:54:55.666" endtime="20230131 07:54:55.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:54:55.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:54:55.668" endtime="20230131 07:54:55.669"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.639" endtime="20230131 07:54:55.670"/>
</kw>
<msg timestamp="20230131 07:54:55.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:55.639" endtime="20230131 07:54:55.671"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.638" endtime="20230131 07:54:55.671"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.637" endtime="20230131 07:54:55.671"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.620" endtime="20230131 07:54:55.671"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.619" endtime="20230131 07:54:55.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:54:55.678" level="INFO">Running command 'ozone sh bucket link 60337-target/loop1 60337-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:02.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:02.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:54:55.675" endtime="20230131 07:55:02.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:02.304" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:02.303" endtime="20230131 07:55:02.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:02.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:02.304" endtime="20230131 07:55:02.305"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.674" endtime="20230131 07:55:02.305"/>
</kw>
<msg timestamp="20230131 07:55:02.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:54:55.673" endtime="20230131 07:55:02.306"/>
</kw>
<status status="PASS" starttime="20230131 07:54:55.672" endtime="20230131 07:55:02.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:02.312" level="INFO">Running command 'ozone sh bucket link 60337-target/loop2 60337-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:09.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:09.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:02.309" endtime="20230131 07:55:09.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:09.348" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:09.347" endtime="20230131 07:55:09.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:09.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:09.348" endtime="20230131 07:55:09.349"/>
</kw>
<status status="PASS" starttime="20230131 07:55:02.308" endtime="20230131 07:55:09.350"/>
</kw>
<msg timestamp="20230131 07:55:09.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:02.308" endtime="20230131 07:55:09.351"/>
</kw>
<status status="PASS" starttime="20230131 07:55:02.306" endtime="20230131 07:55:09.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:09.358" level="INFO">Running command 'ozone sh bucket link 60337-target/loop3 60337-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:15.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:15.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:09.355" endtime="20230131 07:55:15.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:15.475" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:15.474" endtime="20230131 07:55:15.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:15.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:15.475" endtime="20230131 07:55:15.476"/>
</kw>
<status status="PASS" starttime="20230131 07:55:09.353" endtime="20230131 07:55:15.476"/>
</kw>
<msg timestamp="20230131 07:55:15.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:09.352" endtime="20230131 07:55:15.477"/>
</kw>
<status status="PASS" starttime="20230131 07:55:09.351" endtime="20230131 07:55:15.477"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:15.481" level="INFO">Running command 'ozone sh key list 60337-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:21.373" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:55:21.373" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 60337-target</msg>
<status status="PASS" starttime="20230131 07:55:15.478" endtime="20230131 07:55:21.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:21.375" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 60337-target</msg>
<status status="PASS" starttime="20230131 07:55:21.374" endtime="20230131 07:55:21.375"/>
</kw>
<msg timestamp="20230131 07:55:21.375" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 60337-target</msg>
<status status="PASS" starttime="20230131 07:55:15.478" endtime="20230131 07:55:21.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:55:21.376" endtime="20230131 07:55:21.378"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:54:55.618" endtime="20230131 07:55:21.378"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:21.390" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:21.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:21.395" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:55:21.387" endtime="20230131 07:55:21.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:21.396" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:55:21.395" endtime="20230131 07:55:21.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:21.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:21.397" endtime="20230131 07:55:21.398"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.386" endtime="20230131 07:55:21.398"/>
</kw>
<msg timestamp="20230131 07:55:21.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:21.385" endtime="20230131 07:55:21.399"/>
</kw>
<msg timestamp="20230131 07:55:21.399" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:55:21.383" endtime="20230131 07:55:21.399"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:55:21.400" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:55:21.400" endtime="20230131 07:55:21.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:21.405" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:21.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:21.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:21.403" endtime="20230131 07:55:21.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:21.435" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:21.434" endtime="20230131 07:55:21.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:21.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:21.435" endtime="20230131 07:55:21.436"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.402" endtime="20230131 07:55:21.436"/>
</kw>
<msg timestamp="20230131 07:55:21.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:21.402" endtime="20230131 07:55:21.437"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.401" endtime="20230131 07:55:21.438"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.400" endtime="20230131 07:55:21.438"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.382" endtime="20230131 07:55:21.438"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.381" endtime="20230131 07:55:21.438"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:21.444" level="INFO">Running command 'ozone sh bucket link 60337-source/bucket1 60337-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:27.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:27.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:21.441" endtime="20230131 07:55:27.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:27.066" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:27.065" endtime="20230131 07:55:27.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:27.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:27.066" endtime="20230131 07:55:27.067"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.440" endtime="20230131 07:55:27.067"/>
</kw>
<msg timestamp="20230131 07:55:27.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:21.440" endtime="20230131 07:55:27.068"/>
</kw>
<status status="PASS" starttime="20230131 07:55:21.438" endtime="20230131 07:55:27.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:27.074" level="INFO">Running command 'ozone sh key put 60337-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:36.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:36.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:27.071" endtime="20230131 07:55:36.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:36.335" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:36.334" endtime="20230131 07:55:36.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:36.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:36.335" endtime="20230131 07:55:36.336"/>
</kw>
<status status="PASS" starttime="20230131 07:55:27.070" endtime="20230131 07:55:36.336"/>
</kw>
<msg timestamp="20230131 07:55:36.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:27.069" endtime="20230131 07:55:36.337"/>
</kw>
<status status="PASS" starttime="20230131 07:55:27.068" endtime="20230131 07:55:36.337"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 07:55:36.340" level="INFO">${postfix} = 44205</msg>
<status status="PASS" starttime="20230131 07:55:36.340" endtime="20230131 07:55:36.340"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230131 07:55:36.341" level="INFO">${tmpfile} = /tmp/tempkey-44205</msg>
<status status="PASS" starttime="20230131 07:55:36.340" endtime="20230131 07:55:36.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:36.351" level="INFO">Running command 'ozone sh key get 60337-target/link1/key3 /tmp/tempkey-44205 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:45.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:45.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:36.348" endtime="20230131 07:55:45.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:45.742" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:45.741" endtime="20230131 07:55:45.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:45.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:45.743" endtime="20230131 07:55:45.743"/>
</kw>
<status status="PASS" starttime="20230131 07:55:36.343" endtime="20230131 07:55:45.744"/>
</kw>
<msg timestamp="20230131 07:55:45.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:36.343" endtime="20230131 07:55:45.745"/>
</kw>
<status status="PASS" starttime="20230131 07:55:36.342" endtime="20230131 07:55:45.745"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230131 07:55:45.748" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-44205 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:45.752" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230131 07:55:45.745" endtime="20230131 07:55:45.752"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:45.761" level="INFO">Running command 'rm -f /tmp/tempkey-44205 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:45.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:45.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:45.755" endtime="20230131 07:55:45.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:45.767" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:45.766" endtime="20230131 07:55:45.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:45.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:45.768" endtime="20230131 07:55:45.769"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.754" endtime="20230131 07:55:45.769"/>
</kw>
<msg timestamp="20230131 07:55:45.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:45.753" endtime="20230131 07:55:45.770"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.752" endtime="20230131 07:55:45.770"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230131 07:55:45.771" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230131 07:55:45.771" endtime="20230131 07:55:45.771"/>
</kw>
<msg timestamp="20230131 07:55:45.772" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230131 07:55:36.339" endtime="20230131 07:55:45.772"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230131 07:55:45.772" endtime="20230131 07:55:45.773"/>
</kw>
<status status="PASS" starttime="20230131 07:55:36.338" endtime="20230131 07:55:45.773"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:55:21.380" endtime="20230131 07:55:45.773"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:45.781" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:45.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:45.785" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:55:45.778" endtime="20230131 07:55:45.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:45.786" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:55:45.785" endtime="20230131 07:55:45.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:45.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:45.786" endtime="20230131 07:55:45.787"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.777" endtime="20230131 07:55:45.788"/>
</kw>
<msg timestamp="20230131 07:55:45.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:45.777" endtime="20230131 07:55:45.788"/>
</kw>
<msg timestamp="20230131 07:55:45.789" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:55:45.776" endtime="20230131 07:55:45.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:55:45.790" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:55:45.790" endtime="20230131 07:55:45.790"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:45.798" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:45.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:45.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:45.793" endtime="20230131 07:55:45.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:45.826" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:45.825" endtime="20230131 07:55:45.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:45.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:45.826" endtime="20230131 07:55:45.827"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.792" endtime="20230131 07:55:45.827"/>
</kw>
<msg timestamp="20230131 07:55:45.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:45.792" endtime="20230131 07:55:45.828"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.791" endtime="20230131 07:55:45.828"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.791" endtime="20230131 07:55:45.828"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.776" endtime="20230131 07:55:45.829"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.775" endtime="20230131 07:55:45.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:45.833" level="INFO">Running command 'ozone sh bucket delete 60337-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:51.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:51.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:55:45.831" endtime="20230131 07:55:51.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:51.961" level="INFO"/>
<status status="PASS" starttime="20230131 07:55:51.960" endtime="20230131 07:55:51.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:51.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:51.961" endtime="20230131 07:55:51.962"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.830" endtime="20230131 07:55:51.963"/>
</kw>
<msg timestamp="20230131 07:55:51.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:45.830" endtime="20230131 07:55:51.964"/>
</kw>
<status status="PASS" starttime="20230131 07:55:45.829" endtime="20230131 07:55:51.964"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:51.969" level="INFO">Running command 'ozone sh bucket list 60337-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:55:57.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:55:57.970" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "60337-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-3...</msg>
<status status="PASS" starttime="20230131 07:55:51.966" endtime="20230131 07:55:57.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:55:57.973" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "60337-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-31T07:54:21.229Z",
  "modificationTime" : "2023-01-31T07:54:21.229Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "60337-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-31T07:51:44.911Z",
  "modificationTime" : "2023-01-31T07:51:44.911Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-31T07:51:04.259Z",
  "modificationTime" : "2023-01-31T07:51:37.998Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "link2",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-01-31T07:54:08.056Z",
  "modificationTime" : "2023-01-31T07:54:08.056Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "link3",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:55:26.673Z",
  "modificationTime" : "2023-01-31T07:55:26.673Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "loop1",
  "sourceVolume" : "60337-target",
  "sourceBucket" : "loop3",
  "creationTime" : "2023-01-31T07:55:15.170Z",
  "modificationTime" : "2023-01-31T07:55:15.170Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "loop2",
  "sourceVolume" : "60337-target",
  "sourceBucket" : "loop1",
  "creationTime" : "2023-01-31T07:55:01.919Z",
  "modificationTime" : "2023-01-31T07:55:01.919Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "loop3",
  "sourceVolume" : "60337-target",
  "sourceBucket" : "loop2",
  "creationTime" : "2023-01-31T07:55:09.220Z",
  "modificationTime" : "2023-01-31T07:55:09.220Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-31T07:50:50.685Z",
  "modificationTime" : "2023-01-31T07:51:31.617Z",
  "owner" : "testuser"
}, {
  "volumeName" : "60337-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-31T07:50:57.431Z",
  "modificationTime" : "2023-01-31T07:50:57.431Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230131 07:55:57.971" endtime="20230131 07:55:57.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:55:57.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:55:57.973" endtime="20230131 07:55:57.974"/>
</kw>
<status status="PASS" starttime="20230131 07:55:51.965" endtime="20230131 07:55:57.975"/>
</kw>
<msg timestamp="20230131 07:55:57.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:51.965" endtime="20230131 07:55:57.976"/>
</kw>
<msg timestamp="20230131 07:55:57.976" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "60337-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-3...</msg>
<status status="PASS" starttime="20230131 07:55:51.964" endtime="20230131 07:55:57.976"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:55:57.976" endtime="20230131 07:55:57.977"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:55:57.983" level="INFO">Running command 'ozone sh key list 60337-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:04.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:04.198" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230131 07:55:57.980" endtime="20230131 07:56:04.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:04.200" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230131 07:56:04.199" endtime="20230131 07:56:04.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:04.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:04.200" endtime="20230131 07:56:04.201"/>
</kw>
<status status="PASS" starttime="20230131 07:55:57.979" endtime="20230131 07:56:04.202"/>
</kw>
<msg timestamp="20230131 07:56:04.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:55:57.978" endtime="20230131 07:56:04.202"/>
</kw>
<msg timestamp="20230131 07:56:04.203" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230131 07:55:57.977" endtime="20230131 07:56:04.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:56:04.203" endtime="20230131 07:56:04.203"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:55:45.774" endtime="20230131 07:56:04.204"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:04.211" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:04.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:04.216" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:56:04.209" endtime="20230131 07:56:04.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:04.217" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:56:04.216" endtime="20230131 07:56:04.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:04.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:04.218" endtime="20230131 07:56:04.218"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.208" endtime="20230131 07:56:04.219"/>
</kw>
<msg timestamp="20230131 07:56:04.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:04.208" endtime="20230131 07:56:04.219"/>
</kw>
<msg timestamp="20230131 07:56:04.220" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:56:04.207" endtime="20230131 07:56:04.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:56:04.221" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:56:04.220" endtime="20230131 07:56:04.221"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:04.226" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:04.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:04.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:56:04.224" endtime="20230131 07:56:04.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:04.248" level="INFO"/>
<status status="PASS" starttime="20230131 07:56:04.247" endtime="20230131 07:56:04.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:04.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:04.248" endtime="20230131 07:56:04.249"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.223" endtime="20230131 07:56:04.249"/>
</kw>
<msg timestamp="20230131 07:56:04.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:04.222" endtime="20230131 07:56:04.250"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.222" endtime="20230131 07:56:04.250"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.221" endtime="20230131 07:56:04.250"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.207" endtime="20230131 07:56:04.250"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.206" endtime="20230131 07:56:04.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:04.255" level="INFO">Running command 'ozone sh bucket link 60337-source/bucket1 60337-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:10.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:10.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:56:04.253" endtime="20230131 07:56:10.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:10.035" level="INFO"/>
<status status="PASS" starttime="20230131 07:56:10.035" endtime="20230131 07:56:10.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:10.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:10.036" endtime="20230131 07:56:10.036"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.252" endtime="20230131 07:56:10.037"/>
</kw>
<msg timestamp="20230131 07:56:10.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:04.251" endtime="20230131 07:56:10.038"/>
</kw>
<status status="PASS" starttime="20230131 07:56:04.251" endtime="20230131 07:56:10.038"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:10.042" level="INFO">Running command 'ozone sh bucket setquota 60337-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:15.910" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:56:15.910" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230131 07:56:10.039" endtime="20230131 07:56:15.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:15.913" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230131 07:56:15.911" endtime="20230131 07:56:15.913"/>
</kw>
<msg timestamp="20230131 07:56:15.913" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230131 07:56:10.038" endtime="20230131 07:56:15.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:56:15.914" endtime="20230131 07:56:15.914"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:15.920" level="INFO">Running command 'ozone sh bucket info 60337-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:22.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:22.352" level="INFO">${output} = {
  "volumeName" : "60337-target",
  "bucketName" : "link4",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:56:09.749Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230131 07:56:15.917" endtime="20230131 07:56:22.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:22.354" level="INFO">{
  "volumeName" : "60337-target",
  "bucketName" : "link4",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:56:09.749Z",
  "modificationTime" : "2023-01-31T07:56:09.749Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230131 07:56:22.353" endtime="20230131 07:56:22.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:22.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:22.354" endtime="20230131 07:56:22.355"/>
</kw>
<status status="PASS" starttime="20230131 07:56:15.916" endtime="20230131 07:56:22.355"/>
</kw>
<msg timestamp="20230131 07:56:22.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:15.916" endtime="20230131 07:56:22.356"/>
</kw>
<msg timestamp="20230131 07:56:22.356" level="INFO">${result} = {
  "volumeName" : "60337-target",
  "bucketName" : "link4",
  "sourceVolume" : "60337-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-31T07:56:09.749Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230131 07:56:15.914" endtime="20230131 07:56:22.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:56:22.356" endtime="20230131 07:56:22.357"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:56:04.205" endtime="20230131 07:56:22.357"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230131 07:50:02.875" endtime="20230131 07:56:22.360"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 07:56:22.396" level="INFO">${random} = 58672</msg>
<status status="PASS" starttime="20230131 07:56:22.395" endtime="20230131 07:56:22.396"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:56:22.396" level="INFO">${prefix} = 58672</msg>
<status status="PASS" starttime="20230131 07:56:22.396" endtime="20230131 07:56:22.396"/>
</kw>
<status status="PASS" starttime="20230131 07:56:22.395" endtime="20230131 07:56:22.397"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:22.405" level="INFO">Running command 'ozone sh volume info /58672-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:28.079" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:56:28.079" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58672-without-scheme is not found</msg>
<status status="PASS" starttime="20230131 07:56:22.402" endtime="20230131 07:56:28.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:28.081" level="INFO">VOLUME_NOT_FOUND Volume 58672-without-scheme is not found</msg>
<status status="PASS" starttime="20230131 07:56:28.080" endtime="20230131 07:56:28.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:28.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:28.081" endtime="20230131 07:56:28.082"/>
</kw>
<msg timestamp="20230131 07:56:28.082" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58672-without-scheme is not found</msg>
<status status="PASS" starttime="20230131 07:56:22.401" endtime="20230131 07:56:28.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:56:28.082" endtime="20230131 07:56:28.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:28.088" level="INFO">Running command 'ozone sh volume create /58672-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:34.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:34.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:56:28.085" endtime="20230131 07:56:34.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:34.073" level="INFO"/>
<status status="PASS" starttime="20230131 07:56:34.072" endtime="20230131 07:56:34.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:34.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:34.074" endtime="20230131 07:56:34.075"/>
</kw>
<status status="PASS" starttime="20230131 07:56:28.084" endtime="20230131 07:56:34.077"/>
</kw>
<msg timestamp="20230131 07:56:34.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:28.084" endtime="20230131 07:56:34.077"/>
</kw>
<msg timestamp="20230131 07:56:34.078" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 07:56:28.083" endtime="20230131 07:56:34.078"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230131 07:56:34.078" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230131 07:56:34.078" endtime="20230131 07:56:34.078"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:34.084" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="58672-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:40.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:40.009" level="INFO">${output} = {
  "metadata": {},
  "name": "58672-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230131 07:56:34.081" endtime="20230131 07:56:40.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:40.011" level="INFO">{
  "metadata": {},
  "name": "58672-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-31T07:56:33.984Z",
  "modificationTime": "2023-01-31T07:56:33.984Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230131 07:56:40.010" endtime="20230131 07:56:40.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:40.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:40.011" endtime="20230131 07:56:40.013"/>
</kw>
<status status="PASS" starttime="20230131 07:56:34.080" endtime="20230131 07:56:40.013"/>
</kw>
<msg timestamp="20230131 07:56:40.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:34.080" endtime="20230131 07:56:40.014"/>
</kw>
<msg timestamp="20230131 07:56:40.015" level="INFO">${result} = {
  "metadata": {},
  "name": "58672-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230131 07:56:34.079" endtime="20230131 07:56:40.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:56:40.015" endtime="20230131 07:56:40.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:40.021" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="58672-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:46.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:46.366" level="INFO">${output} = {
  "metadata": {},
  "name": "58672-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230131 07:56:40.018" endtime="20230131 07:56:46.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:46.368" level="INFO">{
  "metadata": {},
  "name": "58672-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-31T07:56:33.984Z",
  "modificationTime": "2023-01-31T07:56:33.984Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230131 07:56:46.367" endtime="20230131 07:56:46.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:46.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:46.368" endtime="20230131 07:56:46.369"/>
</kw>
<status status="PASS" starttime="20230131 07:56:40.017" endtime="20230131 07:56:46.369"/>
</kw>
<msg timestamp="20230131 07:56:46.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:40.017" endtime="20230131 07:56:46.370"/>
</kw>
<msg timestamp="20230131 07:56:46.371" level="INFO">${result} = {
  "metadata": {},
  "name": "58672-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230131 07:56:40.016" endtime="20230131 07:56:46.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:56:46.371" endtime="20230131 07:56:46.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:46.376" level="INFO">Running command 'ozone sh volume setquota /58672-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:52.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:52.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:56:46.374" endtime="20230131 07:56:52.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:52.356" level="INFO"/>
<status status="PASS" starttime="20230131 07:56:52.355" endtime="20230131 07:56:52.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:52.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:52.356" endtime="20230131 07:56:52.357"/>
</kw>
<status status="PASS" starttime="20230131 07:56:46.373" endtime="20230131 07:56:52.357"/>
</kw>
<msg timestamp="20230131 07:56:52.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:46.373" endtime="20230131 07:56:52.358"/>
</kw>
<status status="PASS" starttime="20230131 07:56:46.372" endtime="20230131 07:56:52.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:52.364" level="INFO">Running command 'ozone sh volume info /58672-without-scheme | jq -r '. | select(.name=="58672-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:56:58.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:56:58.904" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230131 07:56:52.361" endtime="20230131 07:56:58.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:56:58.905" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230131 07:56:58.904" endtime="20230131 07:56:58.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:56:58.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:56:58.906" endtime="20230131 07:56:58.907"/>
</kw>
<status status="PASS" starttime="20230131 07:56:52.360" endtime="20230131 07:56:58.907"/>
</kw>
<msg timestamp="20230131 07:56:58.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:52.360" endtime="20230131 07:56:58.908"/>
</kw>
<msg timestamp="20230131 07:56:58.909" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230131 07:56:52.359" endtime="20230131 07:56:58.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:56:58.909" endtime="20230131 07:56:58.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:56:58.915" level="INFO">Running command 'ozone sh bucket create /58672-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:05.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:05.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:56:58.912" endtime="20230131 07:57:05.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:05.127" level="INFO"/>
<status status="PASS" starttime="20230131 07:57:05.126" endtime="20230131 07:57:05.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:05.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:05.127" endtime="20230131 07:57:05.130"/>
</kw>
<status status="PASS" starttime="20230131 07:56:58.911" endtime="20230131 07:57:05.130"/>
</kw>
<msg timestamp="20230131 07:57:05.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:56:58.910" endtime="20230131 07:57:05.131"/>
</kw>
<msg timestamp="20230131 07:57:05.131" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 07:56:58.910" endtime="20230131 07:57:05.131"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230131 07:57:05.132" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230131 07:57:05.131" endtime="20230131 07:57:05.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:05.137" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:11.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:11.664" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230131 07:57:05.134" endtime="20230131 07:57:11.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:11.666" level="INFO">DISK</msg>
<status status="PASS" starttime="20230131 07:57:11.665" endtime="20230131 07:57:11.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:11.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:11.667" endtime="20230131 07:57:11.667"/>
</kw>
<status status="PASS" starttime="20230131 07:57:05.134" endtime="20230131 07:57:11.668"/>
</kw>
<msg timestamp="20230131 07:57:11.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:05.133" endtime="20230131 07:57:11.669"/>
</kw>
<msg timestamp="20230131 07:57:11.669" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230131 07:57:05.132" endtime="20230131 07:57:11.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:57:11.669" endtime="20230131 07:57:11.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:11.675" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:17.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:17.827" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230131 07:57:11.672" endtime="20230131 07:57:17.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:17.829" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230131 07:57:17.828" endtime="20230131 07:57:17.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:17.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:17.829" endtime="20230131 07:57:17.830"/>
</kw>
<status status="PASS" starttime="20230131 07:57:11.672" endtime="20230131 07:57:17.831"/>
</kw>
<msg timestamp="20230131 07:57:17.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:11.671" endtime="20230131 07:57:17.831"/>
</kw>
<msg timestamp="20230131 07:57:17.832" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230131 07:57:11.670" endtime="20230131 07:57:17.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:57:17.832" endtime="20230131 07:57:17.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:17.838" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:24.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:24.215" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230131 07:57:17.835" endtime="20230131 07:57:24.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:24.225" level="INFO">100</msg>
<status status="PASS" starttime="20230131 07:57:24.216" endtime="20230131 07:57:24.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:24.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:24.226" endtime="20230131 07:57:24.228"/>
</kw>
<status status="PASS" starttime="20230131 07:57:17.835" endtime="20230131 07:57:24.229"/>
</kw>
<msg timestamp="20230131 07:57:24.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:17.834" endtime="20230131 07:57:24.230"/>
</kw>
<msg timestamp="20230131 07:57:24.230" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230131 07:57:17.833" endtime="20230131 07:57:24.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:57:24.231" endtime="20230131 07:57:24.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:24.236" level="INFO">Running command 'ozone sh bucket setquota /58672-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:30.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:30.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:57:24.233" endtime="20230131 07:57:30.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:30.577" level="INFO"/>
<status status="PASS" starttime="20230131 07:57:30.576" endtime="20230131 07:57:30.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:30.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:30.577" endtime="20230131 07:57:30.591"/>
</kw>
<status status="PASS" starttime="20230131 07:57:24.232" endtime="20230131 07:57:30.591"/>
</kw>
<msg timestamp="20230131 07:57:30.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:24.232" endtime="20230131 07:57:30.592"/>
</kw>
<status status="PASS" starttime="20230131 07:57:24.231" endtime="20230131 07:57:30.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:30.597" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:37.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:37.010" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230131 07:57:30.594" endtime="20230131 07:57:37.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:37.011" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230131 07:57:37.010" endtime="20230131 07:57:37.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:37.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:37.012" endtime="20230131 07:57:37.013"/>
</kw>
<status status="PASS" starttime="20230131 07:57:30.593" endtime="20230131 07:57:37.013"/>
</kw>
<msg timestamp="20230131 07:57:37.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:30.593" endtime="20230131 07:57:37.014"/>
</kw>
<msg timestamp="20230131 07:57:37.014" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230131 07:57:30.592" endtime="20230131 07:57:37.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:57:37.015" endtime="20230131 07:57:37.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:37.021" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:43.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:43.452" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230131 07:57:37.018" endtime="20230131 07:57:43.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:43.454" level="INFO">1000</msg>
<status status="PASS" starttime="20230131 07:57:43.453" endtime="20230131 07:57:43.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:43.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:43.455" endtime="20230131 07:57:43.456"/>
</kw>
<status status="PASS" starttime="20230131 07:57:37.017" endtime="20230131 07:57:43.456"/>
</kw>
<msg timestamp="20230131 07:57:43.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:37.017" endtime="20230131 07:57:43.457"/>
</kw>
<msg timestamp="20230131 07:57:43.458" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230131 07:57:37.015" endtime="20230131 07:57:43.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:57:43.458" endtime="20230131 07:57:43.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:43.464" level="INFO">Running command 'ozone sh bucket list /58672-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:57:50.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:57:50.485" level="INFO">${output} = 58672-without-scheme</msg>
<status status="PASS" starttime="20230131 07:57:43.461" endtime="20230131 07:57:50.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:57:50.488" level="INFO">58672-without-scheme</msg>
<status status="PASS" starttime="20230131 07:57:50.486" endtime="20230131 07:57:50.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:57:50.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:57:50.488" endtime="20230131 07:57:50.489"/>
</kw>
<status status="PASS" starttime="20230131 07:57:43.460" endtime="20230131 07:57:50.489"/>
</kw>
<msg timestamp="20230131 07:57:50.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:43.460" endtime="20230131 07:57:50.490"/>
</kw>
<msg timestamp="20230131 07:57:50.490" level="INFO">${result} = 58672-without-scheme</msg>
<status status="PASS" starttime="20230131 07:57:43.459" endtime="20230131 07:57:50.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:57:50.490" endtime="20230131 07:57:50.491"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:57:50.497" level="INFO">Running command 'ozone sh key put /58672-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:00.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:00.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:57:50.494" endtime="20230131 07:58:00.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:00.518" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:00.517" endtime="20230131 07:58:00.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:00.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:00.519" endtime="20230131 07:58:00.519"/>
</kw>
<status status="PASS" starttime="20230131 07:57:50.493" endtime="20230131 07:58:00.520"/>
</kw>
<msg timestamp="20230131 07:58:00.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:57:50.493" endtime="20230131 07:58:00.521"/>
</kw>
<status status="PASS" starttime="20230131 07:57:50.492" endtime="20230131 07:58:00.522"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:00.527" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:00.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:00.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:00.524" endtime="20230131 07:58:00.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:00.533" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:00.532" endtime="20230131 07:58:00.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:00.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:00.533" endtime="20230131 07:58:00.534"/>
</kw>
<status status="PASS" starttime="20230131 07:58:00.523" endtime="20230131 07:58:00.534"/>
</kw>
<msg timestamp="20230131 07:58:00.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:00.523" endtime="20230131 07:58:00.535"/>
</kw>
<status status="PASS" starttime="20230131 07:58:00.522" endtime="20230131 07:58:00.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:00.542" level="INFO">Running command 'ozone sh key get /58672-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:09.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:09.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:00.538" endtime="20230131 07:58:09.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:09.566" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:09.561" endtime="20230131 07:58:09.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:09.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:09.566" endtime="20230131 07:58:09.567"/>
</kw>
<status status="PASS" starttime="20230131 07:58:00.537" endtime="20230131 07:58:09.567"/>
</kw>
<msg timestamp="20230131 07:58:09.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:00.537" endtime="20230131 07:58:09.571"/>
</kw>
<status status="PASS" starttime="20230131 07:58:00.536" endtime="20230131 07:58:09.572"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:09.577" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:09.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:09.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:09.574" endtime="20230131 07:58:09.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:09.590" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:09.585" endtime="20230131 07:58:09.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:09.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:09.591" endtime="20230131 07:58:09.592"/>
</kw>
<status status="PASS" starttime="20230131 07:58:09.573" endtime="20230131 07:58:09.592"/>
</kw>
<msg timestamp="20230131 07:58:09.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:09.572" endtime="20230131 07:58:09.594"/>
</kw>
<status status="PASS" starttime="20230131 07:58:09.572" endtime="20230131 07:58:09.594"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:09.600" level="INFO">Running command 'ozone sh key put -t RATIS /58672-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:20.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:20.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:09.597" endtime="20230131 07:58:20.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:20.484" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:20.483" endtime="20230131 07:58:20.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:20.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:20.484" endtime="20230131 07:58:20.485"/>
</kw>
<status status="PASS" starttime="20230131 07:58:09.596" endtime="20230131 07:58:20.486"/>
</kw>
<msg timestamp="20230131 07:58:20.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:09.595" endtime="20230131 07:58:20.487"/>
</kw>
<status status="PASS" starttime="20230131 07:58:09.595" endtime="20230131 07:58:20.487"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:20.493" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:20.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:20.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:20.490" endtime="20230131 07:58:20.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:20.499" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:20.498" endtime="20230131 07:58:20.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:20.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:20.500" endtime="20230131 07:58:20.500"/>
</kw>
<status status="PASS" starttime="20230131 07:58:20.489" endtime="20230131 07:58:20.501"/>
</kw>
<msg timestamp="20230131 07:58:20.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:20.488" endtime="20230131 07:58:20.502"/>
</kw>
<status status="PASS" starttime="20230131 07:58:20.488" endtime="20230131 07:58:20.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:20.511" level="INFO">Running command 'ozone sh key get /58672-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:30.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:30.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:20.504" endtime="20230131 07:58:30.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:30.776" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:30.774" endtime="20230131 07:58:30.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:30.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:30.776" endtime="20230131 07:58:30.778"/>
</kw>
<status status="PASS" starttime="20230131 07:58:20.504" endtime="20230131 07:58:30.778"/>
</kw>
<msg timestamp="20230131 07:58:30.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:20.503" endtime="20230131 07:58:30.779"/>
</kw>
<status status="PASS" starttime="20230131 07:58:20.502" endtime="20230131 07:58:30.780"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:30.789" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:30.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:30.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:30.782" endtime="20230131 07:58:30.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:30.797" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:30.795" endtime="20230131 07:58:30.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:30.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:30.797" endtime="20230131 07:58:30.799"/>
</kw>
<status status="PASS" starttime="20230131 07:58:30.781" endtime="20230131 07:58:30.799"/>
</kw>
<msg timestamp="20230131 07:58:30.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:30.781" endtime="20230131 07:58:30.800"/>
</kw>
<status status="PASS" starttime="20230131 07:58:30.780" endtime="20230131 07:58:30.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:30.809" level="INFO">Running command 'ozone sh key info /58672-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:37.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:37.900" level="INFO">${output} = {
  "volumeName": "58672-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T07:58:15.884Z",
  "modificationTime": "2023-01-31T07:58:19.7...</msg>
<status status="PASS" starttime="20230131 07:58:30.806" endtime="20230131 07:58:37.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:37.901" level="INFO">{
  "volumeName": "58672-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T07:58:15.884Z",
  "modificationTime": "2023-01-31T07:58:19.700Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230131 07:58:37.900" endtime="20230131 07:58:37.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:37.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:37.902" endtime="20230131 07:58:37.903"/>
</kw>
<status status="PASS" starttime="20230131 07:58:30.805" endtime="20230131 07:58:37.903"/>
</kw>
<msg timestamp="20230131 07:58:37.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:30.804" endtime="20230131 07:58:37.904"/>
</kw>
<msg timestamp="20230131 07:58:37.904" level="INFO">${result} = {
  "volumeName": "58672-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T07:58:15.884Z",
  "modificationTime": "2023-01-31T07:58:19.7...</msg>
<status status="PASS" starttime="20230131 07:58:30.801" endtime="20230131 07:58:37.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:58:37.905" endtime="20230131 07:58:37.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:37.910" level="INFO">Running command 'ozone sh key delete /58672-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:44.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:44.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:37.907" endtime="20230131 07:58:44.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:44.081" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:44.080" endtime="20230131 07:58:44.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:44.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:44.081" endtime="20230131 07:58:44.082"/>
</kw>
<status status="PASS" starttime="20230131 07:58:37.906" endtime="20230131 07:58:44.083"/>
</kw>
<msg timestamp="20230131 07:58:44.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:37.906" endtime="20230131 07:58:44.084"/>
</kw>
<status status="PASS" starttime="20230131 07:58:37.905" endtime="20230131 07:58:44.084"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:44.090" level="INFO">Running command 'ozone sh key cp /58672-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:54.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:54.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:44.086" endtime="20230131 07:58:54.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:54.788" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:54.786" endtime="20230131 07:58:54.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:54.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:54.788" endtime="20230131 07:58:54.790"/>
</kw>
<status status="PASS" starttime="20230131 07:58:44.085" endtime="20230131 07:58:54.791"/>
</kw>
<msg timestamp="20230131 07:58:54.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:44.085" endtime="20230131 07:58:54.792"/>
</kw>
<status status="PASS" starttime="20230131 07:58:44.084" endtime="20230131 07:58:54.793"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:54.799" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:58:54.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:58:54.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:54.796" endtime="20230131 07:58:54.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:58:54.806" level="INFO"/>
<status status="PASS" starttime="20230131 07:58:54.805" endtime="20230131 07:58:54.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:58:54.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:58:54.807" endtime="20230131 07:58:54.809"/>
</kw>
<status status="PASS" starttime="20230131 07:58:54.795" endtime="20230131 07:58:54.810"/>
</kw>
<msg timestamp="20230131 07:58:54.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:54.794" endtime="20230131 07:58:54.812"/>
</kw>
<status status="PASS" starttime="20230131 07:58:54.793" endtime="20230131 07:58:54.812"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:58:54.819" level="INFO">Running command 'ozone sh key get /58672-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:04.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:04.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:58:54.816" endtime="20230131 07:59:04.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:04.170" level="INFO"/>
<status status="PASS" starttime="20230131 07:59:04.169" endtime="20230131 07:59:04.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:04.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:04.171" endtime="20230131 07:59:04.171"/>
</kw>
<status status="PASS" starttime="20230131 07:58:54.815" endtime="20230131 07:59:04.172"/>
</kw>
<msg timestamp="20230131 07:59:04.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:58:54.814" endtime="20230131 07:59:04.173"/>
</kw>
<status status="PASS" starttime="20230131 07:58:54.813" endtime="20230131 07:59:04.173"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:04.185" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:04.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:04.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:59:04.182" endtime="20230131 07:59:04.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:04.191" level="INFO"/>
<status status="PASS" starttime="20230131 07:59:04.190" endtime="20230131 07:59:04.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:04.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:04.192" endtime="20230131 07:59:04.192"/>
</kw>
<status status="PASS" starttime="20230131 07:59:04.181" endtime="20230131 07:59:04.193"/>
</kw>
<msg timestamp="20230131 07:59:04.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:04.180" endtime="20230131 07:59:04.194"/>
</kw>
<status status="PASS" starttime="20230131 07:59:04.173" endtime="20230131 07:59:04.195"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:04.200" level="INFO">Running command 'ozone sh key delete /58672-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:10.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:10.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:59:04.197" endtime="20230131 07:59:10.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:10.014" level="INFO"/>
<status status="PASS" starttime="20230131 07:59:10.012" endtime="20230131 07:59:10.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:10.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:10.014" endtime="20230131 07:59:10.015"/>
</kw>
<status status="PASS" starttime="20230131 07:59:04.196" endtime="20230131 07:59:10.016"/>
</kw>
<msg timestamp="20230131 07:59:10.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:04.196" endtime="20230131 07:59:10.017"/>
</kw>
<status status="PASS" starttime="20230131 07:59:04.195" endtime="20230131 07:59:10.017"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:10.022" level="INFO">Running command 'ozone sh key get /58672-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:16.077" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 07:59:16.077" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 07:59:10.019" endtime="20230131 07:59:16.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:16.079" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 07:59:16.078" endtime="20230131 07:59:16.079"/>
</kw>
<msg timestamp="20230131 07:59:16.080" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 07:59:10.018" endtime="20230131 07:59:16.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:59:16.080" endtime="20230131 07:59:16.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:16.088" level="INFO">Running command 'ozone sh key get --force /58672-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:26.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:26.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:59:16.084" endtime="20230131 07:59:26.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:26.139" level="INFO"/>
<status status="PASS" starttime="20230131 07:59:26.138" endtime="20230131 07:59:26.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:26.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:26.140" endtime="20230131 07:59:26.141"/>
</kw>
<status status="PASS" starttime="20230131 07:59:16.083" endtime="20230131 07:59:26.141"/>
</kw>
<msg timestamp="20230131 07:59:26.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:16.083" endtime="20230131 07:59:26.143"/>
</kw>
<msg timestamp="20230131 07:59:26.143" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 07:59:16.081" endtime="20230131 07:59:26.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:59:26.144" endtime="20230131 07:59:26.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:26.150" level="INFO">Running command 'ozone sh key info /58672-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:33.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:33.487" level="INFO">${output} = {
  "volumeName": "58672-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T07:57:56.735Z",
  "modificationTime": "2023-01-31T07:58:00.044Z",
...</msg>
<status status="PASS" starttime="20230131 07:59:26.147" endtime="20230131 07:59:33.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:33.489" level="INFO">{
  "volumeName": "58672-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T07:57:56.735Z",
  "modificationTime": "2023-01-31T07:58:00.044Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230131 07:59:33.488" endtime="20230131 07:59:33.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:33.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:33.490" endtime="20230131 07:59:33.490"/>
</kw>
<status status="PASS" starttime="20230131 07:59:26.146" endtime="20230131 07:59:33.491"/>
</kw>
<msg timestamp="20230131 07:59:33.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:26.146" endtime="20230131 07:59:33.492"/>
</kw>
<msg timestamp="20230131 07:59:33.492" level="INFO">${result} = {
  "volumeName": "58672-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T07:57:56.735Z",
  "modificationTime": "2023-01-31T07:58:00.044Z",
...</msg>
<status status="PASS" starttime="20230131 07:59:26.144" endtime="20230131 07:59:33.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 07:59:33.492" endtime="20230131 07:59:33.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:33.498" level="INFO">Running command 'ozone sh key list /58672-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:39.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:39.778" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230131 07:59:33.495" endtime="20230131 07:59:39.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:39.781" level="INFO">key1</msg>
<status status="PASS" starttime="20230131 07:59:39.780" endtime="20230131 07:59:39.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:39.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:39.781" endtime="20230131 07:59:39.782"/>
</kw>
<status status="PASS" starttime="20230131 07:59:33.495" endtime="20230131 07:59:39.782"/>
</kw>
<msg timestamp="20230131 07:59:39.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:33.494" endtime="20230131 07:59:39.783"/>
</kw>
<msg timestamp="20230131 07:59:39.783" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230131 07:59:33.493" endtime="20230131 07:59:39.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:59:39.783" endtime="20230131 07:59:39.784"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:39.789" level="INFO">Running command 'ozone sh key rename /58672-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:46.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:46.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:59:39.786" endtime="20230131 07:59:46.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:46.123" level="INFO"/>
<status status="PASS" starttime="20230131 07:59:46.121" endtime="20230131 07:59:46.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:46.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:46.123" endtime="20230131 07:59:46.124"/>
</kw>
<status status="PASS" starttime="20230131 07:59:39.785" endtime="20230131 07:59:46.124"/>
</kw>
<msg timestamp="20230131 07:59:46.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:39.785" endtime="20230131 07:59:46.125"/>
</kw>
<status status="PASS" starttime="20230131 07:59:39.784" endtime="20230131 07:59:46.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:46.131" level="INFO">Running command 'ozone sh key list /58672-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:53.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:53.719" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230131 07:59:46.128" endtime="20230131 07:59:53.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:53.721" level="INFO">key2</msg>
<status status="PASS" starttime="20230131 07:59:53.720" endtime="20230131 07:59:53.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:53.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:53.721" endtime="20230131 07:59:53.722"/>
</kw>
<status status="PASS" starttime="20230131 07:59:46.127" endtime="20230131 07:59:53.722"/>
</kw>
<msg timestamp="20230131 07:59:53.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:46.127" endtime="20230131 07:59:53.723"/>
</kw>
<msg timestamp="20230131 07:59:53.724" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230131 07:59:46.126" endtime="20230131 07:59:53.724"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 07:59:53.724" endtime="20230131 07:59:53.725"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:59:53.731" level="INFO">Running command 'ozone sh key delete /58672-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:59:59.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:59:59.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:59:53.727" endtime="20230131 07:59:59.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:59:59.991" level="INFO"/>
<status status="PASS" starttime="20230131 07:59:59.990" endtime="20230131 07:59:59.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:59:59.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:59:59.991" endtime="20230131 07:59:59.992"/>
</kw>
<status status="PASS" starttime="20230131 07:59:53.727" endtime="20230131 07:59:59.992"/>
</kw>
<msg timestamp="20230131 07:59:59.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:53.726" endtime="20230131 07:59:59.993"/>
</kw>
<status status="PASS" starttime="20230131 07:59:53.725" endtime="20230131 07:59:59.994"/>
</kw>
<status status="PASS" starttime="20230131 07:57:50.492" endtime="20230131 07:59:59.994"/>
</kw>
<status status="PASS" starttime="20230131 07:57:50.491" endtime="20230131 07:59:59.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:00.022" level="INFO">Running command 'ozone sh volume clrquota --space-quota /58672-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:05.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:05.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:00:00.000" endtime="20230131 08:00:05.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:05.737" level="INFO"/>
<status status="PASS" starttime="20230131 08:00:05.736" endtime="20230131 08:00:05.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:05.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:05.737" endtime="20230131 08:00:05.738"/>
</kw>
<status status="PASS" starttime="20230131 08:00:00.000" endtime="20230131 08:00:05.738"/>
</kw>
<msg timestamp="20230131 08:00:05.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:59:59.999" endtime="20230131 08:00:05.739"/>
</kw>
<status status="PASS" starttime="20230131 07:59:59.998" endtime="20230131 08:00:05.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:05.745" level="INFO">Running command 'ozone sh volume info /58672-without-scheme | jq -r '. | select(.name=="58672-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:12.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:12.301" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:00:05.742" endtime="20230131 08:00:12.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:12.303" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:00:12.302" endtime="20230131 08:00:12.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:12.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:12.303" endtime="20230131 08:00:12.304"/>
</kw>
<status status="PASS" starttime="20230131 08:00:05.741" endtime="20230131 08:00:12.304"/>
</kw>
<msg timestamp="20230131 08:00:12.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:05.741" endtime="20230131 08:00:12.305"/>
</kw>
<msg timestamp="20230131 08:00:12.305" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:00:05.739" endtime="20230131 08:00:12.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:00:12.305" endtime="20230131 08:00:12.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:12.311" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /58672-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:18.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:18.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:00:12.308" endtime="20230131 08:00:18.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:18.576" level="INFO"/>
<status status="PASS" starttime="20230131 08:00:18.575" endtime="20230131 08:00:18.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:18.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:18.576" endtime="20230131 08:00:18.577"/>
</kw>
<status status="PASS" starttime="20230131 08:00:12.307" endtime="20230131 08:00:18.578"/>
</kw>
<msg timestamp="20230131 08:00:18.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:12.307" endtime="20230131 08:00:18.578"/>
</kw>
<status status="PASS" starttime="20230131 08:00:12.306" endtime="20230131 08:00:18.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:18.584" level="INFO">Running command 'ozone sh volume info /58672-without-scheme | jq -r '. | select(.name=="58672-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:25.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:25.375" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:00:18.581" endtime="20230131 08:00:25.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:25.377" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:00:25.376" endtime="20230131 08:00:25.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:25.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:25.377" endtime="20230131 08:00:25.378"/>
</kw>
<status status="PASS" starttime="20230131 08:00:18.581" endtime="20230131 08:00:25.378"/>
</kw>
<msg timestamp="20230131 08:00:25.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:18.580" endtime="20230131 08:00:25.379"/>
</kw>
<msg timestamp="20230131 08:00:25.379" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:00:18.579" endtime="20230131 08:00:25.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:00:25.380" endtime="20230131 08:00:25.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:25.386" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /58672-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:31.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:31.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:00:25.383" endtime="20230131 08:00:31.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:31.644" level="INFO"/>
<status status="PASS" starttime="20230131 08:00:31.643" endtime="20230131 08:00:31.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:31.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:31.644" endtime="20230131 08:00:31.645"/>
</kw>
<status status="PASS" starttime="20230131 08:00:25.382" endtime="20230131 08:00:31.646"/>
</kw>
<msg timestamp="20230131 08:00:31.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:25.382" endtime="20230131 08:00:31.646"/>
</kw>
<status status="PASS" starttime="20230131 08:00:25.381" endtime="20230131 08:00:31.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:31.652" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:38.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:38.262" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:00:31.649" endtime="20230131 08:00:38.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:38.264" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:00:38.263" endtime="20230131 08:00:38.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:38.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:38.265" endtime="20230131 08:00:38.267"/>
</kw>
<status status="PASS" starttime="20230131 08:00:31.649" endtime="20230131 08:00:38.267"/>
</kw>
<msg timestamp="20230131 08:00:38.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:31.648" endtime="20230131 08:00:38.269"/>
</kw>
<msg timestamp="20230131 08:00:38.269" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:00:31.647" endtime="20230131 08:00:38.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:00:38.270" endtime="20230131 08:00:38.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:38.277" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /58672-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:44.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:44.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:00:38.273" endtime="20230131 08:00:44.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:44.312" level="INFO"/>
<status status="PASS" starttime="20230131 08:00:44.311" endtime="20230131 08:00:44.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:44.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:44.313" endtime="20230131 08:00:44.313"/>
</kw>
<status status="PASS" starttime="20230131 08:00:38.272" endtime="20230131 08:00:44.314"/>
</kw>
<msg timestamp="20230131 08:00:44.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:38.272" endtime="20230131 08:00:44.314"/>
</kw>
<status status="PASS" starttime="20230131 08:00:38.271" endtime="20230131 08:00:44.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:44.320" level="INFO">Running command 'ozone sh bucket info /58672-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:51.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:51.053" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:00:44.317" endtime="20230131 08:00:51.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:51.055" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:00:51.054" endtime="20230131 08:00:51.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:51.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:51.055" endtime="20230131 08:00:51.056"/>
</kw>
<status status="PASS" starttime="20230131 08:00:44.316" endtime="20230131 08:00:51.057"/>
</kw>
<msg timestamp="20230131 08:00:51.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:44.316" endtime="20230131 08:00:51.058"/>
</kw>
<msg timestamp="20230131 08:00:51.058" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:00:44.315" endtime="20230131 08:00:51.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:00:51.058" endtime="20230131 08:00:51.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:51.069" level="INFO">Running command 'ozone sh bucket delete /58672-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:00:57.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:00:57.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:00:51.062" endtime="20230131 08:00:57.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:00:57.104" level="INFO"/>
<status status="PASS" starttime="20230131 08:00:57.103" endtime="20230131 08:00:57.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:00:57.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:00:57.105" endtime="20230131 08:00:57.105"/>
</kw>
<status status="PASS" starttime="20230131 08:00:51.061" endtime="20230131 08:00:57.106"/>
</kw>
<msg timestamp="20230131 08:00:57.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:51.060" endtime="20230131 08:00:57.107"/>
</kw>
<status status="PASS" starttime="20230131 08:00:51.059" endtime="20230131 08:00:57.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:00:57.112" level="INFO">Running command 'ozone sh volume delete /58672-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:03.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:03.163" level="INFO">${output} = Volume 58672-without-scheme is deleted</msg>
<status status="PASS" starttime="20230131 08:00:57.110" endtime="20230131 08:01:03.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:03.165" level="INFO">Volume 58672-without-scheme is deleted</msg>
<status status="PASS" starttime="20230131 08:01:03.164" endtime="20230131 08:01:03.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:03.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:03.165" endtime="20230131 08:01:03.166"/>
</kw>
<status status="PASS" starttime="20230131 08:00:57.109" endtime="20230131 08:01:03.166"/>
</kw>
<msg timestamp="20230131 08:01:03.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:00:57.108" endtime="20230131 08:01:03.167"/>
</kw>
<status status="PASS" starttime="20230131 08:00:57.107" endtime="20230131 08:01:03.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:03.173" level="INFO">Running command 'ozone sh volume create /58672-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:09.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:09.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:01:03.170" endtime="20230131 08:01:09.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:09.897" level="INFO"/>
<status status="PASS" starttime="20230131 08:01:09.896" endtime="20230131 08:01:09.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:09.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:09.897" endtime="20230131 08:01:09.898"/>
</kw>
<status status="PASS" starttime="20230131 08:01:03.169" endtime="20230131 08:01:09.898"/>
</kw>
<msg timestamp="20230131 08:01:09.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:03.169" endtime="20230131 08:01:09.899"/>
</kw>
<status status="PASS" starttime="20230131 08:01:03.168" endtime="20230131 08:01:09.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:09.904" level="INFO">Running command 'ozone sh volume info /58672-without-scheme | jq -r '. | select(.name=="58672-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:16.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:16.716" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:01:09.902" endtime="20230131 08:01:16.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:16.717" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:01:16.717" endtime="20230131 08:01:16.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:16.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:16.718" endtime="20230131 08:01:16.718"/>
</kw>
<status status="PASS" starttime="20230131 08:01:09.901" endtime="20230131 08:01:16.719"/>
</kw>
<msg timestamp="20230131 08:01:16.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:09.901" endtime="20230131 08:01:16.719"/>
</kw>
<msg timestamp="20230131 08:01:16.720" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:01:09.899" endtime="20230131 08:01:16.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:01:16.720" endtime="20230131 08:01:16.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:16.726" level="INFO">Running command 'ozone sh volume info /58672-without-scheme | jq -r '. | select(.name=="58672-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:22.398" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230131 08:01:16.723" endtime="20230131 08:01:22.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230131 08:01:22.399" endtime="20230131 08:01:22.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230131 08:01:22.399" endtime="20230131 08:01:22.400"/>
</kw>
<status status="FAIL" starttime="20230131 08:01:16.722" endtime="20230131 08:01:22.401"/>
</kw>
<msg timestamp="20230131 08:01:22.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230131 08:01:16.722" endtime="20230131 08:01:22.401"/>
</kw>
<status status="FAIL" starttime="20230131 08:01:16.721" endtime="20230131 08:01:22.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:01:22.402" endtime="20230131 08:01:22.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230131 08:01:22.402" endtime="20230131 08:01:22.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20230131 08:01:22.403" endtime="20230131 08:01:22.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:01:22.403" endtime="20230131 08:01:22.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230131 08:01:22.403" endtime="20230131 08:01:22.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:01:22.404" endtime="20230131 08:01:22.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230131 08:01:22.404" endtime="20230131 08:01:22.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20230131 08:01:22.404" endtime="20230131 08:01:22.405"/>
</kw>
<status status="FAIL" starttime="20230131 07:56:22.398" endtime="20230131 08:01:22.406"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230131 07:56:22.397" endtime="20230131 08:01:22.414">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230131 07:56:22.365" endtime="20230131 08:01:22.418"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 08:01:22.471" level="INFO">${random} = 39460</msg>
<status status="PASS" starttime="20230131 08:01:22.470" endtime="20230131 08:01:22.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:01:22.474" level="INFO">${prefix} = 39460</msg>
<status status="PASS" starttime="20230131 08:01:22.472" endtime="20230131 08:01:22.474"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.469" endtime="20230131 08:01:22.474"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:22.498" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:22.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:22.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:01:22.487" endtime="20230131 08:01:22.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:22.514" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:01:22.513" endtime="20230131 08:01:22.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:22.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:22.515" endtime="20230131 08:01:22.516"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.484" endtime="20230131 08:01:22.516"/>
</kw>
<msg timestamp="20230131 08:01:22.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:22.484" endtime="20230131 08:01:22.517"/>
</kw>
<msg timestamp="20230131 08:01:22.518" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:01:22.482" endtime="20230131 08:01:22.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:01:22.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:01:22.519" endtime="20230131 08:01:22.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:22.545" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:22.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:22.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:01:22.533" endtime="20230131 08:01:22.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:22.699" level="INFO"/>
<status status="PASS" starttime="20230131 08:01:22.696" endtime="20230131 08:01:22.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:22.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:22.700" endtime="20230131 08:01:22.701"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.531" endtime="20230131 08:01:22.703"/>
</kw>
<msg timestamp="20230131 08:01:22.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:22.529" endtime="20230131 08:01:22.705"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.527" endtime="20230131 08:01:22.705"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.525" endtime="20230131 08:01:22.706"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.480" endtime="20230131 08:01:22.706"/>
</kw>
<status status="PASS" starttime="20230131 08:01:22.478" endtime="20230131 08:01:22.706"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:22.732" level="INFO">Running command 'ozone sh volume info o3://om:9862/39460-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:30.723" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:01:30.724" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39460-with-host is not found</msg>
<status status="PASS" starttime="20230131 08:01:22.718" endtime="20230131 08:01:30.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:30.727" level="INFO">VOLUME_NOT_FOUND Volume 39460-with-host is not found</msg>
<status status="PASS" starttime="20230131 08:01:30.724" endtime="20230131 08:01:30.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:30.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:30.727" endtime="20230131 08:01:30.728"/>
</kw>
<msg timestamp="20230131 08:01:30.729" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39460-with-host is not found</msg>
<status status="PASS" starttime="20230131 08:01:22.715" endtime="20230131 08:01:30.729"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:01:30.729" endtime="20230131 08:01:30.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:30.736" level="INFO">Running command 'ozone sh volume create o3://om:9862/39460-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:36.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:36.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:01:30.733" endtime="20230131 08:01:36.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:36.559" level="INFO"/>
<status status="PASS" starttime="20230131 08:01:36.558" endtime="20230131 08:01:36.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:36.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:36.559" endtime="20230131 08:01:36.560"/>
</kw>
<status status="PASS" starttime="20230131 08:01:30.731" endtime="20230131 08:01:36.560"/>
</kw>
<msg timestamp="20230131 08:01:36.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:30.731" endtime="20230131 08:01:36.561"/>
</kw>
<msg timestamp="20230131 08:01:36.561" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 08:01:30.730" endtime="20230131 08:01:36.561"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230131 08:01:36.562" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230131 08:01:36.562" endtime="20230131 08:01:36.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:36.567" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="39460-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:43.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:43.183" level="INFO">${output} = {
  "metadata": {},
  "name": "39460-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230131 08:01:36.565" endtime="20230131 08:01:43.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:43.184" level="INFO">{
  "metadata": {},
  "name": "39460-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-31T08:01:36.462Z",
  "modificationTime": "2023-01-31T08:01:36.462Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230131 08:01:43.183" endtime="20230131 08:01:43.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:43.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:43.185" endtime="20230131 08:01:43.185"/>
</kw>
<status status="PASS" starttime="20230131 08:01:36.564" endtime="20230131 08:01:43.186"/>
</kw>
<msg timestamp="20230131 08:01:43.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:36.563" endtime="20230131 08:01:43.187"/>
</kw>
<msg timestamp="20230131 08:01:43.187" level="INFO">${result} = {
  "metadata": {},
  "name": "39460-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230131 08:01:36.562" endtime="20230131 08:01:43.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:01:43.187" endtime="20230131 08:01:43.188"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:43.193" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="39460-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:50.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:50.166" level="INFO">${output} = {
  "metadata": {},
  "name": "39460-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230131 08:01:43.190" endtime="20230131 08:01:50.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:50.168" level="INFO">{
  "metadata": {},
  "name": "39460-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-31T08:01:36.462Z",
  "modificationTime": "2023-01-31T08:01:36.462Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230131 08:01:50.167" endtime="20230131 08:01:50.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:50.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:50.169" endtime="20230131 08:01:50.170"/>
</kw>
<status status="PASS" starttime="20230131 08:01:43.189" endtime="20230131 08:01:50.170"/>
</kw>
<msg timestamp="20230131 08:01:50.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:43.188" endtime="20230131 08:01:50.171"/>
</kw>
<msg timestamp="20230131 08:01:50.172" level="INFO">${result} = {
  "metadata": {},
  "name": "39460-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230131 08:01:43.188" endtime="20230131 08:01:50.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:01:50.172" endtime="20230131 08:01:50.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:50.186" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/39460-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:01:56.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:01:56.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:01:50.183" endtime="20230131 08:01:56.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:01:56.951" level="INFO"/>
<status status="PASS" starttime="20230131 08:01:56.950" endtime="20230131 08:01:56.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:01:56.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:01:56.952" endtime="20230131 08:01:56.952"/>
</kw>
<status status="PASS" starttime="20230131 08:01:50.182" endtime="20230131 08:01:56.953"/>
</kw>
<msg timestamp="20230131 08:01:56.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:50.174" endtime="20230131 08:01:56.954"/>
</kw>
<status status="PASS" starttime="20230131 08:01:50.173" endtime="20230131 08:01:56.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:01:56.961" level="INFO">Running command 'ozone sh volume info o3://om:9862/39460-with-host | jq -r '. | select(.name=="39460-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:03.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:03.734" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:01:56.957" endtime="20230131 08:02:03.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:03.739" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230131 08:02:03.735" endtime="20230131 08:02:03.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:03.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:03.739" endtime="20230131 08:02:03.740"/>
</kw>
<status status="PASS" starttime="20230131 08:01:56.956" endtime="20230131 08:02:03.740"/>
</kw>
<msg timestamp="20230131 08:02:03.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:01:56.955" endtime="20230131 08:02:03.741"/>
</kw>
<msg timestamp="20230131 08:02:03.742" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:01:56.954" endtime="20230131 08:02:03.742"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:03.742" endtime="20230131 08:02:03.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:03.748" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39460-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:09.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:09.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:02:03.745" endtime="20230131 08:02:09.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:09.778" level="INFO"/>
<status status="PASS" starttime="20230131 08:02:09.777" endtime="20230131 08:02:09.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:09.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:09.778" endtime="20230131 08:02:09.780"/>
</kw>
<status status="PASS" starttime="20230131 08:02:03.744" endtime="20230131 08:02:09.780"/>
</kw>
<msg timestamp="20230131 08:02:09.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:03.744" endtime="20230131 08:02:09.781"/>
</kw>
<msg timestamp="20230131 08:02:09.781" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 08:02:03.743" endtime="20230131 08:02:09.781"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230131 08:02:09.782" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230131 08:02:09.782" endtime="20230131 08:02:09.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:09.788" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:16.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:16.323" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230131 08:02:09.784" endtime="20230131 08:02:16.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:16.348" level="INFO">DISK</msg>
<status status="PASS" starttime="20230131 08:02:16.339" endtime="20230131 08:02:16.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:16.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:16.348" endtime="20230131 08:02:16.349"/>
</kw>
<status status="PASS" starttime="20230131 08:02:09.784" endtime="20230131 08:02:16.349"/>
</kw>
<msg timestamp="20230131 08:02:16.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:09.783" endtime="20230131 08:02:16.350"/>
</kw>
<msg timestamp="20230131 08:02:16.351" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230131 08:02:09.782" endtime="20230131 08:02:16.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:16.351" endtime="20230131 08:02:16.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:16.364" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:23.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:23.346" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:02:16.356" endtime="20230131 08:02:23.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:23.349" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230131 08:02:23.347" endtime="20230131 08:02:23.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:23.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:23.349" endtime="20230131 08:02:23.350"/>
</kw>
<status status="PASS" starttime="20230131 08:02:16.354" endtime="20230131 08:02:23.350"/>
</kw>
<msg timestamp="20230131 08:02:23.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:16.354" endtime="20230131 08:02:23.351"/>
</kw>
<msg timestamp="20230131 08:02:23.351" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:02:16.352" endtime="20230131 08:02:23.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:23.352" endtime="20230131 08:02:23.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:23.359" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:30.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:30.257" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230131 08:02:23.354" endtime="20230131 08:02:30.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:30.259" level="INFO">100</msg>
<status status="PASS" starttime="20230131 08:02:30.258" endtime="20230131 08:02:30.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:30.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:30.259" endtime="20230131 08:02:30.261"/>
</kw>
<status status="PASS" starttime="20230131 08:02:23.354" endtime="20230131 08:02:30.261"/>
</kw>
<msg timestamp="20230131 08:02:30.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:23.353" endtime="20230131 08:02:30.262"/>
</kw>
<msg timestamp="20230131 08:02:30.262" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230131 08:02:23.352" endtime="20230131 08:02:30.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:30.262" endtime="20230131 08:02:30.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:30.268" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/39460-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:36.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:36.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:02:30.265" endtime="20230131 08:02:36.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:36.257" level="INFO"/>
<status status="PASS" starttime="20230131 08:02:36.256" endtime="20230131 08:02:36.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:36.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:36.258" endtime="20230131 08:02:36.259"/>
</kw>
<status status="PASS" starttime="20230131 08:02:30.264" endtime="20230131 08:02:36.259"/>
</kw>
<msg timestamp="20230131 08:02:36.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:30.264" endtime="20230131 08:02:36.260"/>
</kw>
<status status="PASS" starttime="20230131 08:02:30.263" endtime="20230131 08:02:36.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:36.265" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:43.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:43.086" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230131 08:02:36.263" endtime="20230131 08:02:43.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:43.087" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230131 08:02:43.087" endtime="20230131 08:02:43.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:43.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:43.088" endtime="20230131 08:02:43.088"/>
</kw>
<status status="PASS" starttime="20230131 08:02:36.262" endtime="20230131 08:02:43.089"/>
</kw>
<msg timestamp="20230131 08:02:43.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:36.261" endtime="20230131 08:02:43.090"/>
</kw>
<msg timestamp="20230131 08:02:43.090" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230131 08:02:36.260" endtime="20230131 08:02:43.090"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:43.090" endtime="20230131 08:02:43.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:43.096" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:49.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:49.842" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230131 08:02:43.093" endtime="20230131 08:02:49.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:49.844" level="INFO">1000</msg>
<status status="PASS" starttime="20230131 08:02:49.843" endtime="20230131 08:02:49.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:49.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:49.844" endtime="20230131 08:02:49.845"/>
</kw>
<status status="PASS" starttime="20230131 08:02:43.092" endtime="20230131 08:02:49.846"/>
</kw>
<msg timestamp="20230131 08:02:49.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:43.092" endtime="20230131 08:02:49.847"/>
</kw>
<msg timestamp="20230131 08:02:49.847" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230131 08:02:43.091" endtime="20230131 08:02:49.847"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:49.847" endtime="20230131 08:02:49.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:49.856" level="INFO">Running command 'ozone sh bucket list o3://om:9862/39460-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:02:56.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:02:56.207" level="INFO">${output} = 39460-with-host</msg>
<status status="PASS" starttime="20230131 08:02:49.851" endtime="20230131 08:02:56.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:02:56.209" level="INFO">39460-with-host</msg>
<status status="PASS" starttime="20230131 08:02:56.208" endtime="20230131 08:02:56.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:02:56.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:02:56.209" endtime="20230131 08:02:56.210"/>
</kw>
<status status="PASS" starttime="20230131 08:02:49.850" endtime="20230131 08:02:56.210"/>
</kw>
<msg timestamp="20230131 08:02:56.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:49.849" endtime="20230131 08:02:56.211"/>
</kw>
<msg timestamp="20230131 08:02:56.211" level="INFO">${result} = 39460-with-host</msg>
<status status="PASS" starttime="20230131 08:02:49.848" endtime="20230131 08:02:56.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:02:56.212" endtime="20230131 08:02:56.212"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:02:56.223" level="INFO">Running command 'ozone sh key put o3://om:9862/39460-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:06.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:06.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:02:56.220" endtime="20230131 08:03:06.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:06.178" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:06.178" endtime="20230131 08:03:06.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:06.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:06.179" endtime="20230131 08:03:06.179"/>
</kw>
<status status="PASS" starttime="20230131 08:02:56.219" endtime="20230131 08:03:06.180"/>
</kw>
<msg timestamp="20230131 08:03:06.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:02:56.218" endtime="20230131 08:03:06.180"/>
</kw>
<status status="PASS" starttime="20230131 08:02:56.216" endtime="20230131 08:03:06.181"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:06.186" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:06.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:06.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:06.182" endtime="20230131 08:03:06.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:06.191" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:06.191" endtime="20230131 08:03:06.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:06.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:06.192" endtime="20230131 08:03:06.192"/>
</kw>
<status status="PASS" starttime="20230131 08:03:06.182" endtime="20230131 08:03:06.193"/>
</kw>
<msg timestamp="20230131 08:03:06.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:06.181" endtime="20230131 08:03:06.194"/>
</kw>
<status status="PASS" starttime="20230131 08:03:06.181" endtime="20230131 08:03:06.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:06.201" level="INFO">Running command 'ozone sh key get o3://om:9862/39460-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:15.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:15.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:06.196" endtime="20230131 08:03:15.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:15.300" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:15.299" endtime="20230131 08:03:15.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:15.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:15.300" endtime="20230131 08:03:15.301"/>
</kw>
<status status="PASS" starttime="20230131 08:03:06.195" endtime="20230131 08:03:15.302"/>
</kw>
<msg timestamp="20230131 08:03:15.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:06.195" endtime="20230131 08:03:15.303"/>
</kw>
<status status="PASS" starttime="20230131 08:03:06.194" endtime="20230131 08:03:15.303"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:15.308" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:15.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:15.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:15.305" endtime="20230131 08:03:15.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:15.315" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:15.314" endtime="20230131 08:03:15.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:15.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:15.315" endtime="20230131 08:03:15.316"/>
</kw>
<status status="PASS" starttime="20230131 08:03:15.304" endtime="20230131 08:03:15.316"/>
</kw>
<msg timestamp="20230131 08:03:15.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:15.304" endtime="20230131 08:03:15.317"/>
</kw>
<status status="PASS" starttime="20230131 08:03:15.303" endtime="20230131 08:03:15.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:15.323" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/39460-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:25.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:25.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:15.320" endtime="20230131 08:03:25.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:25.677" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:25.676" endtime="20230131 08:03:25.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:25.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:25.677" endtime="20230131 08:03:25.678"/>
</kw>
<status status="PASS" starttime="20230131 08:03:15.319" endtime="20230131 08:03:25.679"/>
</kw>
<msg timestamp="20230131 08:03:25.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:15.319" endtime="20230131 08:03:25.680"/>
</kw>
<status status="PASS" starttime="20230131 08:03:15.318" endtime="20230131 08:03:25.680"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:25.685" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:25.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:25.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:25.682" endtime="20230131 08:03:25.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:25.692" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:25.691" endtime="20230131 08:03:25.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:25.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:25.692" endtime="20230131 08:03:25.694"/>
</kw>
<status status="PASS" starttime="20230131 08:03:25.681" endtime="20230131 08:03:25.694"/>
</kw>
<msg timestamp="20230131 08:03:25.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:25.681" endtime="20230131 08:03:25.695"/>
</kw>
<status status="PASS" starttime="20230131 08:03:25.680" endtime="20230131 08:03:25.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:25.702" level="INFO">Running command 'ozone sh key get o3://om:9862/39460-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:35.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:35.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:25.698" endtime="20230131 08:03:35.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:35.062" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:35.061" endtime="20230131 08:03:35.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:35.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:35.062" endtime="20230131 08:03:35.063"/>
</kw>
<status status="PASS" starttime="20230131 08:03:25.697" endtime="20230131 08:03:35.064"/>
</kw>
<msg timestamp="20230131 08:03:35.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:25.697" endtime="20230131 08:03:35.065"/>
</kw>
<status status="PASS" starttime="20230131 08:03:25.696" endtime="20230131 08:03:35.066"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:35.071" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:35.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:35.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:35.068" endtime="20230131 08:03:35.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:35.081" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:35.080" endtime="20230131 08:03:35.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:35.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:35.082" endtime="20230131 08:03:35.083"/>
</kw>
<status status="PASS" starttime="20230131 08:03:35.067" endtime="20230131 08:03:35.083"/>
</kw>
<msg timestamp="20230131 08:03:35.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:35.067" endtime="20230131 08:03:35.084"/>
</kw>
<status status="PASS" starttime="20230131 08:03:35.066" endtime="20230131 08:03:35.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:35.090" level="INFO">Running command 'ozone sh key info o3://om:9862/39460-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:41.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:41.707" level="INFO">${output} = {
  "volumeName": "39460-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:03:21.345Z",
  "modificationTime": "2023-01-31T08:03:24.906Z",...</msg>
<status status="PASS" starttime="20230131 08:03:35.087" endtime="20230131 08:03:41.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:41.709" level="INFO">{
  "volumeName": "39460-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:03:21.345Z",
  "modificationTime": "2023-01-31T08:03:24.906Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230131 08:03:41.708" endtime="20230131 08:03:41.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:41.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:41.709" endtime="20230131 08:03:41.710"/>
</kw>
<status status="PASS" starttime="20230131 08:03:35.086" endtime="20230131 08:03:41.710"/>
</kw>
<msg timestamp="20230131 08:03:41.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:35.086" endtime="20230131 08:03:41.711"/>
</kw>
<msg timestamp="20230131 08:03:41.711" level="INFO">${result} = {
  "volumeName": "39460-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:03:21.345Z",
  "modificationTime": "2023-01-31T08:03:24.906Z",...</msg>
<status status="PASS" starttime="20230131 08:03:35.084" endtime="20230131 08:03:41.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:03:41.712" endtime="20230131 08:03:41.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:41.718" level="INFO">Running command 'ozone sh key delete o3://om:9862/39460-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:47.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:47.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:41.714" endtime="20230131 08:03:47.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:47.637" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:47.636" endtime="20230131 08:03:47.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:47.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:47.637" endtime="20230131 08:03:47.638"/>
</kw>
<status status="PASS" starttime="20230131 08:03:41.714" endtime="20230131 08:03:47.638"/>
</kw>
<msg timestamp="20230131 08:03:47.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:41.713" endtime="20230131 08:03:47.639"/>
</kw>
<status status="PASS" starttime="20230131 08:03:41.713" endtime="20230131 08:03:47.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:47.644" level="INFO">Running command 'ozone sh key cp o3://om:9862/39460-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:57.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:57.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:47.641" endtime="20230131 08:03:57.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:57.956" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:57.954" endtime="20230131 08:03:57.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:57.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:57.956" endtime="20230131 08:03:57.958"/>
</kw>
<status status="PASS" starttime="20230131 08:03:47.641" endtime="20230131 08:03:57.958"/>
</kw>
<msg timestamp="20230131 08:03:57.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:47.640" endtime="20230131 08:03:57.959"/>
</kw>
<status status="PASS" starttime="20230131 08:03:47.640" endtime="20230131 08:03:57.960"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:57.966" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:03:57.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:03:57.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:57.962" endtime="20230131 08:03:57.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:03:57.971" level="INFO"/>
<status status="PASS" starttime="20230131 08:03:57.970" endtime="20230131 08:03:57.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:03:57.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:03:57.972" endtime="20230131 08:03:57.972"/>
</kw>
<status status="PASS" starttime="20230131 08:03:57.961" endtime="20230131 08:03:57.973"/>
</kw>
<msg timestamp="20230131 08:03:57.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:57.961" endtime="20230131 08:03:57.973"/>
</kw>
<status status="PASS" starttime="20230131 08:03:57.960" endtime="20230131 08:03:57.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:03:57.979" level="INFO">Running command 'ozone sh key get o3://om:9862/39460-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:07.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:07.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:03:57.976" endtime="20230131 08:04:07.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:07.434" level="INFO"/>
<status status="PASS" starttime="20230131 08:04:07.433" endtime="20230131 08:04:07.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:07.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:07.435" endtime="20230131 08:04:07.436"/>
</kw>
<status status="PASS" starttime="20230131 08:03:57.975" endtime="20230131 08:04:07.436"/>
</kw>
<msg timestamp="20230131 08:04:07.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:03:57.975" endtime="20230131 08:04:07.437"/>
</kw>
<status status="PASS" starttime="20230131 08:03:57.974" endtime="20230131 08:04:07.438"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:07.444" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:07.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:07.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:04:07.441" endtime="20230131 08:04:07.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:07.453" level="INFO"/>
<status status="PASS" starttime="20230131 08:04:07.451" endtime="20230131 08:04:07.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:07.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:07.454" endtime="20230131 08:04:07.455"/>
</kw>
<status status="PASS" starttime="20230131 08:04:07.439" endtime="20230131 08:04:07.455"/>
</kw>
<msg timestamp="20230131 08:04:07.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:07.439" endtime="20230131 08:04:07.457"/>
</kw>
<status status="PASS" starttime="20230131 08:04:07.438" endtime="20230131 08:04:07.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:07.462" level="INFO">Running command 'ozone sh key delete o3://om:9862/39460-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:13.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:13.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:04:07.460" endtime="20230131 08:04:13.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:13.513" level="INFO"/>
<status status="PASS" starttime="20230131 08:04:13.512" endtime="20230131 08:04:13.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:13.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:13.514" endtime="20230131 08:04:13.515"/>
</kw>
<status status="PASS" starttime="20230131 08:04:07.459" endtime="20230131 08:04:13.515"/>
</kw>
<msg timestamp="20230131 08:04:13.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:07.458" endtime="20230131 08:04:13.516"/>
</kw>
<status status="PASS" starttime="20230131 08:04:07.457" endtime="20230131 08:04:13.517"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:13.521" level="INFO">Running command 'ozone sh key get o3://om:9862/39460-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:19.894" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:04:19.894" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 08:04:13.518" endtime="20230131 08:04:19.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:19.896" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 08:04:19.895" endtime="20230131 08:04:19.896"/>
</kw>
<msg timestamp="20230131 08:04:19.896" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 08:04:13.517" endtime="20230131 08:04:19.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:04:19.897" endtime="20230131 08:04:19.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:19.905" level="INFO">Running command 'ozone sh key get --force o3://om:9862/39460-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:29.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:29.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:04:19.902" endtime="20230131 08:04:29.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:29.230" level="INFO"/>
<status status="PASS" starttime="20230131 08:04:29.229" endtime="20230131 08:04:29.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:29.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:29.231" endtime="20230131 08:04:29.232"/>
</kw>
<status status="PASS" starttime="20230131 08:04:19.901" endtime="20230131 08:04:29.232"/>
</kw>
<msg timestamp="20230131 08:04:29.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:19.900" endtime="20230131 08:04:29.233"/>
</kw>
<msg timestamp="20230131 08:04:29.234" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 08:04:19.899" endtime="20230131 08:04:29.234"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:04:29.234" endtime="20230131 08:04:29.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:29.242" level="INFO">Running command 'ozone sh key info o3://om:9862/39460-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:36.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:36.540" level="INFO">${output} = {
  "volumeName": "39460-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:03:02.404Z",
  "modificationTime": "2023-01-31T08:03:05.728Z",
  "re...</msg>
<status status="PASS" starttime="20230131 08:04:29.239" endtime="20230131 08:04:36.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:36.543" level="INFO">{
  "volumeName": "39460-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:03:02.404Z",
  "modificationTime": "2023-01-31T08:03:05.728Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230131 08:04:36.541" endtime="20230131 08:04:36.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:36.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:36.543" endtime="20230131 08:04:36.544"/>
</kw>
<status status="PASS" starttime="20230131 08:04:29.237" endtime="20230131 08:04:36.544"/>
</kw>
<msg timestamp="20230131 08:04:36.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:29.237" endtime="20230131 08:04:36.546"/>
</kw>
<msg timestamp="20230131 08:04:36.546" level="INFO">${result} = {
  "volumeName": "39460-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:03:02.404Z",
  "modificationTime": "2023-01-31T08:03:05.728Z",
  "re...</msg>
<status status="PASS" starttime="20230131 08:04:29.235" endtime="20230131 08:04:36.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:04:36.547" endtime="20230131 08:04:36.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:36.553" level="INFO">Running command 'ozone sh key list o3://om:9862/39460-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:43.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:43.985" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230131 08:04:36.550" endtime="20230131 08:04:43.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:43.987" level="INFO">key1</msg>
<status status="PASS" starttime="20230131 08:04:43.986" endtime="20230131 08:04:43.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:43.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:43.987" endtime="20230131 08:04:43.988"/>
</kw>
<status status="PASS" starttime="20230131 08:04:36.549" endtime="20230131 08:04:43.989"/>
</kw>
<msg timestamp="20230131 08:04:43.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:36.549" endtime="20230131 08:04:43.990"/>
</kw>
<msg timestamp="20230131 08:04:43.991" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230131 08:04:36.547" endtime="20230131 08:04:43.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:04:43.991" endtime="20230131 08:04:43.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:43.998" level="INFO">Running command 'ozone sh key rename o3://om:9862/39460-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:50.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:50.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:04:43.995" endtime="20230131 08:04:50.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:50.201" level="INFO"/>
<status status="PASS" starttime="20230131 08:04:50.199" endtime="20230131 08:04:50.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:50.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:50.201" endtime="20230131 08:04:50.202"/>
</kw>
<status status="PASS" starttime="20230131 08:04:43.994" endtime="20230131 08:04:50.203"/>
</kw>
<msg timestamp="20230131 08:04:50.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:43.993" endtime="20230131 08:04:50.204"/>
</kw>
<status status="PASS" starttime="20230131 08:04:43.992" endtime="20230131 08:04:50.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:50.213" level="INFO">Running command 'ozone sh key list o3://om:9862/39460-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:04:56.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:04:56.970" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230131 08:04:50.208" endtime="20230131 08:04:56.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:04:56.973" level="INFO">key2</msg>
<status status="PASS" starttime="20230131 08:04:56.971" endtime="20230131 08:04:56.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:04:56.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:04:56.973" endtime="20230131 08:04:56.974"/>
</kw>
<status status="PASS" starttime="20230131 08:04:50.207" endtime="20230131 08:04:56.975"/>
</kw>
<msg timestamp="20230131 08:04:56.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:50.207" endtime="20230131 08:04:56.976"/>
</kw>
<msg timestamp="20230131 08:04:56.976" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230131 08:04:50.205" endtime="20230131 08:04:56.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:04:56.977" endtime="20230131 08:04:56.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:04:56.984" level="INFO">Running command 'ozone sh key delete o3://om:9862/39460-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:03.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:03.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:04:56.981" endtime="20230131 08:05:03.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:03.605" level="INFO"/>
<status status="PASS" starttime="20230131 08:05:03.604" endtime="20230131 08:05:03.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:03.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:03.606" endtime="20230131 08:05:03.607"/>
</kw>
<status status="PASS" starttime="20230131 08:04:56.980" endtime="20230131 08:05:03.607"/>
</kw>
<msg timestamp="20230131 08:05:03.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:04:56.979" endtime="20230131 08:05:03.608"/>
</kw>
<status status="PASS" starttime="20230131 08:04:56.978" endtime="20230131 08:05:03.609"/>
</kw>
<status status="PASS" starttime="20230131 08:02:56.213" endtime="20230131 08:05:03.610"/>
</kw>
<status status="PASS" starttime="20230131 08:02:56.212" endtime="20230131 08:05:03.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:03.621" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/39460-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:10.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:10.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:05:03.613" endtime="20230131 08:05:10.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:10.191" level="INFO"/>
<status status="PASS" starttime="20230131 08:05:10.190" endtime="20230131 08:05:10.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:10.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:10.191" endtime="20230131 08:05:10.192"/>
</kw>
<status status="PASS" starttime="20230131 08:05:03.612" endtime="20230131 08:05:10.192"/>
</kw>
<msg timestamp="20230131 08:05:10.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:03.612" endtime="20230131 08:05:10.193"/>
</kw>
<status status="PASS" starttime="20230131 08:05:03.610" endtime="20230131 08:05:10.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:10.200" level="INFO">Running command 'ozone sh volume info o3://om:9862/39460-with-host | jq -r '. | select(.name=="39460-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:16.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:16.870" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:05:10.197" endtime="20230131 08:05:16.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:16.872" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:05:16.871" endtime="20230131 08:05:16.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:16.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:16.873" endtime="20230131 08:05:16.873"/>
</kw>
<status status="PASS" starttime="20230131 08:05:10.196" endtime="20230131 08:05:16.874"/>
</kw>
<msg timestamp="20230131 08:05:16.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:10.195" endtime="20230131 08:05:16.874"/>
</kw>
<msg timestamp="20230131 08:05:16.875" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:05:10.194" endtime="20230131 08:05:16.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:05:16.875" endtime="20230131 08:05:16.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:16.882" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/39460-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:22.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:22.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:05:16.878" endtime="20230131 08:05:22.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:22.786" level="INFO"/>
<status status="PASS" starttime="20230131 08:05:22.784" endtime="20230131 08:05:22.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:22.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:22.786" endtime="20230131 08:05:22.787"/>
</kw>
<status status="PASS" starttime="20230131 08:05:16.877" endtime="20230131 08:05:22.787"/>
</kw>
<msg timestamp="20230131 08:05:22.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:16.877" endtime="20230131 08:05:22.788"/>
</kw>
<status status="PASS" starttime="20230131 08:05:16.876" endtime="20230131 08:05:22.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:22.794" level="INFO">Running command 'ozone sh volume info o3://om:9862/39460-with-host | jq -r '. | select(.name=="39460-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:29.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:29.069" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:05:22.791" endtime="20230131 08:05:29.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:29.071" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:05:29.070" endtime="20230131 08:05:29.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:29.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:29.071" endtime="20230131 08:05:29.072"/>
</kw>
<status status="PASS" starttime="20230131 08:05:22.790" endtime="20230131 08:05:29.078"/>
</kw>
<msg timestamp="20230131 08:05:29.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:22.789" endtime="20230131 08:05:29.079"/>
</kw>
<msg timestamp="20230131 08:05:29.081" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:05:22.788" endtime="20230131 08:05:29.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:05:29.081" endtime="20230131 08:05:29.082"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:29.105" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/39460-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:35.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:35.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:05:29.084" endtime="20230131 08:05:35.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:35.328" level="INFO"/>
<status status="PASS" starttime="20230131 08:05:35.326" endtime="20230131 08:05:35.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:35.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:35.328" endtime="20230131 08:05:35.329"/>
</kw>
<status status="PASS" starttime="20230131 08:05:29.084" endtime="20230131 08:05:35.329"/>
</kw>
<msg timestamp="20230131 08:05:35.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:29.083" endtime="20230131 08:05:35.330"/>
</kw>
<status status="PASS" starttime="20230131 08:05:29.082" endtime="20230131 08:05:35.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:35.336" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:41.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:41.792" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:05:35.333" endtime="20230131 08:05:41.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:41.795" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:05:41.793" endtime="20230131 08:05:41.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:41.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:41.796" endtime="20230131 08:05:41.797"/>
</kw>
<status status="PASS" starttime="20230131 08:05:35.332" endtime="20230131 08:05:41.797"/>
</kw>
<msg timestamp="20230131 08:05:41.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:35.332" endtime="20230131 08:05:41.798"/>
</kw>
<msg timestamp="20230131 08:05:41.798" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:05:35.331" endtime="20230131 08:05:41.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:05:41.798" endtime="20230131 08:05:41.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:41.807" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/39460-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:48.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:48.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:05:41.802" endtime="20230131 08:05:48.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:48.064" level="INFO"/>
<status status="PASS" starttime="20230131 08:05:48.063" endtime="20230131 08:05:48.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:48.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:48.064" endtime="20230131 08:05:48.065"/>
</kw>
<status status="PASS" starttime="20230131 08:05:41.802" endtime="20230131 08:05:48.065"/>
</kw>
<msg timestamp="20230131 08:05:48.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:41.801" endtime="20230131 08:05:48.066"/>
</kw>
<status status="PASS" starttime="20230131 08:05:41.799" endtime="20230131 08:05:48.066"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:48.072" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39460-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:05:55.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:05:55.043" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:05:48.069" endtime="20230131 08:05:55.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:05:55.045" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:05:55.044" endtime="20230131 08:05:55.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:05:55.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:05:55.045" endtime="20230131 08:05:55.046"/>
</kw>
<status status="PASS" starttime="20230131 08:05:48.068" endtime="20230131 08:05:55.047"/>
</kw>
<msg timestamp="20230131 08:05:55.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:48.068" endtime="20230131 08:05:55.048"/>
</kw>
<msg timestamp="20230131 08:05:55.048" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:05:48.066" endtime="20230131 08:05:55.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:05:55.048" endtime="20230131 08:05:55.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:05:55.054" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/39460-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:00.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:00.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:05:55.051" endtime="20230131 08:06:00.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:00.990" level="INFO"/>
<status status="PASS" starttime="20230131 08:06:00.989" endtime="20230131 08:06:00.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:00.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:00.991" endtime="20230131 08:06:00.991"/>
</kw>
<status status="PASS" starttime="20230131 08:05:55.050" endtime="20230131 08:06:00.992"/>
</kw>
<msg timestamp="20230131 08:06:00.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:05:55.050" endtime="20230131 08:06:00.992"/>
</kw>
<status status="PASS" starttime="20230131 08:05:55.049" endtime="20230131 08:06:00.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:00.998" level="INFO">Running command 'ozone sh volume delete o3://om:9862/39460-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:07.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:07.029" level="INFO">${output} = Volume 39460-with-host is deleted</msg>
<status status="PASS" starttime="20230131 08:06:00.995" endtime="20230131 08:06:07.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:07.030" level="INFO">Volume 39460-with-host is deleted</msg>
<status status="PASS" starttime="20230131 08:06:07.029" endtime="20230131 08:06:07.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:07.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:07.031" endtime="20230131 08:06:07.031"/>
</kw>
<status status="PASS" starttime="20230131 08:06:00.994" endtime="20230131 08:06:07.032"/>
</kw>
<msg timestamp="20230131 08:06:07.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:06:00.994" endtime="20230131 08:06:07.032"/>
</kw>
<status status="PASS" starttime="20230131 08:06:00.993" endtime="20230131 08:06:07.033"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:07.039" level="INFO">Running command 'ozone sh volume create o3://om:9862/39460-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:13.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:13.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:06:07.035" endtime="20230131 08:06:13.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:13.012" level="INFO"/>
<status status="PASS" starttime="20230131 08:06:13.010" endtime="20230131 08:06:13.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:13.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:13.012" endtime="20230131 08:06:13.013"/>
</kw>
<status status="PASS" starttime="20230131 08:06:07.034" endtime="20230131 08:06:13.013"/>
</kw>
<msg timestamp="20230131 08:06:13.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:06:07.034" endtime="20230131 08:06:13.014"/>
</kw>
<status status="PASS" starttime="20230131 08:06:07.033" endtime="20230131 08:06:13.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:13.021" level="INFO">Running command 'ozone sh volume info o3://om:9862/39460-with-host | jq -r '. | select(.name=="39460-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:19.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:19.813" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:06:13.018" endtime="20230131 08:06:19.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:19.814" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:06:19.814" endtime="20230131 08:06:19.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:19.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:19.815" endtime="20230131 08:06:19.816"/>
</kw>
<status status="PASS" starttime="20230131 08:06:13.017" endtime="20230131 08:06:19.816"/>
</kw>
<msg timestamp="20230131 08:06:19.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:06:13.016" endtime="20230131 08:06:19.817"/>
</kw>
<msg timestamp="20230131 08:06:19.817" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:06:13.015" endtime="20230131 08:06:19.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:06:19.818" endtime="20230131 08:06:19.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:19.824" level="INFO">Running command 'ozone sh volume info o3://om:9862/39460-with-host | jq -r '. | select(.name=="39460-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:22.478" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230131 08:06:19.821" endtime="20230131 08:06:22.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230131 08:06:22.479" endtime="20230131 08:06:22.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230131 08:06:22.480" endtime="20230131 08:06:22.480"/>
</kw>
<status status="FAIL" starttime="20230131 08:06:19.820" endtime="20230131 08:06:22.480"/>
</kw>
<msg timestamp="20230131 08:06:22.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230131 08:06:19.820" endtime="20230131 08:06:22.481"/>
</kw>
<status status="FAIL" starttime="20230131 08:06:19.818" endtime="20230131 08:06:22.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:06:22.482" endtime="20230131 08:06:22.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230131 08:06:22.483" endtime="20230131 08:06:22.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20230131 08:06:22.483" endtime="20230131 08:06:22.483"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:06:22.483" endtime="20230131 08:06:22.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230131 08:06:22.484" endtime="20230131 08:06:22.484"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:06:22.484" endtime="20230131 08:06:22.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230131 08:06:22.484" endtime="20230131 08:06:22.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20230131 08:06:22.484" endtime="20230131 08:06:22.484"/>
</kw>
<status status="FAIL" starttime="20230131 08:01:22.710" endtime="20230131 08:06:22.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230131 08:01:22.477" endtime="20230131 08:06:22.486">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:22.511" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:22.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:22.526" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:06:22.500" endtime="20230131 08:06:22.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:22.528" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:06:22.527" endtime="20230131 08:06:22.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:22.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:22.528" endtime="20230131 08:06:22.533"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.498" endtime="20230131 08:06:22.533"/>
</kw>
<msg timestamp="20230131 08:06:22.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:06:22.496" endtime="20230131 08:06:22.542"/>
</kw>
<msg timestamp="20230131 08:06:22.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:06:22.496" endtime="20230131 08:06:22.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:06:22.549" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:06:22.547" endtime="20230131 08:06:22.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:22.575" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:22.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:22.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:06:22.556" endtime="20230131 08:06:22.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:22.667" level="INFO"/>
<status status="PASS" starttime="20230131 08:06:22.666" endtime="20230131 08:06:22.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:22.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:22.668" endtime="20230131 08:06:22.669"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.554" endtime="20230131 08:06:22.669"/>
</kw>
<msg timestamp="20230131 08:06:22.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:06:22.553" endtime="20230131 08:06:22.672"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.551" endtime="20230131 08:06:22.672"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.550" endtime="20230131 08:06:22.672"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.494" endtime="20230131 08:06:22.673"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.492" endtime="20230131 08:06:22.673"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:22.691" level="INFO">Running command 'ozone sh volume create o3://om:9862/39460-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:32.565" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:06:32.565" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230131 08:06:22.679" endtime="20230131 08:06:32.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:32.567" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230131 08:06:32.566" endtime="20230131 08:06:32.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:32.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:32.567" endtime="20230131 08:06:32.568"/>
</kw>
<msg timestamp="20230131 08:06:32.569" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230131 08:06:22.677" endtime="20230131 08:06:32.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:06:32.569" endtime="20230131 08:06:32.569"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:32.574" level="INFO">Running command 'ozone sh volume create o3://om:9862/39460-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:38.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:38.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:06:32.571" endtime="20230131 08:06:38.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:38.414" level="INFO"/>
<status status="PASS" starttime="20230131 08:06:38.413" endtime="20230131 08:06:38.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:38.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:38.415" endtime="20230131 08:06:38.415"/>
</kw>
<status status="PASS" starttime="20230131 08:06:32.570" endtime="20230131 08:06:38.416"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:38.422" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39460-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:44.300" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:06:44.300" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230131 08:06:38.419" endtime="20230131 08:06:44.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:44.303" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230131 08:06:44.301" endtime="20230131 08:06:44.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:44.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:44.303" endtime="20230131 08:06:44.304"/>
</kw>
<msg timestamp="20230131 08:06:44.305" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230131 08:06:38.416" endtime="20230131 08:06:44.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:06:44.305" endtime="20230131 08:06:44.306"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:44.311" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39460-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:47.991" level="INFO">${rc} = 2</msg>
<msg timestamp="20230131 08:06:47.991" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230131 08:06:44.307" endtime="20230131 08:06:47.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:47.993" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230131 08:06:47.992" endtime="20230131 08:06:47.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:47.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:47.993" endtime="20230131 08:06:47.994"/>
</kw>
<msg timestamp="20230131 08:06:47.994" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230131 08:06:44.306" endtime="20230131 08:06:47.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:06:47.994" endtime="20230131 08:06:47.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:48.002" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39460-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:06:54.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:06:54.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:06:47.996" endtime="20230131 08:06:54.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:06:54.985" level="INFO"/>
<status status="PASS" starttime="20230131 08:06:54.984" endtime="20230131 08:06:54.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:06:54.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:06:54.985" endtime="20230131 08:06:54.986"/>
</kw>
<status status="PASS" starttime="20230131 08:06:47.995" endtime="20230131 08:06:54.987"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:06:54.994" level="INFO">Running command 'ozone sh key info o3://om:9862/39460-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:01.424" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:07:01.424" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230131 08:06:54.990" endtime="20230131 08:07:01.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:01.426" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230131 08:07:01.425" endtime="20230131 08:07:01.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:01.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:01.427" endtime="20230131 08:07:01.428"/>
</kw>
<msg timestamp="20230131 08:07:01.429" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230131 08:06:54.987" endtime="20230131 08:07:01.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:07:01.429" endtime="20230131 08:07:01.429"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:01.433" level="INFO">Running command 'ozone sh key put o3://om:9862/39460-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:05.137" level="INFO">${rc} = 2</msg>
<msg timestamp="20230131 08:07:05.137" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230131 08:07:01.430" endtime="20230131 08:07:05.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:05.139" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230131 08:07:05.138" endtime="20230131 08:07:05.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:05.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:05.139" endtime="20230131 08:07:05.141"/>
</kw>
<msg timestamp="20230131 08:07:05.141" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230131 08:07:01.430" endtime="20230131 08:07:05.142"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:05.146" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/39460-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:10.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:10.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:07:05.143" endtime="20230131 08:07:10.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:10.674" level="INFO"/>
<status status="PASS" starttime="20230131 08:07:10.673" endtime="20230131 08:07:10.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:10.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:10.674" endtime="20230131 08:07:10.675"/>
</kw>
<status status="PASS" starttime="20230131 08:07:05.142" endtime="20230131 08:07:10.676"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:10.680" level="INFO">Running command 'ozone sh volume delete o3://om:9862/39460-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:16.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:16.638" level="INFO">${output} = Volume 39460-with-errors is deleted</msg>
<status status="PASS" starttime="20230131 08:07:10.677" endtime="20230131 08:07:16.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:16.640" level="INFO">Volume 39460-with-errors is deleted</msg>
<status status="PASS" starttime="20230131 08:07:16.639" endtime="20230131 08:07:16.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:16.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:16.640" endtime="20230131 08:07:16.641"/>
</kw>
<status status="PASS" starttime="20230131 08:07:10.676" endtime="20230131 08:07:16.642"/>
</kw>
<status status="PASS" starttime="20230131 08:06:22.673" endtime="20230131 08:07:16.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 08:06:22.490" endtime="20230131 08:07:16.642"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:16.651" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:16.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:16.655" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:07:16.648" endtime="20230131 08:07:16.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:16.657" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:07:16.656" endtime="20230131 08:07:16.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:16.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:16.657" endtime="20230131 08:07:16.658"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.647" endtime="20230131 08:07:16.659"/>
</kw>
<msg timestamp="20230131 08:07:16.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:16.647" endtime="20230131 08:07:16.659"/>
</kw>
<msg timestamp="20230131 08:07:16.660" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:07:16.646" endtime="20230131 08:07:16.660"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:07:16.661" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:07:16.660" endtime="20230131 08:07:16.661"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:16.669" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:16.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:16.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:07:16.665" endtime="20230131 08:07:16.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:16.726" level="INFO"/>
<status status="PASS" starttime="20230131 08:07:16.723" endtime="20230131 08:07:16.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:16.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:16.727" endtime="20230131 08:07:16.727"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.664" endtime="20230131 08:07:16.728"/>
</kw>
<msg timestamp="20230131 08:07:16.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:16.664" endtime="20230131 08:07:16.729"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.662" endtime="20230131 08:07:16.729"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.661" endtime="20230131 08:07:16.730"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.645" endtime="20230131 08:07:16.730"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.645" endtime="20230131 08:07:16.730"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:16.739" level="INFO">Running command 'ozone sh volume create o3://om:9862/39460-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:23.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:23.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:07:16.735" endtime="20230131 08:07:23.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:23.186" level="INFO"/>
<status status="PASS" starttime="20230131 08:07:23.185" endtime="20230131 08:07:23.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:23.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:23.186" endtime="20230131 08:07:23.187"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.735" endtime="20230131 08:07:23.187"/>
</kw>
<msg timestamp="20230131 08:07:23.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:16.734" endtime="20230131 08:07:23.188"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.731" endtime="20230131 08:07:23.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:23.195" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39460-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:29.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:29.776" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:07:23.191" endtime="20230131 08:07:29.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:29.780" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:07:29.777" endtime="20230131 08:07:29.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:29.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:29.780" endtime="20230131 08:07:29.781"/>
</kw>
<status status="PASS" starttime="20230131 08:07:23.190" endtime="20230131 08:07:29.782"/>
</kw>
<msg timestamp="20230131 08:07:29.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:23.190" endtime="20230131 08:07:29.783"/>
</kw>
<msg timestamp="20230131 08:07:29.783" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:07:23.189" endtime="20230131 08:07:29.783"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:07:29.783" endtime="20230131 08:07:29.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:29.791" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/39460-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:35.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:35.737" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230131 08:07:29.787" endtime="20230131 08:07:35.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:35.738" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230131 08:07:35.737" endtime="20230131 08:07:35.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:35.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:35.739" endtime="20230131 08:07:35.740"/>
</kw>
<status status="PASS" starttime="20230131 08:07:29.786" endtime="20230131 08:07:35.740"/>
</kw>
<msg timestamp="20230131 08:07:35.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:29.786" endtime="20230131 08:07:35.741"/>
</kw>
<msg timestamp="20230131 08:07:35.741" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230131 08:07:29.785" endtime="20230131 08:07:35.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:35.749" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39460-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:42.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:42.372" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230131 08:07:35.746" endtime="20230131 08:07:42.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:42.373" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:07:42.372" endtime="20230131 08:07:42.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:42.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:42.374" endtime="20230131 08:07:42.375"/>
</kw>
<status status="PASS" starttime="20230131 08:07:35.745" endtime="20230131 08:07:42.375"/>
</kw>
<msg timestamp="20230131 08:07:42.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:35.745" endtime="20230131 08:07:42.376"/>
</kw>
<msg timestamp="20230131 08:07:42.377" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230131 08:07:35.742" endtime="20230131 08:07:42.377"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:07:42.377" endtime="20230131 08:07:42.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:42.384" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/39460-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:48.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:48.353" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:07:42.381" endtime="20230131 08:07:48.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:48.354" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:07:48.354" endtime="20230131 08:07:48.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:48.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:48.355" endtime="20230131 08:07:48.355"/>
</kw>
<status status="PASS" starttime="20230131 08:07:42.380" endtime="20230131 08:07:48.356"/>
</kw>
<msg timestamp="20230131 08:07:48.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:42.380" endtime="20230131 08:07:48.357"/>
</kw>
<msg timestamp="20230131 08:07:48.357" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:07:42.379" endtime="20230131 08:07:48.357"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:48.364" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39460-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:07:54.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:07:54.967" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230131 08:07:48.361" endtime="20230131 08:07:54.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:07:54.969" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:07:54.967" endtime="20230131 08:07:54.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:07:54.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:07:54.969" endtime="20230131 08:07:54.970"/>
</kw>
<status status="PASS" starttime="20230131 08:07:48.360" endtime="20230131 08:07:54.970"/>
</kw>
<msg timestamp="20230131 08:07:54.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:48.359" endtime="20230131 08:07:54.971"/>
</kw>
<msg timestamp="20230131 08:07:54.972" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230131 08:07:48.357" endtime="20230131 08:07:54.972"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:07:54.972" endtime="20230131 08:07:54.973"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:07:54.979" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/39460-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:01.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:01.062" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:07:54.975" endtime="20230131 08:08:01.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:01.064" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:08:01.062" endtime="20230131 08:08:01.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:01.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:01.064" endtime="20230131 08:08:01.065"/>
</kw>
<status status="PASS" starttime="20230131 08:07:54.975" endtime="20230131 08:08:01.066"/>
</kw>
<msg timestamp="20230131 08:08:01.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:07:54.974" endtime="20230131 08:08:01.067"/>
</kw>
<msg timestamp="20230131 08:08:01.067" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:07:54.974" endtime="20230131 08:08:01.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:01.073" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39460-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:07.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:07.594" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230131 08:08:01.070" endtime="20230131 08:08:07.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:07.597" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:08:07.595" endtime="20230131 08:08:07.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:07.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:07.597" endtime="20230131 08:08:07.598"/>
</kw>
<status status="PASS" starttime="20230131 08:08:01.069" endtime="20230131 08:08:07.599"/>
</kw>
<msg timestamp="20230131 08:08:07.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:01.068" endtime="20230131 08:08:07.599"/>
</kw>
<msg timestamp="20230131 08:08:07.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230131 08:08:01.068" endtime="20230131 08:08:07.600"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:07.600" endtime="20230131 08:08:07.601"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:07.601" endtime="20230131 08:08:07.603"/>
</kw>
<status status="PASS" starttime="20230131 08:07:16.730" endtime="20230131 08:08:07.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 08:07:16.643" endtime="20230131 08:08:07.603"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:07.615" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:07.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:07.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:08:07.612" endtime="20230131 08:08:07.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:07.623" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:08:07.621" endtime="20230131 08:08:07.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:07.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:07.623" endtime="20230131 08:08:07.624"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.611" endtime="20230131 08:08:07.624"/>
</kw>
<msg timestamp="20230131 08:08:07.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:07.611" endtime="20230131 08:08:07.625"/>
</kw>
<msg timestamp="20230131 08:08:07.626" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:08:07.611" endtime="20230131 08:08:07.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:08:07.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:08:07.626" endtime="20230131 08:08:07.627"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:07.634" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:07.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:07.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:08:07.630" endtime="20230131 08:08:07.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:07.690" level="INFO"/>
<status status="PASS" starttime="20230131 08:08:07.689" endtime="20230131 08:08:07.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:07.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:07.690" endtime="20230131 08:08:07.691"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.629" endtime="20230131 08:08:07.692"/>
</kw>
<msg timestamp="20230131 08:08:07.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:07.629" endtime="20230131 08:08:07.693"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.628" endtime="20230131 08:08:07.693"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.627" endtime="20230131 08:08:07.693"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.610" endtime="20230131 08:08:07.693"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.609" endtime="20230131 08:08:07.693"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:07.700" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39460-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:14.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:14.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:08:07.697" endtime="20230131 08:08:14.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:14.492" level="INFO"/>
<status status="PASS" starttime="20230131 08:08:14.491" endtime="20230131 08:08:14.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:14.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:14.492" endtime="20230131 08:08:14.493"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.696" endtime="20230131 08:08:14.493"/>
</kw>
<msg timestamp="20230131 08:08:14.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:07.695" endtime="20230131 08:08:14.494"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.694" endtime="20230131 08:08:14.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:14.501" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39460-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:20.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:20.948" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:08:14.497" endtime="20230131 08:08:20.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:20.950" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:08:20.949" endtime="20230131 08:08:20.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:20.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:20.950" endtime="20230131 08:08:20.951"/>
</kw>
<status status="PASS" starttime="20230131 08:08:14.497" endtime="20230131 08:08:20.951"/>
</kw>
<msg timestamp="20230131 08:08:20.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:14.496" endtime="20230131 08:08:20.952"/>
</kw>
<msg timestamp="20230131 08:08:20.953" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:08:14.495" endtime="20230131 08:08:20.953"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:20.953" endtime="20230131 08:08:20.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:20.961" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/39460-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:26.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:26.858" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230131 08:08:20.955" endtime="20230131 08:08:26.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:26.860" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230131 08:08:26.859" endtime="20230131 08:08:26.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:26.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:26.860" endtime="20230131 08:08:26.861"/>
</kw>
<status status="PASS" starttime="20230131 08:08:20.955" endtime="20230131 08:08:26.861"/>
</kw>
<msg timestamp="20230131 08:08:26.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:20.954" endtime="20230131 08:08:26.862"/>
</kw>
<msg timestamp="20230131 08:08:26.862" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230131 08:08:20.954" endtime="20230131 08:08:26.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:26.867" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39460-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:33.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:33.133" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:08:26.864" endtime="20230131 08:08:33.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:33.135" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:08:33.134" endtime="20230131 08:08:33.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:33.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:33.135" endtime="20230131 08:08:33.136"/>
</kw>
<status status="PASS" starttime="20230131 08:08:26.864" endtime="20230131 08:08:33.136"/>
</kw>
<msg timestamp="20230131 08:08:33.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:26.863" endtime="20230131 08:08:33.138"/>
</kw>
<msg timestamp="20230131 08:08:33.138" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:08:26.862" endtime="20230131 08:08:33.138"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:33.138" endtime="20230131 08:08:33.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:33.145" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/39460-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:39.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:39.392" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:08:33.142" endtime="20230131 08:08:39.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:39.395" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:08:39.393" endtime="20230131 08:08:39.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:39.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:39.395" endtime="20230131 08:08:39.396"/>
</kw>
<status status="PASS" starttime="20230131 08:08:33.141" endtime="20230131 08:08:39.396"/>
</kw>
<msg timestamp="20230131 08:08:39.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:33.141" endtime="20230131 08:08:39.397"/>
</kw>
<msg timestamp="20230131 08:08:39.397" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:08:33.140" endtime="20230131 08:08:39.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:39.403" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39460-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:45.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:45.882" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:08:39.400" endtime="20230131 08:08:45.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:45.884" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:08:45.883" endtime="20230131 08:08:45.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:45.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:45.885" endtime="20230131 08:08:45.886"/>
</kw>
<status status="PASS" starttime="20230131 08:08:39.399" endtime="20230131 08:08:45.886"/>
</kw>
<msg timestamp="20230131 08:08:45.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:39.398" endtime="20230131 08:08:45.887"/>
</kw>
<msg timestamp="20230131 08:08:45.887" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:08:39.398" endtime="20230131 08:08:45.887"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:45.887" endtime="20230131 08:08:45.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:45.894" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/39460-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:51.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:51.421" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:08:45.891" endtime="20230131 08:08:51.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:51.423" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:08:51.422" endtime="20230131 08:08:51.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:51.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:51.423" endtime="20230131 08:08:51.426"/>
</kw>
<status status="PASS" starttime="20230131 08:08:45.890" endtime="20230131 08:08:51.427"/>
</kw>
<msg timestamp="20230131 08:08:51.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:45.890" endtime="20230131 08:08:51.430"/>
</kw>
<msg timestamp="20230131 08:08:51.431" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:08:45.889" endtime="20230131 08:08:51.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:51.437" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39460-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:57.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:57.431" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230131 08:08:51.433" endtime="20230131 08:08:57.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:57.432" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:08:57.431" endtime="20230131 08:08:57.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:57.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:57.433" endtime="20230131 08:08:57.434"/>
</kw>
<status status="PASS" starttime="20230131 08:08:51.432" endtime="20230131 08:08:57.434"/>
</kw>
<msg timestamp="20230131 08:08:57.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:51.432" endtime="20230131 08:08:57.435"/>
</kw>
<msg timestamp="20230131 08:08:57.435" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230131 08:08:51.431" endtime="20230131 08:08:57.435"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:57.436" endtime="20230131 08:08:57.436"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:08:57.437" endtime="20230131 08:08:57.438"/>
</kw>
<status status="PASS" starttime="20230131 08:08:07.694" endtime="20230131 08:08:57.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 08:08:07.606" endtime="20230131 08:08:57.438"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:57.447" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:57.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:57.452" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:08:57.444" endtime="20230131 08:08:57.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:57.453" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:08:57.452" endtime="20230131 08:08:57.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:57.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:57.454" endtime="20230131 08:08:57.455"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.443" endtime="20230131 08:08:57.455"/>
</kw>
<msg timestamp="20230131 08:08:57.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:57.442" endtime="20230131 08:08:57.456"/>
</kw>
<msg timestamp="20230131 08:08:57.456" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:08:57.442" endtime="20230131 08:08:57.456"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:08:57.457" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:08:57.456" endtime="20230131 08:08:57.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:57.463" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:08:57.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:08:57.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:08:57.461" endtime="20230131 08:08:57.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:08:57.517" level="INFO"/>
<status status="PASS" starttime="20230131 08:08:57.516" endtime="20230131 08:08:57.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:08:57.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:08:57.517" endtime="20230131 08:08:57.518"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.460" endtime="20230131 08:08:57.518"/>
</kw>
<msg timestamp="20230131 08:08:57.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:57.459" endtime="20230131 08:08:57.520"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.458" endtime="20230131 08:08:57.520"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.457" endtime="20230131 08:08:57.520"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.441" endtime="20230131 08:08:57.520"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.441" endtime="20230131 08:08:57.521"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:08:57.530" level="INFO">Running command 'ozone sh key put o3://om:9862/39460-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:07.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:07.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:08:57.525" endtime="20230131 08:09:07.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:07.996" level="INFO"/>
<status status="PASS" starttime="20230131 08:09:07.995" endtime="20230131 08:09:07.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:07.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:07.996" endtime="20230131 08:09:07.997"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.523" endtime="20230131 08:09:07.997"/>
</kw>
<msg timestamp="20230131 08:09:07.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:08:57.523" endtime="20230131 08:09:07.998"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.522" endtime="20230131 08:09:07.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:08.006" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39460-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:14.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:14.537" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:09:08.002" endtime="20230131 08:09:14.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:14.539" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:09:14.537" endtime="20230131 08:09:14.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:14.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:14.539" endtime="20230131 08:09:14.540"/>
</kw>
<status status="PASS" starttime="20230131 08:09:08.001" endtime="20230131 08:09:14.540"/>
</kw>
<msg timestamp="20230131 08:09:14.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:08.000" endtime="20230131 08:09:14.541"/>
</kw>
<msg timestamp="20230131 08:09:14.542" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:09:07.999" endtime="20230131 08:09:14.542"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:09:14.542" endtime="20230131 08:09:14.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:14.548" level="INFO">Running command 'ozone sh key addacl o3://om:9862/39460-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:20.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:20.404" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 08:09:14.545" endtime="20230131 08:09:20.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:20.409" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 08:09:20.408" endtime="20230131 08:09:20.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:20.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:20.412" endtime="20230131 08:09:20.412"/>
</kw>
<status status="PASS" starttime="20230131 08:09:14.544" endtime="20230131 08:09:20.413"/>
</kw>
<msg timestamp="20230131 08:09:20.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:14.544" endtime="20230131 08:09:20.414"/>
</kw>
<msg timestamp="20230131 08:09:20.414" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230131 08:09:14.543" endtime="20230131 08:09:20.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:20.422" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39460-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:26.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:26.899" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:09:20.417" endtime="20230131 08:09:26.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:26.901" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:09:26.900" endtime="20230131 08:09:26.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:26.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:26.901" endtime="20230131 08:09:26.902"/>
</kw>
<status status="PASS" starttime="20230131 08:09:20.416" endtime="20230131 08:09:26.903"/>
</kw>
<msg timestamp="20230131 08:09:26.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:20.415" endtime="20230131 08:09:26.904"/>
</kw>
<msg timestamp="20230131 08:09:26.904" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:09:20.415" endtime="20230131 08:09:26.904"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:09:26.904" endtime="20230131 08:09:26.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:26.914" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/39460-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:33.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:33.206" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:09:26.908" endtime="20230131 08:09:33.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:33.208" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:09:33.207" endtime="20230131 08:09:33.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:33.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:33.209" endtime="20230131 08:09:33.212"/>
</kw>
<status status="PASS" starttime="20230131 08:09:26.907" endtime="20230131 08:09:33.212"/>
</kw>
<msg timestamp="20230131 08:09:33.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:26.907" endtime="20230131 08:09:33.214"/>
</kw>
<msg timestamp="20230131 08:09:33.214" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230131 08:09:26.906" endtime="20230131 08:09:33.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:33.219" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39460-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:39.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:39.204" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:09:33.216" endtime="20230131 08:09:39.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:39.206" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:09:39.205" endtime="20230131 08:09:39.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:39.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:39.206" endtime="20230131 08:09:39.207"/>
</kw>
<status status="PASS" starttime="20230131 08:09:33.215" endtime="20230131 08:09:39.207"/>
</kw>
<msg timestamp="20230131 08:09:39.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:33.215" endtime="20230131 08:09:39.208"/>
</kw>
<msg timestamp="20230131 08:09:39.209" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:09:33.214" endtime="20230131 08:09:39.209"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:09:39.209" endtime="20230131 08:09:39.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:39.216" level="INFO">Running command 'ozone sh key setacl o3://om:9862/39460-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:45.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:45.230" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:09:39.213" endtime="20230131 08:09:45.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:45.232" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:09:45.231" endtime="20230131 08:09:45.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:45.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:45.232" endtime="20230131 08:09:45.233"/>
</kw>
<status status="PASS" starttime="20230131 08:09:39.212" endtime="20230131 08:09:45.233"/>
</kw>
<msg timestamp="20230131 08:09:45.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:39.211" endtime="20230131 08:09:45.234"/>
</kw>
<msg timestamp="20230131 08:09:45.234" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:09:39.210" endtime="20230131 08:09:45.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:45.239" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39460-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:51.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:51.608" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230131 08:09:45.236" endtime="20230131 08:09:51.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:51.610" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:09:51.609" endtime="20230131 08:09:51.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:51.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:51.611" endtime="20230131 08:09:51.611"/>
</kw>
<status status="PASS" starttime="20230131 08:09:45.236" endtime="20230131 08:09:51.612"/>
</kw>
<msg timestamp="20230131 08:09:51.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:45.235" endtime="20230131 08:09:51.612"/>
</kw>
<msg timestamp="20230131 08:09:51.613" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230131 08:09:45.235" endtime="20230131 08:09:51.613"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:09:51.613" endtime="20230131 08:09:51.614"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:09:51.614" endtime="20230131 08:09:51.615"/>
</kw>
<status status="PASS" starttime="20230131 08:08:57.521" endtime="20230131 08:09:51.616"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 08:08:57.440" endtime="20230131 08:09:51.616"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:51.626" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:51.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:51.632" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:09:51.621" endtime="20230131 08:09:51.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:51.634" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:09:51.633" endtime="20230131 08:09:51.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:51.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:51.634" endtime="20230131 08:09:51.635"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.620" endtime="20230131 08:09:51.635"/>
</kw>
<msg timestamp="20230131 08:09:51.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:51.619" endtime="20230131 08:09:51.636"/>
</kw>
<msg timestamp="20230131 08:09:51.636" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:09:51.619" endtime="20230131 08:09:51.636"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:09:51.637" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:09:51.636" endtime="20230131 08:09:51.637"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:51.647" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:51.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:51.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:09:51.640" endtime="20230131 08:09:51.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:51.690" level="INFO"/>
<status status="PASS" starttime="20230131 08:09:51.689" endtime="20230131 08:09:51.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:51.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:51.691" endtime="20230131 08:09:51.692"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.639" endtime="20230131 08:09:51.692"/>
</kw>
<msg timestamp="20230131 08:09:51.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:51.639" endtime="20230131 08:09:51.693"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.638" endtime="20230131 08:09:51.693"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.637" endtime="20230131 08:09:51.693"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.618" endtime="20230131 08:09:51.694"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.618" endtime="20230131 08:09:51.694"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:51.701" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/39460-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:09:58.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:09:58.033" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230131 08:09:51.697" endtime="20230131 08:09:58.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:09:58.035" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230131 08:09:58.034" endtime="20230131 08:09:58.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:09:58.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:09:58.036" endtime="20230131 08:09:58.037"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.697" endtime="20230131 08:09:58.037"/>
</kw>
<msg timestamp="20230131 08:09:58.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:51.696" endtime="20230131 08:09:58.038"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.695" endtime="20230131 08:09:58.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:09:58.044" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/39460-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:04.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:04.237" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230131 08:09:58.041" endtime="20230131 08:10:04.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:04.239" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:10:04.238" endtime="20230131 08:10:04.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:04.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:04.239" endtime="20230131 08:10:04.240"/>
</kw>
<status status="PASS" starttime="20230131 08:09:58.040" endtime="20230131 08:10:04.240"/>
</kw>
<msg timestamp="20230131 08:10:04.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:09:58.039" endtime="20230131 08:10:04.241"/>
</kw>
<msg timestamp="20230131 08:10:04.241" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230131 08:09:58.039" endtime="20230131 08:10:04.241"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:10:04.242" endtime="20230131 08:10:04.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:04.248" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/39460-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:09.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:09.810" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230131 08:10:04.245" endtime="20230131 08:10:09.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:09.812" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230131 08:10:09.811" endtime="20230131 08:10:09.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:09.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:09.812" endtime="20230131 08:10:09.813"/>
</kw>
<status status="PASS" starttime="20230131 08:10:04.244" endtime="20230131 08:10:09.813"/>
</kw>
<msg timestamp="20230131 08:10:09.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:04.244" endtime="20230131 08:10:09.814"/>
</kw>
<msg timestamp="20230131 08:10:09.815" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230131 08:10:04.243" endtime="20230131 08:10:09.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:09.823" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/39460-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:15.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:15.934" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230131 08:10:09.817" endtime="20230131 08:10:15.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:15.935" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:10:15.934" endtime="20230131 08:10:15.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:15.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:15.936" endtime="20230131 08:10:15.937"/>
</kw>
<status status="PASS" starttime="20230131 08:10:09.816" endtime="20230131 08:10:15.937"/>
</kw>
<msg timestamp="20230131 08:10:15.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:09.816" endtime="20230131 08:10:15.938"/>
</kw>
<msg timestamp="20230131 08:10:15.938" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230131 08:10:09.815" endtime="20230131 08:10:15.938"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:10:15.938" endtime="20230131 08:10:15.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:15.945" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/39460-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:22.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:22.277" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:10:15.941" endtime="20230131 08:10:22.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:22.279" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:10:22.278" endtime="20230131 08:10:22.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:22.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:22.280" endtime="20230131 08:10:22.281"/>
</kw>
<status status="PASS" starttime="20230131 08:10:15.941" endtime="20230131 08:10:22.281"/>
</kw>
<msg timestamp="20230131 08:10:22.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:15.940" endtime="20230131 08:10:22.282"/>
</kw>
<msg timestamp="20230131 08:10:22.282" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230131 08:10:15.940" endtime="20230131 08:10:22.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:22.288" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/39460-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:29.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:29.213" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230131 08:10:22.284" endtime="20230131 08:10:29.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:29.215" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:10:29.214" endtime="20230131 08:10:29.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:29.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:29.216" endtime="20230131 08:10:29.217"/>
</kw>
<status status="PASS" starttime="20230131 08:10:22.284" endtime="20230131 08:10:29.218"/>
</kw>
<msg timestamp="20230131 08:10:29.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:22.283" endtime="20230131 08:10:29.219"/>
</kw>
<msg timestamp="20230131 08:10:29.219" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230131 08:10:22.282" endtime="20230131 08:10:29.219"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:10:29.219" endtime="20230131 08:10:29.220"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:10:29.220" endtime="20230131 08:10:29.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:29.227" level="INFO">Running command 'ozone sh key put o3://om:9862/39460-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:38.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:38.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:10:29.223" endtime="20230131 08:10:38.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:38.933" level="INFO"/>
<status status="PASS" starttime="20230131 08:10:38.932" endtime="20230131 08:10:38.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:38.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:38.934" endtime="20230131 08:10:38.935"/>
</kw>
<status status="PASS" starttime="20230131 08:10:29.223" endtime="20230131 08:10:38.935"/>
</kw>
<msg timestamp="20230131 08:10:38.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:29.222" endtime="20230131 08:10:38.936"/>
</kw>
<status status="PASS" starttime="20230131 08:10:29.221" endtime="20230131 08:10:38.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:38.942" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39460-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:44.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:45.000" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:10:38.939" endtime="20230131 08:10:45.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:45.002" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230131 08:10:45.001" endtime="20230131 08:10:45.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:45.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:45.003" endtime="20230131 08:10:45.004"/>
</kw>
<status status="PASS" starttime="20230131 08:10:38.938" endtime="20230131 08:10:45.004"/>
</kw>
<msg timestamp="20230131 08:10:45.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:38.938" endtime="20230131 08:10:45.005"/>
</kw>
<msg timestamp="20230131 08:10:45.006" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230131 08:10:38.937" endtime="20230131 08:10:45.006"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:10:45.006" endtime="20230131 08:10:45.007"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230131 08:10:45.008" endtime="20230131 08:10:45.009"/>
</kw>
<status status="PASS" starttime="20230131 08:09:51.694" endtime="20230131 08:10:45.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 08:09:51.617" endtime="20230131 08:10:45.010"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:45.019" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:45.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:45.025" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:10:45.016" endtime="20230131 08:10:45.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:45.026" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:10:45.025" endtime="20230131 08:10:45.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:45.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:45.026" endtime="20230131 08:10:45.027"/>
</kw>
<status status="PASS" starttime="20230131 08:10:45.016" endtime="20230131 08:10:45.028"/>
</kw>
<msg timestamp="20230131 08:10:45.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:45.015" endtime="20230131 08:10:45.029"/>
</kw>
<msg timestamp="20230131 08:10:45.029" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:10:45.015" endtime="20230131 08:10:45.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:10:45.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:10:45.029" endtime="20230131 08:10:45.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:45.036" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:45.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:45.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:10:45.033" endtime="20230131 08:10:45.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:45.079" level="INFO"/>
<status status="PASS" starttime="20230131 08:10:45.078" endtime="20230131 08:10:45.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:45.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:45.080" endtime="20230131 08:10:45.081"/>
</kw>
<status status="PASS" starttime="20230131 08:10:45.032" endtime="20230131 08:10:45.081"/>
</kw>
<msg timestamp="20230131 08:10:45.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:45.032" endtime="20230131 08:10:45.082"/>
</kw>
<status status="PASS" starttime="20230131 08:10:45.031" endtime="20230131 08:10:45.082"/>
</kw>
<status status="PASS" starttime="20230131 08:10:45.030" endtime="20230131 08:10:45.082"/>
</kw>
<status status="PASS" starttime="20230131 08:10:45.014" endtime="20230131 08:10:45.083"/>
</kw>
<status status="PASS" starttime="20230131 08:10:45.013" endtime="20230131 08:10:45.083"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:45.097" level="INFO">Running command 'ozone sh volume info o3:///39460-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:51.549" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:10:51.550" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39460-without-host is not found</msg>
<status status="PASS" starttime="20230131 08:10:45.086" endtime="20230131 08:10:51.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:51.551" level="INFO">VOLUME_NOT_FOUND Volume 39460-without-host is not found</msg>
<status status="PASS" starttime="20230131 08:10:51.550" endtime="20230131 08:10:51.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:51.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:51.552" endtime="20230131 08:10:51.552"/>
</kw>
<msg timestamp="20230131 08:10:51.553" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39460-without-host is not found</msg>
<status status="PASS" starttime="20230131 08:10:45.085" endtime="20230131 08:10:51.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:10:51.553" endtime="20230131 08:10:51.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:51.560" level="INFO">Running command 'ozone sh volume create o3:///39460-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:10:57.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:10:57.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:10:51.557" endtime="20230131 08:10:57.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:10:57.793" level="INFO"/>
<status status="PASS" starttime="20230131 08:10:57.792" endtime="20230131 08:10:57.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:10:57.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:10:57.793" endtime="20230131 08:10:57.794"/>
</kw>
<status status="PASS" starttime="20230131 08:10:51.556" endtime="20230131 08:10:57.794"/>
</kw>
<msg timestamp="20230131 08:10:57.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:51.555" endtime="20230131 08:10:57.796"/>
</kw>
<msg timestamp="20230131 08:10:57.796" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 08:10:51.554" endtime="20230131 08:10:57.796"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230131 08:10:57.797" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230131 08:10:57.796" endtime="20230131 08:10:57.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:10:57.805" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="39460-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:04.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:04.177" level="INFO">${output} = {
  "metadata": {},
  "name": "39460-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230131 08:10:57.801" endtime="20230131 08:11:04.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:04.178" level="INFO">{
  "metadata": {},
  "name": "39460-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-31T08:10:57.382Z",
  "modificationTime": "2023-01-31T08:10:57.382Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230131 08:11:04.177" endtime="20230131 08:11:04.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:04.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:04.179" endtime="20230131 08:11:04.179"/>
</kw>
<status status="PASS" starttime="20230131 08:10:57.800" endtime="20230131 08:11:04.180"/>
</kw>
<msg timestamp="20230131 08:11:04.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:10:57.800" endtime="20230131 08:11:04.180"/>
</kw>
<msg timestamp="20230131 08:11:04.181" level="INFO">${result} = {
  "metadata": {},
  "name": "39460-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230131 08:10:57.797" endtime="20230131 08:11:04.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:11:04.181" endtime="20230131 08:11:04.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:04.189" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="39460-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:10.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:10.393" level="INFO">${output} = {
  "metadata": {},
  "name": "39460-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230131 08:11:04.184" endtime="20230131 08:11:10.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:10.395" level="INFO">{
  "metadata": {},
  "name": "39460-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-31T08:10:57.382Z",
  "modificationTime": "2023-01-31T08:10:57.382Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230131 08:11:10.394" endtime="20230131 08:11:10.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:10.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:10.396" endtime="20230131 08:11:10.396"/>
</kw>
<status status="PASS" starttime="20230131 08:11:04.183" endtime="20230131 08:11:10.397"/>
</kw>
<msg timestamp="20230131 08:11:10.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:04.183" endtime="20230131 08:11:10.398"/>
</kw>
<msg timestamp="20230131 08:11:10.399" level="INFO">${result} = {
  "metadata": {},
  "name": "39460-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230131 08:11:04.182" endtime="20230131 08:11:10.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:11:10.399" endtime="20230131 08:11:10.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:10.405" level="INFO">Running command 'ozone sh volume setquota o3:///39460-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:16.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:16.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:11:10.402" endtime="20230131 08:11:16.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:16.523" level="INFO"/>
<status status="PASS" starttime="20230131 08:11:16.522" endtime="20230131 08:11:16.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:16.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:16.524" endtime="20230131 08:11:16.524"/>
</kw>
<status status="PASS" starttime="20230131 08:11:10.401" endtime="20230131 08:11:16.525"/>
</kw>
<msg timestamp="20230131 08:11:16.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:10.401" endtime="20230131 08:11:16.526"/>
</kw>
<status status="PASS" starttime="20230131 08:11:10.400" endtime="20230131 08:11:16.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:16.531" level="INFO">Running command 'ozone sh volume info o3:///39460-without-host | jq -r '. | select(.name=="39460-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:23.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:23.554" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:11:16.528" endtime="20230131 08:11:23.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:23.556" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230131 08:11:23.555" endtime="20230131 08:11:23.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:23.556" endtime="20230131 08:11:23.557"/>
</kw>
<status status="PASS" starttime="20230131 08:11:16.528" endtime="20230131 08:11:23.557"/>
</kw>
<msg timestamp="20230131 08:11:23.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:16.527" endtime="20230131 08:11:23.558"/>
</kw>
<msg timestamp="20230131 08:11:23.559" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:11:16.526" endtime="20230131 08:11:23.559"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:11:23.559" endtime="20230131 08:11:23.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:23.565" level="INFO">Running command 'ozone sh bucket create o3:///39460-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:30.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:30.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:11:23.562" endtime="20230131 08:11:30.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:30.251" level="INFO"/>
<status status="PASS" starttime="20230131 08:11:30.250" endtime="20230131 08:11:30.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:30.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:30.252" endtime="20230131 08:11:30.253"/>
</kw>
<status status="PASS" starttime="20230131 08:11:23.561" endtime="20230131 08:11:30.253"/>
</kw>
<msg timestamp="20230131 08:11:30.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:23.560" endtime="20230131 08:11:30.254"/>
</kw>
<msg timestamp="20230131 08:11:30.254" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 08:11:23.560" endtime="20230131 08:11:30.254"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230131 08:11:30.255" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230131 08:11:30.254" endtime="20230131 08:11:30.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:30.260" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:36.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:36.630" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230131 08:11:30.257" endtime="20230131 08:11:36.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:36.634" level="INFO">DISK</msg>
<status status="PASS" starttime="20230131 08:11:36.631" endtime="20230131 08:11:36.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:36.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:36.634" endtime="20230131 08:11:36.635"/>
</kw>
<status status="PASS" starttime="20230131 08:11:30.257" endtime="20230131 08:11:36.636"/>
</kw>
<msg timestamp="20230131 08:11:36.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:30.256" endtime="20230131 08:11:36.636"/>
</kw>
<msg timestamp="20230131 08:11:36.637" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230131 08:11:30.255" endtime="20230131 08:11:36.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:11:36.637" endtime="20230131 08:11:36.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:36.643" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:42.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:42.770" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:11:36.640" endtime="20230131 08:11:42.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:42.772" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230131 08:11:42.771" endtime="20230131 08:11:42.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:42.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:42.772" endtime="20230131 08:11:42.773"/>
</kw>
<status status="PASS" starttime="20230131 08:11:36.639" endtime="20230131 08:11:42.773"/>
</kw>
<msg timestamp="20230131 08:11:42.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:36.639" endtime="20230131 08:11:42.774"/>
</kw>
<msg timestamp="20230131 08:11:42.775" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230131 08:11:36.638" endtime="20230131 08:11:42.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:11:42.775" endtime="20230131 08:11:42.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:42.785" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:49.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:49.520" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230131 08:11:42.779" endtime="20230131 08:11:49.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:49.522" level="INFO">100</msg>
<status status="PASS" starttime="20230131 08:11:49.521" endtime="20230131 08:11:49.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:49.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:49.524" endtime="20230131 08:11:49.525"/>
</kw>
<status status="PASS" starttime="20230131 08:11:42.778" endtime="20230131 08:11:49.526"/>
</kw>
<msg timestamp="20230131 08:11:49.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:42.777" endtime="20230131 08:11:49.526"/>
</kw>
<msg timestamp="20230131 08:11:49.527" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230131 08:11:42.776" endtime="20230131 08:11:49.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:11:49.527" endtime="20230131 08:11:49.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:49.533" level="INFO">Running command 'ozone sh bucket setquota o3:///39460-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:11:55.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:11:55.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:11:49.530" endtime="20230131 08:11:55.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:11:55.520" level="INFO"/>
<status status="PASS" starttime="20230131 08:11:55.519" endtime="20230131 08:11:55.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:11:55.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:11:55.521" endtime="20230131 08:11:55.522"/>
</kw>
<status status="PASS" starttime="20230131 08:11:49.529" endtime="20230131 08:11:55.523"/>
</kw>
<msg timestamp="20230131 08:11:55.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:49.529" endtime="20230131 08:11:55.524"/>
</kw>
<status status="PASS" starttime="20230131 08:11:49.528" endtime="20230131 08:11:55.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:11:55.532" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:02.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:02.424" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230131 08:11:55.527" endtime="20230131 08:12:02.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:02.427" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230131 08:12:02.425" endtime="20230131 08:12:02.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:02.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:02.427" endtime="20230131 08:12:02.428"/>
</kw>
<status status="PASS" starttime="20230131 08:11:55.526" endtime="20230131 08:12:02.428"/>
</kw>
<msg timestamp="20230131 08:12:02.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:11:55.526" endtime="20230131 08:12:02.429"/>
</kw>
<msg timestamp="20230131 08:12:02.430" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230131 08:11:55.524" endtime="20230131 08:12:02.430"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:12:02.430" endtime="20230131 08:12:02.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:02.438" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:09.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:09.056" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230131 08:12:02.434" endtime="20230131 08:12:09.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:09.058" level="INFO">1000</msg>
<status status="PASS" starttime="20230131 08:12:09.057" endtime="20230131 08:12:09.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:09.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:09.059" endtime="20230131 08:12:09.060"/>
</kw>
<status status="PASS" starttime="20230131 08:12:02.433" endtime="20230131 08:12:09.061"/>
</kw>
<msg timestamp="20230131 08:12:09.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:02.432" endtime="20230131 08:12:09.063"/>
</kw>
<msg timestamp="20230131 08:12:09.063" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230131 08:12:02.431" endtime="20230131 08:12:09.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:12:09.063" endtime="20230131 08:12:09.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:09.070" level="INFO">Running command 'ozone sh bucket list o3:///39460-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:15.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:15.518" level="INFO">${output} = 39460-without-host</msg>
<status status="PASS" starttime="20230131 08:12:09.067" endtime="20230131 08:12:15.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:15.520" level="INFO">39460-without-host</msg>
<status status="PASS" starttime="20230131 08:12:15.519" endtime="20230131 08:12:15.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:15.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:15.520" endtime="20230131 08:12:15.521"/>
</kw>
<status status="PASS" starttime="20230131 08:12:09.066" endtime="20230131 08:12:15.522"/>
</kw>
<msg timestamp="20230131 08:12:15.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:09.066" endtime="20230131 08:12:15.523"/>
</kw>
<msg timestamp="20230131 08:12:15.523" level="INFO">${result} = 39460-without-host</msg>
<status status="PASS" starttime="20230131 08:12:09.064" endtime="20230131 08:12:15.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:12:15.523" endtime="20230131 08:12:15.524"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:15.531" level="INFO">Running command 'ozone sh key put o3:///39460-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:25.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:25.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:15.528" endtime="20230131 08:12:25.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:25.391" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:25.390" endtime="20230131 08:12:25.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:25.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:25.392" endtime="20230131 08:12:25.392"/>
</kw>
<status status="PASS" starttime="20230131 08:12:15.527" endtime="20230131 08:12:25.393"/>
</kw>
<msg timestamp="20230131 08:12:25.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:15.527" endtime="20230131 08:12:25.394"/>
</kw>
<status status="PASS" starttime="20230131 08:12:15.526" endtime="20230131 08:12:25.394"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:25.400" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:25.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:25.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:25.396" endtime="20230131 08:12:25.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:25.405" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:25.404" endtime="20230131 08:12:25.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:25.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:25.405" endtime="20230131 08:12:25.406"/>
</kw>
<status status="PASS" starttime="20230131 08:12:25.395" endtime="20230131 08:12:25.411"/>
</kw>
<msg timestamp="20230131 08:12:25.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:25.395" endtime="20230131 08:12:25.412"/>
</kw>
<status status="PASS" starttime="20230131 08:12:25.394" endtime="20230131 08:12:25.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:25.420" level="INFO">Running command 'ozone sh key get o3:///39460-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:35.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:35.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:25.416" endtime="20230131 08:12:35.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:35.050" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:35.049" endtime="20230131 08:12:35.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:35.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:35.051" endtime="20230131 08:12:35.052"/>
</kw>
<status status="PASS" starttime="20230131 08:12:25.416" endtime="20230131 08:12:35.052"/>
</kw>
<msg timestamp="20230131 08:12:35.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:25.414" endtime="20230131 08:12:35.053"/>
</kw>
<status status="PASS" starttime="20230131 08:12:25.413" endtime="20230131 08:12:35.054"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:35.059" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:35.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:35.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:35.056" endtime="20230131 08:12:35.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:35.064" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:35.063" endtime="20230131 08:12:35.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:35.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:35.064" endtime="20230131 08:12:35.065"/>
</kw>
<status status="PASS" starttime="20230131 08:12:35.055" endtime="20230131 08:12:35.066"/>
</kw>
<msg timestamp="20230131 08:12:35.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:35.055" endtime="20230131 08:12:35.067"/>
</kw>
<status status="PASS" starttime="20230131 08:12:35.054" endtime="20230131 08:12:35.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:35.076" level="INFO">Running command 'ozone sh key put -t RATIS o3:///39460-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:44.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:44.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:35.072" endtime="20230131 08:12:44.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:44.902" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:44.901" endtime="20230131 08:12:44.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:44.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:44.903" endtime="20230131 08:12:44.904"/>
</kw>
<status status="PASS" starttime="20230131 08:12:35.071" endtime="20230131 08:12:44.904"/>
</kw>
<msg timestamp="20230131 08:12:44.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:35.070" endtime="20230131 08:12:44.905"/>
</kw>
<status status="PASS" starttime="20230131 08:12:35.069" endtime="20230131 08:12:44.906"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:44.914" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:44.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:44.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:44.910" endtime="20230131 08:12:44.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:44.919" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:44.918" endtime="20230131 08:12:44.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:44.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:44.920" endtime="20230131 08:12:44.920"/>
</kw>
<status status="PASS" starttime="20230131 08:12:44.909" endtime="20230131 08:12:44.921"/>
</kw>
<msg timestamp="20230131 08:12:44.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:44.907" endtime="20230131 08:12:44.922"/>
</kw>
<status status="PASS" starttime="20230131 08:12:44.906" endtime="20230131 08:12:44.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:44.928" level="INFO">Running command 'ozone sh key get o3:///39460-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:53.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:53.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:44.925" endtime="20230131 08:12:53.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:53.729" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:53.725" endtime="20230131 08:12:53.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:53.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:53.729" endtime="20230131 08:12:53.730"/>
</kw>
<status status="PASS" starttime="20230131 08:12:44.924" endtime="20230131 08:12:53.730"/>
</kw>
<msg timestamp="20230131 08:12:53.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:44.924" endtime="20230131 08:12:53.731"/>
</kw>
<status status="PASS" starttime="20230131 08:12:44.922" endtime="20230131 08:12:53.731"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:53.736" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:12:53.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:12:53.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:12:53.733" endtime="20230131 08:12:53.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:12:53.747" level="INFO"/>
<status status="PASS" starttime="20230131 08:12:53.746" endtime="20230131 08:12:53.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:12:53.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:12:53.747" endtime="20230131 08:12:53.748"/>
</kw>
<status status="PASS" starttime="20230131 08:12:53.733" endtime="20230131 08:12:53.749"/>
</kw>
<msg timestamp="20230131 08:12:53.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:53.732" endtime="20230131 08:12:53.750"/>
</kw>
<status status="PASS" starttime="20230131 08:12:53.732" endtime="20230131 08:12:53.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:12:53.756" level="INFO">Running command 'ozone sh key info o3:///39460-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:00.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:00.439" level="INFO">${output} = {
  "volumeName": "39460-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:12:41.068Z",
  "modificationTime": "2023-01-31T08:12:44.217...</msg>
<status status="PASS" starttime="20230131 08:12:53.753" endtime="20230131 08:13:00.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:00.441" level="INFO">{
  "volumeName": "39460-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:12:41.068Z",
  "modificationTime": "2023-01-31T08:12:44.217Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230131 08:13:00.440" endtime="20230131 08:13:00.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:00.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:00.442" endtime="20230131 08:13:00.443"/>
</kw>
<status status="PASS" starttime="20230131 08:12:53.752" endtime="20230131 08:13:00.443"/>
</kw>
<msg timestamp="20230131 08:13:00.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:12:53.752" endtime="20230131 08:13:00.444"/>
</kw>
<msg timestamp="20230131 08:13:00.445" level="INFO">${result} = {
  "volumeName": "39460-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:12:41.068Z",
  "modificationTime": "2023-01-31T08:12:44.217...</msg>
<status status="PASS" starttime="20230131 08:12:53.750" endtime="20230131 08:13:00.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:13:00.445" endtime="20230131 08:13:00.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:00.452" level="INFO">Running command 'ozone sh key delete o3:///39460-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:06.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:06.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:00.449" endtime="20230131 08:13:06.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:06.162" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:06.161" endtime="20230131 08:13:06.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:06.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:06.162" endtime="20230131 08:13:06.163"/>
</kw>
<status status="PASS" starttime="20230131 08:13:00.448" endtime="20230131 08:13:06.163"/>
</kw>
<msg timestamp="20230131 08:13:06.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:00.447" endtime="20230131 08:13:06.164"/>
</kw>
<status status="PASS" starttime="20230131 08:13:00.446" endtime="20230131 08:13:06.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:06.173" level="INFO">Running command 'ozone sh key cp o3:///39460-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:16.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:16.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:06.170" endtime="20230131 08:13:16.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:16.167" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:16.166" endtime="20230131 08:13:16.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:16.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:16.167" endtime="20230131 08:13:16.168"/>
</kw>
<status status="PASS" starttime="20230131 08:13:06.167" endtime="20230131 08:13:16.168"/>
</kw>
<msg timestamp="20230131 08:13:16.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:06.166" endtime="20230131 08:13:16.169"/>
</kw>
<status status="PASS" starttime="20230131 08:13:06.165" endtime="20230131 08:13:16.169"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:16.176" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:16.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:16.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:16.172" endtime="20230131 08:13:16.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:16.182" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:16.181" endtime="20230131 08:13:16.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:16.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:16.182" endtime="20230131 08:13:16.183"/>
</kw>
<status status="PASS" starttime="20230131 08:13:16.171" endtime="20230131 08:13:16.184"/>
</kw>
<msg timestamp="20230131 08:13:16.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:16.170" endtime="20230131 08:13:16.185"/>
</kw>
<status status="PASS" starttime="20230131 08:13:16.170" endtime="20230131 08:13:16.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:16.190" level="INFO">Running command 'ozone sh key get o3:///39460-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:25.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:25.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:16.187" endtime="20230131 08:13:25.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:25.738" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:25.738" endtime="20230131 08:13:25.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:25.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:25.739" endtime="20230131 08:13:25.740"/>
</kw>
<status status="PASS" starttime="20230131 08:13:16.186" endtime="20230131 08:13:25.740"/>
</kw>
<msg timestamp="20230131 08:13:25.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:16.186" endtime="20230131 08:13:25.741"/>
</kw>
<status status="PASS" starttime="20230131 08:13:16.185" endtime="20230131 08:13:25.741"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:25.746" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:25.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:25.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:25.743" endtime="20230131 08:13:25.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:25.751" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:25.750" endtime="20230131 08:13:25.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:25.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:25.752" endtime="20230131 08:13:25.752"/>
</kw>
<status status="PASS" starttime="20230131 08:13:25.742" endtime="20230131 08:13:25.753"/>
</kw>
<msg timestamp="20230131 08:13:25.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:25.742" endtime="20230131 08:13:25.753"/>
</kw>
<status status="PASS" starttime="20230131 08:13:25.741" endtime="20230131 08:13:25.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:25.758" level="INFO">Running command 'ozone sh key delete o3:///39460-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:31.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:31.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:25.756" endtime="20230131 08:13:31.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:31.457" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:31.456" endtime="20230131 08:13:31.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:31.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:31.458" endtime="20230131 08:13:31.458"/>
</kw>
<status status="PASS" starttime="20230131 08:13:25.755" endtime="20230131 08:13:31.459"/>
</kw>
<msg timestamp="20230131 08:13:31.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:25.755" endtime="20230131 08:13:31.460"/>
</kw>
<status status="PASS" starttime="20230131 08:13:25.754" endtime="20230131 08:13:31.460"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:31.464" level="INFO">Running command 'ozone sh key get o3:///39460-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:37.308" level="INFO">${rc} = 255</msg>
<msg timestamp="20230131 08:13:37.308" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 08:13:31.461" endtime="20230131 08:13:37.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:37.310" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 08:13:37.309" endtime="20230131 08:13:37.310"/>
</kw>
<msg timestamp="20230131 08:13:37.311" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230131 08:13:31.460" endtime="20230131 08:13:37.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:13:37.312" endtime="20230131 08:13:37.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:37.318" level="INFO">Running command 'ozone sh key get --force o3:///39460-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:46.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:46.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:37.315" endtime="20230131 08:13:46.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:46.687" level="INFO"/>
<status status="PASS" starttime="20230131 08:13:46.686" endtime="20230131 08:13:46.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:46.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:46.687" endtime="20230131 08:13:46.688"/>
</kw>
<status status="PASS" starttime="20230131 08:13:37.314" endtime="20230131 08:13:46.689"/>
</kw>
<msg timestamp="20230131 08:13:46.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:37.313" endtime="20230131 08:13:46.690"/>
</kw>
<msg timestamp="20230131 08:13:46.690" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230131 08:13:37.312" endtime="20230131 08:13:46.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:13:46.691" endtime="20230131 08:13:46.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:46.697" level="INFO">Running command 'ozone sh key info o3:///39460-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:52.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:52.638" level="INFO">${output} = {
  "volumeName": "39460-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:12:21.271Z",
  "modificationTime": "2023-01-31T08:12:24.821Z",
  ...</msg>
<status status="PASS" starttime="20230131 08:13:46.694" endtime="20230131 08:13:52.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:52.639" level="INFO">{
  "volumeName": "39460-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:12:21.271Z",
  "modificationTime": "2023-01-31T08:12:24.821Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230131 08:13:52.639" endtime="20230131 08:13:52.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:52.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:52.640" endtime="20230131 08:13:52.641"/>
</kw>
<status status="PASS" starttime="20230131 08:13:46.693" endtime="20230131 08:13:52.641"/>
</kw>
<msg timestamp="20230131 08:13:52.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:46.693" endtime="20230131 08:13:52.642"/>
</kw>
<msg timestamp="20230131 08:13:52.643" level="INFO">${result} = {
  "volumeName": "39460-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-31T08:12:21.271Z",
  "modificationTime": "2023-01-31T08:12:24.821Z",
  ...</msg>
<status status="PASS" starttime="20230131 08:13:46.691" endtime="20230131 08:13:52.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:13:52.643" endtime="20230131 08:13:52.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:52.649" level="INFO">Running command 'ozone sh key list o3:///39460-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:13:58.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:13:58.917" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230131 08:13:52.646" endtime="20230131 08:13:58.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:13:58.919" level="INFO">key1</msg>
<status status="PASS" starttime="20230131 08:13:58.918" endtime="20230131 08:13:58.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:13:58.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:13:58.919" endtime="20230131 08:13:58.920"/>
</kw>
<status status="PASS" starttime="20230131 08:13:52.645" endtime="20230131 08:13:58.920"/>
</kw>
<msg timestamp="20230131 08:13:58.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:52.645" endtime="20230131 08:13:58.921"/>
</kw>
<msg timestamp="20230131 08:13:58.921" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230131 08:13:52.644" endtime="20230131 08:13:58.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:13:58.922" endtime="20230131 08:13:58.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:13:58.928" level="INFO">Running command 'ozone sh key rename o3:///39460-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:05.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:05.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:13:58.925" endtime="20230131 08:14:05.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:05.787" level="INFO"/>
<status status="PASS" starttime="20230131 08:14:05.786" endtime="20230131 08:14:05.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:05.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:05.787" endtime="20230131 08:14:05.788"/>
</kw>
<status status="PASS" starttime="20230131 08:13:58.924" endtime="20230131 08:14:05.789"/>
</kw>
<msg timestamp="20230131 08:14:05.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:13:58.923" endtime="20230131 08:14:05.790"/>
</kw>
<status status="PASS" starttime="20230131 08:13:58.923" endtime="20230131 08:14:05.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:05.796" level="INFO">Running command 'ozone sh key list o3:///39460-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:12.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:12.722" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230131 08:14:05.793" endtime="20230131 08:14:12.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:12.724" level="INFO">key2</msg>
<status status="PASS" starttime="20230131 08:14:12.723" endtime="20230131 08:14:12.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:12.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:12.724" endtime="20230131 08:14:12.725"/>
</kw>
<status status="PASS" starttime="20230131 08:14:05.792" endtime="20230131 08:14:12.725"/>
</kw>
<msg timestamp="20230131 08:14:12.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:05.792" endtime="20230131 08:14:12.726"/>
</kw>
<msg timestamp="20230131 08:14:12.726" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230131 08:14:05.791" endtime="20230131 08:14:12.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:14:12.727" endtime="20230131 08:14:12.727"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:12.733" level="INFO">Running command 'ozone sh key delete o3:///39460-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:19.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:19.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:14:12.730" endtime="20230131 08:14:19.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:19.345" level="INFO"/>
<status status="PASS" starttime="20230131 08:14:19.344" endtime="20230131 08:14:19.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:19.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:19.345" endtime="20230131 08:14:19.346"/>
</kw>
<status status="PASS" starttime="20230131 08:14:12.729" endtime="20230131 08:14:19.347"/>
</kw>
<msg timestamp="20230131 08:14:19.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:12.729" endtime="20230131 08:14:19.347"/>
</kw>
<status status="PASS" starttime="20230131 08:14:12.727" endtime="20230131 08:14:19.348"/>
</kw>
<status status="PASS" starttime="20230131 08:12:15.525" endtime="20230131 08:14:19.348"/>
</kw>
<status status="PASS" starttime="20230131 08:12:15.524" endtime="20230131 08:14:19.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:19.358" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///39460-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:24.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:24.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:14:19.350" endtime="20230131 08:14:24.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:24.644" level="INFO"/>
<status status="PASS" starttime="20230131 08:14:24.643" endtime="20230131 08:14:24.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:24.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:24.644" endtime="20230131 08:14:24.645"/>
</kw>
<status status="PASS" starttime="20230131 08:14:19.350" endtime="20230131 08:14:24.645"/>
</kw>
<msg timestamp="20230131 08:14:24.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:19.349" endtime="20230131 08:14:24.646"/>
</kw>
<status status="PASS" starttime="20230131 08:14:19.348" endtime="20230131 08:14:24.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:24.652" level="INFO">Running command 'ozone sh volume info o3:///39460-without-host | jq -r '. | select(.name=="39460-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:30.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:30.527" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:14:24.649" endtime="20230131 08:14:30.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:30.530" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:14:30.528" endtime="20230131 08:14:30.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:30.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:30.530" endtime="20230131 08:14:30.531"/>
</kw>
<status status="PASS" starttime="20230131 08:14:24.648" endtime="20230131 08:14:30.531"/>
</kw>
<msg timestamp="20230131 08:14:30.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:24.648" endtime="20230131 08:14:30.532"/>
</kw>
<msg timestamp="20230131 08:14:30.533" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:14:24.646" endtime="20230131 08:14:30.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:14:30.533" endtime="20230131 08:14:30.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:30.539" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///39460-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:35.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:35.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:14:30.536" endtime="20230131 08:14:35.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:35.855" level="INFO"/>
<status status="PASS" starttime="20230131 08:14:35.854" endtime="20230131 08:14:35.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:35.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:35.855" endtime="20230131 08:14:35.856"/>
</kw>
<status status="PASS" starttime="20230131 08:14:30.535" endtime="20230131 08:14:35.857"/>
</kw>
<msg timestamp="20230131 08:14:35.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:30.535" endtime="20230131 08:14:35.857"/>
</kw>
<status status="PASS" starttime="20230131 08:14:30.534" endtime="20230131 08:14:35.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:35.864" level="INFO">Running command 'ozone sh volume info o3:///39460-without-host | jq -r '. | select(.name=="39460-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:42.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:42.070" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:14:35.861" endtime="20230131 08:14:42.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:42.071" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:14:42.071" endtime="20230131 08:14:42.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:42.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:42.072" endtime="20230131 08:14:42.072"/>
</kw>
<status status="PASS" starttime="20230131 08:14:35.860" endtime="20230131 08:14:42.074"/>
</kw>
<msg timestamp="20230131 08:14:42.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:35.859" endtime="20230131 08:14:42.075"/>
</kw>
<msg timestamp="20230131 08:14:42.075" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:14:35.858" endtime="20230131 08:14:42.075"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:14:42.075" endtime="20230131 08:14:42.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:42.086" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///39460-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:47.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:47.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:14:42.078" endtime="20230131 08:14:47.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:47.997" level="INFO"/>
<status status="PASS" starttime="20230131 08:14:47.996" endtime="20230131 08:14:47.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:47.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:47.997" endtime="20230131 08:14:47.998"/>
</kw>
<status status="PASS" starttime="20230131 08:14:42.077" endtime="20230131 08:14:47.998"/>
</kw>
<msg timestamp="20230131 08:14:47.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:42.077" endtime="20230131 08:14:47.999"/>
</kw>
<status status="PASS" starttime="20230131 08:14:42.076" endtime="20230131 08:14:47.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:48.005" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:14:54.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:14:54.620" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:14:48.002" endtime="20230131 08:14:54.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:14:54.622" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:14:54.621" endtime="20230131 08:14:54.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:14:54.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:14:54.622" endtime="20230131 08:14:54.623"/>
</kw>
<status status="PASS" starttime="20230131 08:14:48.001" endtime="20230131 08:14:54.623"/>
</kw>
<msg timestamp="20230131 08:14:54.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:48.001" endtime="20230131 08:14:54.624"/>
</kw>
<msg timestamp="20230131 08:14:54.624" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:14:48.000" endtime="20230131 08:14:54.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:14:54.625" endtime="20230131 08:14:54.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:14:54.630" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///39460-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:00.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:00.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:14:54.627" endtime="20230131 08:15:00.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:00.638" level="INFO"/>
<status status="PASS" starttime="20230131 08:15:00.637" endtime="20230131 08:15:00.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:00.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:00.638" endtime="20230131 08:15:00.639"/>
</kw>
<status status="PASS" starttime="20230131 08:14:54.627" endtime="20230131 08:15:00.639"/>
</kw>
<msg timestamp="20230131 08:15:00.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:14:54.626" endtime="20230131 08:15:00.640"/>
</kw>
<status status="PASS" starttime="20230131 08:14:54.625" endtime="20230131 08:15:00.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:00.646" level="INFO">Running command 'ozone sh bucket info o3:///39460-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:07.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:07.283" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:15:00.643" endtime="20230131 08:15:07.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:07.285" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:15:07.284" endtime="20230131 08:15:07.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:07.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:07.285" endtime="20230131 08:15:07.286"/>
</kw>
<status status="PASS" starttime="20230131 08:15:00.642" endtime="20230131 08:15:07.287"/>
</kw>
<msg timestamp="20230131 08:15:07.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:00.642" endtime="20230131 08:15:07.287"/>
</kw>
<msg timestamp="20230131 08:15:07.288" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:15:00.641" endtime="20230131 08:15:07.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:15:07.288" endtime="20230131 08:15:07.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:07.295" level="INFO">Running command 'ozone sh bucket delete o3:///39460-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:13.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:13.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:15:07.292" endtime="20230131 08:15:13.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:13.464" level="INFO"/>
<status status="PASS" starttime="20230131 08:15:13.463" endtime="20230131 08:15:13.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:13.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:13.465" endtime="20230131 08:15:13.466"/>
</kw>
<status status="PASS" starttime="20230131 08:15:07.291" endtime="20230131 08:15:13.467"/>
</kw>
<msg timestamp="20230131 08:15:13.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:07.290" endtime="20230131 08:15:13.468"/>
</kw>
<status status="PASS" starttime="20230131 08:15:07.289" endtime="20230131 08:15:13.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:13.474" level="INFO">Running command 'ozone sh volume delete o3:///39460-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:20.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:20.037" level="INFO">${output} = Volume 39460-without-host is deleted</msg>
<status status="PASS" starttime="20230131 08:15:13.471" endtime="20230131 08:15:20.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:20.039" level="INFO">Volume 39460-without-host is deleted</msg>
<status status="PASS" starttime="20230131 08:15:20.037" endtime="20230131 08:15:20.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:20.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:20.039" endtime="20230131 08:15:20.040"/>
</kw>
<status status="PASS" starttime="20230131 08:15:13.470" endtime="20230131 08:15:20.040"/>
</kw>
<msg timestamp="20230131 08:15:20.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:13.469" endtime="20230131 08:15:20.041"/>
</kw>
<status status="PASS" starttime="20230131 08:15:13.468" endtime="20230131 08:15:20.042"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:20.047" level="INFO">Running command 'ozone sh volume create o3:///39460-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:25.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:25.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:15:20.044" endtime="20230131 08:15:25.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:25.958" level="INFO"/>
<status status="PASS" starttime="20230131 08:15:25.957" endtime="20230131 08:15:25.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:25.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:25.958" endtime="20230131 08:15:25.959"/>
</kw>
<status status="PASS" starttime="20230131 08:15:20.043" endtime="20230131 08:15:25.960"/>
</kw>
<msg timestamp="20230131 08:15:25.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:20.043" endtime="20230131 08:15:25.961"/>
</kw>
<status status="PASS" starttime="20230131 08:15:20.042" endtime="20230131 08:15:25.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:25.966" level="INFO">Running command 'ozone sh volume info o3:///39460-without-host | jq -r '. | select(.name=="39460-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:32.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:32.718" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:15:25.963" endtime="20230131 08:15:32.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:32.721" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:15:32.719" endtime="20230131 08:15:32.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:32.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:32.721" endtime="20230131 08:15:32.722"/>
</kw>
<status status="PASS" starttime="20230131 08:15:25.963" endtime="20230131 08:15:32.724"/>
</kw>
<msg timestamp="20230131 08:15:32.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:25.963" endtime="20230131 08:15:32.725"/>
</kw>
<msg timestamp="20230131 08:15:32.725" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:15:25.961" endtime="20230131 08:15:32.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:15:32.726" endtime="20230131 08:15:32.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:32.733" level="INFO">Running command 'ozone sh volume info o3:///39460-without-host | jq -r '. | select(.name=="39460-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:39.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:39.606" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230131 08:15:32.730" endtime="20230131 08:15:39.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:39.608" level="INFO">-1</msg>
<status status="PASS" starttime="20230131 08:15:39.607" endtime="20230131 08:15:39.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:39.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:39.609" endtime="20230131 08:15:39.609"/>
</kw>
<status status="PASS" starttime="20230131 08:15:32.729" endtime="20230131 08:15:39.610"/>
</kw>
<msg timestamp="20230131 08:15:39.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:32.728" endtime="20230131 08:15:39.610"/>
</kw>
<msg timestamp="20230131 08:15:39.611" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230131 08:15:32.727" endtime="20230131 08:15:39.611"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230131 08:15:39.611" endtime="20230131 08:15:39.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:39.620" level="INFO">Running command 'ozone sh bucket create o3:///39460-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:45.012" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230131 08:15:39.616" endtime="20230131 08:15:45.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230131 08:15:45.013" endtime="20230131 08:15:45.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230131 08:15:45.014" endtime="20230131 08:15:45.014"/>
</kw>
<status status="FAIL" starttime="20230131 08:15:39.614" endtime="20230131 08:15:45.014"/>
</kw>
<msg timestamp="20230131 08:15:45.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230131 08:15:39.614" endtime="20230131 08:15:45.015"/>
</kw>
<status status="FAIL" starttime="20230131 08:15:39.612" endtime="20230131 08:15:45.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20230131 08:15:45.016" endtime="20230131 08:15:45.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:15:45.016" endtime="20230131 08:15:45.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20230131 08:15:45.016" endtime="20230131 08:15:45.017"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230131 08:15:45.017" endtime="20230131 08:15:45.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20230131 08:15:45.017" endtime="20230131 08:15:45.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20230131 08:15:45.017" endtime="20230131 08:15:45.017"/>
</kw>
<status status="FAIL" starttime="20230131 08:10:45.083" endtime="20230131 08:15:45.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230131 08:10:45.011" endtime="20230131 08:15:45.018">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230131 08:01:22.425" endtime="20230131 08:15:45.023"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:45.079" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:45.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:45.099" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 08:15:45.067" endtime="20230131 08:15:45.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:45.101" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 08:15:45.100" endtime="20230131 08:15:45.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:45.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:45.101" endtime="20230131 08:15:45.102"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.065" endtime="20230131 08:15:45.102"/>
</kw>
<msg timestamp="20230131 08:15:45.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:45.065" endtime="20230131 08:15:45.103"/>
</kw>
<msg timestamp="20230131 08:15:45.103" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 08:15:45.063" endtime="20230131 08:15:45.103"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 08:15:45.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 08:15:45.106" endtime="20230131 08:15:45.111"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:45.126" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:45.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:45.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 08:15:45.115" endtime="20230131 08:15:45.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:45.221" level="INFO"/>
<status status="PASS" starttime="20230131 08:15:45.220" endtime="20230131 08:15:45.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:45.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:45.222" endtime="20230131 08:15:45.222"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.115" endtime="20230131 08:15:45.223"/>
</kw>
<msg timestamp="20230131 08:15:45.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:45.114" endtime="20230131 08:15:45.223"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.112" endtime="20230131 08:15:45.224"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.111" endtime="20230131 08:15:45.224"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.061" endtime="20230131 08:15:45.224"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.061" endtime="20230131 08:15:45.224"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230131 08:15:45.226" level="INFO">${random} = YSV3cs4Vo0</msg>
<status status="PASS" starttime="20230131 08:15:45.224" endtime="20230131 08:15:45.226"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:45.245" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p YSV3cs4Vo0 --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:15:55.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:15:55.862" level="INFO">${output} = 2023-01-31 08:15:48,597 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 08:15:48,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 08:15:45.235" endtime="20230131 08:15:55.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:15:55.864" level="INFO">2023-01-31 08:15:48,597 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 08:15:48,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-31 08:15:48,758 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-31 08:15:49,070 [main] INFO freon.BaseFreonGenerator: Executing test with prefix YSV3cs4Vo0 and number-of-tests 1
2023-01-31 08:15:49,166 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:15:50,172 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:15:51,173 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:15:52,173 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:15:52,195 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-31 08:15:52,277 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-31 08:15:52,689 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-31 08:15:53,174 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:15:54,175 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:15:55,176 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-31 08:15:55,474 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2921.778582, max=2921.778582, mean=2921.778582, stddev=0.0, median=2921.778582, p75=2921.778582, p95=2921.778582, p98=2921.778582, p99=2921.778582, p999=2921.778582, mean_rate=0.24556375255765328, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-31 08:15:55,475 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-31 08:15:55,475 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-31 08:15:55,475 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230131 08:15:55.863" endtime="20230131 08:15:55.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:15:55.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:15:55.865" endtime="20230131 08:15:55.866"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.233" endtime="20230131 08:15:55.866"/>
</kw>
<msg timestamp="20230131 08:15:55.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:45.231" endtime="20230131 08:15:55.867"/>
</kw>
<msg timestamp="20230131 08:15:55.868" level="INFO">${result} = 2023-01-31 08:15:48,597 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 08:15:48,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 08:15:45.229" endtime="20230131 08:15:55.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:15:55.868" endtime="20230131 08:15:55.869"/>
</kw>
<status status="PASS" starttime="20230131 08:15:45.226" endtime="20230131 08:15:55.869"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 08:15:55.877" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p YSV3cs4Vo0  2&gt;&amp;1'.</msg>
<msg timestamp="20230131 08:16:05.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 08:16:05.812" level="INFO">${output} = 2023-01-31 08:15:58,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 08:15:59,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 08:15:55.873" endtime="20230131 08:16:05.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 08:16:05.813" level="INFO">2023-01-31 08:15:58,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 08:15:59,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-31 08:15:59,033 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-31 08:15:59,344 [main] INFO freon.BaseFreonGenerator: Executing test with prefix YSV3cs4Vo0 and number-of-tests 1
2023-01-31 08:15:59,470 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:16:00,487 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:16:01,488 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:16:02,488 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:16:02,501 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-31 08:16:03,489 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-31 08:16:04,489 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-31 08:16:05,282 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=66.25556, max=66.25556, mean=66.25556, stddev=0.0, median=66.25556, p75=66.25556, p95=66.25556, p98=66.25556, p99=66.25556, p999=66.25556, mean_rate=0.9401868781063968, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-31 08:16:05,284 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-31 08:16:05,286 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-31 08:16:05,286 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230131 08:16:05.812" endtime="20230131 08:16:05.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 08:16:05.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 08:16:05.814" endtime="20230131 08:16:05.815"/>
</kw>
<status status="PASS" starttime="20230131 08:15:55.873" endtime="20230131 08:16:05.815"/>
</kw>
<msg timestamp="20230131 08:16:05.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 08:15:55.872" endtime="20230131 08:16:05.816"/>
</kw>
<msg timestamp="20230131 08:16:05.817" level="INFO">${result} = 2023-01-31 08:15:58,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-31 08:15:59,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230131 08:15:55.871" endtime="20230131 08:16:05.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230131 08:16:05.817" endtime="20230131 08:16:05.818"/>
</kw>
<status status="PASS" starttime="20230131 08:15:55.870" endtime="20230131 08:16:05.819"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230131 08:15:45.059" endtime="20230131 08:16:05.821"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230131 08:15:45.029" endtime="20230131 08:16:05.823"/>
</suite>
<status status="FAIL" starttime="20230131 07:49:17.593" endtime="20230131 08:16:05.827"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:09.336" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:09.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:09.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230131 07:49:09.324" endtime="20230131 07:49:09.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:09.345" level="INFO">scm</msg>
<status status="PASS" starttime="20230131 07:49:09.344" endtime="20230131 07:49:09.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:09.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:09.345" endtime="20230131 07:49:09.346"/>
</kw>
<status status="PASS" starttime="20230131 07:49:09.322" endtime="20230131 07:49:09.346"/>
</kw>
<msg timestamp="20230131 07:49:09.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:09.320" endtime="20230131 07:49:09.350"/>
</kw>
<msg timestamp="20230131 07:49:09.351" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230131 07:49:09.318" endtime="20230131 07:49:09.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230131 07:49:09.353" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230131 07:49:09.352" endtime="20230131 07:49:09.353"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230131 07:49:09.358" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230131 07:49:09.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20230131 07:49:09.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230131 07:49:09.355" endtime="20230131 07:49:09.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230131 07:49:09.389" level="INFO"/>
<status status="PASS" starttime="20230131 07:49:09.388" endtime="20230131 07:49:09.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230131 07:49:09.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230131 07:49:09.390" endtime="20230131 07:49:09.390"/>
</kw>
<status status="PASS" starttime="20230131 07:49:09.355" endtime="20230131 07:49:09.391"/>
</kw>
<msg timestamp="20230131 07:49:09.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230131 07:49:09.354" endtime="20230131 07:49:09.392"/>
</kw>
<status status="PASS" starttime="20230131 07:49:09.354" endtime="20230131 07:49:09.392"/>
</kw>
<status status="PASS" starttime="20230131 07:49:09.353" endtime="20230131 07:49:09.392"/>
</kw>
<status status="PASS" starttime="20230131 07:49:09.314" endtime="20230131 07:49:09.392"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230131 07:49:09.299" endtime="20230131 07:49:09.393"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230131 07:49:09.203" endtime="20230131 07:49:09.395"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1608426"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="29" fail="3" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="28" fail="3" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="5" fail="2" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
