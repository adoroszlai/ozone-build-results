<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230130 12:28:34.813" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:22.001" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:22.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:22.005" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:02:21.996" endtime="20230130 12:02:22.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:22.007" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:02:22.006" endtime="20230130 12:02:22.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:22.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:22.007" endtime="20230130 12:02:22.008"/>
</kw>
<status status="PASS" starttime="20230130 12:02:21.996" endtime="20230130 12:02:22.009"/>
</kw>
<msg timestamp="20230130 12:02:22.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:21.995" endtime="20230130 12:02:22.012"/>
</kw>
<msg timestamp="20230130 12:02:22.013" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20230130 12:02:21.995" endtime="20230130 12:02:22.013"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:22.017" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:22.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:22.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:02:22.015" endtime="20230130 12:02:22.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:22.041" level="INFO"/>
<status status="PASS" starttime="20230130 12:02:22.040" endtime="20230130 12:02:22.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:22.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:22.041" endtime="20230130 12:02:22.042"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.015" endtime="20230130 12:02:22.043"/>
</kw>
<msg timestamp="20230130 12:02:22.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:22.014" endtime="20230130 12:02:22.043"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.014" endtime="20230130 12:02:22.044"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.013" endtime="20230130 12:02:22.044"/>
</kw>
<status status="PASS" starttime="20230130 12:02:21.994" endtime="20230130 12:02:22.044"/>
</kw>
<status status="PASS" starttime="20230130 12:02:21.993" endtime="20230130 12:02:22.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:22.049" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:22.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:22.233" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230130 12:02:22.046" endtime="20230130 12:02:22.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:22.235" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 489

HTTP/1.1 200 OK
Date: Mon, 30 Jan 2023 12:02:22 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCq8KH5y2hL4QxVsc0shCq5ckALKDivit+Cp2ir28npzqfsCU9WWnOY3YFz7oaQcdN4yPQ6q7DKXScQGPri+7ctq9I
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1675116142222&amp;s=VXYi2wfbpr77znYXpekyTL62MCfsJoKja+FdpH/E4pc="; Path=/; HttpOnly
Last-Modified: Mon, 30 Jan 2023 11:44:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230130 12:02:22.234" endtime="20230130 12:02:22.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:22.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:22.236" endtime="20230130 12:02:22.237"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.045" endtime="20230130 12:02:22.237"/>
</kw>
<msg timestamp="20230130 12:02:22.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:22.045" endtime="20230130 12:02:22.238"/>
</kw>
<msg timestamp="20230130 12:02:22.238" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230130 12:02:22.044" endtime="20230130 12:02:22.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:22.239" endtime="20230130 12:02:22.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:02:21.992" endtime="20230130 12:02:22.241"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:22.250" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:22.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:22.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:02:22.247" endtime="20230130 12:02:22.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:22.262" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:02:22.261" endtime="20230130 12:02:22.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:22.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:22.263" endtime="20230130 12:02:22.264"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.246" endtime="20230130 12:02:22.265"/>
</kw>
<msg timestamp="20230130 12:02:22.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:22.246" endtime="20230130 12:02:22.265"/>
</kw>
<msg timestamp="20230130 12:02:22.266" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:02:22.245" endtime="20230130 12:02:22.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:02:22.269" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:02:22.266" endtime="20230130 12:02:22.269"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:22.275" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:22.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:22.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:02:22.272" endtime="20230130 12:02:22.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:22.328" level="INFO"/>
<status status="PASS" starttime="20230130 12:02:22.327" endtime="20230130 12:02:22.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:22.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:22.329" endtime="20230130 12:02:22.330"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.271" endtime="20230130 12:02:22.330"/>
</kw>
<msg timestamp="20230130 12:02:22.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:22.271" endtime="20230130 12:02:22.331"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.270" endtime="20230130 12:02:22.331"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.269" endtime="20230130 12:02:22.331"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.245" endtime="20230130 12:02:22.332"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.244" endtime="20230130 12:02:22.332"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:02:22.333" level="INFO">${random} = bz2gNt366B</msg>
<status status="PASS" starttime="20230130 12:02:22.332" endtime="20230130 12:02:22.333"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:22.342" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p bz2gNt366B  2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:35.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:35.226" level="INFO">${output} = 2023-01-30 12:02:25,451 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:02:25,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:02:22.338" endtime="20230130 12:02:35.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:35.228" level="INFO">2023-01-30 12:02:25,451 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:02:25,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-30 12:02:25,757 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-30 12:02:26,059 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bz2gNt366B and number-of-tests 1
2023-01-30 12:02:26,184 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:27,186 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:28,187 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:28,397 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-01-30 12:02:28,471 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2023-01-30 12:02:29,192 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:29,774 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-30 12:02:29,844 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-30 12:02:30,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:30,277 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-30 12:02:31,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:32,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:33,196 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:34,197 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-30 12:02:34,862 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5177.299175, max=5177.299175, mean=5177.299175, stddev=0.0, median=5177.299175, p75=5177.299175, p95=5177.299175, p98=5177.299175, p99=5177.299175, p999=5177.299175, mean_rate=0.15836486059262392, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-30 12:02:34,863 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-01-30 12:02:34,863 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-30 12:02:34,863 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230130 12:02:35.227" endtime="20230130 12:02:35.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:35.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:35.229" endtime="20230130 12:02:35.229"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.337" endtime="20230130 12:02:35.230"/>
</kw>
<msg timestamp="20230130 12:02:35.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:22.337" endtime="20230130 12:02:35.231"/>
</kw>
<msg timestamp="20230130 12:02:35.231" level="INFO">${result} = 2023-01-30 12:02:25,451 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:02:25,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:02:22.336" endtime="20230130 12:02:35.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:35.232" endtime="20230130 12:02:35.232"/>
</kw>
<status status="PASS" starttime="20230130 12:02:22.333" endtime="20230130 12:02:35.232"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:35.239" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p bz2gNt366B  2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:45.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:45.303" level="INFO">${output} = 2023-01-30 12:02:37,821 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:02:38,023 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:02:35.236" endtime="20230130 12:02:45.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:45.305" level="INFO">2023-01-30 12:02:37,821 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:02:38,023 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-30 12:02:38,024 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-30 12:02:38,375 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bz2gNt366B and number-of-tests 1
2023-01-30 12:02:38,514 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:39,523 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:40,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:41,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:41,632 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-30 12:02:42,529 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:43,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:02:44,531 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-30 12:02:44,667 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=77.883774, max=77.883774, mean=77.883774, stddev=0.0, median=77.883774, p75=77.883774, p95=77.883774, p98=77.883774, p99=77.883774, p999=77.883774, mean_rate=0.9233453551975235, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-30 12:02:44,672 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-30 12:02:44,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-30 12:02:44,674 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230130 12:02:45.304" endtime="20230130 12:02:45.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:45.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:45.306" endtime="20230130 12:02:45.307"/>
</kw>
<status status="PASS" starttime="20230130 12:02:35.235" endtime="20230130 12:02:45.307"/>
</kw>
<msg timestamp="20230130 12:02:45.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:35.235" endtime="20230130 12:02:45.312"/>
</kw>
<msg timestamp="20230130 12:02:45.312" level="INFO">${result} = 2023-01-30 12:02:37,821 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:02:38,023 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:02:35.234" endtime="20230130 12:02:45.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:45.313" endtime="20230130 12:02:45.313"/>
</kw>
<status status="PASS" starttime="20230130 12:02:35.232" endtime="20230130 12:02:45.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:02:22.243" endtime="20230130 12:02:45.318"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230130 12:02:21.942" endtime="20230130 12:02:45.320"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:45.341" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:47.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:47.371" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230130 12:02:45.338" endtime="20230130 12:02:47.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:47.373" level="INFO">om</msg>
<status status="PASS" starttime="20230130 12:02:47.372" endtime="20230130 12:02:47.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:47.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:47.373" endtime="20230130 12:02:47.374"/>
</kw>
<status status="PASS" starttime="20230130 12:02:45.337" endtime="20230130 12:02:47.374"/>
</kw>
<msg timestamp="20230130 12:02:47.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:45.337" endtime="20230130 12:02:47.375"/>
</kw>
<msg timestamp="20230130 12:02:47.375" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230130 12:02:45.336" endtime="20230130 12:02:47.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:47.376" endtime="20230130 12:02:47.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:47.382" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:49.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:49.476" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230130 12:02:47.378" endtime="20230130 12:02:49.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:49.478" level="INFO">om</msg>
<status status="PASS" starttime="20230130 12:02:49.477" endtime="20230130 12:02:49.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:49.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:49.478" endtime="20230130 12:02:49.479"/>
</kw>
<status status="PASS" starttime="20230130 12:02:47.377" endtime="20230130 12:02:49.480"/>
</kw>
<msg timestamp="20230130 12:02:49.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:47.377" endtime="20230130 12:02:49.481"/>
</kw>
<msg timestamp="20230130 12:02:49.481" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230130 12:02:47.376" endtime="20230130 12:02:49.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:49.481" endtime="20230130 12:02:49.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:02:45.335" endtime="20230130 12:02:49.482"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:49.490" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:51.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:51.624" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:02:49.486" endtime="20230130 12:02:51.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:51.625" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:02:51.624" endtime="20230130 12:02:51.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:51.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:51.626" endtime="20230130 12:02:51.626"/>
</kw>
<status status="PASS" starttime="20230130 12:02:49.486" endtime="20230130 12:02:51.627"/>
</kw>
<msg timestamp="20230130 12:02:51.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:49.485" endtime="20230130 12:02:51.627"/>
</kw>
<msg timestamp="20230130 12:02:51.628" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230130 12:02:49.485" endtime="20230130 12:02:51.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:51.628" endtime="20230130 12:02:51.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:51.633" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:54.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:54.124" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:02:51.631" endtime="20230130 12:02:54.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:54.125" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:02:54.124" endtime="20230130 12:02:54.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:54.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:54.126" endtime="20230130 12:02:54.126"/>
</kw>
<status status="PASS" starttime="20230130 12:02:51.630" endtime="20230130 12:02:54.127"/>
</kw>
<msg timestamp="20230130 12:02:54.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:51.630" endtime="20230130 12:02:54.128"/>
</kw>
<msg timestamp="20230130 12:02:54.128" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230130 12:02:51.629" endtime="20230130 12:02:54.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:54.129" endtime="20230130 12:02:54.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:02:49.484" endtime="20230130 12:02:54.129"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:54.137" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:56.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:56.134" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230130 12:02:54.134" endtime="20230130 12:02:56.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:56.136" level="INFO">om</msg>
<status status="PASS" starttime="20230130 12:02:56.135" endtime="20230130 12:02:56.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:56.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:56.136" endtime="20230130 12:02:56.137"/>
</kw>
<status status="PASS" starttime="20230130 12:02:54.133" endtime="20230130 12:02:56.137"/>
</kw>
<msg timestamp="20230130 12:02:56.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:54.132" endtime="20230130 12:02:56.138"/>
</kw>
<msg timestamp="20230130 12:02:56.139" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230130 12:02:54.132" endtime="20230130 12:02:56.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:56.139" endtime="20230130 12:02:56.140"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:56.140" endtime="20230130 12:02:56.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:56.146" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:57.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:57.936" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230130 12:02:56.143" endtime="20230130 12:02:57.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:57.938" level="INFO">om</msg>
<status status="PASS" starttime="20230130 12:02:57.937" endtime="20230130 12:02:57.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:57.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:57.939" endtime="20230130 12:02:57.939"/>
</kw>
<status status="PASS" starttime="20230130 12:02:56.142" endtime="20230130 12:02:57.940"/>
</kw>
<msg timestamp="20230130 12:02:57.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:56.141" endtime="20230130 12:02:57.941"/>
</kw>
<msg timestamp="20230130 12:02:57.941" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230130 12:02:56.140" endtime="20230130 12:02:57.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:57.943" endtime="20230130 12:02:57.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:57.943" endtime="20230130 12:02:57.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:02:54.131" endtime="20230130 12:02:57.944"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:57.950" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:59.746" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:02:59.746" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230130 12:02:57.947" endtime="20230130 12:02:59.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:59.748" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230130 12:02:59.747" endtime="20230130 12:02:59.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:59.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:59.748" endtime="20230130 12:02:59.749"/>
</kw>
<msg timestamp="20230130 12:02:59.750" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230130 12:02:57.947" endtime="20230130 12:02:59.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:02:59.750" endtime="20230130 12:02:59.751"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:59.755" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:01.755" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:03:01.755" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230130 12:02:59.752" endtime="20230130 12:03:01.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:01.757" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230130 12:03:01.756" endtime="20230130 12:03:01.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:01.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:01.758" endtime="20230130 12:03:01.758"/>
</kw>
<msg timestamp="20230130 12:03:01.759" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230130 12:02:59.751" endtime="20230130 12:03:01.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:03:01.759" endtime="20230130 12:03:01.760"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:02:57.945" endtime="20230130 12:03:01.760"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230130 12:02:45.326" endtime="20230130 12:03:01.764"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:03:01.787" level="INFO">${random} = 72719</msg>
<status status="PASS" starttime="20230130 12:03:01.787" endtime="20230130 12:03:01.787"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:03:01.789" level="INFO">${source} = 72719-source</msg>
<status status="PASS" starttime="20230130 12:03:01.788" endtime="20230130 12:03:01.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:03:01.791" level="INFO">${target} = 72719-target</msg>
<status status="PASS" starttime="20230130 12:03:01.790" endtime="20230130 12:03:01.791"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:01.795" level="INFO">Running command 'ozone sh volume create 72719-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:08.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:08.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:01.792" endtime="20230130 12:03:08.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:08.004" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:08.003" endtime="20230130 12:03:08.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:08.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:08.004" endtime="20230130 12:03:08.005"/>
</kw>
<status status="PASS" starttime="20230130 12:03:01.792" endtime="20230130 12:03:08.005"/>
</kw>
<msg timestamp="20230130 12:03:08.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:01.791" endtime="20230130 12:03:08.006"/>
</kw>
<status status="PASS" starttime="20230130 12:03:01.791" endtime="20230130 12:03:08.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:08.011" level="INFO">Running command 'ozone sh volume create 72719-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:13.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:13.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:08.008" endtime="20230130 12:03:13.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:13.399" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:13.398" endtime="20230130 12:03:13.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:13.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:13.399" endtime="20230130 12:03:13.400"/>
</kw>
<status status="PASS" starttime="20230130 12:03:08.008" endtime="20230130 12:03:13.401"/>
</kw>
<msg timestamp="20230130 12:03:13.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:08.007" endtime="20230130 12:03:13.402"/>
</kw>
<status status="PASS" starttime="20230130 12:03:08.007" endtime="20230130 12:03:13.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:13.409" level="INFO">Running command 'ozone sh bucket create 72719-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:18.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:18.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:13.405" endtime="20230130 12:03:18.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:18.965" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:18.964" endtime="20230130 12:03:18.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:18.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:18.965" endtime="20230130 12:03:18.965"/>
</kw>
<status status="PASS" starttime="20230130 12:03:13.405" endtime="20230130 12:03:18.966"/>
</kw>
<msg timestamp="20230130 12:03:18.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:13.404" endtime="20230130 12:03:18.967"/>
</kw>
<status status="PASS" starttime="20230130 12:03:13.403" endtime="20230130 12:03:18.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:18.972" level="INFO">Running command 'ozone sh key put 72719-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:27.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:27.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:18.969" endtime="20230130 12:03:27.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:27.837" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:27.836" endtime="20230130 12:03:27.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:27.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:27.838" endtime="20230130 12:03:27.838"/>
</kw>
<status status="PASS" starttime="20230130 12:03:18.968" endtime="20230130 12:03:27.839"/>
</kw>
<msg timestamp="20230130 12:03:27.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:18.968" endtime="20230130 12:03:27.840"/>
</kw>
<status status="PASS" starttime="20230130 12:03:18.967" endtime="20230130 12:03:27.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:27.844" level="INFO">Running command 'ozone sh bucket create 72719-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:33.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:33.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:27.842" endtime="20230130 12:03:33.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:33.838" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:33.837" endtime="20230130 12:03:33.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:33.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:33.838" endtime="20230130 12:03:33.841"/>
</kw>
<status status="PASS" starttime="20230130 12:03:27.841" endtime="20230130 12:03:33.841"/>
</kw>
<msg timestamp="20230130 12:03:33.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:27.841" endtime="20230130 12:03:33.842"/>
</kw>
<status status="PASS" starttime="20230130 12:03:27.840" endtime="20230130 12:03:33.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:33.848" level="INFO">Running command 'ozone sh bucket link 72719-source/readable-bucket 72719-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:39.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:39.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:33.845" endtime="20230130 12:03:39.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:39.674" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:39.673" endtime="20230130 12:03:39.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:39.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:39.674" endtime="20230130 12:03:39.675"/>
</kw>
<status status="PASS" starttime="20230130 12:03:33.844" endtime="20230130 12:03:39.675"/>
</kw>
<msg timestamp="20230130 12:03:39.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:33.844" endtime="20230130 12:03:39.676"/>
</kw>
<status status="PASS" starttime="20230130 12:03:33.843" endtime="20230130 12:03:39.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:39.681" level="INFO">Running command 'ozone sh bucket link 72719-source/readable-bucket 72719-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:45.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:45.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:39.678" endtime="20230130 12:03:45.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:45.772" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:45.771" endtime="20230130 12:03:45.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:45.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:45.772" endtime="20230130 12:03:45.773"/>
</kw>
<status status="PASS" starttime="20230130 12:03:39.677" endtime="20230130 12:03:45.773"/>
</kw>
<msg timestamp="20230130 12:03:45.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:39.677" endtime="20230130 12:03:45.774"/>
</kw>
<status status="PASS" starttime="20230130 12:03:39.676" endtime="20230130 12:03:45.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:45.778" level="INFO">Running command 'ozone sh bucket link 72719-source/unreadable-bucket 72719-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:50.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:50.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:03:45.776" endtime="20230130 12:03:50.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:50.987" level="INFO"/>
<status status="PASS" starttime="20230130 12:03:50.986" endtime="20230130 12:03:50.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:50.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:50.987" endtime="20230130 12:03:50.988"/>
</kw>
<status status="PASS" starttime="20230130 12:03:45.775" endtime="20230130 12:03:50.989"/>
</kw>
<msg timestamp="20230130 12:03:50.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:45.775" endtime="20230130 12:03:50.989"/>
</kw>
<status status="PASS" starttime="20230130 12:03:45.774" endtime="20230130 12:03:50.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:50.995" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 72719-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:03:56.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:03:56.582" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:03:50.991" endtime="20230130 12:03:56.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:03:56.585" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:03:56.583" endtime="20230130 12:03:56.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:03:56.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:03:56.586" endtime="20230130 12:03:56.586"/>
</kw>
<status status="PASS" starttime="20230130 12:03:50.991" endtime="20230130 12:03:56.587"/>
</kw>
<msg timestamp="20230130 12:03:56.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:50.991" endtime="20230130 12:03:56.588"/>
</kw>
<status status="PASS" starttime="20230130 12:03:50.990" endtime="20230130 12:03:56.588"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:03:56.593" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 72719-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:02.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:02.354" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:03:56.590" endtime="20230130 12:04:02.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:02.355" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:02.355" endtime="20230130 12:04:02.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:02.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:02.356" endtime="20230130 12:04:02.357"/>
</kw>
<status status="PASS" starttime="20230130 12:03:56.589" endtime="20230130 12:04:02.357"/>
</kw>
<msg timestamp="20230130 12:04:02.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:03:56.589" endtime="20230130 12:04:02.358"/>
</kw>
<status status="PASS" starttime="20230130 12:03:56.588" endtime="20230130 12:04:02.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:02.364" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 72719-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:08.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:08.273" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:02.361" endtime="20230130 12:04:08.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:08.275" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:08.274" endtime="20230130 12:04:08.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:08.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:08.275" endtime="20230130 12:04:08.276"/>
</kw>
<status status="PASS" starttime="20230130 12:04:02.360" endtime="20230130 12:04:08.276"/>
</kw>
<msg timestamp="20230130 12:04:08.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:02.360" endtime="20230130 12:04:08.277"/>
</kw>
<status status="PASS" starttime="20230130 12:04:02.359" endtime="20230130 12:04:08.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:08.282" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 72719-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:13.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:13.353" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:08.279" endtime="20230130 12:04:13.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:13.355" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:13.354" endtime="20230130 12:04:13.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:13.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:13.355" endtime="20230130 12:04:13.356"/>
</kw>
<status status="PASS" starttime="20230130 12:04:08.279" endtime="20230130 12:04:13.357"/>
</kw>
<msg timestamp="20230130 12:04:13.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:08.278" endtime="20230130 12:04:13.357"/>
</kw>
<status status="PASS" starttime="20230130 12:04:08.277" endtime="20230130 12:04:13.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:13.362" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 72719-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:19.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:19.230" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:13.359" endtime="20230130 12:04:19.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:19.231" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:04:19.231" endtime="20230130 12:04:19.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:19.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:19.232" endtime="20230130 12:04:19.232"/>
</kw>
<status status="PASS" starttime="20230130 12:04:13.359" endtime="20230130 12:04:19.233"/>
</kw>
<msg timestamp="20230130 12:04:19.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:13.358" endtime="20230130 12:04:19.234"/>
</kw>
<status status="PASS" starttime="20230130 12:04:13.358" endtime="20230130 12:04:19.234"/>
</kw>
<status status="PASS" starttime="20230130 12:03:13.403" endtime="20230130 12:04:19.234"/>
</kw>
<status status="PASS" starttime="20230130 12:03:13.402" endtime="20230130 12:04:19.234"/>
</kw>
<status status="PASS" starttime="20230130 12:03:01.786" endtime="20230130 12:04:19.235"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:19.242" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:19.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:19.246" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:04:19.239" endtime="20230130 12:04:19.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:19.247" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:04:19.247" endtime="20230130 12:04:19.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:19.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:19.248" endtime="20230130 12:04:19.249"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.238" endtime="20230130 12:04:19.249"/>
</kw>
<msg timestamp="20230130 12:04:19.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:19.238" endtime="20230130 12:04:19.250"/>
</kw>
<msg timestamp="20230130 12:04:19.250" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:04:19.238" endtime="20230130 12:04:19.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:04:19.253" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:04:19.251" endtime="20230130 12:04:19.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:19.258" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:19.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:19.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:19.255" endtime="20230130 12:04:19.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:19.281" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:19.280" endtime="20230130 12:04:19.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:19.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:19.282" endtime="20230130 12:04:19.283"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.255" endtime="20230130 12:04:19.283"/>
</kw>
<msg timestamp="20230130 12:04:19.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:19.254" endtime="20230130 12:04:19.284"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.254" endtime="20230130 12:04:19.284"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.253" endtime="20230130 12:04:19.284"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.237" endtime="20230130 12:04:19.284"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.236" endtime="20230130 12:04:19.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:19.290" level="INFO">Running command 'ozone sh bucket link 72719-source/no-such-bucket 72719-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:24.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:24.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:19.287" endtime="20230130 12:04:24.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:24.678" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:24.677" endtime="20230130 12:04:24.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:24.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:24.679" endtime="20230130 12:04:24.679"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.287" endtime="20230130 12:04:24.680"/>
</kw>
<msg timestamp="20230130 12:04:24.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:19.286" endtime="20230130 12:04:24.680"/>
</kw>
<status status="PASS" starttime="20230130 12:04:19.285" endtime="20230130 12:04:24.681"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:24.685" level="INFO">Running command 'ozone sh key list 72719-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:30.019" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:04:30.019" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230130 12:04:24.682" endtime="20230130 12:04:30.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:30.021" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230130 12:04:30.020" endtime="20230130 12:04:30.021"/>
</kw>
<msg timestamp="20230130 12:04:30.021" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230130 12:04:24.681" endtime="20230130 12:04:30.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:04:30.022" endtime="20230130 12:04:30.022"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:04:19.235" endtime="20230130 12:04:30.023"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:30.032" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:30.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:30.037" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:04:30.029" endtime="20230130 12:04:30.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:30.039" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:04:30.038" endtime="20230130 12:04:30.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:30.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:30.039" endtime="20230130 12:04:30.040"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.028" endtime="20230130 12:04:30.040"/>
</kw>
<msg timestamp="20230130 12:04:30.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:30.028" endtime="20230130 12:04:30.041"/>
</kw>
<msg timestamp="20230130 12:04:30.042" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:04:30.027" endtime="20230130 12:04:30.042"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:04:30.043" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:04:30.042" endtime="20230130 12:04:30.043"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:30.048" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:30.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:30.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:30.046" endtime="20230130 12:04:30.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:30.072" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:30.071" endtime="20230130 12:04:30.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:30.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:30.072" endtime="20230130 12:04:30.073"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.045" endtime="20230130 12:04:30.073"/>
</kw>
<msg timestamp="20230130 12:04:30.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:30.045" endtime="20230130 12:04:30.074"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.044" endtime="20230130 12:04:30.074"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.043" endtime="20230130 12:04:30.074"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.027" endtime="20230130 12:04:30.074"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.026" endtime="20230130 12:04:30.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:30.080" level="INFO">Running command 'ozone sh bucket link 72719-source/bucket1 72719-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:36.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:36.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:30.077" endtime="20230130 12:04:36.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:36.324" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:36.323" endtime="20230130 12:04:36.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:36.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:36.324" endtime="20230130 12:04:36.325"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.076" endtime="20230130 12:04:36.325"/>
</kw>
<msg timestamp="20230130 12:04:36.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:30.076" endtime="20230130 12:04:36.326"/>
</kw>
<status status="PASS" starttime="20230130 12:04:30.075" endtime="20230130 12:04:36.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:36.333" level="INFO">Running command 'ozone sh bucket create 72719-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:41.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:41.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:36.328" endtime="20230130 12:04:41.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:41.841" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:41.840" endtime="20230130 12:04:41.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:41.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:41.841" endtime="20230130 12:04:41.842"/>
</kw>
<status status="PASS" starttime="20230130 12:04:36.327" endtime="20230130 12:04:41.842"/>
</kw>
<msg timestamp="20230130 12:04:41.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:36.327" endtime="20230130 12:04:41.843"/>
</kw>
<status status="PASS" starttime="20230130 12:04:36.326" endtime="20230130 12:04:41.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:41.856" level="INFO">Running command 'ozone sh key put 72719-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:51.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:51.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:41.845" endtime="20230130 12:04:51.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:51.273" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:51.272" endtime="20230130 12:04:51.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:51.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:51.273" endtime="20230130 12:04:51.274"/>
</kw>
<status status="PASS" starttime="20230130 12:04:41.844" endtime="20230130 12:04:51.274"/>
</kw>
<msg timestamp="20230130 12:04:51.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:41.844" endtime="20230130 12:04:51.275"/>
</kw>
<status status="PASS" starttime="20230130 12:04:41.843" endtime="20230130 12:04:51.275"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:04:51.280" level="INFO">${postfix} = 86549</msg>
<status status="PASS" starttime="20230130 12:04:51.279" endtime="20230130 12:04:51.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230130 12:04:51.281" level="INFO">${tmpfile} = /tmp/tempkey-86549</msg>
<status status="PASS" starttime="20230130 12:04:51.280" endtime="20230130 12:04:51.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:51.285" level="INFO">Running command 'ozone sh key get 72719-target/link1/key1 /tmp/tempkey-86549 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:59.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:59.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:51.283" endtime="20230130 12:04:59.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:59.395" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:59.394" endtime="20230130 12:04:59.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:59.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:59.396" endtime="20230130 12:04:59.396"/>
</kw>
<status status="PASS" starttime="20230130 12:04:51.282" endtime="20230130 12:04:59.397"/>
</kw>
<msg timestamp="20230130 12:04:59.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:51.282" endtime="20230130 12:04:59.397"/>
</kw>
<status status="PASS" starttime="20230130 12:04:51.281" endtime="20230130 12:04:59.398"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230130 12:04:59.401" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-86549 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:59.404" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230130 12:04:59.398" endtime="20230130 12:04:59.404"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:59.412" level="INFO">Running command 'rm -f /tmp/tempkey-86549 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:59.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:59.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:59.409" endtime="20230130 12:04:59.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:59.418" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:59.417" endtime="20230130 12:04:59.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:59.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:59.419" endtime="20230130 12:04:59.419"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.408" endtime="20230130 12:04:59.420"/>
</kw>
<msg timestamp="20230130 12:04:59.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:59.406" endtime="20230130 12:04:59.421"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.405" endtime="20230130 12:04:59.422"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230130 12:04:59.423" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230130 12:04:59.422" endtime="20230130 12:04:59.423"/>
</kw>
<msg timestamp="20230130 12:04:59.423" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230130 12:04:51.278" endtime="20230130 12:04:59.423"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230130 12:04:59.423" endtime="20230130 12:04:59.424"/>
</kw>
<status status="PASS" starttime="20230130 12:04:51.276" endtime="20230130 12:04:59.424"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:04:30.025" endtime="20230130 12:04:59.424"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:59.432" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:59.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:59.436" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:04:59.429" endtime="20230130 12:04:59.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:59.437" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:04:59.436" endtime="20230130 12:04:59.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:59.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:59.438" endtime="20230130 12:04:59.438"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.428" endtime="20230130 12:04:59.439"/>
</kw>
<msg timestamp="20230130 12:04:59.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:59.428" endtime="20230130 12:04:59.439"/>
</kw>
<msg timestamp="20230130 12:04:59.440" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:04:59.428" endtime="20230130 12:04:59.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:04:59.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:04:59.440" endtime="20230130 12:04:59.440"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:59.446" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:04:59.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:04:59.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:59.443" endtime="20230130 12:04:59.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:04:59.480" level="INFO"/>
<status status="PASS" starttime="20230130 12:04:59.480" endtime="20230130 12:04:59.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:04:59.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:04:59.481" endtime="20230130 12:04:59.481"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.443" endtime="20230130 12:04:59.482"/>
</kw>
<msg timestamp="20230130 12:04:59.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:59.442" endtime="20230130 12:04:59.484"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.441" endtime="20230130 12:04:59.484"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.441" endtime="20230130 12:04:59.484"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.427" endtime="20230130 12:04:59.485"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.427" endtime="20230130 12:04:59.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:04:59.491" level="INFO">Running command 'ozone sh key put 72719-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:08.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:08.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:04:59.488" endtime="20230130 12:05:08.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:08.913" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:08.912" endtime="20230130 12:05:08.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:08.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:08.913" endtime="20230130 12:05:08.913"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.487" endtime="20230130 12:05:08.914"/>
</kw>
<msg timestamp="20230130 12:05:08.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:04:59.486" endtime="20230130 12:05:08.914"/>
</kw>
<status status="PASS" starttime="20230130 12:04:59.485" endtime="20230130 12:05:08.915"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:05:08.917" level="INFO">${postfix} = 01130</msg>
<status status="PASS" starttime="20230130 12:05:08.917" endtime="20230130 12:05:08.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230130 12:05:08.918" level="INFO">${tmpfile} = /tmp/tempkey-01130</msg>
<status status="PASS" starttime="20230130 12:05:08.918" endtime="20230130 12:05:08.918"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:08.924" level="INFO">Running command 'ozone sh key get 72719-source/bucket1/key2 /tmp/tempkey-01130 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:17.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:17.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:08.921" endtime="20230130 12:05:17.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:17.793" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:17.792" endtime="20230130 12:05:17.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:17.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:17.793" endtime="20230130 12:05:17.794"/>
</kw>
<status status="PASS" starttime="20230130 12:05:08.920" endtime="20230130 12:05:17.794"/>
</kw>
<msg timestamp="20230130 12:05:17.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:08.920" endtime="20230130 12:05:17.795"/>
</kw>
<status status="PASS" starttime="20230130 12:05:08.919" endtime="20230130 12:05:17.795"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230130 12:05:17.799" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-01130 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:17.802" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230130 12:05:17.796" endtime="20230130 12:05:17.802"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:17.808" level="INFO">Running command 'rm -f /tmp/tempkey-01130 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:17.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:17.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:17.805" endtime="20230130 12:05:17.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:17.812" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:17.812" endtime="20230130 12:05:17.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:17.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:17.813" endtime="20230130 12:05:17.814"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.805" endtime="20230130 12:05:17.814"/>
</kw>
<msg timestamp="20230130 12:05:17.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:17.804" endtime="20230130 12:05:17.815"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.803" endtime="20230130 12:05:17.815"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230130 12:05:17.816" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230130 12:05:17.815" endtime="20230130 12:05:17.816"/>
</kw>
<msg timestamp="20230130 12:05:17.816" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230130 12:05:08.916" endtime="20230130 12:05:17.816"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230130 12:05:17.816" endtime="20230130 12:05:17.817"/>
</kw>
<status status="PASS" starttime="20230130 12:05:08.915" endtime="20230130 12:05:17.817"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:04:59.425" endtime="20230130 12:05:17.817"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:17.824" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:17.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:17.829" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:05:17.822" endtime="20230130 12:05:17.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:17.830" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:05:17.829" endtime="20230130 12:05:17.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:17.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:17.830" endtime="20230130 12:05:17.831"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.822" endtime="20230130 12:05:17.831"/>
</kw>
<msg timestamp="20230130 12:05:17.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:17.821" endtime="20230130 12:05:17.832"/>
</kw>
<msg timestamp="20230130 12:05:17.832" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:05:17.821" endtime="20230130 12:05:17.832"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:05:17.833" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:05:17.832" endtime="20230130 12:05:17.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:17.838" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:17.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:17.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:17.836" endtime="20230130 12:05:17.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:17.871" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:17.870" endtime="20230130 12:05:17.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:17.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:17.872" endtime="20230130 12:05:17.872"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.836" endtime="20230130 12:05:17.873"/>
</kw>
<msg timestamp="20230130 12:05:17.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:17.835" endtime="20230130 12:05:17.874"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.834" endtime="20230130 12:05:17.874"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.834" endtime="20230130 12:05:17.874"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.820" endtime="20230130 12:05:17.874"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.820" endtime="20230130 12:05:17.874"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:17.880" level="INFO">Running command 'ozone sh key list 72719-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:24.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:24.259" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230130 12:05:17.876" endtime="20230130 12:05:24.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:24.261" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230130 12:05:24.259" endtime="20230130 12:05:24.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:24.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:24.261" endtime="20230130 12:05:24.262"/>
</kw>
<status status="PASS" starttime="20230130 12:05:17.876" endtime="20230130 12:05:24.262"/>
</kw>
<msg timestamp="20230130 12:05:24.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:17.875" endtime="20230130 12:05:24.263"/>
</kw>
<msg timestamp="20230130 12:05:24.263" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230130 12:05:17.875" endtime="20230130 12:05:24.263"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:24.269" level="INFO">Running command 'ozone sh key list 72719-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:30.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:30.153" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230130 12:05:24.266" endtime="20230130 12:05:30.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:30.155" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230130 12:05:30.153" endtime="20230130 12:05:30.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:30.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:30.155" endtime="20230130 12:05:30.156"/>
</kw>
<status status="PASS" starttime="20230130 12:05:24.265" endtime="20230130 12:05:30.156"/>
</kw>
<msg timestamp="20230130 12:05:30.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:24.265" endtime="20230130 12:05:30.157"/>
</kw>
<msg timestamp="20230130 12:05:30.157" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230130 12:05:24.264" endtime="20230130 12:05:30.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:05:30.158" endtime="20230130 12:05:30.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:30.159" endtime="20230130 12:05:30.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:30.159" endtime="20230130 12:05:30.160"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:05:17.819" endtime="20230130 12:05:30.160"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:30.167" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:30.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:30.171" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:05:30.165" endtime="20230130 12:05:30.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:30.172" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:05:30.171" endtime="20230130 12:05:30.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:30.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:30.172" endtime="20230130 12:05:30.173"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.164" endtime="20230130 12:05:30.174"/>
</kw>
<msg timestamp="20230130 12:05:30.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:30.163" endtime="20230130 12:05:30.175"/>
</kw>
<msg timestamp="20230130 12:05:30.175" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:05:30.163" endtime="20230130 12:05:30.175"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:05:30.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:05:30.175" endtime="20230130 12:05:30.176"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:30.182" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:30.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:30.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:30.179" endtime="20230130 12:05:30.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:30.211" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:30.210" endtime="20230130 12:05:30.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:30.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:30.211" endtime="20230130 12:05:30.212"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.178" endtime="20230130 12:05:30.214"/>
</kw>
<msg timestamp="20230130 12:05:30.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:30.178" endtime="20230130 12:05:30.215"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.177" endtime="20230130 12:05:30.215"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.176" endtime="20230130 12:05:30.215"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.162" endtime="20230130 12:05:30.215"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.162" endtime="20230130 12:05:30.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:30.220" level="INFO">Running command 'ozone sh key delete 72719-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:36.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:36.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:30.217" endtime="20230130 12:05:36.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:36.442" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:36.441" endtime="20230130 12:05:36.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:36.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:36.442" endtime="20230130 12:05:36.443"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.217" endtime="20230130 12:05:36.443"/>
</kw>
<msg timestamp="20230130 12:05:36.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:30.216" endtime="20230130 12:05:36.444"/>
</kw>
<status status="PASS" starttime="20230130 12:05:30.215" endtime="20230130 12:05:36.444"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:36.449" level="INFO">Running command 'ozone sh key list 72719-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:42.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:42.507" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230130 12:05:36.446" endtime="20230130 12:05:42.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:42.511" level="INFO">key1</msg>
<status status="PASS" starttime="20230130 12:05:42.508" endtime="20230130 12:05:42.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:42.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:42.511" endtime="20230130 12:05:42.513"/>
</kw>
<status status="PASS" starttime="20230130 12:05:36.446" endtime="20230130 12:05:42.514"/>
</kw>
<msg timestamp="20230130 12:05:42.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:36.445" endtime="20230130 12:05:42.514"/>
</kw>
<msg timestamp="20230130 12:05:42.515" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230130 12:05:36.444" endtime="20230130 12:05:42.515"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:42.515" endtime="20230130 12:05:42.516"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:05:30.161" endtime="20230130 12:05:42.516"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:42.525" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:42.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:42.530" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:05:42.522" endtime="20230130 12:05:42.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:42.531" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:05:42.531" endtime="20230130 12:05:42.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:42.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:42.532" endtime="20230130 12:05:42.534"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.521" endtime="20230130 12:05:42.534"/>
</kw>
<msg timestamp="20230130 12:05:42.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:42.521" endtime="20230130 12:05:42.535"/>
</kw>
<msg timestamp="20230130 12:05:42.535" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:05:42.520" endtime="20230130 12:05:42.535"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:05:42.536" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:05:42.535" endtime="20230130 12:05:42.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:42.543" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:42.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:42.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:42.539" endtime="20230130 12:05:42.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:42.569" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:42.568" endtime="20230130 12:05:42.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:42.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:42.570" endtime="20230130 12:05:42.571"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.538" endtime="20230130 12:05:42.571"/>
</kw>
<msg timestamp="20230130 12:05:42.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:42.538" endtime="20230130 12:05:42.572"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.537" endtime="20230130 12:05:42.572"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.536" endtime="20230130 12:05:42.573"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.519" endtime="20230130 12:05:42.573"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.519" endtime="20230130 12:05:42.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:42.579" level="INFO">Running command 'ozone sh bucket list 72719-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:49.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:49.082" level="INFO">${output} = [ {
  "volumeName" : "72719-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-30T12:04:24.581Z",
  "modific...</msg>
<status status="PASS" starttime="20230130 12:05:42.576" endtime="20230130 12:05:49.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:49.083" level="INFO">[ {
  "volumeName" : "72719-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-30T12:04:24.581Z",
  "modificationTime" : "2023-01-30T12:04:24.581Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-30T12:03:50.777Z",
  "modificationTime" : "2023-01-30T12:04:19.039Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "link1",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:04:36.106Z",
  "modificationTime" : "2023-01-30T12:04:36.106Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-30T12:03:39.584Z",
  "modificationTime" : "2023-01-30T12:04:13.174Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-30T12:03:45.691Z",
  "modificationTime" : "2023-01-30T12:03:45.691Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230130 12:05:49.082" endtime="20230130 12:05:49.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:49.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:49.084" endtime="20230130 12:05:49.085"/>
</kw>
<status status="PASS" starttime="20230130 12:05:42.575" endtime="20230130 12:05:49.085"/>
</kw>
<msg timestamp="20230130 12:05:49.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:42.574" endtime="20230130 12:05:49.086"/>
</kw>
<msg timestamp="20230130 12:05:49.086" level="INFO">${result} = [ {
  "volumeName" : "72719-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-30T12:04:24.581Z",
  "modific...</msg>
<status status="PASS" starttime="20230130 12:05:42.573" endtime="20230130 12:05:49.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:49.086" endtime="20230130 12:05:49.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:49.087" endtime="20230130 12:05:49.087"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:05:42.518" endtime="20230130 12:05:49.088"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:49.095" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:49.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:49.101" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:05:49.093" endtime="20230130 12:05:49.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:49.102" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:05:49.102" endtime="20230130 12:05:49.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:49.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:49.103" endtime="20230130 12:05:49.103"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.092" endtime="20230130 12:05:49.104"/>
</kw>
<msg timestamp="20230130 12:05:49.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:49.092" endtime="20230130 12:05:49.105"/>
</kw>
<msg timestamp="20230130 12:05:49.105" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:05:49.091" endtime="20230130 12:05:49.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:05:49.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:05:49.106" endtime="20230130 12:05:49.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:49.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:49.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:49.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:49.110" endtime="20230130 12:05:49.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:49.142" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:49.141" endtime="20230130 12:05:49.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:49.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:49.143" endtime="20230130 12:05:49.143"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.109" endtime="20230130 12:05:49.144"/>
</kw>
<msg timestamp="20230130 12:05:49.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:49.108" endtime="20230130 12:05:49.144"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.107" endtime="20230130 12:05:49.145"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.107" endtime="20230130 12:05:49.145"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.091" endtime="20230130 12:05:49.145"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.090" endtime="20230130 12:05:49.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:49.150" level="INFO">Running command 'ozone sh bucket info 72719-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:55.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:55.021" level="INFO">${output} = {
  "volumeName" : "72719-target",
  "bucketName" : "link1",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:04:36.106Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230130 12:05:49.147" endtime="20230130 12:05:55.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:55.023" level="INFO">{
  "volumeName" : "72719-target",
  "bucketName" : "link1",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:04:36.106Z",
  "modificationTime" : "2023-01-30T12:04:36.106Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230130 12:05:55.022" endtime="20230130 12:05:55.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:55.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:55.023" endtime="20230130 12:05:55.024"/>
</kw>
<status status="PASS" starttime="20230130 12:05:49.147" endtime="20230130 12:05:55.025"/>
</kw>
<msg timestamp="20230130 12:05:55.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:49.146" endtime="20230130 12:05:55.026"/>
</kw>
<msg timestamp="20230130 12:05:55.027" level="INFO">${result} = {
  "volumeName" : "72719-target",
  "bucketName" : "link1",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:04:36.106Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230130 12:05:49.145" endtime="20230130 12:05:55.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.027" endtime="20230130 12:05:55.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.028" endtime="20230130 12:05:55.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.029" endtime="20230130 12:05:55.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.029" endtime="20230130 12:05:55.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.030" endtime="20230130 12:05:55.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.031" endtime="20230130 12:05:55.031"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:05:55.031" endtime="20230130 12:05:55.032"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:05:49.089" endtime="20230130 12:05:55.032"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:55.040" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:55.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:55.045" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:05:55.037" endtime="20230130 12:05:55.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:55.046" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:05:55.045" endtime="20230130 12:05:55.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:55.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:55.047" endtime="20230130 12:05:55.047"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.036" endtime="20230130 12:05:55.048"/>
</kw>
<msg timestamp="20230130 12:05:55.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:55.036" endtime="20230130 12:05:55.048"/>
</kw>
<msg timestamp="20230130 12:05:55.049" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:05:55.036" endtime="20230130 12:05:55.049"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:05:55.050" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:05:55.049" endtime="20230130 12:05:55.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:55.056" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:05:55.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:05:55.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:05:55.053" endtime="20230130 12:05:55.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:05:55.180" level="INFO"/>
<status status="PASS" starttime="20230130 12:05:55.179" endtime="20230130 12:05:55.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:05:55.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:05:55.181" endtime="20230130 12:05:55.182"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.052" endtime="20230130 12:05:55.182"/>
</kw>
<msg timestamp="20230130 12:05:55.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:55.051" endtime="20230130 12:05:55.183"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.050" endtime="20230130 12:05:55.183"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.050" endtime="20230130 12:05:55.183"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.035" endtime="20230130 12:05:55.184"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.034" endtime="20230130 12:05:55.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:05:55.189" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 72719-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:00.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:00.696" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:05:55.186" endtime="20230130 12:06:00.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:00.697" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:06:00.696" endtime="20230130 12:06:00.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:00.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:00.698" endtime="20230130 12:06:00.698"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.185" endtime="20230130 12:06:00.699"/>
</kw>
<msg timestamp="20230130 12:06:00.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:05:55.185" endtime="20230130 12:06:00.699"/>
</kw>
<status status="PASS" starttime="20230130 12:05:55.184" endtime="20230130 12:06:00.700"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:00.709" level="INFO">Running command 'ozone sh bucket getacl 72719-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:06.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:06.838" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230130 12:06:00.703" endtime="20230130 12:06:06.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:06.840" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230130 12:06:06.838" endtime="20230130 12:06:06.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:06.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:06.840" endtime="20230130 12:06:06.841"/>
</kw>
<status status="PASS" starttime="20230130 12:06:00.703" endtime="20230130 12:06:06.841"/>
</kw>
<msg timestamp="20230130 12:06:06.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:00.702" endtime="20230130 12:06:06.842"/>
</kw>
<msg timestamp="20230130 12:06:06.842" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230130 12:06:00.701" endtime="20230130 12:06:06.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:06:06.842" endtime="20230130 12:06:06.843"/>
</kw>
<status status="PASS" starttime="20230130 12:06:00.700" endtime="20230130 12:06:06.843"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:06.851" level="INFO">Running command 'ozone sh bucket getacl 72719-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:12.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:12.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:06.848" endtime="20230130 12:06:12.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:12.934" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:12.932" endtime="20230130 12:06:12.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:12.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:12.934" endtime="20230130 12:06:12.935"/>
</kw>
<status status="PASS" starttime="20230130 12:06:06.847" endtime="20230130 12:06:12.935"/>
</kw>
<msg timestamp="20230130 12:06:12.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:06.847" endtime="20230130 12:06:12.936"/>
</kw>
<msg timestamp="20230130 12:06:12.937" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230130 12:06:06.846" endtime="20230130 12:06:12.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:06:12.937" endtime="20230130 12:06:12.938"/>
</kw>
<status status="PASS" starttime="20230130 12:06:06.844" endtime="20230130 12:06:12.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:12.945" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 72719-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:18.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:18.489" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:06:12.942" endtime="20230130 12:06:18.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:18.491" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:06:18.490" endtime="20230130 12:06:18.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:18.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:18.491" endtime="20230130 12:06:18.492"/>
</kw>
<status status="PASS" starttime="20230130 12:06:12.941" endtime="20230130 12:06:18.492"/>
</kw>
<msg timestamp="20230130 12:06:18.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:12.939" endtime="20230130 12:06:18.493"/>
</kw>
<status status="PASS" starttime="20230130 12:06:12.938" endtime="20230130 12:06:18.493"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:18.499" level="INFO">Running command 'ozone sh bucket getacl 72719-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:24.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:24.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:18.497" endtime="20230130 12:06:24.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:24.736" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:24.735" endtime="20230130 12:06:24.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:24.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:24.736" endtime="20230130 12:06:24.737"/>
</kw>
<status status="PASS" starttime="20230130 12:06:18.496" endtime="20230130 12:06:24.738"/>
</kw>
<msg timestamp="20230130 12:06:24.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:18.496" endtime="20230130 12:06:24.738"/>
</kw>
<msg timestamp="20230130 12:06:24.739" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230130 12:06:18.495" endtime="20230130 12:06:24.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:06:24.739" endtime="20230130 12:06:24.740"/>
</kw>
<status status="PASS" starttime="20230130 12:06:18.494" endtime="20230130 12:06:24.740"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:24.747" level="INFO">Running command 'ozone sh bucket getacl 72719-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:31.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:31.017" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230130 12:06:24.744" endtime="20230130 12:06:31.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:31.019" level="INFO">READ</msg>
<status status="PASS" starttime="20230130 12:06:31.018" endtime="20230130 12:06:31.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:31.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:31.019" endtime="20230130 12:06:31.019"/>
</kw>
<status status="PASS" starttime="20230130 12:06:24.743" endtime="20230130 12:06:31.020"/>
</kw>
<msg timestamp="20230130 12:06:31.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:24.742" endtime="20230130 12:06:31.020"/>
</kw>
<msg timestamp="20230130 12:06:31.021" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230130 12:06:24.741" endtime="20230130 12:06:31.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:06:31.021" endtime="20230130 12:06:31.022"/>
</kw>
<status status="PASS" starttime="20230130 12:06:24.740" endtime="20230130 12:06:31.022"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:05:55.033" endtime="20230130 12:06:31.022"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:31.034" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:31.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:31.038" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:06:31.031" endtime="20230130 12:06:31.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:31.041" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:06:31.040" endtime="20230130 12:06:31.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:31.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:31.042" endtime="20230130 12:06:31.043"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.030" endtime="20230130 12:06:31.043"/>
</kw>
<msg timestamp="20230130 12:06:31.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:31.029" endtime="20230130 12:06:31.044"/>
</kw>
<msg timestamp="20230130 12:06:31.044" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:06:31.029" endtime="20230130 12:06:31.044"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:06:31.045" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:06:31.044" endtime="20230130 12:06:31.045"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:31.051" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:31.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:31.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:31.048" endtime="20230130 12:06:31.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:31.094" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:31.094" endtime="20230130 12:06:31.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:31.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:31.095" endtime="20230130 12:06:31.095"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.048" endtime="20230130 12:06:31.096"/>
</kw>
<msg timestamp="20230130 12:06:31.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:31.047" endtime="20230130 12:06:31.097"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.046" endtime="20230130 12:06:31.097"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.045" endtime="20230130 12:06:31.097"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.028" endtime="20230130 12:06:31.097"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.027" endtime="20230130 12:06:31.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:31.103" level="INFO">Running command 'ozone sh bucket link 72719-source/bucket2 72719-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:36.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:36.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:31.100" endtime="20230130 12:06:36.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:36.903" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:36.902" endtime="20230130 12:06:36.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:36.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:36.904" endtime="20230130 12:06:36.905"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.099" endtime="20230130 12:06:36.905"/>
</kw>
<msg timestamp="20230130 12:06:36.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:31.099" endtime="20230130 12:06:36.906"/>
</kw>
<status status="PASS" starttime="20230130 12:06:31.098" endtime="20230130 12:06:36.906"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:36.911" level="INFO">Running command 'ozone sh bucket create 72719-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:42.376" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:06:42.376" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230130 12:06:36.908" endtime="20230130 12:06:42.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:42.377" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230130 12:06:42.376" endtime="20230130 12:06:42.377"/>
</kw>
<msg timestamp="20230130 12:06:42.378" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230130 12:06:36.907" endtime="20230130 12:06:42.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:06:42.378" endtime="20230130 12:06:42.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:42.384" level="INFO">Running command 'ozone sh bucket create 72719-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:47.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:47.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:42.381" endtime="20230130 12:06:47.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:47.897" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:47.896" endtime="20230130 12:06:47.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:47.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:47.898" endtime="20230130 12:06:47.898"/>
</kw>
<status status="PASS" starttime="20230130 12:06:42.380" endtime="20230130 12:06:47.899"/>
</kw>
<msg timestamp="20230130 12:06:47.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:42.380" endtime="20230130 12:06:47.899"/>
</kw>
<status status="PASS" starttime="20230130 12:06:42.379" endtime="20230130 12:06:47.899"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:47.903" level="INFO">Running command 'ozone sh bucket link 72719-source/bucket1 72719-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:53.286" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:06:53.286" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230130 12:06:47.900" endtime="20230130 12:06:53.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:53.287" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230130 12:06:53.286" endtime="20230130 12:06:53.287"/>
</kw>
<msg timestamp="20230130 12:06:53.288" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230130 12:06:47.900" endtime="20230130 12:06:53.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:06:53.288" endtime="20230130 12:06:53.289"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:06:31.026" endtime="20230130 12:06:53.289"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:53.299" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:53.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:53.304" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:06:53.295" endtime="20230130 12:06:53.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:53.305" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:06:53.304" endtime="20230130 12:06:53.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:53.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:53.305" endtime="20230130 12:06:53.306"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.295" endtime="20230130 12:06:53.307"/>
</kw>
<msg timestamp="20230130 12:06:53.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:53.294" endtime="20230130 12:06:53.307"/>
</kw>
<msg timestamp="20230130 12:06:53.308" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:06:53.294" endtime="20230130 12:06:53.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:06:53.309" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:06:53.308" endtime="20230130 12:06:53.309"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:53.315" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:53.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:53.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:53.312" endtime="20230130 12:06:53.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:53.366" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:53.365" endtime="20230130 12:06:53.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:53.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:53.366" endtime="20230130 12:06:53.367"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.311" endtime="20230130 12:06:53.367"/>
</kw>
<msg timestamp="20230130 12:06:53.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:53.311" endtime="20230130 12:06:53.368"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.310" endtime="20230130 12:06:53.369"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.310" endtime="20230130 12:06:53.369"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.293" endtime="20230130 12:06:53.369"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.292" endtime="20230130 12:06:53.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:53.376" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:53.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:53.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:53.373" endtime="20230130 12:06:53.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:53.385" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:53.383" endtime="20230130 12:06:53.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:53.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:53.386" endtime="20230130 12:06:53.387"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.372" endtime="20230130 12:06:53.387"/>
</kw>
<msg timestamp="20230130 12:06:53.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:53.371" endtime="20230130 12:06:53.388"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.371" endtime="20230130 12:06:53.388"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:53.394" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:53.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:53.399" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:06:53.392" endtime="20230130 12:06:53.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:53.401" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:06:53.400" endtime="20230130 12:06:53.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:53.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:53.401" endtime="20230130 12:06:53.402"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.391" endtime="20230130 12:06:53.403"/>
</kw>
<msg timestamp="20230130 12:06:53.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:53.391" endtime="20230130 12:06:53.403"/>
</kw>
<msg timestamp="20230130 12:06:53.404" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:06:53.390" endtime="20230130 12:06:53.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:06:53.405" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:06:53.404" endtime="20230130 12:06:53.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:53.411" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:53.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:53.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:06:53.408" endtime="20230130 12:06:53.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:53.446" level="INFO"/>
<status status="PASS" starttime="20230130 12:06:53.445" endtime="20230130 12:06:53.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:06:53.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:06:53.446" endtime="20230130 12:06:53.447"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.408" endtime="20230130 12:06:53.447"/>
</kw>
<msg timestamp="20230130 12:06:53.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:53.407" endtime="20230130 12:06:53.450"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.406" endtime="20230130 12:06:53.450"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.406" endtime="20230130 12:06:53.451"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.389" endtime="20230130 12:06:53.451"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.389" endtime="20230130 12:06:53.451"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:06:53.455" level="INFO">Running command 'ozone sh key list 72719-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:06:59.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:06:59.989" level="INFO">${output} = [ {
  "volumeName" : "72719-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-30T12:03:24.631Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230130 12:06:53.452" endtime="20230130 12:06:59.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:06:59.991" level="INFO">[ {
  "volumeName" : "72719-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-30T12:03:24.631Z",
  "modificationTime" : "2023-01-30T12:03:27.345Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230130 12:06:59.990" endtime="20230130 12:06:59.991"/>
</kw>
<msg timestamp="20230130 12:06:59.992" level="INFO">${result} = [ {
  "volumeName" : "72719-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-30T12:03:24.631Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230130 12:06:53.451" endtime="20230130 12:06:59.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:06:59.992" endtime="20230130 12:06:59.992"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.370" endtime="20230130 12:06:59.993"/>
</kw>
<status status="PASS" starttime="20230130 12:06:53.370" endtime="20230130 12:06:59.993"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:06:53.291" endtime="20230130 12:06:59.994"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:00.012" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:00.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:00.018" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:06:59.999" endtime="20230130 12:07:00.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:00.020" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:07:00.019" endtime="20230130 12:07:00.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:00.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:00.020" endtime="20230130 12:07:00.021"/>
</kw>
<status status="PASS" starttime="20230130 12:06:59.998" endtime="20230130 12:07:00.022"/>
</kw>
<msg timestamp="20230130 12:07:00.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:06:59.998" endtime="20230130 12:07:00.022"/>
</kw>
<msg timestamp="20230130 12:07:00.023" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:06:59.997" endtime="20230130 12:07:00.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:07:00.026" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:07:00.025" endtime="20230130 12:07:00.026"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:00.032" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:00.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:00.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:00.030" endtime="20230130 12:07:00.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:00.111" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:00.110" endtime="20230130 12:07:00.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:00.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:00.111" endtime="20230130 12:07:00.112"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.029" endtime="20230130 12:07:00.113"/>
</kw>
<msg timestamp="20230130 12:07:00.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:00.029" endtime="20230130 12:07:00.113"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.027" endtime="20230130 12:07:00.114"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.027" endtime="20230130 12:07:00.114"/>
</kw>
<status status="PASS" starttime="20230130 12:06:59.997" endtime="20230130 12:07:00.114"/>
</kw>
<status status="PASS" starttime="20230130 12:06:59.996" endtime="20230130 12:07:00.114"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:00.120" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:00.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:00.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:00.117" endtime="20230130 12:07:00.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:00.126" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:00.126" endtime="20230130 12:07:00.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:00.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:00.127" endtime="20230130 12:07:00.128"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.116" endtime="20230130 12:07:00.128"/>
</kw>
<msg timestamp="20230130 12:07:00.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:00.116" endtime="20230130 12:07:00.131"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.116" endtime="20230130 12:07:00.131"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:00.138" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:00.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:00.142" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:07:00.135" endtime="20230130 12:07:00.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:00.144" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:07:00.143" endtime="20230130 12:07:00.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:00.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:00.144" endtime="20230130 12:07:00.146"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.134" endtime="20230130 12:07:00.146"/>
</kw>
<msg timestamp="20230130 12:07:00.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:00.133" endtime="20230130 12:07:00.147"/>
</kw>
<msg timestamp="20230130 12:07:00.147" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:07:00.132" endtime="20230130 12:07:00.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:07:00.148" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:07:00.147" endtime="20230130 12:07:00.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:00.156" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:00.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:00.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:00.154" endtime="20230130 12:07:00.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:00.199" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:00.198" endtime="20230130 12:07:00.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:00.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:00.200" endtime="20230130 12:07:00.201"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.150" endtime="20230130 12:07:00.201"/>
</kw>
<msg timestamp="20230130 12:07:00.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:00.150" endtime="20230130 12:07:00.202"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.149" endtime="20230130 12:07:00.202"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.149" endtime="20230130 12:07:00.202"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.132" endtime="20230130 12:07:00.202"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.131" endtime="20230130 12:07:00.202"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:00.207" level="INFO">Running command 'ozone sh key list 72719-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:05.823" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:07:05.823" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:72719-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230130 12:07:00.203" endtime="20230130 12:07:05.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:05.825" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:72719-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230130 12:07:05.824" endtime="20230130 12:07:05.825"/>
</kw>
<msg timestamp="20230130 12:07:05.825" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:72719-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230130 12:07:00.203" endtime="20230130 12:07:05.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:07:05.826" endtime="20230130 12:07:05.826"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.115" endtime="20230130 12:07:05.827"/>
</kw>
<status status="PASS" starttime="20230130 12:07:00.114" endtime="20230130 12:07:05.827"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:06:59.995" endtime="20230130 12:07:05.828"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:05.839" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:05.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:05.844" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:07:05.837" endtime="20230130 12:07:05.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:05.845" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:07:05.844" endtime="20230130 12:07:05.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:05.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:05.845" endtime="20230130 12:07:05.846"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.836" endtime="20230130 12:07:05.846"/>
</kw>
<msg timestamp="20230130 12:07:05.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:05.836" endtime="20230130 12:07:05.847"/>
</kw>
<msg timestamp="20230130 12:07:05.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:07:05.835" endtime="20230130 12:07:05.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:07:05.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:07:05.848" endtime="20230130 12:07:05.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:05.854" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:05.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:05.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:05.852" endtime="20230130 12:07:05.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:05.900" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:05.899" endtime="20230130 12:07:05.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:05.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:05.900" endtime="20230130 12:07:05.901"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.851" endtime="20230130 12:07:05.901"/>
</kw>
<msg timestamp="20230130 12:07:05.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:05.850" endtime="20230130 12:07:05.902"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.849" endtime="20230130 12:07:05.902"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.848" endtime="20230130 12:07:05.902"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.833" endtime="20230130 12:07:05.903"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.832" endtime="20230130 12:07:05.903"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:05.909" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:05.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:05.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:05.906" endtime="20230130 12:07:05.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:05.915" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:05.914" endtime="20230130 12:07:05.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:05.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:05.915" endtime="20230130 12:07:05.916"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.905" endtime="20230130 12:07:05.916"/>
</kw>
<msg timestamp="20230130 12:07:05.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:05.905" endtime="20230130 12:07:05.917"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.904" endtime="20230130 12:07:05.917"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:05.922" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:05.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:05.926" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:07:05.919" endtime="20230130 12:07:05.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:05.927" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:07:05.926" endtime="20230130 12:07:05.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:05.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:05.927" endtime="20230130 12:07:05.928"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.919" endtime="20230130 12:07:05.928"/>
</kw>
<msg timestamp="20230130 12:07:05.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:05.919" endtime="20230130 12:07:05.931"/>
</kw>
<msg timestamp="20230130 12:07:05.933" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:07:05.918" endtime="20230130 12:07:05.933"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:07:05.934" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:07:05.933" endtime="20230130 12:07:05.934"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:05.939" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:05.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:05.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:05.936" endtime="20230130 12:07:05.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:05.963" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:05.962" endtime="20230130 12:07:05.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:05.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:05.963" endtime="20230130 12:07:05.964"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.936" endtime="20230130 12:07:05.964"/>
</kw>
<msg timestamp="20230130 12:07:05.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:05.935" endtime="20230130 12:07:05.965"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.935" endtime="20230130 12:07:05.966"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.934" endtime="20230130 12:07:05.966"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.918" endtime="20230130 12:07:05.966"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.917" endtime="20230130 12:07:05.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:05.971" level="INFO">Running command 'ozone sh bucket info 72719-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:12.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:12.169" level="INFO">${output} = {
  "volumeName" : "72719-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-30T12:03:50.777Z...</msg>
<status status="PASS" starttime="20230130 12:07:05.968" endtime="20230130 12:07:12.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:12.171" level="INFO">{
  "volumeName" : "72719-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-30T12:03:50.777Z",
  "modificationTime" : "2023-01-30T12:04:19.039Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230130 12:07:12.170" endtime="20230130 12:07:12.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:12.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:12.172" endtime="20230130 12:07:12.173"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.968" endtime="20230130 12:07:12.173"/>
</kw>
<msg timestamp="20230130 12:07:12.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:05.967" endtime="20230130 12:07:12.174"/>
</kw>
<msg timestamp="20230130 12:07:12.174" level="INFO">${result} = {
  "volumeName" : "72719-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-30T12:03:50.777Z...</msg>
<status status="PASS" starttime="20230130 12:07:05.966" endtime="20230130 12:07:12.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:07:12.175" endtime="20230130 12:07:12.175"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:07:12.175" endtime="20230130 12:07:12.176"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:12.180" level="INFO">Running command 'ozone sh key list 72719-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:18.153" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:07:18.153" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:72719-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230130 12:07:12.177" endtime="20230130 12:07:18.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:18.154" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:72719-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230130 12:07:18.153" endtime="20230130 12:07:18.154"/>
</kw>
<msg timestamp="20230130 12:07:18.155" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:72719-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230130 12:07:12.176" endtime="20230130 12:07:18.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:07:18.155" endtime="20230130 12:07:18.156"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.904" endtime="20230130 12:07:18.156"/>
</kw>
<status status="PASS" starttime="20230130 12:07:05.903" endtime="20230130 12:07:18.156"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:07:05.831" endtime="20230130 12:07:18.156"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:18.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:18.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:18.171" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:07:18.163" endtime="20230130 12:07:18.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:18.172" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:07:18.171" endtime="20230130 12:07:18.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:18.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:18.173" endtime="20230130 12:07:18.174"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.162" endtime="20230130 12:07:18.174"/>
</kw>
<msg timestamp="20230130 12:07:18.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:18.161" endtime="20230130 12:07:18.175"/>
</kw>
<msg timestamp="20230130 12:07:18.175" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:07:18.161" endtime="20230130 12:07:18.175"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:07:18.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:07:18.176" endtime="20230130 12:07:18.176"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:18.183" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:18.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:18.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:18.180" endtime="20230130 12:07:18.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:18.230" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:18.229" endtime="20230130 12:07:18.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:18.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:18.231" endtime="20230130 12:07:18.231"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.179" endtime="20230130 12:07:18.232"/>
</kw>
<msg timestamp="20230130 12:07:18.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:18.178" endtime="20230130 12:07:18.233"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.177" endtime="20230130 12:07:18.233"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.177" endtime="20230130 12:07:18.233"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.160" endtime="20230130 12:07:18.233"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.159" endtime="20230130 12:07:18.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:18.239" level="INFO">Running command 'ozone sh bucket link 72719-target/loop1 72719-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:24.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:24.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:18.236" endtime="20230130 12:07:24.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:24.442" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:24.441" endtime="20230130 12:07:24.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:24.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:24.443" endtime="20230130 12:07:24.443"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.235" endtime="20230130 12:07:24.444"/>
</kw>
<msg timestamp="20230130 12:07:24.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:18.235" endtime="20230130 12:07:24.445"/>
</kw>
<status status="PASS" starttime="20230130 12:07:18.234" endtime="20230130 12:07:24.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:24.451" level="INFO">Running command 'ozone sh bucket link 72719-target/loop2 72719-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:30.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:30.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:24.448" endtime="20230130 12:07:30.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:30.451" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:30.450" endtime="20230130 12:07:30.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:30.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:30.452" endtime="20230130 12:07:30.452"/>
</kw>
<status status="PASS" starttime="20230130 12:07:24.447" endtime="20230130 12:07:30.453"/>
</kw>
<msg timestamp="20230130 12:07:30.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:24.447" endtime="20230130 12:07:30.453"/>
</kw>
<status status="PASS" starttime="20230130 12:07:24.445" endtime="20230130 12:07:30.454"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:30.460" level="INFO">Running command 'ozone sh bucket link 72719-target/loop3 72719-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:36.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:36.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:30.456" endtime="20230130 12:07:36.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:36.796" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:36.795" endtime="20230130 12:07:36.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:36.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:36.797" endtime="20230130 12:07:36.798"/>
</kw>
<status status="PASS" starttime="20230130 12:07:30.455" endtime="20230130 12:07:36.798"/>
</kw>
<msg timestamp="20230130 12:07:36.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:30.455" endtime="20230130 12:07:36.799"/>
</kw>
<status status="PASS" starttime="20230130 12:07:30.454" endtime="20230130 12:07:36.799"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:36.804" level="INFO">Running command 'ozone sh key list 72719-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:42.726" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:07:42.726" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 72719-target</msg>
<status status="PASS" starttime="20230130 12:07:36.800" endtime="20230130 12:07:42.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:42.728" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 72719-target</msg>
<status status="PASS" starttime="20230130 12:07:42.727" endtime="20230130 12:07:42.728"/>
</kw>
<msg timestamp="20230130 12:07:42.728" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 72719-target</msg>
<status status="PASS" starttime="20230130 12:07:36.800" endtime="20230130 12:07:42.729"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:07:42.729" endtime="20230130 12:07:42.729"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:07:18.158" endtime="20230130 12:07:42.730"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:42.739" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:42.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:42.744" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:07:42.735" endtime="20230130 12:07:42.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:42.745" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:07:42.744" endtime="20230130 12:07:42.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:42.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:42.745" endtime="20230130 12:07:42.746"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.734" endtime="20230130 12:07:42.747"/>
</kw>
<msg timestamp="20230130 12:07:42.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:42.734" endtime="20230130 12:07:42.747"/>
</kw>
<msg timestamp="20230130 12:07:42.748" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:07:42.733" endtime="20230130 12:07:42.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:07:42.749" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:07:42.748" endtime="20230130 12:07:42.749"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:42.754" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:42.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:42.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:42.751" endtime="20230130 12:07:42.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:42.776" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:42.776" endtime="20230130 12:07:42.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:42.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:42.776" endtime="20230130 12:07:42.777"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.751" endtime="20230130 12:07:42.777"/>
</kw>
<msg timestamp="20230130 12:07:42.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:42.750" endtime="20230130 12:07:42.778"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.749" endtime="20230130 12:07:42.778"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.749" endtime="20230130 12:07:42.778"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.733" endtime="20230130 12:07:42.779"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.732" endtime="20230130 12:07:42.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:42.784" level="INFO">Running command 'ozone sh bucket link 72719-source/bucket1 72719-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:48.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:48.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:42.781" endtime="20230130 12:07:48.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:48.198" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:48.197" endtime="20230130 12:07:48.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:48.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:48.198" endtime="20230130 12:07:48.200"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.780" endtime="20230130 12:07:48.200"/>
</kw>
<msg timestamp="20230130 12:07:48.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:42.780" endtime="20230130 12:07:48.201"/>
</kw>
<status status="PASS" starttime="20230130 12:07:42.779" endtime="20230130 12:07:48.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:48.206" level="INFO">Running command 'ozone sh key put 72719-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:07:56.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:07:56.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:48.203" endtime="20230130 12:07:56.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:07:56.853" level="INFO"/>
<status status="PASS" starttime="20230130 12:07:56.852" endtime="20230130 12:07:56.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:07:56.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:07:56.853" endtime="20230130 12:07:56.854"/>
</kw>
<status status="PASS" starttime="20230130 12:07:48.203" endtime="20230130 12:07:56.855"/>
</kw>
<msg timestamp="20230130 12:07:56.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:48.202" endtime="20230130 12:07:56.856"/>
</kw>
<status status="PASS" starttime="20230130 12:07:48.202" endtime="20230130 12:07:56.856"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:07:56.858" level="INFO">${postfix} = 63107</msg>
<status status="PASS" starttime="20230130 12:07:56.858" endtime="20230130 12:07:56.858"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230130 12:07:56.859" level="INFO">${tmpfile} = /tmp/tempkey-63107</msg>
<status status="PASS" starttime="20230130 12:07:56.859" endtime="20230130 12:07:56.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:07:56.864" level="INFO">Running command 'ozone sh key get 72719-target/link1/key3 /tmp/tempkey-63107 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:05.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:05.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:07:56.861" endtime="20230130 12:08:05.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:05.989" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:05.989" endtime="20230130 12:08:05.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:05.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:05.990" endtime="20230130 12:08:05.991"/>
</kw>
<status status="PASS" starttime="20230130 12:07:56.861" endtime="20230130 12:08:05.991"/>
</kw>
<msg timestamp="20230130 12:08:05.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:07:56.860" endtime="20230130 12:08:05.992"/>
</kw>
<status status="PASS" starttime="20230130 12:07:56.860" endtime="20230130 12:08:05.992"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230130 12:08:05.995" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-63107 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:05.998" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230130 12:08:05.992" endtime="20230130 12:08:05.998"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:06.005" level="INFO">Running command 'rm -f /tmp/tempkey-63107 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:06.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:06.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:08:06.002" endtime="20230130 12:08:06.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:06.009" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:06.008" endtime="20230130 12:08:06.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:06.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:06.009" endtime="20230130 12:08:06.010"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.001" endtime="20230130 12:08:06.010"/>
</kw>
<msg timestamp="20230130 12:08:06.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:06.000" endtime="20230130 12:08:06.011"/>
</kw>
<status status="PASS" starttime="20230130 12:08:05.999" endtime="20230130 12:08:06.012"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230130 12:08:06.013" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230130 12:08:06.012" endtime="20230130 12:08:06.013"/>
</kw>
<msg timestamp="20230130 12:08:06.013" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230130 12:07:56.857" endtime="20230130 12:08:06.013"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230130 12:08:06.014" endtime="20230130 12:08:06.014"/>
</kw>
<status status="PASS" starttime="20230130 12:07:56.857" endtime="20230130 12:08:06.014"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:07:42.731" endtime="20230130 12:08:06.015"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:06.023" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:06.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:06.026" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:08:06.020" endtime="20230130 12:08:06.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:06.027" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:08:06.027" endtime="20230130 12:08:06.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:06.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:06.028" endtime="20230130 12:08:06.028"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.019" endtime="20230130 12:08:06.029"/>
</kw>
<msg timestamp="20230130 12:08:06.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:06.019" endtime="20230130 12:08:06.029"/>
</kw>
<msg timestamp="20230130 12:08:06.030" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:08:06.018" endtime="20230130 12:08:06.030"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:08:06.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:08:06.030" endtime="20230130 12:08:06.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:06.036" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:06.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:06.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:08:06.033" endtime="20230130 12:08:06.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:06.105" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:06.103" endtime="20230130 12:08:06.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:06.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:06.105" endtime="20230130 12:08:06.106"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.033" endtime="20230130 12:08:06.106"/>
</kw>
<msg timestamp="20230130 12:08:06.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:06.032" endtime="20230130 12:08:06.107"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.031" endtime="20230130 12:08:06.107"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.031" endtime="20230130 12:08:06.108"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.018" endtime="20230130 12:08:06.108"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.017" endtime="20230130 12:08:06.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:06.113" level="INFO">Running command 'ozone sh bucket delete 72719-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:11.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:11.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:08:06.110" endtime="20230130 12:08:11.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:11.887" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:11.886" endtime="20230130 12:08:11.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:11.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:11.887" endtime="20230130 12:08:11.888"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.109" endtime="20230130 12:08:11.889"/>
</kw>
<msg timestamp="20230130 12:08:11.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:06.109" endtime="20230130 12:08:11.890"/>
</kw>
<status status="PASS" starttime="20230130 12:08:06.108" endtime="20230130 12:08:11.890"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:11.897" level="INFO">Running command 'ozone sh bucket list 72719-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:17.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:17.357" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "72719-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-3...</msg>
<status status="PASS" starttime="20230130 12:08:11.894" endtime="20230130 12:08:17.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:17.359" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "72719-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-30T12:06:47.816Z",
  "modificationTime" : "2023-01-30T12:06:47.816Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "72719-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-30T12:04:24.581Z",
  "modificationTime" : "2023-01-30T12:04:24.581Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-30T12:03:50.777Z",
  "modificationTime" : "2023-01-30T12:04:19.039Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "link2",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-01-30T12:06:36.812Z",
  "modificationTime" : "2023-01-30T12:06:36.812Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "link3",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:07:48.010Z",
  "modificationTime" : "2023-01-30T12:07:48.010Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "loop1",
  "sourceVolume" : "72719-target",
  "sourceBucket" : "loop3",
  "creationTime" : "2023-01-30T12:07:36.582Z",
  "modificationTime" : "2023-01-30T12:07:36.582Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "loop2",
  "sourceVolume" : "72719-target",
  "sourceBucket" : "loop1",
  "creationTime" : "2023-01-30T12:07:24.122Z",
  "modificationTime" : "2023-01-30T12:07:24.122Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "loop3",
  "sourceVolume" : "72719-target",
  "sourceBucket" : "loop2",
  "creationTime" : "2023-01-30T12:07:30.351Z",
  "modificationTime" : "2023-01-30T12:07:30.351Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-30T12:03:39.584Z",
  "modificationTime" : "2023-01-30T12:04:13.174Z",
  "owner" : "testuser"
}, {
  "volumeName" : "72719-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-30T12:03:45.691Z",
  "modificationTime" : "2023-01-30T12:03:45.691Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230130 12:08:17.358" endtime="20230130 12:08:17.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:17.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:17.360" endtime="20230130 12:08:17.361"/>
</kw>
<status status="PASS" starttime="20230130 12:08:11.893" endtime="20230130 12:08:17.361"/>
</kw>
<msg timestamp="20230130 12:08:17.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:11.893" endtime="20230130 12:08:17.362"/>
</kw>
<msg timestamp="20230130 12:08:17.363" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "72719-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-3...</msg>
<status status="PASS" starttime="20230130 12:08:11.892" endtime="20230130 12:08:17.363"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:08:17.363" endtime="20230130 12:08:17.363"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:17.369" level="INFO">Running command 'ozone sh key list 72719-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:23.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:23.554" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230130 12:08:17.367" endtime="20230130 12:08:23.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:23.556" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230130 12:08:23.555" endtime="20230130 12:08:23.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:23.556" endtime="20230130 12:08:23.557"/>
</kw>
<status status="PASS" starttime="20230130 12:08:17.365" endtime="20230130 12:08:23.557"/>
</kw>
<msg timestamp="20230130 12:08:23.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:17.364" endtime="20230130 12:08:23.558"/>
</kw>
<msg timestamp="20230130 12:08:23.558" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230130 12:08:17.364" endtime="20230130 12:08:23.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:08:23.559" endtime="20230130 12:08:23.559"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:08:06.016" endtime="20230130 12:08:23.560"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:23.568" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:23.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:23.572" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:08:23.565" endtime="20230130 12:08:23.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:23.574" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:08:23.573" endtime="20230130 12:08:23.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:23.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:23.574" endtime="20230130 12:08:23.575"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.565" endtime="20230130 12:08:23.576"/>
</kw>
<msg timestamp="20230130 12:08:23.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:23.564" endtime="20230130 12:08:23.577"/>
</kw>
<msg timestamp="20230130 12:08:23.577" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:08:23.564" endtime="20230130 12:08:23.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:08:23.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:08:23.578" endtime="20230130 12:08:23.579"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:23.586" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:23.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:23.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:08:23.583" endtime="20230130 12:08:23.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:23.627" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:23.626" endtime="20230130 12:08:23.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:23.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:23.628" endtime="20230130 12:08:23.628"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.582" endtime="20230130 12:08:23.629"/>
</kw>
<msg timestamp="20230130 12:08:23.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:23.581" endtime="20230130 12:08:23.630"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.580" endtime="20230130 12:08:23.630"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.580" endtime="20230130 12:08:23.630"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.563" endtime="20230130 12:08:23.630"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.562" endtime="20230130 12:08:23.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:23.636" level="INFO">Running command 'ozone sh bucket link 72719-source/bucket1 72719-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:29.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:29.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:08:23.633" endtime="20230130 12:08:29.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:29.220" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:29.219" endtime="20230130 12:08:29.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:29.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:29.220" endtime="20230130 12:08:29.221"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.632" endtime="20230130 12:08:29.222"/>
</kw>
<msg timestamp="20230130 12:08:29.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:23.632" endtime="20230130 12:08:29.222"/>
</kw>
<status status="PASS" starttime="20230130 12:08:23.631" endtime="20230130 12:08:29.222"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:29.226" level="INFO">Running command 'ozone sh bucket setquota 72719-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:35.104" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:08:35.104" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230130 12:08:29.223" endtime="20230130 12:08:35.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:35.105" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230130 12:08:35.104" endtime="20230130 12:08:35.106"/>
</kw>
<msg timestamp="20230130 12:08:35.106" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230130 12:08:29.223" endtime="20230130 12:08:35.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:08:35.106" endtime="20230130 12:08:35.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:35.113" level="INFO">Running command 'ozone sh bucket info 72719-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:41.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:41.172" level="INFO">${output} = {
  "volumeName" : "72719-target",
  "bucketName" : "link4",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:08:28.940Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230130 12:08:35.110" endtime="20230130 12:08:41.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:41.175" level="INFO">{
  "volumeName" : "72719-target",
  "bucketName" : "link4",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:08:28.940Z",
  "modificationTime" : "2023-01-30T12:08:28.940Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230130 12:08:41.173" endtime="20230130 12:08:41.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:41.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:41.175" endtime="20230130 12:08:41.176"/>
</kw>
<status status="PASS" starttime="20230130 12:08:35.109" endtime="20230130 12:08:41.176"/>
</kw>
<msg timestamp="20230130 12:08:41.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:35.108" endtime="20230130 12:08:41.177"/>
</kw>
<msg timestamp="20230130 12:08:41.177" level="INFO">${result} = {
  "volumeName" : "72719-target",
  "bucketName" : "link4",
  "sourceVolume" : "72719-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-30T12:08:28.940Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230130 12:08:35.107" endtime="20230130 12:08:41.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:08:41.178" endtime="20230130 12:08:41.178"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:08:23.561" endtime="20230130 12:08:41.179"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230130 12:03:01.767" endtime="20230130 12:08:41.182"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:08:41.220" level="INFO">${random} = 40768</msg>
<status status="PASS" starttime="20230130 12:08:41.219" endtime="20230130 12:08:41.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:08:41.220" level="INFO">${prefix} = 40768</msg>
<status status="PASS" starttime="20230130 12:08:41.220" endtime="20230130 12:08:41.220"/>
</kw>
<status status="PASS" starttime="20230130 12:08:41.218" endtime="20230130 12:08:41.220"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:41.227" level="INFO">Running command 'ozone sh volume info /40768-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:46.639" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:08:46.639" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40768-without-scheme is not found</msg>
<status status="PASS" starttime="20230130 12:08:41.224" endtime="20230130 12:08:46.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:46.640" level="INFO">VOLUME_NOT_FOUND Volume 40768-without-scheme is not found</msg>
<status status="PASS" starttime="20230130 12:08:46.640" endtime="20230130 12:08:46.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:46.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:46.641" endtime="20230130 12:08:46.641"/>
</kw>
<msg timestamp="20230130 12:08:46.642" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40768-without-scheme is not found</msg>
<status status="PASS" starttime="20230130 12:08:41.224" endtime="20230130 12:08:46.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:08:46.642" endtime="20230130 12:08:46.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:46.648" level="INFO">Running command 'ozone sh volume create /40768-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:52.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:52.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:08:46.645" endtime="20230130 12:08:52.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:52.133" level="INFO"/>
<status status="PASS" starttime="20230130 12:08:52.132" endtime="20230130 12:08:52.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:52.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:52.134" endtime="20230130 12:08:52.134"/>
</kw>
<status status="PASS" starttime="20230130 12:08:46.645" endtime="20230130 12:08:52.135"/>
</kw>
<msg timestamp="20230130 12:08:52.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:46.644" endtime="20230130 12:08:52.136"/>
</kw>
<msg timestamp="20230130 12:08:52.136" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:08:46.643" endtime="20230130 12:08:52.136"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230130 12:08:52.137" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230130 12:08:52.137" endtime="20230130 12:08:52.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:52.142" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="40768-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:08:58.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:08:58.247" level="INFO">${output} = {
  "metadata": {},
  "name": "40768-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230130 12:08:52.140" endtime="20230130 12:08:58.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:08:58.249" level="INFO">{
  "metadata": {},
  "name": "40768-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-30T12:08:51.963Z",
  "modificationTime": "2023-01-30T12:08:51.963Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230130 12:08:58.248" endtime="20230130 12:08:58.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:08:58.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:08:58.249" endtime="20230130 12:08:58.251"/>
</kw>
<status status="PASS" starttime="20230130 12:08:52.139" endtime="20230130 12:08:58.251"/>
</kw>
<msg timestamp="20230130 12:08:58.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:52.138" endtime="20230130 12:08:58.252"/>
</kw>
<msg timestamp="20230130 12:08:58.252" level="INFO">${result} = {
  "metadata": {},
  "name": "40768-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230130 12:08:52.137" endtime="20230130 12:08:58.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:08:58.253" endtime="20230130 12:08:58.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:08:58.258" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="40768-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:05.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:05.076" level="INFO">${output} = {
  "metadata": {},
  "name": "40768-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230130 12:08:58.256" endtime="20230130 12:09:05.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:05.077" level="INFO">{
  "metadata": {},
  "name": "40768-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-30T12:08:51.963Z",
  "modificationTime": "2023-01-30T12:08:51.963Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230130 12:09:05.076" endtime="20230130 12:09:05.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:05.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:05.077" endtime="20230130 12:09:05.078"/>
</kw>
<status status="PASS" starttime="20230130 12:08:58.255" endtime="20230130 12:09:05.079"/>
</kw>
<msg timestamp="20230130 12:09:05.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:08:58.254" endtime="20230130 12:09:05.080"/>
</kw>
<msg timestamp="20230130 12:09:05.080" level="INFO">${result} = {
  "metadata": {},
  "name": "40768-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230130 12:08:58.253" endtime="20230130 12:09:05.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:09:05.080" endtime="20230130 12:09:05.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:05.086" level="INFO">Running command 'ozone sh volume setquota /40768-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:10.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:10.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:09:05.083" endtime="20230130 12:09:10.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:10.547" level="INFO"/>
<status status="PASS" starttime="20230130 12:09:10.546" endtime="20230130 12:09:10.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:10.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:10.547" endtime="20230130 12:09:10.548"/>
</kw>
<status status="PASS" starttime="20230130 12:09:05.083" endtime="20230130 12:09:10.548"/>
</kw>
<msg timestamp="20230130 12:09:10.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:05.082" endtime="20230130 12:09:10.549"/>
</kw>
<status status="PASS" starttime="20230130 12:09:05.081" endtime="20230130 12:09:10.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:10.555" level="INFO">Running command 'ozone sh volume info /40768-without-scheme | jq -r '. | select(.name=="40768-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:16.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:16.292" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:09:10.552" endtime="20230130 12:09:16.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:16.294" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230130 12:09:16.293" endtime="20230130 12:09:16.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:16.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:16.294" endtime="20230130 12:09:16.295"/>
</kw>
<status status="PASS" starttime="20230130 12:09:10.552" endtime="20230130 12:09:16.296"/>
</kw>
<msg timestamp="20230130 12:09:16.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:10.551" endtime="20230130 12:09:16.297"/>
</kw>
<msg timestamp="20230130 12:09:16.297" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:09:10.550" endtime="20230130 12:09:16.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:09:16.297" endtime="20230130 12:09:16.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:16.303" level="INFO">Running command 'ozone sh bucket create /40768-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:21.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:21.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:09:16.300" endtime="20230130 12:09:21.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:21.640" level="INFO"/>
<status status="PASS" starttime="20230130 12:09:21.639" endtime="20230130 12:09:21.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:21.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:21.640" endtime="20230130 12:09:21.643"/>
</kw>
<status status="PASS" starttime="20230130 12:09:16.299" endtime="20230130 12:09:21.643"/>
</kw>
<msg timestamp="20230130 12:09:21.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:16.299" endtime="20230130 12:09:21.644"/>
</kw>
<msg timestamp="20230130 12:09:21.644" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:09:16.298" endtime="20230130 12:09:21.644"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230130 12:09:21.645" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230130 12:09:21.644" endtime="20230130 12:09:21.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:21.650" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:27.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:27.634" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230130 12:09:21.647" endtime="20230130 12:09:27.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:27.636" level="INFO">DISK</msg>
<status status="PASS" starttime="20230130 12:09:27.635" endtime="20230130 12:09:27.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:27.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:27.637" endtime="20230130 12:09:27.638"/>
</kw>
<status status="PASS" starttime="20230130 12:09:21.646" endtime="20230130 12:09:27.638"/>
</kw>
<msg timestamp="20230130 12:09:27.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:21.646" endtime="20230130 12:09:27.639"/>
</kw>
<msg timestamp="20230130 12:09:27.640" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230130 12:09:21.645" endtime="20230130 12:09:27.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:09:27.640" endtime="20230130 12:09:27.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:27.646" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:33.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:33.778" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:09:27.643" endtime="20230130 12:09:33.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:33.780" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230130 12:09:33.779" endtime="20230130 12:09:33.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:33.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:33.780" endtime="20230130 12:09:33.781"/>
</kw>
<status status="PASS" starttime="20230130 12:09:27.642" endtime="20230130 12:09:33.782"/>
</kw>
<msg timestamp="20230130 12:09:33.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:27.642" endtime="20230130 12:09:33.782"/>
</kw>
<msg timestamp="20230130 12:09:33.783" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:09:27.641" endtime="20230130 12:09:33.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:09:33.783" endtime="20230130 12:09:33.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:33.789" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:40.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:40.176" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230130 12:09:33.787" endtime="20230130 12:09:40.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:40.178" level="INFO">100</msg>
<status status="PASS" starttime="20230130 12:09:40.177" endtime="20230130 12:09:40.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:40.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:40.179" endtime="20230130 12:09:40.179"/>
</kw>
<status status="PASS" starttime="20230130 12:09:33.786" endtime="20230130 12:09:40.180"/>
</kw>
<msg timestamp="20230130 12:09:40.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:33.785" endtime="20230130 12:09:40.180"/>
</kw>
<msg timestamp="20230130 12:09:40.181" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230130 12:09:33.784" endtime="20230130 12:09:40.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:09:40.181" endtime="20230130 12:09:40.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:40.187" level="INFO">Running command 'ozone sh bucket setquota /40768-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:45.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:45.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:09:40.184" endtime="20230130 12:09:45.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:45.652" level="INFO"/>
<status status="PASS" starttime="20230130 12:09:45.651" endtime="20230130 12:09:45.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:45.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:45.652" endtime="20230130 12:09:45.667"/>
</kw>
<status status="PASS" starttime="20230130 12:09:40.183" endtime="20230130 12:09:45.667"/>
</kw>
<msg timestamp="20230130 12:09:45.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:40.183" endtime="20230130 12:09:45.668"/>
</kw>
<status status="PASS" starttime="20230130 12:09:40.182" endtime="20230130 12:09:45.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:45.673" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:51.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:51.989" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230130 12:09:45.670" endtime="20230130 12:09:51.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:51.990" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230130 12:09:51.989" endtime="20230130 12:09:51.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:51.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:51.990" endtime="20230130 12:09:51.991"/>
</kw>
<status status="PASS" starttime="20230130 12:09:45.670" endtime="20230130 12:09:51.992"/>
</kw>
<msg timestamp="20230130 12:09:51.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:45.669" endtime="20230130 12:09:51.992"/>
</kw>
<msg timestamp="20230130 12:09:51.993" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230130 12:09:45.668" endtime="20230130 12:09:51.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:09:51.993" endtime="20230130 12:09:51.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:52.000" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:09:58.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:09:58.069" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230130 12:09:51.996" endtime="20230130 12:09:58.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:09:58.070" level="INFO">1000</msg>
<status status="PASS" starttime="20230130 12:09:58.069" endtime="20230130 12:09:58.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:09:58.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:09:58.071" endtime="20230130 12:09:58.072"/>
</kw>
<status status="PASS" starttime="20230130 12:09:51.996" endtime="20230130 12:09:58.072"/>
</kw>
<msg timestamp="20230130 12:09:58.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:51.995" endtime="20230130 12:09:58.073"/>
</kw>
<msg timestamp="20230130 12:09:58.073" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230130 12:09:51.994" endtime="20230130 12:09:58.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:09:58.074" endtime="20230130 12:09:58.074"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:09:58.080" level="INFO">Running command 'ozone sh bucket list /40768-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:03.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:03.828" level="INFO">${output} = 40768-without-scheme</msg>
<status status="PASS" starttime="20230130 12:09:58.077" endtime="20230130 12:10:03.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:03.830" level="INFO">40768-without-scheme</msg>
<status status="PASS" starttime="20230130 12:10:03.828" endtime="20230130 12:10:03.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:03.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:03.830" endtime="20230130 12:10:03.831"/>
</kw>
<status status="PASS" starttime="20230130 12:09:58.076" endtime="20230130 12:10:03.831"/>
</kw>
<msg timestamp="20230130 12:10:03.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:09:58.075" endtime="20230130 12:10:03.832"/>
</kw>
<msg timestamp="20230130 12:10:03.832" level="INFO">${result} = 40768-without-scheme</msg>
<status status="PASS" starttime="20230130 12:09:58.074" endtime="20230130 12:10:03.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:10:03.832" endtime="20230130 12:10:03.833"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:03.838" level="INFO">Running command 'ozone sh key put /40768-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:12.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:12.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:03.836" endtime="20230130 12:10:12.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:12.800" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:12.799" endtime="20230130 12:10:12.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:12.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:12.806" endtime="20230130 12:10:12.806"/>
</kw>
<status status="PASS" starttime="20230130 12:10:03.835" endtime="20230130 12:10:12.807"/>
</kw>
<msg timestamp="20230130 12:10:12.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:03.835" endtime="20230130 12:10:12.807"/>
</kw>
<status status="PASS" starttime="20230130 12:10:03.834" endtime="20230130 12:10:12.808"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:12.812" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:12.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:12.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:12.809" endtime="20230130 12:10:12.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:12.817" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:12.816" endtime="20230130 12:10:12.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:12.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:12.817" endtime="20230130 12:10:12.818"/>
</kw>
<status status="PASS" starttime="20230130 12:10:12.809" endtime="20230130 12:10:12.818"/>
</kw>
<msg timestamp="20230130 12:10:12.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:12.808" endtime="20230130 12:10:12.819"/>
</kw>
<status status="PASS" starttime="20230130 12:10:12.808" endtime="20230130 12:10:12.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:12.825" level="INFO">Running command 'ozone sh key get /40768-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:21.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:21.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:12.822" endtime="20230130 12:10:21.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:21.025" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:21.024" endtime="20230130 12:10:21.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:21.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:21.026" endtime="20230130 12:10:21.026"/>
</kw>
<status status="PASS" starttime="20230130 12:10:12.821" endtime="20230130 12:10:21.027"/>
</kw>
<msg timestamp="20230130 12:10:21.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:12.820" endtime="20230130 12:10:21.027"/>
</kw>
<status status="PASS" starttime="20230130 12:10:12.819" endtime="20230130 12:10:21.028"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:21.033" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:21.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:21.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:21.030" endtime="20230130 12:10:21.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:21.038" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:21.038" endtime="20230130 12:10:21.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:21.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:21.039" endtime="20230130 12:10:21.040"/>
</kw>
<status status="PASS" starttime="20230130 12:10:21.029" endtime="20230130 12:10:21.040"/>
</kw>
<msg timestamp="20230130 12:10:21.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:21.029" endtime="20230130 12:10:21.041"/>
</kw>
<status status="PASS" starttime="20230130 12:10:21.028" endtime="20230130 12:10:21.041"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:21.046" level="INFO">Running command 'ozone sh key put -t RATIS /40768-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:30.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:30.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:21.044" endtime="20230130 12:10:30.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:30.693" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:30.692" endtime="20230130 12:10:30.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:30.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:30.693" endtime="20230130 12:10:30.694"/>
</kw>
<status status="PASS" starttime="20230130 12:10:21.043" endtime="20230130 12:10:30.694"/>
</kw>
<msg timestamp="20230130 12:10:30.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:21.042" endtime="20230130 12:10:30.695"/>
</kw>
<status status="PASS" starttime="20230130 12:10:21.042" endtime="20230130 12:10:30.696"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:30.702" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:30.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:30.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:30.698" endtime="20230130 12:10:30.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:30.707" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:30.706" endtime="20230130 12:10:30.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:30.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:30.708" endtime="20230130 12:10:30.709"/>
</kw>
<status status="PASS" starttime="20230130 12:10:30.697" endtime="20230130 12:10:30.710"/>
</kw>
<msg timestamp="20230130 12:10:30.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:30.696" endtime="20230130 12:10:30.711"/>
</kw>
<status status="PASS" starttime="20230130 12:10:30.696" endtime="20230130 12:10:30.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:30.716" level="INFO">Running command 'ozone sh key get /40768-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:39.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:39.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:30.713" endtime="20230130 12:10:39.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:39.976" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:39.975" endtime="20230130 12:10:39.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:39.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:39.976" endtime="20230130 12:10:39.977"/>
</kw>
<status status="PASS" starttime="20230130 12:10:30.712" endtime="20230130 12:10:39.978"/>
</kw>
<msg timestamp="20230130 12:10:39.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:30.712" endtime="20230130 12:10:39.979"/>
</kw>
<status status="PASS" starttime="20230130 12:10:30.711" endtime="20230130 12:10:39.979"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:39.984" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:39.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:39.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:39.981" endtime="20230130 12:10:39.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:39.989" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:39.989" endtime="20230130 12:10:39.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:39.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:39.990" endtime="20230130 12:10:39.991"/>
</kw>
<status status="PASS" starttime="20230130 12:10:39.980" endtime="20230130 12:10:39.991"/>
</kw>
<msg timestamp="20230130 12:10:39.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:39.980" endtime="20230130 12:10:39.992"/>
</kw>
<status status="PASS" starttime="20230130 12:10:39.979" endtime="20230130 12:10:39.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:39.997" level="INFO">Running command 'ozone sh key info /40768-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:46.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:46.575" level="INFO">${output} = {
  "volumeName": "40768-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:10:26.944Z",
  "modificationTime": "2023-01-30T12:10:29.9...</msg>
<status status="PASS" starttime="20230130 12:10:39.995" endtime="20230130 12:10:46.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:46.577" level="INFO">{
  "volumeName": "40768-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:10:26.944Z",
  "modificationTime": "2023-01-30T12:10:29.993Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230130 12:10:46.576" endtime="20230130 12:10:46.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:46.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:46.578" endtime="20230130 12:10:46.578"/>
</kw>
<status status="PASS" starttime="20230130 12:10:39.994" endtime="20230130 12:10:46.579"/>
</kw>
<msg timestamp="20230130 12:10:46.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:39.994" endtime="20230130 12:10:46.580"/>
</kw>
<msg timestamp="20230130 12:10:46.580" level="INFO">${result} = {
  "volumeName": "40768-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:10:26.944Z",
  "modificationTime": "2023-01-30T12:10:29.9...</msg>
<status status="PASS" starttime="20230130 12:10:39.993" endtime="20230130 12:10:46.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:10:46.580" endtime="20230130 12:10:46.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:46.586" level="INFO">Running command 'ozone sh key delete /40768-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:10:52.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:10:52.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:46.583" endtime="20230130 12:10:52.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:10:52.174" level="INFO"/>
<status status="PASS" starttime="20230130 12:10:52.174" endtime="20230130 12:10:52.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:10:52.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:10:52.175" endtime="20230130 12:10:52.176"/>
</kw>
<status status="PASS" starttime="20230130 12:10:46.582" endtime="20230130 12:10:52.177"/>
</kw>
<msg timestamp="20230130 12:10:52.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:46.582" endtime="20230130 12:10:52.177"/>
</kw>
<status status="PASS" starttime="20230130 12:10:46.581" endtime="20230130 12:10:52.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:10:52.183" level="INFO">Running command 'ozone sh key cp /40768-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:02.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:02.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:10:52.180" endtime="20230130 12:11:02.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:02.003" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:02.002" endtime="20230130 12:11:02.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:02.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:02.003" endtime="20230130 12:11:02.004"/>
</kw>
<status status="PASS" starttime="20230130 12:10:52.179" endtime="20230130 12:11:02.004"/>
</kw>
<msg timestamp="20230130 12:11:02.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:10:52.179" endtime="20230130 12:11:02.005"/>
</kw>
<status status="PASS" starttime="20230130 12:10:52.178" endtime="20230130 12:11:02.005"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:02.010" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:02.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:02.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:02.007" endtime="20230130 12:11:02.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:02.015" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:02.014" endtime="20230130 12:11:02.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:02.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:02.015" endtime="20230130 12:11:02.016"/>
</kw>
<status status="PASS" starttime="20230130 12:11:02.006" endtime="20230130 12:11:02.016"/>
</kw>
<msg timestamp="20230130 12:11:02.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:02.006" endtime="20230130 12:11:02.017"/>
</kw>
<status status="PASS" starttime="20230130 12:11:02.005" endtime="20230130 12:11:02.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:02.023" level="INFO">Running command 'ozone sh key get /40768-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:10.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:10.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:02.020" endtime="20230130 12:11:10.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:10.983" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:10.982" endtime="20230130 12:11:10.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:10.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:10.984" endtime="20230130 12:11:10.985"/>
</kw>
<status status="PASS" starttime="20230130 12:11:02.019" endtime="20230130 12:11:10.985"/>
</kw>
<msg timestamp="20230130 12:11:10.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:02.018" endtime="20230130 12:11:10.986"/>
</kw>
<status status="PASS" starttime="20230130 12:11:02.018" endtime="20230130 12:11:10.986"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:10.991" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:10.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:10.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:10.988" endtime="20230130 12:11:10.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:10.997" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:10.996" endtime="20230130 12:11:10.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:10.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:10.997" endtime="20230130 12:11:10.998"/>
</kw>
<status status="PASS" starttime="20230130 12:11:10.987" endtime="20230130 12:11:10.999"/>
</kw>
<msg timestamp="20230130 12:11:10.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:10.987" endtime="20230130 12:11:10.999"/>
</kw>
<status status="PASS" starttime="20230130 12:11:10.986" endtime="20230130 12:11:11.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:11.005" level="INFO">Running command 'ozone sh key delete /40768-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:16.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:16.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:11.002" endtime="20230130 12:11:16.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:16.734" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:16.733" endtime="20230130 12:11:16.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:16.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:16.734" endtime="20230130 12:11:16.735"/>
</kw>
<status status="PASS" starttime="20230130 12:11:11.001" endtime="20230130 12:11:16.735"/>
</kw>
<msg timestamp="20230130 12:11:16.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:11.001" endtime="20230130 12:11:16.736"/>
</kw>
<status status="PASS" starttime="20230130 12:11:11.000" endtime="20230130 12:11:16.736"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:16.741" level="INFO">Running command 'ozone sh key get /40768-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:22.073" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:11:22.073" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:11:16.737" endtime="20230130 12:11:22.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:22.075" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:11:22.074" endtime="20230130 12:11:22.075"/>
</kw>
<msg timestamp="20230130 12:11:22.075" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:11:16.737" endtime="20230130 12:11:22.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:11:22.076" endtime="20230130 12:11:22.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:22.082" level="INFO">Running command 'ozone sh key get --force /40768-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:30.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:30.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:22.079" endtime="20230130 12:11:30.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:30.175" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:30.174" endtime="20230130 12:11:30.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:30.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:30.176" endtime="20230130 12:11:30.177"/>
</kw>
<status status="PASS" starttime="20230130 12:11:22.078" endtime="20230130 12:11:30.177"/>
</kw>
<msg timestamp="20230130 12:11:30.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:22.078" endtime="20230130 12:11:30.178"/>
</kw>
<msg timestamp="20230130 12:11:30.179" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:11:22.077" endtime="20230130 12:11:30.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:11:30.179" endtime="20230130 12:11:30.180"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:30.186" level="INFO">Running command 'ozone sh key info /40768-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:36.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:36.664" level="INFO">${output} = {
  "volumeName": "40768-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:10:09.259Z",
  "modificationTime": "2023-01-30T12:10:12.122Z",
...</msg>
<status status="PASS" starttime="20230130 12:11:30.182" endtime="20230130 12:11:36.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:36.666" level="INFO">{
  "volumeName": "40768-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:10:09.259Z",
  "modificationTime": "2023-01-30T12:10:12.122Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230130 12:11:36.665" endtime="20230130 12:11:36.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:36.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:36.666" endtime="20230130 12:11:36.667"/>
</kw>
<status status="PASS" starttime="20230130 12:11:30.181" endtime="20230130 12:11:36.667"/>
</kw>
<msg timestamp="20230130 12:11:36.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:30.181" endtime="20230130 12:11:36.668"/>
</kw>
<msg timestamp="20230130 12:11:36.668" level="INFO">${result} = {
  "volumeName": "40768-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:10:09.259Z",
  "modificationTime": "2023-01-30T12:10:12.122Z",
...</msg>
<status status="PASS" starttime="20230130 12:11:30.180" endtime="20230130 12:11:36.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:11:36.669" endtime="20230130 12:11:36.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:36.674" level="INFO">Running command 'ozone sh key list /40768-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:42.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:42.426" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230130 12:11:36.672" endtime="20230130 12:11:42.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:42.428" level="INFO">key1</msg>
<status status="PASS" starttime="20230130 12:11:42.427" endtime="20230130 12:11:42.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:42.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:42.428" endtime="20230130 12:11:42.429"/>
</kw>
<status status="PASS" starttime="20230130 12:11:36.671" endtime="20230130 12:11:42.429"/>
</kw>
<msg timestamp="20230130 12:11:42.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:36.671" endtime="20230130 12:11:42.430"/>
</kw>
<msg timestamp="20230130 12:11:42.431" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230130 12:11:36.669" endtime="20230130 12:11:42.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:11:42.431" endtime="20230130 12:11:42.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:42.437" level="INFO">Running command 'ozone sh key rename /40768-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:48.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:48.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:42.434" endtime="20230130 12:11:48.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:48.207" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:48.206" endtime="20230130 12:11:48.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:48.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:48.207" endtime="20230130 12:11:48.208"/>
</kw>
<status status="PASS" starttime="20230130 12:11:42.433" endtime="20230130 12:11:48.208"/>
</kw>
<msg timestamp="20230130 12:11:48.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:42.433" endtime="20230130 12:11:48.209"/>
</kw>
<status status="PASS" starttime="20230130 12:11:42.432" endtime="20230130 12:11:48.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:48.215" level="INFO">Running command 'ozone sh key list /40768-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:54.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:54.482" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230130 12:11:48.212" endtime="20230130 12:11:54.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:54.484" level="INFO">key2</msg>
<status status="PASS" starttime="20230130 12:11:54.483" endtime="20230130 12:11:54.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:54.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:54.484" endtime="20230130 12:11:54.485"/>
</kw>
<status status="PASS" starttime="20230130 12:11:48.211" endtime="20230130 12:11:54.486"/>
</kw>
<msg timestamp="20230130 12:11:54.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:48.210" endtime="20230130 12:11:54.486"/>
</kw>
<msg timestamp="20230130 12:11:54.487" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230130 12:11:48.210" endtime="20230130 12:11:54.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:11:54.487" endtime="20230130 12:11:54.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:54.494" level="INFO">Running command 'ozone sh key delete /40768-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:11:59.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:11:59.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:54.490" endtime="20230130 12:11:59.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:11:59.689" level="INFO"/>
<status status="PASS" starttime="20230130 12:11:59.688" endtime="20230130 12:11:59.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:11:59.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:11:59.690" endtime="20230130 12:11:59.691"/>
</kw>
<status status="PASS" starttime="20230130 12:11:54.490" endtime="20230130 12:11:59.691"/>
</kw>
<msg timestamp="20230130 12:11:59.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:54.489" endtime="20230130 12:11:59.692"/>
</kw>
<status status="PASS" starttime="20230130 12:11:54.488" endtime="20230130 12:11:59.692"/>
</kw>
<status status="PASS" starttime="20230130 12:10:03.833" endtime="20230130 12:11:59.692"/>
</kw>
<status status="PASS" starttime="20230130 12:10:03.833" endtime="20230130 12:11:59.692"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:11:59.697" level="INFO">Running command 'ozone sh volume clrquota --space-quota /40768-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:05.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:05.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:11:59.694" endtime="20230130 12:12:05.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:05.519" level="INFO"/>
<status status="PASS" starttime="20230130 12:12:05.519" endtime="20230130 12:12:05.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:05.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:05.520" endtime="20230130 12:12:05.520"/>
</kw>
<status status="PASS" starttime="20230130 12:11:59.694" endtime="20230130 12:12:05.521"/>
</kw>
<msg timestamp="20230130 12:12:05.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:11:59.693" endtime="20230130 12:12:05.522"/>
</kw>
<status status="PASS" starttime="20230130 12:11:59.693" endtime="20230130 12:12:05.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:05.527" level="INFO">Running command 'ozone sh volume info /40768-without-scheme | jq -r '. | select(.name=="40768-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:11.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:11.458" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:12:05.525" endtime="20230130 12:12:11.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:11.459" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:12:11.458" endtime="20230130 12:12:11.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:11.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:11.460" endtime="20230130 12:12:11.461"/>
</kw>
<status status="PASS" starttime="20230130 12:12:05.524" endtime="20230130 12:12:11.461"/>
</kw>
<msg timestamp="20230130 12:12:11.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:05.524" endtime="20230130 12:12:11.462"/>
</kw>
<msg timestamp="20230130 12:12:11.462" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:12:05.522" endtime="20230130 12:12:11.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:12:11.462" endtime="20230130 12:12:11.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:11.468" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /40768-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:17.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:17.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:12:11.465" endtime="20230130 12:12:17.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:17.128" level="INFO"/>
<status status="PASS" starttime="20230130 12:12:17.127" endtime="20230130 12:12:17.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:17.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:17.129" endtime="20230130 12:12:17.129"/>
</kw>
<status status="PASS" starttime="20230130 12:12:11.465" endtime="20230130 12:12:17.130"/>
</kw>
<msg timestamp="20230130 12:12:17.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:11.464" endtime="20230130 12:12:17.130"/>
</kw>
<status status="PASS" starttime="20230130 12:12:11.463" endtime="20230130 12:12:17.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:17.137" level="INFO">Running command 'ozone sh volume info /40768-without-scheme | jq -r '. | select(.name=="40768-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:22.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:22.761" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:12:17.134" endtime="20230130 12:12:22.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:22.763" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:12:22.762" endtime="20230130 12:12:22.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:22.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:22.763" endtime="20230130 12:12:22.764"/>
</kw>
<status status="PASS" starttime="20230130 12:12:17.132" endtime="20230130 12:12:22.765"/>
</kw>
<msg timestamp="20230130 12:12:22.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:17.132" endtime="20230130 12:12:22.766"/>
</kw>
<msg timestamp="20230130 12:12:22.766" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:12:17.131" endtime="20230130 12:12:22.766"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:12:22.766" endtime="20230130 12:12:22.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:22.774" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /40768-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:28.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:28.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:12:22.770" endtime="20230130 12:12:28.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:28.205" level="INFO"/>
<status status="PASS" starttime="20230130 12:12:28.204" endtime="20230130 12:12:28.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:28.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:28.205" endtime="20230130 12:12:28.206"/>
</kw>
<status status="PASS" starttime="20230130 12:12:22.769" endtime="20230130 12:12:28.206"/>
</kw>
<msg timestamp="20230130 12:12:28.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:22.768" endtime="20230130 12:12:28.208"/>
</kw>
<status status="PASS" starttime="20230130 12:12:22.767" endtime="20230130 12:12:28.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:28.214" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:34.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:34.352" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:12:28.211" endtime="20230130 12:12:34.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:34.354" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:12:34.353" endtime="20230130 12:12:34.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:34.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:34.355" endtime="20230130 12:12:34.355"/>
</kw>
<status status="PASS" starttime="20230130 12:12:28.210" endtime="20230130 12:12:34.356"/>
</kw>
<msg timestamp="20230130 12:12:34.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:28.210" endtime="20230130 12:12:34.357"/>
</kw>
<msg timestamp="20230130 12:12:34.357" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:12:28.208" endtime="20230130 12:12:34.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:12:34.357" endtime="20230130 12:12:34.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:34.365" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /40768-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:39.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:39.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:12:34.360" endtime="20230130 12:12:39.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:39.604" level="INFO"/>
<status status="PASS" starttime="20230130 12:12:39.603" endtime="20230130 12:12:39.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:39.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:39.605" endtime="20230130 12:12:39.606"/>
</kw>
<status status="PASS" starttime="20230130 12:12:34.360" endtime="20230130 12:12:39.606"/>
</kw>
<msg timestamp="20230130 12:12:39.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:34.359" endtime="20230130 12:12:39.607"/>
</kw>
<status status="PASS" starttime="20230130 12:12:34.358" endtime="20230130 12:12:39.607"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:39.613" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:45.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:45.320" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:12:39.610" endtime="20230130 12:12:45.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:45.322" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:12:45.321" endtime="20230130 12:12:45.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:45.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:45.322" endtime="20230130 12:12:45.323"/>
</kw>
<status status="PASS" starttime="20230130 12:12:39.609" endtime="20230130 12:12:45.323"/>
</kw>
<msg timestamp="20230130 12:12:45.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:39.609" endtime="20230130 12:12:45.324"/>
</kw>
<msg timestamp="20230130 12:12:45.325" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:12:39.607" endtime="20230130 12:12:45.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:12:45.325" endtime="20230130 12:12:45.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:45.333" level="INFO">Running command 'ozone sh bucket delete /40768-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:50.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:50.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:12:45.329" endtime="20230130 12:12:50.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:50.631" level="INFO"/>
<status status="PASS" starttime="20230130 12:12:50.630" endtime="20230130 12:12:50.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:50.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:50.631" endtime="20230130 12:12:50.632"/>
</kw>
<status status="PASS" starttime="20230130 12:12:45.328" endtime="20230130 12:12:50.632"/>
</kw>
<msg timestamp="20230130 12:12:50.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:45.327" endtime="20230130 12:12:50.633"/>
</kw>
<status status="PASS" starttime="20230130 12:12:45.326" endtime="20230130 12:12:50.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:50.638" level="INFO">Running command 'ozone sh volume delete /40768-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:12:55.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:12:55.767" level="INFO">${output} = Volume 40768-without-scheme is deleted</msg>
<status status="PASS" starttime="20230130 12:12:50.636" endtime="20230130 12:12:55.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:12:55.769" level="INFO">Volume 40768-without-scheme is deleted</msg>
<status status="PASS" starttime="20230130 12:12:55.768" endtime="20230130 12:12:55.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:12:55.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:12:55.769" endtime="20230130 12:12:55.770"/>
</kw>
<status status="PASS" starttime="20230130 12:12:50.635" endtime="20230130 12:12:55.770"/>
</kw>
<msg timestamp="20230130 12:12:55.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:50.635" endtime="20230130 12:12:55.771"/>
</kw>
<status status="PASS" starttime="20230130 12:12:50.634" endtime="20230130 12:12:55.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:12:55.776" level="INFO">Running command 'ozone sh volume create /40768-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:01.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:01.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:12:55.773" endtime="20230130 12:13:01.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:01.178" level="INFO"/>
<status status="PASS" starttime="20230130 12:13:01.178" endtime="20230130 12:13:01.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:01.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:01.179" endtime="20230130 12:13:01.179"/>
</kw>
<status status="PASS" starttime="20230130 12:12:55.773" endtime="20230130 12:13:01.180"/>
</kw>
<msg timestamp="20230130 12:13:01.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:12:55.772" endtime="20230130 12:13:01.181"/>
</kw>
<status status="PASS" starttime="20230130 12:12:55.771" endtime="20230130 12:13:01.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:01.187" level="INFO">Running command 'ozone sh volume info /40768-without-scheme | jq -r '. | select(.name=="40768-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:07.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:07.632" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:13:01.183" endtime="20230130 12:13:07.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:07.636" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:13:07.633" endtime="20230130 12:13:07.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:07.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:07.636" endtime="20230130 12:13:07.637"/>
</kw>
<status status="PASS" starttime="20230130 12:13:01.183" endtime="20230130 12:13:07.638"/>
</kw>
<msg timestamp="20230130 12:13:07.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:01.182" endtime="20230130 12:13:07.638"/>
</kw>
<msg timestamp="20230130 12:13:07.639" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:13:01.181" endtime="20230130 12:13:07.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:13:07.639" endtime="20230130 12:13:07.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:07.646" level="INFO">Running command 'ozone sh volume info /40768-without-scheme | jq -r '. | select(.name=="40768-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:13.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:13.791" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:13:07.642" endtime="20230130 12:13:13.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:13.793" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:13:13.792" endtime="20230130 12:13:13.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:13.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:13.793" endtime="20230130 12:13:13.794"/>
</kw>
<status status="PASS" starttime="20230130 12:13:07.642" endtime="20230130 12:13:13.794"/>
</kw>
<msg timestamp="20230130 12:13:13.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:07.641" endtime="20230130 12:13:13.795"/>
</kw>
<msg timestamp="20230130 12:13:13.795" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:13:07.640" endtime="20230130 12:13:13.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:13:13.796" endtime="20230130 12:13:13.796"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:13.802" level="INFO">Running command 'ozone sh bucket create /40768-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:19.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:19.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:13:13.799" endtime="20230130 12:13:19.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:19.536" level="INFO"/>
<status status="PASS" starttime="20230130 12:13:19.535" endtime="20230130 12:13:19.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:19.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:19.537" endtime="20230130 12:13:19.538"/>
</kw>
<status status="PASS" starttime="20230130 12:13:13.799" endtime="20230130 12:13:19.538"/>
</kw>
<msg timestamp="20230130 12:13:19.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:13.798" endtime="20230130 12:13:19.539"/>
</kw>
<status status="PASS" starttime="20230130 12:13:13.797" endtime="20230130 12:13:19.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:19.545" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:25.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:25.694" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:13:19.542" endtime="20230130 12:13:25.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:25.696" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:13:25.695" endtime="20230130 12:13:25.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:25.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:25.696" endtime="20230130 12:13:25.697"/>
</kw>
<status status="PASS" starttime="20230130 12:13:19.542" endtime="20230130 12:13:25.698"/>
</kw>
<msg timestamp="20230130 12:13:25.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:19.541" endtime="20230130 12:13:25.699"/>
</kw>
<msg timestamp="20230130 12:13:25.699" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:13:19.540" endtime="20230130 12:13:25.699"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:13:25.699" endtime="20230130 12:13:25.700"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:25.707" level="INFO">Running command 'ozone sh bucket info /40768-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:31.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:31.302" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:13:25.704" endtime="20230130 12:13:31.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:31.304" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:13:31.303" endtime="20230130 12:13:31.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:31.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:31.304" endtime="20230130 12:13:31.305"/>
</kw>
<status status="PASS" starttime="20230130 12:13:25.703" endtime="20230130 12:13:31.305"/>
</kw>
<msg timestamp="20230130 12:13:31.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:25.703" endtime="20230130 12:13:31.306"/>
</kw>
<msg timestamp="20230130 12:13:31.306" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:13:25.700" endtime="20230130 12:13:31.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:13:31.307" endtime="20230130 12:13:31.307"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:31.315" level="INFO">Running command 'ozone sh bucket delete /40768-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:36.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:36.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:13:31.311" endtime="20230130 12:13:36.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:36.941" level="INFO"/>
<status status="PASS" starttime="20230130 12:13:36.940" endtime="20230130 12:13:36.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:36.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:36.941" endtime="20230130 12:13:36.942"/>
</kw>
<status status="PASS" starttime="20230130 12:13:31.309" endtime="20230130 12:13:36.943"/>
</kw>
<msg timestamp="20230130 12:13:36.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:31.308" endtime="20230130 12:13:36.943"/>
</kw>
<status status="PASS" starttime="20230130 12:13:31.307" endtime="20230130 12:13:36.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:36.949" level="INFO">Running command 'ozone sh volume delete /40768-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:41.222" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230130 12:13:36.946" endtime="20230130 12:13:41.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230130 12:13:41.222" endtime="20230130 12:13:41.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230130 12:13:41.223" endtime="20230130 12:13:41.223"/>
</kw>
<status status="FAIL" starttime="20230130 12:13:36.945" endtime="20230130 12:13:41.224"/>
</kw>
<msg timestamp="20230130 12:13:41.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230130 12:13:36.945" endtime="20230130 12:13:41.225"/>
</kw>
<status status="FAIL" starttime="20230130 12:13:36.944" endtime="20230130 12:13:41.225"/>
</kw>
<status status="FAIL" starttime="20230130 12:08:41.222" endtime="20230130 12:13:41.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230130 12:08:41.221" endtime="20230130 12:13:41.227">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230130 12:08:41.186" endtime="20230130 12:13:41.229"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:13:41.283" level="INFO">${random} = 72137</msg>
<status status="PASS" starttime="20230130 12:13:41.282" endtime="20230130 12:13:41.283"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:13:41.284" level="INFO">${prefix} = 72137</msg>
<status status="PASS" starttime="20230130 12:13:41.284" endtime="20230130 12:13:41.284"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.281" endtime="20230130 12:13:41.286"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:41.306" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:41.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:41.329" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:13:41.296" endtime="20230130 12:13:41.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:41.331" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:13:41.330" endtime="20230130 12:13:41.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:41.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:41.331" endtime="20230130 12:13:41.332"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.295" endtime="20230130 12:13:41.333"/>
</kw>
<msg timestamp="20230130 12:13:41.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:41.294" endtime="20230130 12:13:41.333"/>
</kw>
<msg timestamp="20230130 12:13:41.334" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:13:41.294" endtime="20230130 12:13:41.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:13:41.338" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:13:41.334" endtime="20230130 12:13:41.338"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:41.355" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:41.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:41.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:13:41.346" endtime="20230130 12:13:41.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:41.446" level="INFO"/>
<status status="PASS" starttime="20230130 12:13:41.445" endtime="20230130 12:13:41.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:41.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:41.446" endtime="20230130 12:13:41.447"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.344" endtime="20230130 12:13:41.448"/>
</kw>
<msg timestamp="20230130 12:13:41.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:41.343" endtime="20230130 12:13:41.450"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.341" endtime="20230130 12:13:41.450"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.340" endtime="20230130 12:13:41.450"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.293" endtime="20230130 12:13:41.451"/>
</kw>
<status status="PASS" starttime="20230130 12:13:41.292" endtime="20230130 12:13:41.451"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:41.472" level="INFO">Running command 'ozone sh volume info o3://om:9862/72137-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:47.672" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:13:47.672" level="INFO">${output} = VOLUME_NOT_FOUND Volume 72137-with-host is not found</msg>
<status status="PASS" starttime="20230130 12:13:41.461" endtime="20230130 12:13:47.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:47.674" level="INFO">VOLUME_NOT_FOUND Volume 72137-with-host is not found</msg>
<status status="PASS" starttime="20230130 12:13:47.673" endtime="20230130 12:13:47.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:47.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:47.674" endtime="20230130 12:13:47.675"/>
</kw>
<msg timestamp="20230130 12:13:47.675" level="INFO">${result} = VOLUME_NOT_FOUND Volume 72137-with-host is not found</msg>
<status status="PASS" starttime="20230130 12:13:41.455" endtime="20230130 12:13:47.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:13:47.676" endtime="20230130 12:13:47.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:47.683" level="INFO">Running command 'ozone sh volume create o3://om:9862/72137-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:53.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:53.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:13:47.680" endtime="20230130 12:13:53.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:53.445" level="INFO"/>
<status status="PASS" starttime="20230130 12:13:53.444" endtime="20230130 12:13:53.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:53.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:53.445" endtime="20230130 12:13:53.446"/>
</kw>
<status status="PASS" starttime="20230130 12:13:47.678" endtime="20230130 12:13:53.446"/>
</kw>
<msg timestamp="20230130 12:13:53.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:47.677" endtime="20230130 12:13:53.447"/>
</kw>
<msg timestamp="20230130 12:13:53.447" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:13:47.677" endtime="20230130 12:13:53.447"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230130 12:13:53.448" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230130 12:13:53.447" endtime="20230130 12:13:53.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:53.453" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="72137-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:13:59.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:13:59.398" level="INFO">${output} = {
  "metadata": {},
  "name": "72137-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230130 12:13:53.450" endtime="20230130 12:13:59.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:13:59.400" level="INFO">{
  "metadata": {},
  "name": "72137-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-30T12:13:53.150Z",
  "modificationTime": "2023-01-30T12:13:53.150Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230130 12:13:59.399" endtime="20230130 12:13:59.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:13:59.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:13:59.400" endtime="20230130 12:13:59.401"/>
</kw>
<status status="PASS" starttime="20230130 12:13:53.449" endtime="20230130 12:13:59.401"/>
</kw>
<msg timestamp="20230130 12:13:59.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:53.449" endtime="20230130 12:13:59.402"/>
</kw>
<msg timestamp="20230130 12:13:59.403" level="INFO">${result} = {
  "metadata": {},
  "name": "72137-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230130 12:13:53.448" endtime="20230130 12:13:59.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:13:59.403" endtime="20230130 12:13:59.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:13:59.408" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="72137-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:05.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:05.493" level="INFO">${output} = {
  "metadata": {},
  "name": "72137-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230130 12:13:59.406" endtime="20230130 12:14:05.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:05.495" level="INFO">{
  "metadata": {},
  "name": "72137-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-30T12:13:53.150Z",
  "modificationTime": "2023-01-30T12:13:53.150Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230130 12:14:05.494" endtime="20230130 12:14:05.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:05.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:05.495" endtime="20230130 12:14:05.496"/>
</kw>
<status status="PASS" starttime="20230130 12:13:59.405" endtime="20230130 12:14:05.496"/>
</kw>
<msg timestamp="20230130 12:14:05.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:13:59.405" endtime="20230130 12:14:05.497"/>
</kw>
<msg timestamp="20230130 12:14:05.497" level="INFO">${result} = {
  "metadata": {},
  "name": "72137-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230130 12:13:59.404" endtime="20230130 12:14:05.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:14:05.498" endtime="20230130 12:14:05.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:05.503" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/72137-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:10.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:10.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:14:05.500" endtime="20230130 12:14:10.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:10.906" level="INFO"/>
<status status="PASS" starttime="20230130 12:14:10.905" endtime="20230130 12:14:10.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:10.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:10.906" endtime="20230130 12:14:10.907"/>
</kw>
<status status="PASS" starttime="20230130 12:14:05.499" endtime="20230130 12:14:10.907"/>
</kw>
<msg timestamp="20230130 12:14:10.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:05.499" endtime="20230130 12:14:10.908"/>
</kw>
<status status="PASS" starttime="20230130 12:14:05.498" endtime="20230130 12:14:10.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:10.914" level="INFO">Running command 'ozone sh volume info o3://om:9862/72137-with-host | jq -r '. | select(.name=="72137-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:17.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:17.219" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:14:10.911" endtime="20230130 12:14:17.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:17.221" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230130 12:14:17.220" endtime="20230130 12:14:17.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:17.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:17.222" endtime="20230130 12:14:17.222"/>
</kw>
<status status="PASS" starttime="20230130 12:14:10.910" endtime="20230130 12:14:17.223"/>
</kw>
<msg timestamp="20230130 12:14:17.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:10.910" endtime="20230130 12:14:17.224"/>
</kw>
<msg timestamp="20230130 12:14:17.224" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:14:10.908" endtime="20230130 12:14:17.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:14:17.224" endtime="20230130 12:14:17.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:17.231" level="INFO">Running command 'ozone sh bucket create o3://om:9862/72137-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:23.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:23.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:14:17.227" endtime="20230130 12:14:23.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:23.443" level="INFO"/>
<status status="PASS" starttime="20230130 12:14:23.442" endtime="20230130 12:14:23.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:23.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:23.443" endtime="20230130 12:14:23.444"/>
</kw>
<status status="PASS" starttime="20230130 12:14:17.227" endtime="20230130 12:14:23.444"/>
</kw>
<msg timestamp="20230130 12:14:23.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:17.226" endtime="20230130 12:14:23.445"/>
</kw>
<msg timestamp="20230130 12:14:23.446" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:14:17.225" endtime="20230130 12:14:23.446"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230130 12:14:23.447" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230130 12:14:23.446" endtime="20230130 12:14:23.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:23.452" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:29.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:29.560" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230130 12:14:23.449" endtime="20230130 12:14:29.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:29.562" level="INFO">DISK</msg>
<status status="PASS" starttime="20230130 12:14:29.561" endtime="20230130 12:14:29.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:29.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:29.562" endtime="20230130 12:14:29.563"/>
</kw>
<status status="PASS" starttime="20230130 12:14:23.449" endtime="20230130 12:14:29.564"/>
</kw>
<msg timestamp="20230130 12:14:29.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:23.448" endtime="20230130 12:14:29.565"/>
</kw>
<msg timestamp="20230130 12:14:29.566" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230130 12:14:23.447" endtime="20230130 12:14:29.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:14:29.566" endtime="20230130 12:14:29.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:29.572" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:35.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:35.691" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:14:29.569" endtime="20230130 12:14:35.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:35.693" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230130 12:14:35.692" endtime="20230130 12:14:35.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:35.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:35.693" endtime="20230130 12:14:35.694"/>
</kw>
<status status="PASS" starttime="20230130 12:14:29.568" endtime="20230130 12:14:35.695"/>
</kw>
<msg timestamp="20230130 12:14:35.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:29.568" endtime="20230130 12:14:35.695"/>
</kw>
<msg timestamp="20230130 12:14:35.696" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:14:29.567" endtime="20230130 12:14:35.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:14:35.696" endtime="20230130 12:14:35.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:35.703" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:41.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:41.795" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230130 12:14:35.700" endtime="20230130 12:14:41.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:41.798" level="INFO">100</msg>
<status status="PASS" starttime="20230130 12:14:41.796" endtime="20230130 12:14:41.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:41.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:41.798" endtime="20230130 12:14:41.799"/>
</kw>
<status status="PASS" starttime="20230130 12:14:35.699" endtime="20230130 12:14:41.800"/>
</kw>
<msg timestamp="20230130 12:14:41.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:35.699" endtime="20230130 12:14:41.801"/>
</kw>
<msg timestamp="20230130 12:14:41.801" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230130 12:14:35.697" endtime="20230130 12:14:41.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:14:41.801" endtime="20230130 12:14:41.802"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:41.807" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/72137-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:47.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:47.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:14:41.804" endtime="20230130 12:14:47.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:47.564" level="INFO"/>
<status status="PASS" starttime="20230130 12:14:47.563" endtime="20230130 12:14:47.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:47.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:47.565" endtime="20230130 12:14:47.566"/>
</kw>
<status status="PASS" starttime="20230130 12:14:41.803" endtime="20230130 12:14:47.566"/>
</kw>
<msg timestamp="20230130 12:14:47.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:41.803" endtime="20230130 12:14:47.567"/>
</kw>
<status status="PASS" starttime="20230130 12:14:41.802" endtime="20230130 12:14:47.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:47.573" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:53.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:53.400" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230130 12:14:47.570" endtime="20230130 12:14:53.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:53.402" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230130 12:14:53.401" endtime="20230130 12:14:53.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:53.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:53.402" endtime="20230130 12:14:53.403"/>
</kw>
<status status="PASS" starttime="20230130 12:14:47.569" endtime="20230130 12:14:53.404"/>
</kw>
<msg timestamp="20230130 12:14:53.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:47.569" endtime="20230130 12:14:53.405"/>
</kw>
<msg timestamp="20230130 12:14:53.405" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230130 12:14:47.567" endtime="20230130 12:14:53.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:14:53.406" endtime="20230130 12:14:53.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:53.413" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:14:58.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:14:58.971" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230130 12:14:53.410" endtime="20230130 12:14:58.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:14:58.973" level="INFO">1000</msg>
<status status="PASS" starttime="20230130 12:14:58.972" endtime="20230130 12:14:58.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:14:58.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:14:58.973" endtime="20230130 12:14:58.974"/>
</kw>
<status status="PASS" starttime="20230130 12:14:53.409" endtime="20230130 12:14:58.975"/>
</kw>
<msg timestamp="20230130 12:14:58.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:53.408" endtime="20230130 12:14:58.975"/>
</kw>
<msg timestamp="20230130 12:14:58.976" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230130 12:14:53.407" endtime="20230130 12:14:58.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:14:58.976" endtime="20230130 12:14:58.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:14:58.982" level="INFO">Running command 'ozone sh bucket list o3://om:9862/72137-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:05.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:05.184" level="INFO">${output} = 72137-with-host</msg>
<status status="PASS" starttime="20230130 12:14:58.979" endtime="20230130 12:15:05.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:05.186" level="INFO">72137-with-host</msg>
<status status="PASS" starttime="20230130 12:15:05.185" endtime="20230130 12:15:05.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:05.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:05.186" endtime="20230130 12:15:05.187"/>
</kw>
<status status="PASS" starttime="20230130 12:14:58.979" endtime="20230130 12:15:05.187"/>
</kw>
<msg timestamp="20230130 12:15:05.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:14:58.978" endtime="20230130 12:15:05.188"/>
</kw>
<msg timestamp="20230130 12:15:05.188" level="INFO">${result} = 72137-with-host</msg>
<status status="PASS" starttime="20230130 12:14:58.977" endtime="20230130 12:15:05.188"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:15:05.189" endtime="20230130 12:15:05.189"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:05.196" level="INFO">Running command 'ozone sh key put o3://om:9862/72137-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:14.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:14.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:05.193" endtime="20230130 12:15:14.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:14.192" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:14.191" endtime="20230130 12:15:14.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:14.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:14.193" endtime="20230130 12:15:14.194"/>
</kw>
<status status="PASS" starttime="20230130 12:15:05.193" endtime="20230130 12:15:14.194"/>
</kw>
<msg timestamp="20230130 12:15:14.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:05.192" endtime="20230130 12:15:14.195"/>
</kw>
<status status="PASS" starttime="20230130 12:15:05.191" endtime="20230130 12:15:14.196"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:14.200" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:14.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:14.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:14.197" endtime="20230130 12:15:14.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:14.205" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:14.204" endtime="20230130 12:15:14.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:14.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:14.205" endtime="20230130 12:15:14.206"/>
</kw>
<status status="PASS" starttime="20230130 12:15:14.197" endtime="20230130 12:15:14.206"/>
</kw>
<msg timestamp="20230130 12:15:14.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:14.196" endtime="20230130 12:15:14.207"/>
</kw>
<status status="PASS" starttime="20230130 12:15:14.196" endtime="20230130 12:15:14.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:14.212" level="INFO">Running command 'ozone sh key get o3://om:9862/72137-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:22.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:22.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:14.209" endtime="20230130 12:15:22.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:22.221" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:22.220" endtime="20230130 12:15:22.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:22.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:22.222" endtime="20230130 12:15:22.223"/>
</kw>
<status status="PASS" starttime="20230130 12:15:14.209" endtime="20230130 12:15:22.223"/>
</kw>
<msg timestamp="20230130 12:15:22.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:14.208" endtime="20230130 12:15:22.224"/>
</kw>
<status status="PASS" starttime="20230130 12:15:14.207" endtime="20230130 12:15:22.224"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:22.228" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:22.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:22.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:22.226" endtime="20230130 12:15:22.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:22.234" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:22.233" endtime="20230130 12:15:22.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:22.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:22.234" endtime="20230130 12:15:22.235"/>
</kw>
<status status="PASS" starttime="20230130 12:15:22.226" endtime="20230130 12:15:22.241"/>
</kw>
<msg timestamp="20230130 12:15:22.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:22.225" endtime="20230130 12:15:22.241"/>
</kw>
<status status="PASS" starttime="20230130 12:15:22.225" endtime="20230130 12:15:22.242"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:22.247" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/72137-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:31.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:31.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:22.244" endtime="20230130 12:15:31.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:31.209" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:31.208" endtime="20230130 12:15:31.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:31.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:31.209" endtime="20230130 12:15:31.210"/>
</kw>
<status status="PASS" starttime="20230130 12:15:22.243" endtime="20230130 12:15:31.210"/>
</kw>
<msg timestamp="20230130 12:15:31.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:22.243" endtime="20230130 12:15:31.211"/>
</kw>
<status status="PASS" starttime="20230130 12:15:22.242" endtime="20230130 12:15:31.211"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:31.216" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:31.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:31.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:31.213" endtime="20230130 12:15:31.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:31.226" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:31.226" endtime="20230130 12:15:31.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:31.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:31.227" endtime="20230130 12:15:31.228"/>
</kw>
<status status="PASS" starttime="20230130 12:15:31.212" endtime="20230130 12:15:31.228"/>
</kw>
<msg timestamp="20230130 12:15:31.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:31.212" endtime="20230130 12:15:31.229"/>
</kw>
<status status="PASS" starttime="20230130 12:15:31.212" endtime="20230130 12:15:31.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:31.235" level="INFO">Running command 'ozone sh key get o3://om:9862/72137-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:40.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:40.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:31.232" endtime="20230130 12:15:40.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:40.109" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:40.108" endtime="20230130 12:15:40.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:40.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:40.109" endtime="20230130 12:15:40.110"/>
</kw>
<status status="PASS" starttime="20230130 12:15:31.231" endtime="20230130 12:15:40.110"/>
</kw>
<msg timestamp="20230130 12:15:40.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:31.231" endtime="20230130 12:15:40.111"/>
</kw>
<status status="PASS" starttime="20230130 12:15:31.230" endtime="20230130 12:15:40.112"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:40.117" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:40.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:40.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:40.114" endtime="20230130 12:15:40.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:40.122" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:40.121" endtime="20230130 12:15:40.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:40.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:40.123" endtime="20230130 12:15:40.123"/>
</kw>
<status status="PASS" starttime="20230130 12:15:40.113" endtime="20230130 12:15:40.124"/>
</kw>
<msg timestamp="20230130 12:15:40.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:40.113" endtime="20230130 12:15:40.125"/>
</kw>
<status status="PASS" starttime="20230130 12:15:40.112" endtime="20230130 12:15:40.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:40.130" level="INFO">Running command 'ozone sh key info o3://om:9862/72137-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:46.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:46.020" level="INFO">${output} = {
  "volumeName": "72137-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:15:27.709Z",
  "modificationTime": "2023-01-30T12:15:30.629Z",...</msg>
<status status="PASS" starttime="20230130 12:15:40.127" endtime="20230130 12:15:46.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:46.022" level="INFO">{
  "volumeName": "72137-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:15:27.709Z",
  "modificationTime": "2023-01-30T12:15:30.629Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230130 12:15:46.021" endtime="20230130 12:15:46.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:46.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:46.022" endtime="20230130 12:15:46.023"/>
</kw>
<status status="PASS" starttime="20230130 12:15:40.127" endtime="20230130 12:15:46.024"/>
</kw>
<msg timestamp="20230130 12:15:46.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:40.126" endtime="20230130 12:15:46.025"/>
</kw>
<msg timestamp="20230130 12:15:46.025" level="INFO">${result} = {
  "volumeName": "72137-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:15:27.709Z",
  "modificationTime": "2023-01-30T12:15:30.629Z",...</msg>
<status status="PASS" starttime="20230130 12:15:40.125" endtime="20230130 12:15:46.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:15:46.025" endtime="20230130 12:15:46.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:46.031" level="INFO">Running command 'ozone sh key delete o3://om:9862/72137-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:15:51.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:15:51.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:46.028" endtime="20230130 12:15:51.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:15:51.630" level="INFO"/>
<status status="PASS" starttime="20230130 12:15:51.629" endtime="20230130 12:15:51.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:15:51.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:15:51.630" endtime="20230130 12:15:51.631"/>
</kw>
<status status="PASS" starttime="20230130 12:15:46.028" endtime="20230130 12:15:51.632"/>
</kw>
<msg timestamp="20230130 12:15:51.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:46.027" endtime="20230130 12:15:51.633"/>
</kw>
<status status="PASS" starttime="20230130 12:15:46.026" endtime="20230130 12:15:51.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:15:51.638" level="INFO">Running command 'ozone sh key cp o3://om:9862/72137-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:01.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:01.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:15:51.635" endtime="20230130 12:16:01.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:01.141" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:01.140" endtime="20230130 12:16:01.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:01.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:01.141" endtime="20230130 12:16:01.142"/>
</kw>
<status status="PASS" starttime="20230130 12:15:51.634" endtime="20230130 12:16:01.143"/>
</kw>
<msg timestamp="20230130 12:16:01.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:15:51.634" endtime="20230130 12:16:01.143"/>
</kw>
<status status="PASS" starttime="20230130 12:15:51.633" endtime="20230130 12:16:01.144"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:01.149" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:01.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:01.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:01.145" endtime="20230130 12:16:01.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:01.154" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:01.153" endtime="20230130 12:16:01.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:01.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:01.154" endtime="20230130 12:16:01.155"/>
</kw>
<status status="PASS" starttime="20230130 12:16:01.145" endtime="20230130 12:16:01.155"/>
</kw>
<msg timestamp="20230130 12:16:01.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:01.144" endtime="20230130 12:16:01.156"/>
</kw>
<status status="PASS" starttime="20230130 12:16:01.144" endtime="20230130 12:16:01.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:01.161" level="INFO">Running command 'ozone sh key get o3://om:9862/72137-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:09.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:09.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:01.159" endtime="20230130 12:16:09.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:09.673" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:09.672" endtime="20230130 12:16:09.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:09.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:09.673" endtime="20230130 12:16:09.674"/>
</kw>
<status status="PASS" starttime="20230130 12:16:01.158" endtime="20230130 12:16:09.674"/>
</kw>
<msg timestamp="20230130 12:16:09.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:01.158" endtime="20230130 12:16:09.675"/>
</kw>
<status status="PASS" starttime="20230130 12:16:01.157" endtime="20230130 12:16:09.675"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:09.681" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:09.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:09.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:09.678" endtime="20230130 12:16:09.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:09.687" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:09.686" endtime="20230130 12:16:09.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:09.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:09.687" endtime="20230130 12:16:09.688"/>
</kw>
<status status="PASS" starttime="20230130 12:16:09.677" endtime="20230130 12:16:09.688"/>
</kw>
<msg timestamp="20230130 12:16:09.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:09.676" endtime="20230130 12:16:09.689"/>
</kw>
<status status="PASS" starttime="20230130 12:16:09.676" endtime="20230130 12:16:09.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:09.694" level="INFO">Running command 'ozone sh key delete o3://om:9862/72137-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:15.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:15.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:09.691" endtime="20230130 12:16:15.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:15.278" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:15.277" endtime="20230130 12:16:15.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:15.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:15.279" endtime="20230130 12:16:15.279"/>
</kw>
<status status="PASS" starttime="20230130 12:16:09.691" endtime="20230130 12:16:15.280"/>
</kw>
<msg timestamp="20230130 12:16:15.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:09.690" endtime="20230130 12:16:15.281"/>
</kw>
<status status="PASS" starttime="20230130 12:16:09.690" endtime="20230130 12:16:15.281"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:15.285" level="INFO">Running command 'ozone sh key get o3://om:9862/72137-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:21.095" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:16:21.095" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:16:15.282" endtime="20230130 12:16:21.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:21.097" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:16:21.096" endtime="20230130 12:16:21.097"/>
</kw>
<msg timestamp="20230130 12:16:21.098" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:16:15.281" endtime="20230130 12:16:21.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:16:21.098" endtime="20230130 12:16:21.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:21.105" level="INFO">Running command 'ozone sh key get --force o3://om:9862/72137-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:29.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:29.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:21.101" endtime="20230130 12:16:29.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:29.588" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:29.587" endtime="20230130 12:16:29.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:29.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:29.589" endtime="20230130 12:16:29.589"/>
</kw>
<status status="PASS" starttime="20230130 12:16:21.100" endtime="20230130 12:16:29.590"/>
</kw>
<msg timestamp="20230130 12:16:29.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:21.100" endtime="20230130 12:16:29.590"/>
</kw>
<msg timestamp="20230130 12:16:29.591" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:16:21.099" endtime="20230130 12:16:29.591"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:16:29.591" endtime="20230130 12:16:29.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:29.597" level="INFO">Running command 'ozone sh key info o3://om:9862/72137-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:35.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:35.920" level="INFO">${output} = {
  "volumeName": "72137-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:15:10.862Z",
  "modificationTime": "2023-01-30T12:15:13.765Z",
  "re...</msg>
<status status="PASS" starttime="20230130 12:16:29.594" endtime="20230130 12:16:35.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:35.921" level="INFO">{
  "volumeName": "72137-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:15:10.862Z",
  "modificationTime": "2023-01-30T12:15:13.765Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230130 12:16:35.920" endtime="20230130 12:16:35.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:35.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:35.922" endtime="20230130 12:16:35.922"/>
</kw>
<status status="PASS" starttime="20230130 12:16:29.593" endtime="20230130 12:16:35.923"/>
</kw>
<msg timestamp="20230130 12:16:35.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:29.593" endtime="20230130 12:16:35.924"/>
</kw>
<msg timestamp="20230130 12:16:35.924" level="INFO">${result} = {
  "volumeName": "72137-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:15:10.862Z",
  "modificationTime": "2023-01-30T12:15:13.765Z",
  "re...</msg>
<status status="PASS" starttime="20230130 12:16:29.592" endtime="20230130 12:16:35.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:16:35.924" endtime="20230130 12:16:35.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:35.931" level="INFO">Running command 'ozone sh key list o3://om:9862/72137-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:41.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:41.687" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230130 12:16:35.928" endtime="20230130 12:16:41.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:41.688" level="INFO">key1</msg>
<status status="PASS" starttime="20230130 12:16:41.687" endtime="20230130 12:16:41.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:41.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:41.688" endtime="20230130 12:16:41.691"/>
</kw>
<status status="PASS" starttime="20230130 12:16:35.927" endtime="20230130 12:16:41.691"/>
</kw>
<msg timestamp="20230130 12:16:41.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:35.926" endtime="20230130 12:16:41.692"/>
</kw>
<msg timestamp="20230130 12:16:41.693" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230130 12:16:35.925" endtime="20230130 12:16:41.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:16:41.693" endtime="20230130 12:16:41.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:41.699" level="INFO">Running command 'ozone sh key rename o3://om:9862/72137-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:47.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:47.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:41.696" endtime="20230130 12:16:47.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:47.028" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:47.027" endtime="20230130 12:16:47.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:47.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:47.029" endtime="20230130 12:16:47.030"/>
</kw>
<status status="PASS" starttime="20230130 12:16:41.695" endtime="20230130 12:16:47.030"/>
</kw>
<msg timestamp="20230130 12:16:47.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:41.695" endtime="20230130 12:16:47.031"/>
</kw>
<status status="PASS" starttime="20230130 12:16:41.694" endtime="20230130 12:16:47.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:47.036" level="INFO">Running command 'ozone sh key list o3://om:9862/72137-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:53.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:53.340" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230130 12:16:47.034" endtime="20230130 12:16:53.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:53.342" level="INFO">key2</msg>
<status status="PASS" starttime="20230130 12:16:53.341" endtime="20230130 12:16:53.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:53.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:53.342" endtime="20230130 12:16:53.343"/>
</kw>
<status status="PASS" starttime="20230130 12:16:47.033" endtime="20230130 12:16:53.343"/>
</kw>
<msg timestamp="20230130 12:16:53.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:47.033" endtime="20230130 12:16:53.344"/>
</kw>
<msg timestamp="20230130 12:16:53.344" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230130 12:16:47.031" endtime="20230130 12:16:53.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:16:53.344" endtime="20230130 12:16:53.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:53.349" level="INFO">Running command 'ozone sh key delete o3://om:9862/72137-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:16:58.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:16:58.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:53.347" endtime="20230130 12:16:58.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:16:58.782" level="INFO"/>
<status status="PASS" starttime="20230130 12:16:58.780" endtime="20230130 12:16:58.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:16:58.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:16:58.782" endtime="20230130 12:16:58.783"/>
</kw>
<status status="PASS" starttime="20230130 12:16:53.346" endtime="20230130 12:16:58.783"/>
</kw>
<msg timestamp="20230130 12:16:58.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:53.346" endtime="20230130 12:16:58.784"/>
</kw>
<status status="PASS" starttime="20230130 12:16:53.345" endtime="20230130 12:16:58.785"/>
</kw>
<status status="PASS" starttime="20230130 12:15:05.190" endtime="20230130 12:16:58.785"/>
</kw>
<status status="PASS" starttime="20230130 12:15:05.189" endtime="20230130 12:16:58.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:16:58.790" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/72137-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:04.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:04.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:16:58.787" endtime="20230130 12:17:04.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:04.201" level="INFO"/>
<status status="PASS" starttime="20230130 12:17:04.200" endtime="20230130 12:17:04.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:04.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:04.201" endtime="20230130 12:17:04.203"/>
</kw>
<status status="PASS" starttime="20230130 12:16:58.786" endtime="20230130 12:17:04.203"/>
</kw>
<msg timestamp="20230130 12:17:04.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:16:58.786" endtime="20230130 12:17:04.204"/>
</kw>
<status status="PASS" starttime="20230130 12:16:58.785" endtime="20230130 12:17:04.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:04.209" level="INFO">Running command 'ozone sh volume info o3://om:9862/72137-with-host | jq -r '. | select(.name=="72137-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:10.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:10.387" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:17:04.207" endtime="20230130 12:17:10.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:10.389" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:17:10.388" endtime="20230130 12:17:10.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:10.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:10.389" endtime="20230130 12:17:10.390"/>
</kw>
<status status="PASS" starttime="20230130 12:17:04.206" endtime="20230130 12:17:10.390"/>
</kw>
<msg timestamp="20230130 12:17:10.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:04.206" endtime="20230130 12:17:10.391"/>
</kw>
<msg timestamp="20230130 12:17:10.391" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:17:04.205" endtime="20230130 12:17:10.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:17:10.392" endtime="20230130 12:17:10.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:10.397" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/72137-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:15.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:15.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:17:10.394" endtime="20230130 12:17:15.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:15.648" level="INFO"/>
<status status="PASS" starttime="20230130 12:17:15.647" endtime="20230130 12:17:15.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:15.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:15.648" endtime="20230130 12:17:15.649"/>
</kw>
<status status="PASS" starttime="20230130 12:17:10.393" endtime="20230130 12:17:15.649"/>
</kw>
<msg timestamp="20230130 12:17:15.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:10.393" endtime="20230130 12:17:15.650"/>
</kw>
<status status="PASS" starttime="20230130 12:17:10.392" endtime="20230130 12:17:15.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:15.656" level="INFO">Running command 'ozone sh volume info o3://om:9862/72137-with-host | jq -r '. | select(.name=="72137-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:21.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:21.538" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:17:15.653" endtime="20230130 12:17:21.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:21.540" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:17:21.539" endtime="20230130 12:17:21.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:21.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:21.540" endtime="20230130 12:17:21.541"/>
</kw>
<status status="PASS" starttime="20230130 12:17:15.652" endtime="20230130 12:17:21.542"/>
</kw>
<msg timestamp="20230130 12:17:21.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:15.652" endtime="20230130 12:17:21.543"/>
</kw>
<msg timestamp="20230130 12:17:21.543" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:17:15.650" endtime="20230130 12:17:21.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:17:21.543" endtime="20230130 12:17:21.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:21.549" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/72137-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:27.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:27.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:17:21.546" endtime="20230130 12:17:27.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:27.242" level="INFO"/>
<status status="PASS" starttime="20230130 12:17:27.241" endtime="20230130 12:17:27.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:27.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:27.243" endtime="20230130 12:17:27.243"/>
</kw>
<status status="PASS" starttime="20230130 12:17:21.545" endtime="20230130 12:17:27.244"/>
</kw>
<msg timestamp="20230130 12:17:27.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:21.545" endtime="20230130 12:17:27.244"/>
</kw>
<status status="PASS" starttime="20230130 12:17:21.544" endtime="20230130 12:17:27.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:27.250" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:33.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:33.094" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:17:27.248" endtime="20230130 12:17:33.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:33.095" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:17:33.094" endtime="20230130 12:17:33.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:33.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:33.096" endtime="20230130 12:17:33.096"/>
</kw>
<status status="PASS" starttime="20230130 12:17:27.246" endtime="20230130 12:17:33.097"/>
</kw>
<msg timestamp="20230130 12:17:33.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:27.246" endtime="20230130 12:17:33.098"/>
</kw>
<msg timestamp="20230130 12:17:33.098" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:17:27.245" endtime="20230130 12:17:33.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:17:33.101" endtime="20230130 12:17:33.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:33.107" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/72137-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:38.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:38.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:17:33.103" endtime="20230130 12:17:38.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:38.975" level="INFO"/>
<status status="PASS" starttime="20230130 12:17:38.974" endtime="20230130 12:17:38.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:38.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:38.975" endtime="20230130 12:17:38.976"/>
</kw>
<status status="PASS" starttime="20230130 12:17:33.103" endtime="20230130 12:17:38.976"/>
</kw>
<msg timestamp="20230130 12:17:38.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:33.102" endtime="20230130 12:17:38.977"/>
</kw>
<status status="PASS" starttime="20230130 12:17:33.102" endtime="20230130 12:17:38.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:38.983" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:45.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:45.247" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:17:38.980" endtime="20230130 12:17:45.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:45.249" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:17:45.248" endtime="20230130 12:17:45.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:45.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:45.250" endtime="20230130 12:17:45.251"/>
</kw>
<status status="PASS" starttime="20230130 12:17:38.980" endtime="20230130 12:17:45.251"/>
</kw>
<msg timestamp="20230130 12:17:45.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:38.979" endtime="20230130 12:17:45.252"/>
</kw>
<msg timestamp="20230130 12:17:45.252" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:17:38.978" endtime="20230130 12:17:45.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:17:45.252" endtime="20230130 12:17:45.253"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:45.258" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/72137-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:51.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:51.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:17:45.255" endtime="20230130 12:17:51.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:51.128" level="INFO"/>
<status status="PASS" starttime="20230130 12:17:51.127" endtime="20230130 12:17:51.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:51.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:51.128" endtime="20230130 12:17:51.129"/>
</kw>
<status status="PASS" starttime="20230130 12:17:45.254" endtime="20230130 12:17:51.129"/>
</kw>
<msg timestamp="20230130 12:17:51.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:45.254" endtime="20230130 12:17:51.130"/>
</kw>
<status status="PASS" starttime="20230130 12:17:45.253" endtime="20230130 12:17:51.130"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:51.135" level="INFO">Running command 'ozone sh volume delete o3://om:9862/72137-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:17:56.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:17:56.675" level="INFO">${output} = Volume 72137-with-host is deleted</msg>
<status status="PASS" starttime="20230130 12:17:51.133" endtime="20230130 12:17:56.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:17:56.677" level="INFO">Volume 72137-with-host is deleted</msg>
<status status="PASS" starttime="20230130 12:17:56.676" endtime="20230130 12:17:56.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:17:56.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:17:56.678" endtime="20230130 12:17:56.679"/>
</kw>
<status status="PASS" starttime="20230130 12:17:51.132" endtime="20230130 12:17:56.679"/>
</kw>
<msg timestamp="20230130 12:17:56.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:51.131" endtime="20230130 12:17:56.680"/>
</kw>
<status status="PASS" starttime="20230130 12:17:51.131" endtime="20230130 12:17:56.680"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:17:56.684" level="INFO">Running command 'ozone sh volume create o3://om:9862/72137-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:02.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:02.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:17:56.682" endtime="20230130 12:18:02.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:02.242" level="INFO"/>
<status status="PASS" starttime="20230130 12:18:02.241" endtime="20230130 12:18:02.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:02.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:02.243" endtime="20230130 12:18:02.244"/>
</kw>
<status status="PASS" starttime="20230130 12:17:56.681" endtime="20230130 12:18:02.246"/>
</kw>
<msg timestamp="20230130 12:18:02.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:17:56.681" endtime="20230130 12:18:02.247"/>
</kw>
<status status="PASS" starttime="20230130 12:17:56.680" endtime="20230130 12:18:02.247"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:02.253" level="INFO">Running command 'ozone sh volume info o3://om:9862/72137-with-host | jq -r '. | select(.name=="72137-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:08.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:08.449" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:18:02.250" endtime="20230130 12:18:08.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:08.451" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:18:08.450" endtime="20230130 12:18:08.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:08.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:08.451" endtime="20230130 12:18:08.452"/>
</kw>
<status status="PASS" starttime="20230130 12:18:02.249" endtime="20230130 12:18:08.453"/>
</kw>
<msg timestamp="20230130 12:18:08.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:02.249" endtime="20230130 12:18:08.453"/>
</kw>
<msg timestamp="20230130 12:18:08.454" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:18:02.248" endtime="20230130 12:18:08.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:18:08.454" endtime="20230130 12:18:08.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:08.460" level="INFO">Running command 'ozone sh volume info o3://om:9862/72137-with-host | jq -r '. | select(.name=="72137-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:14.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:14.444" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:18:08.457" endtime="20230130 12:18:14.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:14.446" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:18:14.445" endtime="20230130 12:18:14.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:14.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:14.446" endtime="20230130 12:18:14.447"/>
</kw>
<status status="PASS" starttime="20230130 12:18:08.456" endtime="20230130 12:18:14.447"/>
</kw>
<msg timestamp="20230130 12:18:14.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:08.456" endtime="20230130 12:18:14.448"/>
</kw>
<msg timestamp="20230130 12:18:14.448" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:18:08.455" endtime="20230130 12:18:14.448"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:18:14.449" endtime="20230130 12:18:14.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:14.454" level="INFO">Running command 'ozone sh bucket create o3://om:9862/72137-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:20.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:20.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:18:14.451" endtime="20230130 12:18:20.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:20.236" level="INFO"/>
<status status="PASS" starttime="20230130 12:18:20.235" endtime="20230130 12:18:20.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:20.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:20.236" endtime="20230130 12:18:20.237"/>
</kw>
<status status="PASS" starttime="20230130 12:18:14.450" endtime="20230130 12:18:20.237"/>
</kw>
<msg timestamp="20230130 12:18:20.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:14.450" endtime="20230130 12:18:20.238"/>
</kw>
<status status="PASS" starttime="20230130 12:18:14.449" endtime="20230130 12:18:20.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:20.244" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:26.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:26.710" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:18:20.241" endtime="20230130 12:18:26.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:26.711" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:18:26.710" endtime="20230130 12:18:26.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:26.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:26.712" endtime="20230130 12:18:26.712"/>
</kw>
<status status="PASS" starttime="20230130 12:18:20.241" endtime="20230130 12:18:26.713"/>
</kw>
<msg timestamp="20230130 12:18:26.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:20.240" endtime="20230130 12:18:26.713"/>
</kw>
<msg timestamp="20230130 12:18:26.714" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:18:20.239" endtime="20230130 12:18:26.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:18:26.714" endtime="20230130 12:18:26.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:26.720" level="INFO">Running command 'ozone sh bucket info o3://om:9862/72137-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:33.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:33.229" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:18:26.717" endtime="20230130 12:18:33.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:33.230" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:18:33.229" endtime="20230130 12:18:33.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:33.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:33.231" endtime="20230130 12:18:33.232"/>
</kw>
<status status="PASS" starttime="20230130 12:18:26.716" endtime="20230130 12:18:33.232"/>
</kw>
<msg timestamp="20230130 12:18:33.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:26.716" endtime="20230130 12:18:33.233"/>
</kw>
<msg timestamp="20230130 12:18:33.234" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:18:26.715" endtime="20230130 12:18:33.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:18:33.234" endtime="20230130 12:18:33.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:33.243" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/72137-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:39.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:39.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:18:33.238" endtime="20230130 12:18:39.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:39.608" level="INFO"/>
<status status="PASS" starttime="20230130 12:18:39.607" endtime="20230130 12:18:39.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:39.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:39.609" endtime="20230130 12:18:39.609"/>
</kw>
<status status="PASS" starttime="20230130 12:18:33.237" endtime="20230130 12:18:39.610"/>
</kw>
<msg timestamp="20230130 12:18:39.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:33.236" endtime="20230130 12:18:39.611"/>
</kw>
<status status="PASS" starttime="20230130 12:18:33.235" endtime="20230130 12:18:39.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:39.617" level="INFO">Running command 'ozone sh volume delete o3://om:9862/72137-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:41.290" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230130 12:18:39.614" endtime="20230130 12:18:41.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230130 12:18:41.291" endtime="20230130 12:18:41.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230130 12:18:41.291" endtime="20230130 12:18:41.291"/>
</kw>
<status status="FAIL" starttime="20230130 12:18:39.613" endtime="20230130 12:18:41.292"/>
</kw>
<msg timestamp="20230130 12:18:41.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230130 12:18:39.613" endtime="20230130 12:18:41.293"/>
</kw>
<status status="FAIL" starttime="20230130 12:18:39.612" endtime="20230130 12:18:41.294"/>
</kw>
<status status="FAIL" starttime="20230130 12:13:41.451" endtime="20230130 12:18:41.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230130 12:13:41.289" endtime="20230130 12:18:41.295">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:41.322" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:41.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:41.336" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:18:41.312" endtime="20230130 12:18:41.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:41.338" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:18:41.337" endtime="20230130 12:18:41.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:41.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:41.338" endtime="20230130 12:18:41.339"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.311" endtime="20230130 12:18:41.339"/>
</kw>
<msg timestamp="20230130 12:18:41.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:41.310" endtime="20230130 12:18:41.340"/>
</kw>
<msg timestamp="20230130 12:18:41.341" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:18:41.309" endtime="20230130 12:18:41.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:18:41.343" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:18:41.341" endtime="20230130 12:18:41.343"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:41.362" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:41.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:41.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:18:41.348" endtime="20230130 12:18:41.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:41.444" level="INFO"/>
<status status="PASS" starttime="20230130 12:18:41.443" endtime="20230130 12:18:41.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:41.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:41.444" endtime="20230130 12:18:41.445"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.346" endtime="20230130 12:18:41.445"/>
</kw>
<msg timestamp="20230130 12:18:41.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:18:41.346" endtime="20230130 12:18:41.446"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.345" endtime="20230130 12:18:41.447"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.343" endtime="20230130 12:18:41.447"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.305" endtime="20230130 12:18:41.447"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.303" endtime="20230130 12:18:41.447"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:41.460" level="INFO">Running command 'ozone sh volume create o3://om:9862/72137-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:51.592" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:18:51.592" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230130 12:18:41.451" endtime="20230130 12:18:51.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:51.594" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230130 12:18:51.593" endtime="20230130 12:18:51.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:51.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:51.594" endtime="20230130 12:18:51.595"/>
</kw>
<msg timestamp="20230130 12:18:51.595" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230130 12:18:41.449" endtime="20230130 12:18:51.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:18:51.596" endtime="20230130 12:18:51.596"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:51.602" level="INFO">Running command 'ozone sh volume create o3://om:9862/72137-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:18:57.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:18:57.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:18:51.597" endtime="20230130 12:18:57.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:18:57.185" level="INFO"/>
<status status="PASS" starttime="20230130 12:18:57.184" endtime="20230130 12:18:57.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:18:57.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:18:57.185" endtime="20230130 12:18:57.186"/>
</kw>
<status status="PASS" starttime="20230130 12:18:51.597" endtime="20230130 12:18:57.187"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:18:57.192" level="INFO">Running command 'ozone sh bucket create o3://om:9862/72137-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:03.076" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:19:03.077" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230130 12:18:57.188" endtime="20230130 12:19:03.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:03.079" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230130 12:19:03.077" endtime="20230130 12:19:03.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:03.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:03.079" endtime="20230130 12:19:03.081"/>
</kw>
<msg timestamp="20230130 12:19:03.081" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230130 12:18:57.187" endtime="20230130 12:19:03.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:19:03.082" endtime="20230130 12:19:03.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:03.088" level="INFO">Running command 'ozone sh bucket create o3://om:9862/72137-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:06.272" level="INFO">${rc} = 2</msg>
<msg timestamp="20230130 12:19:06.272" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230130 12:19:03.084" endtime="20230130 12:19:06.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:06.273" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230130 12:19:06.272" endtime="20230130 12:19:06.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:06.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:06.274" endtime="20230130 12:19:06.274"/>
</kw>
<msg timestamp="20230130 12:19:06.275" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230130 12:19:03.082" endtime="20230130 12:19:06.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:19:06.275" endtime="20230130 12:19:06.276"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:06.280" level="INFO">Running command 'ozone sh bucket create o3://om:9862/72137-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:11.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:11.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:19:06.277" endtime="20230130 12:19:11.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:11.844" level="INFO"/>
<status status="PASS" starttime="20230130 12:19:11.843" endtime="20230130 12:19:11.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:11.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:11.844" endtime="20230130 12:19:11.845"/>
</kw>
<status status="PASS" starttime="20230130 12:19:06.276" endtime="20230130 12:19:11.845"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:11.857" level="INFO">Running command 'ozone sh key info o3://om:9862/72137-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:17.296" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:19:17.296" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230130 12:19:11.846" endtime="20230130 12:19:17.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:17.298" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230130 12:19:17.297" endtime="20230130 12:19:17.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:17.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:17.298" endtime="20230130 12:19:17.299"/>
</kw>
<msg timestamp="20230130 12:19:17.299" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230130 12:19:11.846" endtime="20230130 12:19:17.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:19:17.300" endtime="20230130 12:19:17.300"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:17.305" level="INFO">Running command 'ozone sh key put o3://om:9862/72137-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:20.662" level="INFO">${rc} = 2</msg>
<msg timestamp="20230130 12:19:20.662" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230130 12:19:17.301" endtime="20230130 12:19:20.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:20.664" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230130 12:19:20.663" endtime="20230130 12:19:20.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:20.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:20.664" endtime="20230130 12:19:20.665"/>
</kw>
<msg timestamp="20230130 12:19:20.665" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230130 12:19:17.300" endtime="20230130 12:19:20.665"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:20.672" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/72137-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:26.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:26.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:19:20.667" endtime="20230130 12:19:26.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:26.537" level="INFO"/>
<status status="PASS" starttime="20230130 12:19:26.536" endtime="20230130 12:19:26.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:26.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:26.537" endtime="20230130 12:19:26.538"/>
</kw>
<status status="PASS" starttime="20230130 12:19:20.666" endtime="20230130 12:19:26.538"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:26.543" level="INFO">Running command 'ozone sh volume delete o3://om:9862/72137-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:32.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:32.057" level="INFO">${output} = Volume 72137-with-errors is deleted</msg>
<status status="PASS" starttime="20230130 12:19:26.539" endtime="20230130 12:19:32.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:32.058" level="INFO">Volume 72137-with-errors is deleted</msg>
<status status="PASS" starttime="20230130 12:19:32.057" endtime="20230130 12:19:32.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:32.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:32.059" endtime="20230130 12:19:32.059"/>
</kw>
<status status="PASS" starttime="20230130 12:19:26.539" endtime="20230130 12:19:32.060"/>
</kw>
<status status="PASS" starttime="20230130 12:18:41.447" endtime="20230130 12:19:32.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:18:41.299" endtime="20230130 12:19:32.060"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:32.069" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:32.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:32.073" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:19:32.065" endtime="20230130 12:19:32.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:32.074" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:19:32.074" endtime="20230130 12:19:32.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:32.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:32.075" endtime="20230130 12:19:32.075"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.065" endtime="20230130 12:19:32.076"/>
</kw>
<msg timestamp="20230130 12:19:32.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:32.064" endtime="20230130 12:19:32.076"/>
</kw>
<msg timestamp="20230130 12:19:32.077" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:19:32.064" endtime="20230130 12:19:32.077"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:19:32.078" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:19:32.077" endtime="20230130 12:19:32.078"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:32.087" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:32.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:32.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:19:32.083" endtime="20230130 12:19:32.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:32.148" level="INFO"/>
<status status="PASS" starttime="20230130 12:19:32.146" endtime="20230130 12:19:32.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:32.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:32.148" endtime="20230130 12:19:32.149"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.080" endtime="20230130 12:19:32.149"/>
</kw>
<msg timestamp="20230130 12:19:32.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:32.079" endtime="20230130 12:19:32.150"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.079" endtime="20230130 12:19:32.150"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.078" endtime="20230130 12:19:32.150"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.063" endtime="20230130 12:19:32.151"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.063" endtime="20230130 12:19:32.151"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:32.157" level="INFO">Running command 'ozone sh volume create o3://om:9862/72137-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:38.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:38.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:19:32.154" endtime="20230130 12:19:38.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:38.236" level="INFO"/>
<status status="PASS" starttime="20230130 12:19:38.235" endtime="20230130 12:19:38.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:38.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:38.236" endtime="20230130 12:19:38.237"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.153" endtime="20230130 12:19:38.237"/>
</kw>
<msg timestamp="20230130 12:19:38.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:32.153" endtime="20230130 12:19:38.238"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.152" endtime="20230130 12:19:38.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:38.243" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/72137-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:44.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:44.037" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:19:38.240" endtime="20230130 12:19:44.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:44.038" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:19:44.038" endtime="20230130 12:19:44.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:44.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:44.039" endtime="20230130 12:19:44.039"/>
</kw>
<status status="PASS" starttime="20230130 12:19:38.240" endtime="20230130 12:19:44.040"/>
</kw>
<msg timestamp="20230130 12:19:44.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:38.239" endtime="20230130 12:19:44.041"/>
</kw>
<msg timestamp="20230130 12:19:44.041" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:19:38.238" endtime="20230130 12:19:44.041"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:19:44.041" endtime="20230130 12:19:44.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:44.048" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/72137-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:49.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:49.603" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230130 12:19:44.044" endtime="20230130 12:19:49.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:49.605" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230130 12:19:49.604" endtime="20230130 12:19:49.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:49.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:49.605" endtime="20230130 12:19:49.606"/>
</kw>
<status status="PASS" starttime="20230130 12:19:44.044" endtime="20230130 12:19:49.607"/>
</kw>
<msg timestamp="20230130 12:19:49.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:44.043" endtime="20230130 12:19:49.607"/>
</kw>
<msg timestamp="20230130 12:19:49.608" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230130 12:19:44.043" endtime="20230130 12:19:49.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:49.613" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/72137-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:19:55.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:19:55.478" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230130 12:19:49.610" endtime="20230130 12:19:55.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:19:55.479" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:19:55.478" endtime="20230130 12:19:55.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:19:55.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:19:55.480" endtime="20230130 12:19:55.481"/>
</kw>
<status status="PASS" starttime="20230130 12:19:49.609" endtime="20230130 12:19:55.481"/>
</kw>
<msg timestamp="20230130 12:19:55.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:49.609" endtime="20230130 12:19:55.482"/>
</kw>
<msg timestamp="20230130 12:19:55.482" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230130 12:19:49.608" endtime="20230130 12:19:55.482"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:19:55.483" endtime="20230130 12:19:55.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:19:55.489" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/72137-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:01.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:01.016" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:19:55.486" endtime="20230130 12:20:01.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:01.018" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:20:01.017" endtime="20230130 12:20:01.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:01.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:01.018" endtime="20230130 12:20:01.019"/>
</kw>
<status status="PASS" starttime="20230130 12:19:55.486" endtime="20230130 12:20:01.020"/>
</kw>
<msg timestamp="20230130 12:20:01.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:19:55.485" endtime="20230130 12:20:01.021"/>
</kw>
<msg timestamp="20230130 12:20:01.021" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:19:55.484" endtime="20230130 12:20:01.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:01.028" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/72137-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:06.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:06.790" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230130 12:20:01.024" endtime="20230130 12:20:06.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:06.792" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:20:06.791" endtime="20230130 12:20:06.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:06.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:06.792" endtime="20230130 12:20:06.793"/>
</kw>
<status status="PASS" starttime="20230130 12:20:01.024" endtime="20230130 12:20:06.794"/>
</kw>
<msg timestamp="20230130 12:20:06.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:01.023" endtime="20230130 12:20:06.794"/>
</kw>
<msg timestamp="20230130 12:20:06.795" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230130 12:20:01.021" endtime="20230130 12:20:06.795"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:20:06.795" endtime="20230130 12:20:06.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:06.801" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/72137-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:12.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:12.122" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:20:06.798" endtime="20230130 12:20:12.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:12.124" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:20:12.123" endtime="20230130 12:20:12.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:12.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:12.124" endtime="20230130 12:20:12.125"/>
</kw>
<status status="PASS" starttime="20230130 12:20:06.798" endtime="20230130 12:20:12.125"/>
</kw>
<msg timestamp="20230130 12:20:12.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:06.797" endtime="20230130 12:20:12.126"/>
</kw>
<msg timestamp="20230130 12:20:12.126" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:20:06.796" endtime="20230130 12:20:12.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:12.131" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/72137-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:18.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:18.255" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230130 12:20:12.128" endtime="20230130 12:20:18.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:18.256" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:20:18.255" endtime="20230130 12:20:18.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:18.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:18.257" endtime="20230130 12:20:18.257"/>
</kw>
<status status="PASS" starttime="20230130 12:20:12.127" endtime="20230130 12:20:18.258"/>
</kw>
<msg timestamp="20230130 12:20:18.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:12.127" endtime="20230130 12:20:18.258"/>
</kw>
<msg timestamp="20230130 12:20:18.259" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230130 12:20:12.126" endtime="20230130 12:20:18.259"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:20:18.260" endtime="20230130 12:20:18.261"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:20:18.262" endtime="20230130 12:20:18.264"/>
</kw>
<status status="PASS" starttime="20230130 12:19:32.151" endtime="20230130 12:20:18.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:19:32.062" endtime="20230130 12:20:18.265"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:18.274" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:18.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:18.279" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:20:18.271" endtime="20230130 12:20:18.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:18.281" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:20:18.280" endtime="20230130 12:20:18.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:18.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:18.282" endtime="20230130 12:20:18.282"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.270" endtime="20230130 12:20:18.283"/>
</kw>
<msg timestamp="20230130 12:20:18.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:18.270" endtime="20230130 12:20:18.284"/>
</kw>
<msg timestamp="20230130 12:20:18.286" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:20:18.270" endtime="20230130 12:20:18.286"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:20:18.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:20:18.287" endtime="20230130 12:20:18.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:18.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:18.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:18.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:20:18.291" endtime="20230130 12:20:18.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:18.331" level="INFO"/>
<status status="PASS" starttime="20230130 12:20:18.330" endtime="20230130 12:20:18.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:18.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:18.331" endtime="20230130 12:20:18.332"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.290" endtime="20230130 12:20:18.332"/>
</kw>
<msg timestamp="20230130 12:20:18.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:18.289" endtime="20230130 12:20:18.333"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.289" endtime="20230130 12:20:18.333"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.288" endtime="20230130 12:20:18.333"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.269" endtime="20230130 12:20:18.334"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.268" endtime="20230130 12:20:18.334"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:18.340" level="INFO">Running command 'ozone sh bucket create o3://om:9862/72137-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:23.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:23.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:20:18.337" endtime="20230130 12:20:23.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:23.954" level="INFO"/>
<status status="PASS" starttime="20230130 12:20:23.952" endtime="20230130 12:20:23.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:23.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:23.954" endtime="20230130 12:20:23.955"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.336" endtime="20230130 12:20:23.955"/>
</kw>
<msg timestamp="20230130 12:20:23.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:18.336" endtime="20230130 12:20:23.956"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.335" endtime="20230130 12:20:23.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:23.963" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/72137-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:29.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:29.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:20:23.960" endtime="20230130 12:20:29.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:29.740" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:20:29.739" endtime="20230130 12:20:29.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:29.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:29.741" endtime="20230130 12:20:29.743"/>
</kw>
<status status="PASS" starttime="20230130 12:20:23.959" endtime="20230130 12:20:29.744"/>
</kw>
<msg timestamp="20230130 12:20:29.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:23.958" endtime="20230130 12:20:29.744"/>
</kw>
<msg timestamp="20230130 12:20:29.745" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:20:23.957" endtime="20230130 12:20:29.745"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:20:29.745" endtime="20230130 12:20:29.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:29.752" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/72137-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:35.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:35.232" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230130 12:20:29.749" endtime="20230130 12:20:35.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:35.233" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230130 12:20:35.233" endtime="20230130 12:20:35.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:35.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:35.234" endtime="20230130 12:20:35.234"/>
</kw>
<status status="PASS" starttime="20230130 12:20:29.748" endtime="20230130 12:20:35.235"/>
</kw>
<msg timestamp="20230130 12:20:35.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:29.748" endtime="20230130 12:20:35.236"/>
</kw>
<msg timestamp="20230130 12:20:35.236" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230130 12:20:29.747" endtime="20230130 12:20:35.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:35.241" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/72137-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:40.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:40.778" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:20:35.239" endtime="20230130 12:20:40.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:40.779" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:20:40.778" endtime="20230130 12:20:40.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:40.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:40.780" endtime="20230130 12:20:40.781"/>
</kw>
<status status="PASS" starttime="20230130 12:20:35.238" endtime="20230130 12:20:40.781"/>
</kw>
<msg timestamp="20230130 12:20:40.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:35.237" endtime="20230130 12:20:40.782"/>
</kw>
<msg timestamp="20230130 12:20:40.782" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:20:35.237" endtime="20230130 12:20:40.782"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:20:40.783" endtime="20230130 12:20:40.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:40.789" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/72137-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:46.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:46.748" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:20:40.786" endtime="20230130 12:20:46.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:46.749" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:20:46.748" endtime="20230130 12:20:46.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:46.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:46.750" endtime="20230130 12:20:46.750"/>
</kw>
<status status="PASS" starttime="20230130 12:20:40.785" endtime="20230130 12:20:46.751"/>
</kw>
<msg timestamp="20230130 12:20:46.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:40.785" endtime="20230130 12:20:46.752"/>
</kw>
<msg timestamp="20230130 12:20:46.752" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:20:40.784" endtime="20230130 12:20:46.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:46.757" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/72137-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:52.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:52.270" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:20:46.754" endtime="20230130 12:20:52.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:52.272" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:20:52.270" endtime="20230130 12:20:52.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:52.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:52.272" endtime="20230130 12:20:52.273"/>
</kw>
<status status="PASS" starttime="20230130 12:20:46.754" endtime="20230130 12:20:52.273"/>
</kw>
<msg timestamp="20230130 12:20:52.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:46.753" endtime="20230130 12:20:52.274"/>
</kw>
<msg timestamp="20230130 12:20:52.275" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:20:46.753" endtime="20230130 12:20:52.275"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:20:52.275" endtime="20230130 12:20:52.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:52.282" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/72137-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:20:58.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:20:58.215" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:20:52.279" endtime="20230130 12:20:58.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:20:58.217" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:20:58.216" endtime="20230130 12:20:58.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:20:58.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:20:58.217" endtime="20230130 12:20:58.218"/>
</kw>
<status status="PASS" starttime="20230130 12:20:52.278" endtime="20230130 12:20:58.218"/>
</kw>
<msg timestamp="20230130 12:20:58.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:52.278" endtime="20230130 12:20:58.219"/>
</kw>
<msg timestamp="20230130 12:20:58.219" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:20:52.277" endtime="20230130 12:20:58.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:20:58.224" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/72137-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:04.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:04.067" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230130 12:20:58.222" endtime="20230130 12:21:04.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:04.069" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:21:04.068" endtime="20230130 12:21:04.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:04.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:04.070" endtime="20230130 12:21:04.071"/>
</kw>
<status status="PASS" starttime="20230130 12:20:58.221" endtime="20230130 12:21:04.071"/>
</kw>
<msg timestamp="20230130 12:21:04.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:20:58.220" endtime="20230130 12:21:04.072"/>
</kw>
<msg timestamp="20230130 12:21:04.072" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230130 12:20:58.220" endtime="20230130 12:21:04.072"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:04.073" endtime="20230130 12:21:04.073"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:04.074" endtime="20230130 12:21:04.074"/>
</kw>
<status status="PASS" starttime="20230130 12:20:18.334" endtime="20230130 12:21:04.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:20:18.267" endtime="20230130 12:21:04.075"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:04.083" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:04.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:04.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:21:04.080" endtime="20230130 12:21:04.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:04.092" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:21:04.091" endtime="20230130 12:21:04.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:04.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:04.092" endtime="20230130 12:21:04.093"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.079" endtime="20230130 12:21:04.094"/>
</kw>
<msg timestamp="20230130 12:21:04.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:04.079" endtime="20230130 12:21:04.095"/>
</kw>
<msg timestamp="20230130 12:21:04.095" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:21:04.078" endtime="20230130 12:21:04.095"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:21:04.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:21:04.096" endtime="20230130 12:21:04.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:04.104" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:04.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:04.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:21:04.101" endtime="20230130 12:21:04.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:04.181" level="INFO"/>
<status status="PASS" starttime="20230130 12:21:04.180" endtime="20230130 12:21:04.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:04.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:04.181" endtime="20230130 12:21:04.182"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.100" endtime="20230130 12:21:04.183"/>
</kw>
<msg timestamp="20230130 12:21:04.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:04.099" endtime="20230130 12:21:04.183"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.098" endtime="20230130 12:21:04.184"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.097" endtime="20230130 12:21:04.184"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.077" endtime="20230130 12:21:04.184"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.077" endtime="20230130 12:21:04.184"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:04.190" level="INFO">Running command 'ozone sh key put o3://om:9862/72137-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:12.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:12.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:21:04.187" endtime="20230130 12:21:12.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:12.830" level="INFO"/>
<status status="PASS" starttime="20230130 12:21:12.829" endtime="20230130 12:21:12.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:12.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:12.830" endtime="20230130 12:21:12.831"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.186" endtime="20230130 12:21:12.831"/>
</kw>
<msg timestamp="20230130 12:21:12.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:04.186" endtime="20230130 12:21:12.832"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.185" endtime="20230130 12:21:12.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:12.838" level="INFO">Running command 'ozone sh key getacl o3://om:9862/72137-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:18.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:18.331" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:21:12.835" endtime="20230130 12:21:18.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:18.334" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:21:18.332" endtime="20230130 12:21:18.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:18.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:18.335" endtime="20230130 12:21:18.335"/>
</kw>
<status status="PASS" starttime="20230130 12:21:12.834" endtime="20230130 12:21:18.336"/>
</kw>
<msg timestamp="20230130 12:21:18.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:12.834" endtime="20230130 12:21:18.337"/>
</kw>
<msg timestamp="20230130 12:21:18.337" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:21:12.833" endtime="20230130 12:21:18.338"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:18.338" endtime="20230130 12:21:18.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:18.345" level="INFO">Running command 'ozone sh key addacl o3://om:9862/72137-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:23.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:23.805" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:21:18.341" endtime="20230130 12:21:23.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:23.806" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:21:23.805" endtime="20230130 12:21:23.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:23.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:23.807" endtime="20230130 12:21:23.807"/>
</kw>
<status status="PASS" starttime="20230130 12:21:18.341" endtime="20230130 12:21:23.808"/>
</kw>
<msg timestamp="20230130 12:21:23.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:18.340" endtime="20230130 12:21:23.809"/>
</kw>
<msg timestamp="20230130 12:21:23.809" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230130 12:21:18.339" endtime="20230130 12:21:23.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:23.816" level="INFO">Running command 'ozone sh key getacl o3://om:9862/72137-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:29.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:29.406" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:21:23.813" endtime="20230130 12:21:29.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:29.410" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:21:29.406" endtime="20230130 12:21:29.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:29.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:29.411" endtime="20230130 12:21:29.411"/>
</kw>
<status status="PASS" starttime="20230130 12:21:23.812" endtime="20230130 12:21:29.412"/>
</kw>
<msg timestamp="20230130 12:21:29.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:23.811" endtime="20230130 12:21:29.413"/>
</kw>
<msg timestamp="20230130 12:21:29.413" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:21:23.810" endtime="20230130 12:21:29.413"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:29.414" endtime="20230130 12:21:29.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:29.421" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/72137-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:35.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:35.244" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:21:29.417" endtime="20230130 12:21:35.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:35.246" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:21:35.245" endtime="20230130 12:21:35.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:35.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:35.246" endtime="20230130 12:21:35.247"/>
</kw>
<status status="PASS" starttime="20230130 12:21:29.416" endtime="20230130 12:21:35.248"/>
</kw>
<msg timestamp="20230130 12:21:35.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:29.416" endtime="20230130 12:21:35.249"/>
</kw>
<msg timestamp="20230130 12:21:35.249" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230130 12:21:29.415" endtime="20230130 12:21:35.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:35.254" level="INFO">Running command 'ozone sh key getacl o3://om:9862/72137-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:41.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:41.093" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:21:35.251" endtime="20230130 12:21:41.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:41.094" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:21:41.093" endtime="20230130 12:21:41.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:41.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:41.095" endtime="20230130 12:21:41.095"/>
</kw>
<status status="PASS" starttime="20230130 12:21:35.251" endtime="20230130 12:21:41.096"/>
</kw>
<msg timestamp="20230130 12:21:41.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:35.250" endtime="20230130 12:21:41.096"/>
</kw>
<msg timestamp="20230130 12:21:41.097" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:21:35.249" endtime="20230130 12:21:41.097"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:41.097" endtime="20230130 12:21:41.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:41.103" level="INFO">Running command 'ozone sh key setacl o3://om:9862/72137-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:46.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:46.549" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:21:41.100" endtime="20230130 12:21:46.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:46.551" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:21:46.550" endtime="20230130 12:21:46.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:46.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:46.551" endtime="20230130 12:21:46.552"/>
</kw>
<status status="PASS" starttime="20230130 12:21:41.099" endtime="20230130 12:21:46.552"/>
</kw>
<msg timestamp="20230130 12:21:46.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:41.099" endtime="20230130 12:21:46.553"/>
</kw>
<msg timestamp="20230130 12:21:46.553" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:21:41.098" endtime="20230130 12:21:46.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:46.558" level="INFO">Running command 'ozone sh key getacl o3://om:9862/72137-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:52.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:52.701" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230130 12:21:46.556" endtime="20230130 12:21:52.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:52.704" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:21:52.702" endtime="20230130 12:21:52.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:52.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:52.704" endtime="20230130 12:21:52.705"/>
</kw>
<status status="PASS" starttime="20230130 12:21:46.555" endtime="20230130 12:21:52.706"/>
</kw>
<msg timestamp="20230130 12:21:52.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:46.554" endtime="20230130 12:21:52.706"/>
</kw>
<msg timestamp="20230130 12:21:52.707" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230130 12:21:46.554" endtime="20230130 12:21:52.707"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:52.707" endtime="20230130 12:21:52.708"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:21:52.708" endtime="20230130 12:21:52.709"/>
</kw>
<status status="PASS" starttime="20230130 12:21:04.184" endtime="20230130 12:21:52.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:21:04.076" endtime="20230130 12:21:52.710"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:52.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:52.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:52.727" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:21:52.716" endtime="20230130 12:21:52.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:52.729" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:21:52.728" endtime="20230130 12:21:52.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:52.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:52.729" endtime="20230130 12:21:52.730"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.715" endtime="20230130 12:21:52.730"/>
</kw>
<msg timestamp="20230130 12:21:52.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:52.715" endtime="20230130 12:21:52.731"/>
</kw>
<msg timestamp="20230130 12:21:52.732" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:21:52.714" endtime="20230130 12:21:52.732"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:21:52.733" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:21:52.732" endtime="20230130 12:21:52.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:52.738" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:52.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:52.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:21:52.735" endtime="20230130 12:21:52.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:52.808" level="INFO"/>
<status status="PASS" starttime="20230130 12:21:52.806" endtime="20230130 12:21:52.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:52.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:52.808" endtime="20230130 12:21:52.810"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.734" endtime="20230130 12:21:52.811"/>
</kw>
<msg timestamp="20230130 12:21:52.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:52.734" endtime="20230130 12:21:52.812"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.733" endtime="20230130 12:21:52.813"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.733" endtime="20230130 12:21:52.813"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.713" endtime="20230130 12:21:52.813"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.713" endtime="20230130 12:21:52.813"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:52.822" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/72137-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:21:58.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:21:58.356" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230130 12:21:52.818" endtime="20230130 12:21:58.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:21:58.358" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230130 12:21:58.357" endtime="20230130 12:21:58.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:21:58.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:21:58.359" endtime="20230130 12:21:58.359"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.818" endtime="20230130 12:21:58.360"/>
</kw>
<msg timestamp="20230130 12:21:58.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:52.818" endtime="20230130 12:21:58.361"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.817" endtime="20230130 12:21:58.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:21:58.365" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/72137-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:04.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:04.706" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230130 12:21:58.363" endtime="20230130 12:22:04.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:04.708" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:22:04.707" endtime="20230130 12:22:04.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:04.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:04.709" endtime="20230130 12:22:04.710"/>
</kw>
<status status="PASS" starttime="20230130 12:21:58.362" endtime="20230130 12:22:04.710"/>
</kw>
<msg timestamp="20230130 12:22:04.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:21:58.362" endtime="20230130 12:22:04.711"/>
</kw>
<msg timestamp="20230130 12:22:04.711" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230130 12:21:58.361" endtime="20230130 12:22:04.711"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:22:04.712" endtime="20230130 12:22:04.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:04.719" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/72137-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:10.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:10.601" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230130 12:22:04.715" endtime="20230130 12:22:10.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:10.603" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230130 12:22:10.602" endtime="20230130 12:22:10.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:10.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:10.603" endtime="20230130 12:22:10.604"/>
</kw>
<status status="PASS" starttime="20230130 12:22:04.715" endtime="20230130 12:22:10.604"/>
</kw>
<msg timestamp="20230130 12:22:10.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:04.714" endtime="20230130 12:22:10.605"/>
</kw>
<msg timestamp="20230130 12:22:10.606" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230130 12:22:04.713" endtime="20230130 12:22:10.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:10.613" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/72137-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:16.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:16.519" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230130 12:22:10.608" endtime="20230130 12:22:16.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:16.521" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:22:16.520" endtime="20230130 12:22:16.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:16.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:16.521" endtime="20230130 12:22:16.522"/>
</kw>
<status status="PASS" starttime="20230130 12:22:10.607" endtime="20230130 12:22:16.522"/>
</kw>
<msg timestamp="20230130 12:22:16.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:10.607" endtime="20230130 12:22:16.523"/>
</kw>
<msg timestamp="20230130 12:22:16.523" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230130 12:22:10.606" endtime="20230130 12:22:16.523"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:22:16.523" endtime="20230130 12:22:16.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:16.529" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/72137-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:22.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:22.084" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:22:16.526" endtime="20230130 12:22:22.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:22.085" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:22:22.084" endtime="20230130 12:22:22.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:22.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:22.085" endtime="20230130 12:22:22.087"/>
</kw>
<status status="PASS" starttime="20230130 12:22:16.526" endtime="20230130 12:22:22.087"/>
</kw>
<msg timestamp="20230130 12:22:22.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:16.525" endtime="20230130 12:22:22.088"/>
</kw>
<msg timestamp="20230130 12:22:22.088" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230130 12:22:16.525" endtime="20230130 12:22:22.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:22.094" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/72137-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:28.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:28.288" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230130 12:22:22.091" endtime="20230130 12:22:28.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:28.290" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:22:28.289" endtime="20230130 12:22:28.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:28.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:28.290" endtime="20230130 12:22:28.291"/>
</kw>
<status status="PASS" starttime="20230130 12:22:22.090" endtime="20230130 12:22:28.292"/>
</kw>
<msg timestamp="20230130 12:22:28.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:22.090" endtime="20230130 12:22:28.292"/>
</kw>
<msg timestamp="20230130 12:22:28.293" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230130 12:22:22.089" endtime="20230130 12:22:28.293"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:22:28.293" endtime="20230130 12:22:28.294"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:22:28.294" endtime="20230130 12:22:28.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:28.299" level="INFO">Running command 'ozone sh key put o3://om:9862/72137-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:37.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:37.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:22:28.296" endtime="20230130 12:22:37.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:37.122" level="INFO"/>
<status status="PASS" starttime="20230130 12:22:37.121" endtime="20230130 12:22:37.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:37.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:37.122" endtime="20230130 12:22:37.123"/>
</kw>
<status status="PASS" starttime="20230130 12:22:28.296" endtime="20230130 12:22:37.123"/>
</kw>
<msg timestamp="20230130 12:22:37.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:28.295" endtime="20230130 12:22:37.124"/>
</kw>
<status status="PASS" starttime="20230130 12:22:28.295" endtime="20230130 12:22:37.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:37.128" level="INFO">Running command 'ozone sh key getacl o3://om:9862/72137-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:43.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:43.068" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:22:37.126" endtime="20230130 12:22:43.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:43.070" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230130 12:22:43.069" endtime="20230130 12:22:43.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:43.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:43.071" endtime="20230130 12:22:43.072"/>
</kw>
<status status="PASS" starttime="20230130 12:22:37.125" endtime="20230130 12:22:43.072"/>
</kw>
<msg timestamp="20230130 12:22:43.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:37.125" endtime="20230130 12:22:43.073"/>
</kw>
<msg timestamp="20230130 12:22:43.073" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230130 12:22:37.124" endtime="20230130 12:22:43.073"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:22:43.074" endtime="20230130 12:22:43.074"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230130 12:22:43.074" endtime="20230130 12:22:43.075"/>
</kw>
<status status="PASS" starttime="20230130 12:21:52.814" endtime="20230130 12:22:43.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:21:52.712" endtime="20230130 12:22:43.076"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:43.086" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:43.091" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:22:43.083" endtime="20230130 12:22:43.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:43.093" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:22:43.092" endtime="20230130 12:22:43.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:43.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:43.093" endtime="20230130 12:22:43.094"/>
</kw>
<status status="PASS" starttime="20230130 12:22:43.081" endtime="20230130 12:22:43.094"/>
</kw>
<msg timestamp="20230130 12:22:43.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:43.081" endtime="20230130 12:22:43.095"/>
</kw>
<msg timestamp="20230130 12:22:43.096" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:22:43.080" endtime="20230130 12:22:43.096"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:22:43.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:22:43.096" endtime="20230130 12:22:43.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:43.102" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:43.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:43.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:22:43.100" endtime="20230130 12:22:43.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:43.155" level="INFO"/>
<status status="PASS" starttime="20230130 12:22:43.154" endtime="20230130 12:22:43.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:43.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:43.155" endtime="20230130 12:22:43.156"/>
</kw>
<status status="PASS" starttime="20230130 12:22:43.099" endtime="20230130 12:22:43.157"/>
</kw>
<msg timestamp="20230130 12:22:43.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:43.098" endtime="20230130 12:22:43.157"/>
</kw>
<status status="PASS" starttime="20230130 12:22:43.098" endtime="20230130 12:22:43.158"/>
</kw>
<status status="PASS" starttime="20230130 12:22:43.097" endtime="20230130 12:22:43.158"/>
</kw>
<status status="PASS" starttime="20230130 12:22:43.079" endtime="20230130 12:22:43.158"/>
</kw>
<status status="PASS" starttime="20230130 12:22:43.079" endtime="20230130 12:22:43.158"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:43.164" level="INFO">Running command 'ozone sh volume info o3:///72137-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:48.611" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:22:48.611" level="INFO">${output} = VOLUME_NOT_FOUND Volume 72137-without-host is not found</msg>
<status status="PASS" starttime="20230130 12:22:43.161" endtime="20230130 12:22:48.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:48.613" level="INFO">VOLUME_NOT_FOUND Volume 72137-without-host is not found</msg>
<status status="PASS" starttime="20230130 12:22:48.612" endtime="20230130 12:22:48.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:48.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:48.613" endtime="20230130 12:22:48.614"/>
</kw>
<msg timestamp="20230130 12:22:48.614" level="INFO">${result} = VOLUME_NOT_FOUND Volume 72137-without-host is not found</msg>
<status status="PASS" starttime="20230130 12:22:43.160" endtime="20230130 12:22:48.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:22:48.615" endtime="20230130 12:22:48.615"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:48.619" level="INFO">Running command 'ozone sh volume create o3:///72137-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:22:54.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:22:54.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:22:48.617" endtime="20230130 12:22:54.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:22:54.443" level="INFO"/>
<status status="PASS" starttime="20230130 12:22:54.442" endtime="20230130 12:22:54.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:22:54.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:22:54.443" endtime="20230130 12:22:54.444"/>
</kw>
<status status="PASS" starttime="20230130 12:22:48.616" endtime="20230130 12:22:54.444"/>
</kw>
<msg timestamp="20230130 12:22:54.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:48.616" endtime="20230130 12:22:54.445"/>
</kw>
<msg timestamp="20230130 12:22:54.445" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:22:48.615" endtime="20230130 12:22:54.445"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230130 12:22:54.446" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230130 12:22:54.446" endtime="20230130 12:22:54.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:22:54.454" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="72137-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:00.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:00.586" level="INFO">${output} = {
  "metadata": {},
  "name": "72137-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230130 12:22:54.449" endtime="20230130 12:23:00.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:00.588" level="INFO">{
  "metadata": {},
  "name": "72137-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-30T12:22:54.270Z",
  "modificationTime": "2023-01-30T12:22:54.270Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230130 12:23:00.587" endtime="20230130 12:23:00.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:00.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:00.589" endtime="20230130 12:23:00.590"/>
</kw>
<status status="PASS" starttime="20230130 12:22:54.448" endtime="20230130 12:23:00.590"/>
</kw>
<msg timestamp="20230130 12:23:00.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:22:54.447" endtime="20230130 12:23:00.591"/>
</kw>
<msg timestamp="20230130 12:23:00.592" level="INFO">${result} = {
  "metadata": {},
  "name": "72137-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230130 12:22:54.446" endtime="20230130 12:23:00.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:23:00.592" endtime="20230130 12:23:00.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:00.601" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="72137-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:07.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:07.129" level="INFO">${output} = {
  "metadata": {},
  "name": "72137-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230130 12:23:00.598" endtime="20230130 12:23:07.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:07.131" level="INFO">{
  "metadata": {},
  "name": "72137-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-30T12:22:54.270Z",
  "modificationTime": "2023-01-30T12:22:54.270Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230130 12:23:07.130" endtime="20230130 12:23:07.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:07.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:07.132" endtime="20230130 12:23:07.132"/>
</kw>
<status status="PASS" starttime="20230130 12:23:00.597" endtime="20230130 12:23:07.133"/>
</kw>
<msg timestamp="20230130 12:23:07.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:00.597" endtime="20230130 12:23:07.134"/>
</kw>
<msg timestamp="20230130 12:23:07.134" level="INFO">${result} = {
  "metadata": {},
  "name": "72137-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230130 12:23:00.595" endtime="20230130 12:23:07.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:23:07.135" endtime="20230130 12:23:07.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:07.140" level="INFO">Running command 'ozone sh volume setquota o3:///72137-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:13.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:13.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:23:07.137" endtime="20230130 12:23:13.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:13.209" level="INFO"/>
<status status="PASS" starttime="20230130 12:23:13.208" endtime="20230130 12:23:13.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:13.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:13.210" endtime="20230130 12:23:13.210"/>
</kw>
<status status="PASS" starttime="20230130 12:23:07.137" endtime="20230130 12:23:13.211"/>
</kw>
<msg timestamp="20230130 12:23:13.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:07.136" endtime="20230130 12:23:13.211"/>
</kw>
<status status="PASS" starttime="20230130 12:23:07.135" endtime="20230130 12:23:13.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:13.217" level="INFO">Running command 'ozone sh volume info o3:///72137-without-host | jq -r '. | select(.name=="72137-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:19.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:19.675" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:23:13.215" endtime="20230130 12:23:19.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:19.678" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230130 12:23:19.676" endtime="20230130 12:23:19.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:19.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:19.678" endtime="20230130 12:23:19.678"/>
</kw>
<status status="PASS" starttime="20230130 12:23:13.214" endtime="20230130 12:23:19.679"/>
</kw>
<msg timestamp="20230130 12:23:19.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:13.213" endtime="20230130 12:23:19.680"/>
</kw>
<msg timestamp="20230130 12:23:19.680" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:23:13.212" endtime="20230130 12:23:19.680"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:23:19.680" endtime="20230130 12:23:19.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:19.686" level="INFO">Running command 'ozone sh bucket create o3:///72137-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:25.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:25.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:23:19.683" endtime="20230130 12:23:25.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:25.080" level="INFO"/>
<status status="PASS" starttime="20230130 12:23:25.079" endtime="20230130 12:23:25.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:25.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:25.081" endtime="20230130 12:23:25.082"/>
</kw>
<status status="PASS" starttime="20230130 12:23:19.682" endtime="20230130 12:23:25.082"/>
</kw>
<msg timestamp="20230130 12:23:25.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:19.682" endtime="20230130 12:23:25.083"/>
</kw>
<msg timestamp="20230130 12:23:25.083" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:23:19.681" endtime="20230130 12:23:25.083"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230130 12:23:25.084" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230130 12:23:25.083" endtime="20230130 12:23:25.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:25.092" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:30.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:30.798" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230130 12:23:25.086" endtime="20230130 12:23:30.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:30.799" level="INFO">DISK</msg>
<status status="PASS" starttime="20230130 12:23:30.798" endtime="20230130 12:23:30.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:30.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:30.799" endtime="20230130 12:23:30.800"/>
</kw>
<status status="PASS" starttime="20230130 12:23:25.086" endtime="20230130 12:23:30.801"/>
</kw>
<msg timestamp="20230130 12:23:30.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:25.085" endtime="20230130 12:23:30.802"/>
</kw>
<msg timestamp="20230130 12:23:30.802" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230130 12:23:25.084" endtime="20230130 12:23:30.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:23:30.802" endtime="20230130 12:23:30.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:30.809" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:36.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:36.886" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:23:30.806" endtime="20230130 12:23:36.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:36.888" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230130 12:23:36.886" endtime="20230130 12:23:36.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:36.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:36.888" endtime="20230130 12:23:36.889"/>
</kw>
<status status="PASS" starttime="20230130 12:23:30.806" endtime="20230130 12:23:36.889"/>
</kw>
<msg timestamp="20230130 12:23:36.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:30.805" endtime="20230130 12:23:36.890"/>
</kw>
<msg timestamp="20230130 12:23:36.890" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230130 12:23:30.803" endtime="20230130 12:23:36.890"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:23:36.890" endtime="20230130 12:23:36.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:36.897" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:43.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:43.047" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230130 12:23:36.893" endtime="20230130 12:23:43.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:43.049" level="INFO">100</msg>
<status status="PASS" starttime="20230130 12:23:43.048" endtime="20230130 12:23:43.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:43.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:43.049" endtime="20230130 12:23:43.050"/>
</kw>
<status status="PASS" starttime="20230130 12:23:36.893" endtime="20230130 12:23:43.051"/>
</kw>
<msg timestamp="20230130 12:23:43.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:36.892" endtime="20230130 12:23:43.052"/>
</kw>
<msg timestamp="20230130 12:23:43.052" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230130 12:23:36.891" endtime="20230130 12:23:43.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:23:43.053" endtime="20230130 12:23:43.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:43.066" level="INFO">Running command 'ozone sh bucket setquota o3:///72137-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:49.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:49.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:23:43.062" endtime="20230130 12:23:49.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:49.043" level="INFO"/>
<status status="PASS" starttime="20230130 12:23:49.043" endtime="20230130 12:23:49.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:49.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:49.044" endtime="20230130 12:23:49.045"/>
</kw>
<status status="PASS" starttime="20230130 12:23:43.055" endtime="20230130 12:23:49.045"/>
</kw>
<msg timestamp="20230130 12:23:49.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:43.055" endtime="20230130 12:23:49.046"/>
</kw>
<status status="PASS" starttime="20230130 12:23:43.054" endtime="20230130 12:23:49.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:49.053" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:23:55.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:23:55.636" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230130 12:23:49.050" endtime="20230130 12:23:55.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:23:55.638" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230130 12:23:55.637" endtime="20230130 12:23:55.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:23:55.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:23:55.639" endtime="20230130 12:23:55.639"/>
</kw>
<status status="PASS" starttime="20230130 12:23:49.048" endtime="20230130 12:23:55.640"/>
</kw>
<msg timestamp="20230130 12:23:55.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:49.048" endtime="20230130 12:23:55.641"/>
</kw>
<msg timestamp="20230130 12:23:55.642" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230130 12:23:49.046" endtime="20230130 12:23:55.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:23:55.642" endtime="20230130 12:23:55.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:23:55.649" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:02.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:02.523" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230130 12:23:55.646" endtime="20230130 12:24:02.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:02.525" level="INFO">1000</msg>
<status status="PASS" starttime="20230130 12:24:02.524" endtime="20230130 12:24:02.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:02.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:02.526" endtime="20230130 12:24:02.526"/>
</kw>
<status status="PASS" starttime="20230130 12:23:55.645" endtime="20230130 12:24:02.527"/>
</kw>
<msg timestamp="20230130 12:24:02.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:23:55.644" endtime="20230130 12:24:02.528"/>
</kw>
<msg timestamp="20230130 12:24:02.528" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230130 12:23:55.643" endtime="20230130 12:24:02.528"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:24:02.528" endtime="20230130 12:24:02.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:02.534" level="INFO">Running command 'ozone sh bucket list o3:///72137-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:08.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:08.639" level="INFO">${output} = 72137-without-host</msg>
<status status="PASS" starttime="20230130 12:24:02.531" endtime="20230130 12:24:08.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:08.641" level="INFO">72137-without-host</msg>
<status status="PASS" starttime="20230130 12:24:08.640" endtime="20230130 12:24:08.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:08.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:08.641" endtime="20230130 12:24:08.642"/>
</kw>
<status status="PASS" starttime="20230130 12:24:02.530" endtime="20230130 12:24:08.643"/>
</kw>
<msg timestamp="20230130 12:24:08.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:02.530" endtime="20230130 12:24:08.644"/>
</kw>
<msg timestamp="20230130 12:24:08.644" level="INFO">${result} = 72137-without-host</msg>
<status status="PASS" starttime="20230130 12:24:02.529" endtime="20230130 12:24:08.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:24:08.644" endtime="20230130 12:24:08.645"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:08.651" level="INFO">Running command 'ozone sh key put o3:///72137-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:17.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:17.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:08.648" endtime="20230130 12:24:17.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:17.712" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:17.711" endtime="20230130 12:24:17.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:17.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:17.712" endtime="20230130 12:24:17.713"/>
</kw>
<status status="PASS" starttime="20230130 12:24:08.647" endtime="20230130 12:24:17.713"/>
</kw>
<msg timestamp="20230130 12:24:17.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:08.647" endtime="20230130 12:24:17.714"/>
</kw>
<status status="PASS" starttime="20230130 12:24:08.646" endtime="20230130 12:24:17.714"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:17.720" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:17.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:17.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:17.717" endtime="20230130 12:24:17.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:17.725" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:17.724" endtime="20230130 12:24:17.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:17.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:17.726" endtime="20230130 12:24:17.726"/>
</kw>
<status status="PASS" starttime="20230130 12:24:17.716" endtime="20230130 12:24:17.727"/>
</kw>
<msg timestamp="20230130 12:24:17.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:17.715" endtime="20230130 12:24:17.727"/>
</kw>
<status status="PASS" starttime="20230130 12:24:17.715" endtime="20230130 12:24:17.728"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:17.732" level="INFO">Running command 'ozone sh key get o3:///72137-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:25.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:25.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:17.730" endtime="20230130 12:24:25.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:25.945" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:25.943" endtime="20230130 12:24:25.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:25.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:25.945" endtime="20230130 12:24:25.945"/>
</kw>
<status status="PASS" starttime="20230130 12:24:17.729" endtime="20230130 12:24:25.946"/>
</kw>
<msg timestamp="20230130 12:24:25.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:17.729" endtime="20230130 12:24:25.947"/>
</kw>
<status status="PASS" starttime="20230130 12:24:17.728" endtime="20230130 12:24:25.948"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:25.953" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:25.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:25.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:25.950" endtime="20230130 12:24:25.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:25.957" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:25.957" endtime="20230130 12:24:25.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:25.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:25.958" endtime="20230130 12:24:25.958"/>
</kw>
<status status="PASS" starttime="20230130 12:24:25.949" endtime="20230130 12:24:25.959"/>
</kw>
<msg timestamp="20230130 12:24:25.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:25.948" endtime="20230130 12:24:25.960"/>
</kw>
<status status="PASS" starttime="20230130 12:24:25.948" endtime="20230130 12:24:25.960"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:25.965" level="INFO">Running command 'ozone sh key put -t RATIS o3:///72137-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:35.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:35.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:25.962" endtime="20230130 12:24:35.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:35.514" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:35.513" endtime="20230130 12:24:35.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:35.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:35.514" endtime="20230130 12:24:35.515"/>
</kw>
<status status="PASS" starttime="20230130 12:24:25.962" endtime="20230130 12:24:35.515"/>
</kw>
<msg timestamp="20230130 12:24:35.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:25.961" endtime="20230130 12:24:35.516"/>
</kw>
<status status="PASS" starttime="20230130 12:24:25.960" endtime="20230130 12:24:35.517"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:35.521" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:35.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:35.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:35.518" endtime="20230130 12:24:35.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:35.527" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:35.526" endtime="20230130 12:24:35.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:35.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:35.527" endtime="20230130 12:24:35.528"/>
</kw>
<status status="PASS" starttime="20230130 12:24:35.518" endtime="20230130 12:24:35.528"/>
</kw>
<msg timestamp="20230130 12:24:35.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:35.517" endtime="20230130 12:24:35.530"/>
</kw>
<status status="PASS" starttime="20230130 12:24:35.517" endtime="20230130 12:24:35.530"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:35.536" level="INFO">Running command 'ozone sh key get o3:///72137-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:44.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:44.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:35.533" endtime="20230130 12:24:44.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:44.049" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:44.048" endtime="20230130 12:24:44.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:44.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:44.049" endtime="20230130 12:24:44.050"/>
</kw>
<status status="PASS" starttime="20230130 12:24:35.531" endtime="20230130 12:24:44.050"/>
</kw>
<msg timestamp="20230130 12:24:44.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:35.531" endtime="20230130 12:24:44.051"/>
</kw>
<status status="PASS" starttime="20230130 12:24:35.530" endtime="20230130 12:24:44.052"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:44.060" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:44.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:44.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:44.054" endtime="20230130 12:24:44.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:44.066" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:44.065" endtime="20230130 12:24:44.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:44.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:44.066" endtime="20230130 12:24:44.067"/>
</kw>
<status status="PASS" starttime="20230130 12:24:44.053" endtime="20230130 12:24:44.068"/>
</kw>
<msg timestamp="20230130 12:24:44.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:44.053" endtime="20230130 12:24:44.069"/>
</kw>
<status status="PASS" starttime="20230130 12:24:44.052" endtime="20230130 12:24:44.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:44.074" level="INFO">Running command 'ozone sh key info o3:///72137-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:50.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:50.266" level="INFO">${output} = {
  "volumeName": "72137-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:24:31.381Z",
  "modificationTime": "2023-01-30T12:24:34.723...</msg>
<status status="PASS" starttime="20230130 12:24:44.071" endtime="20230130 12:24:50.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:50.268" level="INFO">{
  "volumeName": "72137-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:24:31.381Z",
  "modificationTime": "2023-01-30T12:24:34.723Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230130 12:24:50.267" endtime="20230130 12:24:50.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:50.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:50.268" endtime="20230130 12:24:50.269"/>
</kw>
<status status="PASS" starttime="20230130 12:24:44.070" endtime="20230130 12:24:50.270"/>
</kw>
<msg timestamp="20230130 12:24:50.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:44.070" endtime="20230130 12:24:50.271"/>
</kw>
<msg timestamp="20230130 12:24:50.271" level="INFO">${result} = {
  "volumeName": "72137-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:24:31.381Z",
  "modificationTime": "2023-01-30T12:24:34.723...</msg>
<status status="PASS" starttime="20230130 12:24:44.069" endtime="20230130 12:24:50.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:24:50.272" endtime="20230130 12:24:50.272"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:50.277" level="INFO">Running command 'ozone sh key delete o3:///72137-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:24:55.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:24:55.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:50.274" endtime="20230130 12:24:55.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:24:55.420" level="INFO"/>
<status status="PASS" starttime="20230130 12:24:55.419" endtime="20230130 12:24:55.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:24:55.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:24:55.420" endtime="20230130 12:24:55.421"/>
</kw>
<status status="PASS" starttime="20230130 12:24:50.273" endtime="20230130 12:24:55.421"/>
</kw>
<msg timestamp="20230130 12:24:55.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:50.273" endtime="20230130 12:24:55.423"/>
</kw>
<status status="PASS" starttime="20230130 12:24:50.272" endtime="20230130 12:24:55.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:24:55.429" level="INFO">Running command 'ozone sh key cp o3:///72137-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:04.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:04.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:24:55.426" endtime="20230130 12:25:04.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:04.879" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:04.877" endtime="20230130 12:25:04.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:04.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:04.879" endtime="20230130 12:25:04.881"/>
</kw>
<status status="PASS" starttime="20230130 12:24:55.425" endtime="20230130 12:25:04.881"/>
</kw>
<msg timestamp="20230130 12:25:04.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:24:55.424" endtime="20230130 12:25:04.882"/>
</kw>
<status status="PASS" starttime="20230130 12:24:55.423" endtime="20230130 12:25:04.882"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:04.886" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:04.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:04.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:04.884" endtime="20230130 12:25:04.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:04.895" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:04.894" endtime="20230130 12:25:04.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:04.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:04.895" endtime="20230130 12:25:04.896"/>
</kw>
<status status="PASS" starttime="20230130 12:25:04.883" endtime="20230130 12:25:04.897"/>
</kw>
<msg timestamp="20230130 12:25:04.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:04.883" endtime="20230130 12:25:04.897"/>
</kw>
<status status="PASS" starttime="20230130 12:25:04.882" endtime="20230130 12:25:04.898"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:04.903" level="INFO">Running command 'ozone sh key get o3:///72137-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:13.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:13.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:04.900" endtime="20230130 12:25:13.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:13.315" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:13.314" endtime="20230130 12:25:13.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:13.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:13.316" endtime="20230130 12:25:13.316"/>
</kw>
<status status="PASS" starttime="20230130 12:25:04.899" endtime="20230130 12:25:13.317"/>
</kw>
<msg timestamp="20230130 12:25:13.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:04.899" endtime="20230130 12:25:13.317"/>
</kw>
<status status="PASS" starttime="20230130 12:25:04.898" endtime="20230130 12:25:13.318"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:13.322" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:13.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:13.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:13.319" endtime="20230130 12:25:13.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:13.327" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:13.326" endtime="20230130 12:25:13.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:13.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:13.328" endtime="20230130 12:25:13.328"/>
</kw>
<status status="PASS" starttime="20230130 12:25:13.319" endtime="20230130 12:25:13.329"/>
</kw>
<msg timestamp="20230130 12:25:13.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:13.318" endtime="20230130 12:25:13.330"/>
</kw>
<status status="PASS" starttime="20230130 12:25:13.318" endtime="20230130 12:25:13.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:13.335" level="INFO">Running command 'ozone sh key delete o3:///72137-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:19.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:19.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:13.332" endtime="20230130 12:25:19.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:19.002" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:19.001" endtime="20230130 12:25:19.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:19.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:19.002" endtime="20230130 12:25:19.003"/>
</kw>
<status status="PASS" starttime="20230130 12:25:13.332" endtime="20230130 12:25:19.004"/>
</kw>
<msg timestamp="20230130 12:25:19.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:13.331" endtime="20230130 12:25:19.005"/>
</kw>
<status status="PASS" starttime="20230130 12:25:13.330" endtime="20230130 12:25:19.005"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:19.010" level="INFO">Running command 'ozone sh key get o3:///72137-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:24.232" level="INFO">${rc} = 255</msg>
<msg timestamp="20230130 12:25:24.232" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:25:19.006" endtime="20230130 12:25:24.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:24.234" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:25:24.233" endtime="20230130 12:25:24.234"/>
</kw>
<msg timestamp="20230130 12:25:24.235" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230130 12:25:19.005" endtime="20230130 12:25:24.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:25:24.235" endtime="20230130 12:25:24.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:24.242" level="INFO">Running command 'ozone sh key get --force o3:///72137-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:33.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:33.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:24.239" endtime="20230130 12:25:33.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:33.216" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:33.215" endtime="20230130 12:25:33.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:33.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:33.216" endtime="20230130 12:25:33.217"/>
</kw>
<status status="PASS" starttime="20230130 12:25:24.238" endtime="20230130 12:25:33.217"/>
</kw>
<msg timestamp="20230130 12:25:33.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:24.238" endtime="20230130 12:25:33.218"/>
</kw>
<msg timestamp="20230130 12:25:33.218" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230130 12:25:24.236" endtime="20230130 12:25:33.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:25:33.218" endtime="20230130 12:25:33.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:33.225" level="INFO">Running command 'ozone sh key info o3:///72137-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:39.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:39.545" level="INFO">${output} = {
  "volumeName": "72137-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:24:14.418Z",
  "modificationTime": "2023-01-30T12:24:17.270Z",
  ...</msg>
<status status="PASS" starttime="20230130 12:25:33.222" endtime="20230130 12:25:39.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:39.547" level="INFO">{
  "volumeName": "72137-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:24:14.418Z",
  "modificationTime": "2023-01-30T12:24:17.270Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230130 12:25:39.546" endtime="20230130 12:25:39.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:39.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:39.547" endtime="20230130 12:25:39.548"/>
</kw>
<status status="PASS" starttime="20230130 12:25:33.221" endtime="20230130 12:25:39.548"/>
</kw>
<msg timestamp="20230130 12:25:39.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:33.221" endtime="20230130 12:25:39.549"/>
</kw>
<msg timestamp="20230130 12:25:39.550" level="INFO">${result} = {
  "volumeName": "72137-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-30T12:24:14.418Z",
  "modificationTime": "2023-01-30T12:24:17.270Z",
  ...</msg>
<status status="PASS" starttime="20230130 12:25:33.219" endtime="20230130 12:25:39.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:25:39.550" endtime="20230130 12:25:39.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:39.556" level="INFO">Running command 'ozone sh key list o3:///72137-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:45.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:45.155" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230130 12:25:39.553" endtime="20230130 12:25:45.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:45.157" level="INFO">key1</msg>
<status status="PASS" starttime="20230130 12:25:45.156" endtime="20230130 12:25:45.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:45.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:45.158" endtime="20230130 12:25:45.158"/>
</kw>
<status status="PASS" starttime="20230130 12:25:39.552" endtime="20230130 12:25:45.159"/>
</kw>
<msg timestamp="20230130 12:25:45.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:39.552" endtime="20230130 12:25:45.160"/>
</kw>
<msg timestamp="20230130 12:25:45.160" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230130 12:25:39.551" endtime="20230130 12:25:45.160"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:25:45.160" endtime="20230130 12:25:45.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:45.166" level="INFO">Running command 'ozone sh key rename o3:///72137-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:50.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:50.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:45.163" endtime="20230130 12:25:50.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:50.408" level="INFO"/>
<status status="PASS" starttime="20230130 12:25:50.407" endtime="20230130 12:25:50.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:50.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:50.408" endtime="20230130 12:25:50.409"/>
</kw>
<status status="PASS" starttime="20230130 12:25:45.162" endtime="20230130 12:25:50.410"/>
</kw>
<msg timestamp="20230130 12:25:50.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:45.162" endtime="20230130 12:25:50.411"/>
</kw>
<status status="PASS" starttime="20230130 12:25:45.161" endtime="20230130 12:25:50.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:50.418" level="INFO">Running command 'ozone sh key list o3:///72137-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:25:56.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:25:56.713" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230130 12:25:50.415" endtime="20230130 12:25:56.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:25:56.714" level="INFO">key2</msg>
<status status="PASS" starttime="20230130 12:25:56.713" endtime="20230130 12:25:56.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:25:56.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:25:56.715" endtime="20230130 12:25:56.716"/>
</kw>
<status status="PASS" starttime="20230130 12:25:50.413" endtime="20230130 12:25:56.716"/>
</kw>
<msg timestamp="20230130 12:25:56.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:50.413" endtime="20230130 12:25:56.718"/>
</kw>
<msg timestamp="20230130 12:25:56.718" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230130 12:25:50.412" endtime="20230130 12:25:56.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:25:56.718" endtime="20230130 12:25:56.719"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:25:56.726" level="INFO">Running command 'ozone sh key delete o3:///72137-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:02.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:02.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:25:56.721" endtime="20230130 12:26:02.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:02.193" level="INFO"/>
<status status="PASS" starttime="20230130 12:26:02.192" endtime="20230130 12:26:02.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:02.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:02.194" endtime="20230130 12:26:02.195"/>
</kw>
<status status="PASS" starttime="20230130 12:25:56.721" endtime="20230130 12:26:02.195"/>
</kw>
<msg timestamp="20230130 12:26:02.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:25:56.720" endtime="20230130 12:26:02.196"/>
</kw>
<status status="PASS" starttime="20230130 12:25:56.719" endtime="20230130 12:26:02.196"/>
</kw>
<status status="PASS" starttime="20230130 12:24:08.645" endtime="20230130 12:26:02.196"/>
</kw>
<status status="PASS" starttime="20230130 12:24:08.645" endtime="20230130 12:26:02.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:02.202" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///72137-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:08.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:08.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:26:02.199" endtime="20230130 12:26:08.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:08.208" level="INFO"/>
<status status="PASS" starttime="20230130 12:26:08.207" endtime="20230130 12:26:08.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:08.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:08.208" endtime="20230130 12:26:08.209"/>
</kw>
<status status="PASS" starttime="20230130 12:26:02.198" endtime="20230130 12:26:08.210"/>
</kw>
<msg timestamp="20230130 12:26:08.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:02.198" endtime="20230130 12:26:08.210"/>
</kw>
<status status="PASS" starttime="20230130 12:26:02.197" endtime="20230130 12:26:08.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:08.216" level="INFO">Running command 'ozone sh volume info o3:///72137-without-host | jq -r '. | select(.name=="72137-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:14.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:14.234" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:26:08.213" endtime="20230130 12:26:14.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:14.236" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:26:14.235" endtime="20230130 12:26:14.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:14.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:14.237" endtime="20230130 12:26:14.237"/>
</kw>
<status status="PASS" starttime="20230130 12:26:08.212" endtime="20230130 12:26:14.238"/>
</kw>
<msg timestamp="20230130 12:26:14.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:08.212" endtime="20230130 12:26:14.239"/>
</kw>
<msg timestamp="20230130 12:26:14.239" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:26:08.211" endtime="20230130 12:26:14.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:26:14.240" endtime="20230130 12:26:14.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:14.246" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///72137-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:20.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:20.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:26:14.243" endtime="20230130 12:26:20.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:20.001" level="INFO"/>
<status status="PASS" starttime="20230130 12:26:20.001" endtime="20230130 12:26:20.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:20.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:20.002" endtime="20230130 12:26:20.002"/>
</kw>
<status status="PASS" starttime="20230130 12:26:14.242" endtime="20230130 12:26:20.003"/>
</kw>
<msg timestamp="20230130 12:26:20.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:14.242" endtime="20230130 12:26:20.003"/>
</kw>
<status status="PASS" starttime="20230130 12:26:14.241" endtime="20230130 12:26:20.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:20.010" level="INFO">Running command 'ozone sh volume info o3:///72137-without-host | jq -r '. | select(.name=="72137-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:25.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:25.865" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:26:20.007" endtime="20230130 12:26:25.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:25.867" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:26:25.866" endtime="20230130 12:26:25.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:25.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:25.867" endtime="20230130 12:26:25.868"/>
</kw>
<status status="PASS" starttime="20230130 12:26:20.006" endtime="20230130 12:26:25.869"/>
</kw>
<msg timestamp="20230130 12:26:25.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:20.005" endtime="20230130 12:26:25.870"/>
</kw>
<msg timestamp="20230130 12:26:25.870" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:26:20.004" endtime="20230130 12:26:25.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:26:25.870" endtime="20230130 12:26:25.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:25.877" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///72137-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:31.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:31.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:26:25.874" endtime="20230130 12:26:31.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:31.653" level="INFO"/>
<status status="PASS" starttime="20230130 12:26:31.652" endtime="20230130 12:26:31.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:31.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:31.654" endtime="20230130 12:26:31.654"/>
</kw>
<status status="PASS" starttime="20230130 12:26:25.873" endtime="20230130 12:26:31.655"/>
</kw>
<msg timestamp="20230130 12:26:31.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:25.872" endtime="20230130 12:26:31.656"/>
</kw>
<status status="PASS" starttime="20230130 12:26:25.871" endtime="20230130 12:26:31.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:31.673" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:37.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:37.981" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:26:31.670" endtime="20230130 12:26:37.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:37.983" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:26:37.982" endtime="20230130 12:26:37.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:37.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:37.983" endtime="20230130 12:26:37.984"/>
</kw>
<status status="PASS" starttime="20230130 12:26:31.669" endtime="20230130 12:26:37.984"/>
</kw>
<msg timestamp="20230130 12:26:37.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:31.668" endtime="20230130 12:26:37.986"/>
</kw>
<msg timestamp="20230130 12:26:37.986" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:26:31.665" endtime="20230130 12:26:37.986"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:26:37.986" endtime="20230130 12:26:37.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:37.993" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///72137-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:43.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:43.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:26:37.989" endtime="20230130 12:26:43.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:43.618" level="INFO"/>
<status status="PASS" starttime="20230130 12:26:43.617" endtime="20230130 12:26:43.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:43.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:43.619" endtime="20230130 12:26:43.619"/>
</kw>
<status status="PASS" starttime="20230130 12:26:37.989" endtime="20230130 12:26:43.620"/>
</kw>
<msg timestamp="20230130 12:26:43.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:37.988" endtime="20230130 12:26:43.621"/>
</kw>
<status status="PASS" starttime="20230130 12:26:37.987" endtime="20230130 12:26:43.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:43.627" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:49.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:49.539" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:26:43.624" endtime="20230130 12:26:49.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:49.541" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:26:49.540" endtime="20230130 12:26:49.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:49.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:49.541" endtime="20230130 12:26:49.542"/>
</kw>
<status status="PASS" starttime="20230130 12:26:43.623" endtime="20230130 12:26:49.542"/>
</kw>
<msg timestamp="20230130 12:26:49.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:43.623" endtime="20230130 12:26:49.543"/>
</kw>
<msg timestamp="20230130 12:26:49.543" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:26:43.621" endtime="20230130 12:26:49.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:26:49.543" endtime="20230130 12:26:49.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:49.549" level="INFO">Running command 'ozone sh bucket delete o3:///72137-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:26:54.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:26:54.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:26:49.546" endtime="20230130 12:26:54.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:26:54.937" level="INFO"/>
<status status="PASS" starttime="20230130 12:26:54.936" endtime="20230130 12:26:54.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:26:54.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:26:54.937" endtime="20230130 12:26:54.938"/>
</kw>
<status status="PASS" starttime="20230130 12:26:49.545" endtime="20230130 12:26:54.938"/>
</kw>
<msg timestamp="20230130 12:26:54.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:49.545" endtime="20230130 12:26:54.939"/>
</kw>
<status status="PASS" starttime="20230130 12:26:49.544" endtime="20230130 12:26:54.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:26:54.946" level="INFO">Running command 'ozone sh volume delete o3:///72137-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:00.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:00.696" level="INFO">${output} = Volume 72137-without-host is deleted</msg>
<status status="PASS" starttime="20230130 12:26:54.942" endtime="20230130 12:27:00.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:00.698" level="INFO">Volume 72137-without-host is deleted</msg>
<status status="PASS" starttime="20230130 12:27:00.697" endtime="20230130 12:27:00.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:00.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:00.698" endtime="20230130 12:27:00.699"/>
</kw>
<status status="PASS" starttime="20230130 12:26:54.941" endtime="20230130 12:27:00.699"/>
</kw>
<msg timestamp="20230130 12:27:00.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:26:54.941" endtime="20230130 12:27:00.700"/>
</kw>
<status status="PASS" starttime="20230130 12:26:54.940" endtime="20230130 12:27:00.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:00.706" level="INFO">Running command 'ozone sh volume create o3:///72137-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:06.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:06.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:27:00.703" endtime="20230130 12:27:06.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:06.519" level="INFO"/>
<status status="PASS" starttime="20230130 12:27:06.518" endtime="20230130 12:27:06.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:06.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:06.519" endtime="20230130 12:27:06.520"/>
</kw>
<status status="PASS" starttime="20230130 12:27:00.702" endtime="20230130 12:27:06.520"/>
</kw>
<msg timestamp="20230130 12:27:06.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:00.701" endtime="20230130 12:27:06.521"/>
</kw>
<status status="PASS" starttime="20230130 12:27:00.701" endtime="20230130 12:27:06.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:06.527" level="INFO">Running command 'ozone sh volume info o3:///72137-without-host | jq -r '. | select(.name=="72137-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:12.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:12.674" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:27:06.524" endtime="20230130 12:27:12.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:12.676" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:27:12.675" endtime="20230130 12:27:12.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:12.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:12.676" endtime="20230130 12:27:12.677"/>
</kw>
<status status="PASS" starttime="20230130 12:27:06.524" endtime="20230130 12:27:12.677"/>
</kw>
<msg timestamp="20230130 12:27:12.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:06.523" endtime="20230130 12:27:12.678"/>
</kw>
<msg timestamp="20230130 12:27:12.679" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:27:06.522" endtime="20230130 12:27:12.679"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:27:12.679" endtime="20230130 12:27:12.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:12.685" level="INFO">Running command 'ozone sh volume info o3:///72137-without-host | jq -r '. | select(.name=="72137-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:18.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:18.812" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:27:12.682" endtime="20230130 12:27:18.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:18.815" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:27:18.813" endtime="20230130 12:27:18.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:18.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:18.815" endtime="20230130 12:27:18.816"/>
</kw>
<status status="PASS" starttime="20230130 12:27:12.682" endtime="20230130 12:27:18.817"/>
</kw>
<msg timestamp="20230130 12:27:18.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:12.681" endtime="20230130 12:27:18.817"/>
</kw>
<msg timestamp="20230130 12:27:18.818" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:27:12.680" endtime="20230130 12:27:18.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:27:18.818" endtime="20230130 12:27:18.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:18.824" level="INFO">Running command 'ozone sh bucket create o3:///72137-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:23.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:23.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:27:18.821" endtime="20230130 12:27:23.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:24.001" level="INFO"/>
<status status="PASS" starttime="20230130 12:27:24.000" endtime="20230130 12:27:24.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:24.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:24.001" endtime="20230130 12:27:24.002"/>
</kw>
<status status="PASS" starttime="20230130 12:27:18.820" endtime="20230130 12:27:24.002"/>
</kw>
<msg timestamp="20230130 12:27:24.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:18.820" endtime="20230130 12:27:24.003"/>
</kw>
<status status="PASS" starttime="20230130 12:27:18.819" endtime="20230130 12:27:24.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:24.008" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:30.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:30.296" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:27:24.005" endtime="20230130 12:27:30.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:30.298" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:27:30.297" endtime="20230130 12:27:30.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:30.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:30.299" endtime="20230130 12:27:30.300"/>
</kw>
<status status="PASS" starttime="20230130 12:27:24.005" endtime="20230130 12:27:30.300"/>
</kw>
<msg timestamp="20230130 12:27:30.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:24.004" endtime="20230130 12:27:30.301"/>
</kw>
<msg timestamp="20230130 12:27:30.302" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:27:24.003" endtime="20230130 12:27:30.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:27:30.302" endtime="20230130 12:27:30.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:30.307" level="INFO">Running command 'ozone sh bucket info o3:///72137-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:36.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:36.238" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230130 12:27:30.304" endtime="20230130 12:27:36.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:36.240" level="INFO">-1</msg>
<status status="PASS" starttime="20230130 12:27:36.239" endtime="20230130 12:27:36.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:36.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:36.240" endtime="20230130 12:27:36.241"/>
</kw>
<status status="PASS" starttime="20230130 12:27:30.304" endtime="20230130 12:27:36.241"/>
</kw>
<msg timestamp="20230130 12:27:36.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:30.304" endtime="20230130 12:27:36.242"/>
</kw>
<msg timestamp="20230130 12:27:36.243" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230130 12:27:30.303" endtime="20230130 12:27:36.243"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230130 12:27:36.243" endtime="20230130 12:27:36.243"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:36.250" level="INFO">Running command 'ozone sh bucket delete o3:///72137-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:41.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:41.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:27:36.246" endtime="20230130 12:27:41.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:41.386" level="INFO"/>
<status status="PASS" starttime="20230130 12:27:41.385" endtime="20230130 12:27:41.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:41.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:41.386" endtime="20230130 12:27:41.388"/>
</kw>
<status status="PASS" starttime="20230130 12:27:36.245" endtime="20230130 12:27:41.388"/>
</kw>
<msg timestamp="20230130 12:27:41.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:36.244" endtime="20230130 12:27:41.389"/>
</kw>
<status status="PASS" starttime="20230130 12:27:36.244" endtime="20230130 12:27:41.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:41.395" level="INFO">Running command 'ozone sh volume delete o3:///72137-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:43.078" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230130 12:27:41.392" endtime="20230130 12:27:43.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230130 12:27:43.079" endtime="20230130 12:27:43.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230130 12:27:43.080" endtime="20230130 12:27:43.080"/>
</kw>
<status status="FAIL" starttime="20230130 12:27:41.391" endtime="20230130 12:27:43.081"/>
</kw>
<msg timestamp="20230130 12:27:43.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230130 12:27:41.391" endtime="20230130 12:27:43.082"/>
</kw>
<status status="FAIL" starttime="20230130 12:27:41.390" endtime="20230130 12:27:43.082"/>
</kw>
<status status="FAIL" starttime="20230130 12:22:43.158" endtime="20230130 12:27:43.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230130 12:22:43.077" endtime="20230130 12:27:43.083">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230130 12:13:41.235" endtime="20230130 12:27:43.085"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:43.148" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:43.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:43.153" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:27:43.143" endtime="20230130 12:27:43.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:43.155" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:27:43.154" endtime="20230130 12:27:43.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:43.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:43.156" endtime="20230130 12:27:43.157"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.142" endtime="20230130 12:27:43.157"/>
</kw>
<msg timestamp="20230130 12:27:43.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:43.142" endtime="20230130 12:27:43.158"/>
</kw>
<msg timestamp="20230130 12:27:43.159" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:27:43.141" endtime="20230130 12:27:43.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:27:43.162" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:27:43.159" endtime="20230130 12:27:43.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:43.182" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:43.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:43.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:27:43.170" endtime="20230130 12:27:43.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:43.316" level="INFO"/>
<status status="PASS" starttime="20230130 12:27:43.315" endtime="20230130 12:27:43.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:43.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:43.316" endtime="20230130 12:27:43.317"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.167" endtime="20230130 12:27:43.318"/>
</kw>
<msg timestamp="20230130 12:27:43.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:43.166" endtime="20230130 12:27:43.319"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.163" endtime="20230130 12:27:43.319"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.163" endtime="20230130 12:27:43.319"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.141" endtime="20230130 12:27:43.319"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.140" endtime="20230130 12:27:43.323"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230130 12:27:43.325" level="INFO">${random} = 8hmqtJ5FZ7</msg>
<status status="PASS" starttime="20230130 12:27:43.323" endtime="20230130 12:27:43.325"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:43.340" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 8hmqtJ5FZ7 --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:27:56.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:27:56.530" level="INFO">${output} = 2023-01-30 12:27:49,026 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:27:49,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:27:43.333" endtime="20230130 12:27:56.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:27:56.531" level="INFO">2023-01-30 12:27:49,026 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:27:49,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-30 12:27:49,488 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-30 12:27:49,895 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8hmqtJ5FZ7 and number-of-tests 1
2023-01-30 12:27:50,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:27:51,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:27:52,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:27:53,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:27:53,691 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-30 12:27:53,771 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-30 12:27:54,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:27:54,199 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-30 12:27:55,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:27:56,065 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-30 12:27:56,167 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2756.493266, max=2756.493266, mean=2756.493266, stddev=0.0, median=2756.493266, p75=2756.493266, p95=2756.493266, p98=2756.493266, p99=2756.493266, p999=2756.493266, mean_rate=0.3092663096302375, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-30 12:27:56,168 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-30 12:27:56,168 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-30 12:27:56,168 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230130 12:27:56.530" endtime="20230130 12:27:56.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:27:56.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:27:56.532" endtime="20230130 12:27:56.533"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.332" endtime="20230130 12:27:56.533"/>
</kw>
<msg timestamp="20230130 12:27:56.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:43.332" endtime="20230130 12:27:56.534"/>
</kw>
<msg timestamp="20230130 12:27:56.535" level="INFO">${result} = 2023-01-30 12:27:49,026 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:27:49,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:27:43.326" endtime="20230130 12:27:56.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:27:56.535" endtime="20230130 12:27:56.535"/>
</kw>
<status status="PASS" starttime="20230130 12:27:43.325" endtime="20230130 12:27:56.535"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:27:56.543" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 8hmqtJ5FZ7  2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:28:06.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:28:06.526" level="INFO">${output} = 2023-01-30 12:27:59,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:27:59,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:27:56.539" endtime="20230130 12:28:06.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:28:06.527" level="INFO">2023-01-30 12:27:59,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:27:59,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-30 12:27:59,599 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-30 12:27:59,910 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8hmqtJ5FZ7 and number-of-tests 1
2023-01-30 12:28:00,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:28:01,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:28:02,051 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:28:03,022 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-30 12:28:03,051 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:28:04,053 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-30 12:28:05,054 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-30 12:28:05,995 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=44.760596, max=44.760596, mean=44.760596, stddev=0.0, median=44.760596, p75=44.760596, p95=44.760596, p98=44.760596, p99=44.760596, p999=44.760596, mean_rate=0.9448538970907161, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-30 12:28:05,998 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-30 12:28:05,999 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-30 12:28:05,999 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230130 12:28:06.526" endtime="20230130 12:28:06.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:28:06.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:28:06.528" endtime="20230130 12:28:06.528"/>
</kw>
<status status="PASS" starttime="20230130 12:27:56.538" endtime="20230130 12:28:06.529"/>
</kw>
<msg timestamp="20230130 12:28:06.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:27:56.538" endtime="20230130 12:28:06.529"/>
</kw>
<msg timestamp="20230130 12:28:06.530" level="INFO">${result} = 2023-01-30 12:27:59,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-30 12:27:59,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230130 12:27:56.537" endtime="20230130 12:28:06.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230130 12:28:06.530" endtime="20230130 12:28:06.531"/>
</kw>
<status status="PASS" starttime="20230130 12:27:56.536" endtime="20230130 12:28:06.531"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230130 12:27:43.138" endtime="20230130 12:28:06.531"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230130 12:27:43.090" endtime="20230130 12:28:06.533"/>
</suite>
<status status="FAIL" starttime="20230130 12:02:21.900" endtime="20230130 12:28:06.537"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:14.416" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:14.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:14.422" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230130 12:02:14.409" endtime="20230130 12:02:14.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:14.424" level="INFO">scm</msg>
<status status="PASS" starttime="20230130 12:02:14.423" endtime="20230130 12:02:14.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:14.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:14.424" endtime="20230130 12:02:14.425"/>
</kw>
<status status="PASS" starttime="20230130 12:02:14.409" endtime="20230130 12:02:14.425"/>
</kw>
<msg timestamp="20230130 12:02:14.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:14.408" endtime="20230130 12:02:14.427"/>
</kw>
<msg timestamp="20230130 12:02:14.427" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230130 12:02:14.408" endtime="20230130 12:02:14.427"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230130 12:02:14.428" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230130 12:02:14.428" endtime="20230130 12:02:14.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230130 12:02:14.434" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230130 12:02:14.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230130 12:02:14.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230130 12:02:14.431" endtime="20230130 12:02:14.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230130 12:02:14.505" level="INFO"/>
<status status="PASS" starttime="20230130 12:02:14.504" endtime="20230130 12:02:14.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230130 12:02:14.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230130 12:02:14.505" endtime="20230130 12:02:14.506"/>
</kw>
<status status="PASS" starttime="20230130 12:02:14.430" endtime="20230130 12:02:14.507"/>
</kw>
<msg timestamp="20230130 12:02:14.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230130 12:02:14.430" endtime="20230130 12:02:14.508"/>
</kw>
<status status="PASS" starttime="20230130 12:02:14.429" endtime="20230130 12:02:14.508"/>
</kw>
<status status="PASS" starttime="20230130 12:02:14.429" endtime="20230130 12:02:14.508"/>
</kw>
<status status="PASS" starttime="20230130 12:02:14.407" endtime="20230130 12:02:14.508"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230130 12:02:14.406" endtime="20230130 12:02:14.509"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230130 12:02:14.326" endtime="20230130 12:02:14.511"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1544822"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="29" fail="3" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="28" fail="3" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="5" fail="2" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
