<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20230107 11:21:31.920" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:38.799" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:38.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:38.805" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:55:38.795" endtime="20230107 10:55:38.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:38.806" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:55:38.806" endtime="20230107 10:55:38.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:38.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:38.807" endtime="20230107 10:55:38.807"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.794" endtime="20230107 10:55:38.808"/>
</kw>
<msg timestamp="20230107 10:55:38.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:38.794" endtime="20230107 10:55:38.811"/>
</kw>
<msg timestamp="20230107 10:55:38.811" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20230107 10:55:38.794" endtime="20230107 10:55:38.811"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:38.816" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:38.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:38.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:55:38.814" endtime="20230107 10:55:38.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:38.858" level="INFO"/>
<status status="PASS" starttime="20230107 10:55:38.857" endtime="20230107 10:55:38.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:38.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:38.858" endtime="20230107 10:55:38.859"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.813" endtime="20230107 10:55:38.860"/>
</kw>
<msg timestamp="20230107 10:55:38.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:38.813" endtime="20230107 10:55:38.860"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.812" endtime="20230107 10:55:38.861"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.811" endtime="20230107 10:55:38.861"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.793" endtime="20230107 10:55:38.861"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.792" endtime="20230107 10:55:38.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:38.866" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:39.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:39.064" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230107 10:55:38.863" endtime="20230107 10:55:39.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:39.066" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 489

HTTP/1.1 200 OK
Date: Sat, 07 Jan 2023 10:55:39 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRB/wQ8SdSWSmb90SSwNb8ZhgUqwFET7LhEV6js6g+Ve4pa0Zj5oGuU/MfIon1q+6nN6lcUnoVCx10KQrIWUE+Z2Pg=
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1673124939051&amp;s=Vzoi5jfb4S2lMjIWD9fOXL9hQPF2aW+9yH7yZ+YBRks="; Path=/; HttpOnly
Last-Modified: Sat, 07 Jan 2023 10:36:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230107 10:55:39.065" endtime="20230107 10:55:39.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:39.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:39.067" endtime="20230107 10:55:39.068"/>
</kw>
<status status="PASS" starttime="20230107 10:55:38.863" endtime="20230107 10:55:39.068"/>
</kw>
<msg timestamp="20230107 10:55:39.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:38.862" endtime="20230107 10:55:39.069"/>
</kw>
<msg timestamp="20230107 10:55:39.071" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20230107 10:55:38.861" endtime="20230107 10:55:39.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:55:39.071" endtime="20230107 10:55:39.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 10:55:38.791" endtime="20230107 10:55:39.072"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:39.081" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:39.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:39.086" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:55:39.078" endtime="20230107 10:55:39.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:39.088" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:55:39.087" endtime="20230107 10:55:39.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:39.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:39.088" endtime="20230107 10:55:39.089"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.078" endtime="20230107 10:55:39.090"/>
</kw>
<msg timestamp="20230107 10:55:39.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:39.077" endtime="20230107 10:55:39.090"/>
</kw>
<msg timestamp="20230107 10:55:39.091" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:55:39.077" endtime="20230107 10:55:39.091"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:55:39.094" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:55:39.091" endtime="20230107 10:55:39.094"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:39.100" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:39.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:39.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:55:39.097" endtime="20230107 10:55:39.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:39.153" level="INFO"/>
<status status="PASS" starttime="20230107 10:55:39.153" endtime="20230107 10:55:39.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:39.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:39.154" endtime="20230107 10:55:39.155"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.097" endtime="20230107 10:55:39.155"/>
</kw>
<msg timestamp="20230107 10:55:39.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:39.096" endtime="20230107 10:55:39.156"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.095" endtime="20230107 10:55:39.156"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.094" endtime="20230107 10:55:39.157"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.076" endtime="20230107 10:55:39.157"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.075" endtime="20230107 10:55:39.157"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 10:55:39.158" level="INFO">${random} = NuDN8tJKOR</msg>
<status status="PASS" starttime="20230107 10:55:39.157" endtime="20230107 10:55:39.158"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:39.165" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p NuDN8tJKOR  2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:51.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:51.460" level="INFO">${output} = 2023-01-07 10:55:41,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 10:55:42,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 10:55:39.162" endtime="20230107 10:55:51.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:51.462" level="INFO">2023-01-07 10:55:41,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 10:55:42,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-07 10:55:42,140 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-07 10:55:42,434 [main] INFO freon.BaseFreonGenerator: Executing test with prefix NuDN8tJKOR and number-of-tests 1
2023-01-07 10:55:42,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:43,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:44,572 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:44,846 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-01-07 10:55:44,921 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2023-01-07 10:55:45,572 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:46,079 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-07 10:55:46,139 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-07 10:55:46,573 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:46,589 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-07 10:55:47,573 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:48,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:49,577 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:50,577 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-07 10:55:51,049 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5252.208988, max=5252.208988, mean=5252.208988, stddev=0.0, median=5252.208988, p75=5252.208988, p95=5252.208988, p98=5252.208988, p99=5252.208988, p999=5252.208988, mean_rate=0.16498510253487883, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-07 10:55:51,049 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-01-07 10:55:51,070 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-07 10:55:51,070 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230107 10:55:51.461" endtime="20230107 10:55:51.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:51.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:51.463" endtime="20230107 10:55:51.464"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.161" endtime="20230107 10:55:51.464"/>
</kw>
<msg timestamp="20230107 10:55:51.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:39.161" endtime="20230107 10:55:51.465"/>
</kw>
<msg timestamp="20230107 10:55:51.465" level="INFO">${result} = 2023-01-07 10:55:41,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 10:55:42,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 10:55:39.160" endtime="20230107 10:55:51.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:55:51.466" endtime="20230107 10:55:51.467"/>
</kw>
<status status="PASS" starttime="20230107 10:55:39.158" endtime="20230107 10:55:51.468"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:51.476" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p NuDN8tJKOR  2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:01.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:01.629" level="INFO">${output} = 2023-01-07 10:55:54,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 10:55:54,783 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 10:55:51.473" endtime="20230107 10:56:01.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:01.630" level="INFO">2023-01-07 10:55:54,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 10:55:54,783 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-07 10:55:54,783 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-07 10:55:55,046 [main] INFO freon.BaseFreonGenerator: Executing test with prefix NuDN8tJKOR and number-of-tests 1
2023-01-07 10:55:55,157 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:56,162 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:57,162 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:58,163 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:55:58,353 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-07 10:55:59,164 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 10:56:00,165 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-07 10:56:01,241 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=76.699952, max=76.699952, mean=76.699952, stddev=0.0, median=76.699952, p75=76.699952, p95=76.699952, p98=76.699952, p99=76.699952, p999=76.699952, mean_rate=0.8427242002613282, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-07 10:56:01,242 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-07 10:56:01,242 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-07 10:56:01,242 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230107 10:56:01.629" endtime="20230107 10:56:01.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:01.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:01.631" endtime="20230107 10:56:01.631"/>
</kw>
<status status="PASS" starttime="20230107 10:55:51.472" endtime="20230107 10:56:01.632"/>
</kw>
<msg timestamp="20230107 10:56:01.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:51.471" endtime="20230107 10:56:01.632"/>
</kw>
<msg timestamp="20230107 10:56:01.633" level="INFO">${result} = 2023-01-07 10:55:54,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 10:55:54,783 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 10:55:51.470" endtime="20230107 10:56:01.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:01.633" endtime="20230107 10:56:01.634"/>
</kw>
<status status="PASS" starttime="20230107 10:55:51.468" endtime="20230107 10:56:01.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 10:55:39.074" endtime="20230107 10:56:01.634"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230107 10:55:38.745" endtime="20230107 10:56:01.636"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:01.648" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:03.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:03.481" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230107 10:56:01.645" endtime="20230107 10:56:03.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:03.482" level="INFO">om</msg>
<status status="PASS" starttime="20230107 10:56:03.482" endtime="20230107 10:56:03.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:03.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:03.483" endtime="20230107 10:56:03.483"/>
</kw>
<status status="PASS" starttime="20230107 10:56:01.645" endtime="20230107 10:56:03.484"/>
</kw>
<msg timestamp="20230107 10:56:03.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:01.645" endtime="20230107 10:56:03.484"/>
</kw>
<msg timestamp="20230107 10:56:03.485" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230107 10:56:01.644" endtime="20230107 10:56:03.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:03.485" endtime="20230107 10:56:03.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:03.491" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:05.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:05.458" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230107 10:56:03.487" endtime="20230107 10:56:05.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:05.460" level="INFO">om</msg>
<status status="PASS" starttime="20230107 10:56:05.459" endtime="20230107 10:56:05.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:05.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:05.460" endtime="20230107 10:56:05.461"/>
</kw>
<status status="PASS" starttime="20230107 10:56:03.486" endtime="20230107 10:56:05.462"/>
</kw>
<msg timestamp="20230107 10:56:05.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:03.486" endtime="20230107 10:56:05.462"/>
</kw>
<msg timestamp="20230107 10:56:05.463" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230107 10:56:03.485" endtime="20230107 10:56:05.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:05.463" endtime="20230107 10:56:05.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 10:56:01.643" endtime="20230107 10:56:05.464"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:05.470" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:07.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:07.573" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:56:05.468" endtime="20230107 10:56:07.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:07.574" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:56:07.574" endtime="20230107 10:56:07.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:07.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:07.575" endtime="20230107 10:56:07.575"/>
</kw>
<status status="PASS" starttime="20230107 10:56:05.467" endtime="20230107 10:56:07.576"/>
</kw>
<msg timestamp="20230107 10:56:07.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:05.466" endtime="20230107 10:56:07.576"/>
</kw>
<msg timestamp="20230107 10:56:07.576" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230107 10:56:05.466" endtime="20230107 10:56:07.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:07.577" endtime="20230107 10:56:07.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:07.581" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:09.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:09.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:56:07.579" endtime="20230107 10:56:09.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:09.742" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:56:09.741" endtime="20230107 10:56:09.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:09.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:09.742" endtime="20230107 10:56:09.743"/>
</kw>
<status status="PASS" starttime="20230107 10:56:07.579" endtime="20230107 10:56:09.743"/>
</kw>
<msg timestamp="20230107 10:56:09.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:07.578" endtime="20230107 10:56:09.744"/>
</kw>
<msg timestamp="20230107 10:56:09.744" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230107 10:56:07.577" endtime="20230107 10:56:09.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:09.745" endtime="20230107 10:56:09.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 10:56:05.465" endtime="20230107 10:56:09.745"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:09.751" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:11.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:11.424" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230107 10:56:09.749" endtime="20230107 10:56:11.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:11.425" level="INFO">om</msg>
<status status="PASS" starttime="20230107 10:56:11.424" endtime="20230107 10:56:11.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:11.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:11.426" endtime="20230107 10:56:11.427"/>
</kw>
<status status="PASS" starttime="20230107 10:56:09.748" endtime="20230107 10:56:11.427"/>
</kw>
<msg timestamp="20230107 10:56:11.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:09.748" endtime="20230107 10:56:11.428"/>
</kw>
<msg timestamp="20230107 10:56:11.429" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230107 10:56:09.747" endtime="20230107 10:56:11.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:11.429" endtime="20230107 10:56:11.429"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:11.429" endtime="20230107 10:56:11.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:11.436" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:13.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:13.220" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230107 10:56:11.433" endtime="20230107 10:56:13.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:13.222" level="INFO">om</msg>
<status status="PASS" starttime="20230107 10:56:13.221" endtime="20230107 10:56:13.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:13.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:13.222" endtime="20230107 10:56:13.223"/>
</kw>
<status status="PASS" starttime="20230107 10:56:11.432" endtime="20230107 10:56:13.223"/>
</kw>
<msg timestamp="20230107 10:56:13.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:11.431" endtime="20230107 10:56:13.225"/>
</kw>
<msg timestamp="20230107 10:56:13.225" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230107 10:56:11.430" endtime="20230107 10:56:13.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:13.225" endtime="20230107 10:56:13.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:13.226" endtime="20230107 10:56:13.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 10:56:09.747" endtime="20230107 10:56:13.226"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:13.232" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:15.122" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 10:56:15.122" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230107 10:56:13.229" endtime="20230107 10:56:15.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:15.124" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230107 10:56:15.122" endtime="20230107 10:56:15.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:15.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:15.124" endtime="20230107 10:56:15.125"/>
</kw>
<msg timestamp="20230107 10:56:15.125" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230107 10:56:13.229" endtime="20230107 10:56:15.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:15.126" endtime="20230107 10:56:15.126"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:15.129" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:16.830" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 10:56:16.830" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230107 10:56:15.127" endtime="20230107 10:56:16.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:16.832" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230107 10:56:16.831" endtime="20230107 10:56:16.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:16.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:16.832" endtime="20230107 10:56:16.835"/>
</kw>
<msg timestamp="20230107 10:56:16.835" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230107 10:56:15.126" endtime="20230107 10:56:16.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:56:16.835" endtime="20230107 10:56:16.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 10:56:13.227" endtime="20230107 10:56:16.837"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230107 10:56:01.639" endtime="20230107 10:56:16.839"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 10:56:16.864" level="INFO">${random} = 83723</msg>
<status status="PASS" starttime="20230107 10:56:16.864" endtime="20230107 10:56:16.864"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:56:16.866" level="INFO">${source} = 83723-source</msg>
<status status="PASS" starttime="20230107 10:56:16.865" endtime="20230107 10:56:16.867"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:56:16.868" level="INFO">${target} = 83723-target</msg>
<status status="PASS" starttime="20230107 10:56:16.867" endtime="20230107 10:56:16.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:16.872" level="INFO">Running command 'ozone sh volume create 83723-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:22.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:22.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:16.870" endtime="20230107 10:56:22.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:22.376" level="INFO"/>
<status status="PASS" starttime="20230107 10:56:22.374" endtime="20230107 10:56:22.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:22.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:22.376" endtime="20230107 10:56:22.377"/>
</kw>
<status status="PASS" starttime="20230107 10:56:16.869" endtime="20230107 10:56:22.377"/>
</kw>
<msg timestamp="20230107 10:56:22.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:16.869" endtime="20230107 10:56:22.378"/>
</kw>
<status status="PASS" starttime="20230107 10:56:16.869" endtime="20230107 10:56:22.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:22.383" level="INFO">Running command 'ozone sh volume create 83723-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:27.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:27.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:22.380" endtime="20230107 10:56:27.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:27.987" level="INFO"/>
<status status="PASS" starttime="20230107 10:56:27.987" endtime="20230107 10:56:27.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:27.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:27.988" endtime="20230107 10:56:27.988"/>
</kw>
<status status="PASS" starttime="20230107 10:56:22.379" endtime="20230107 10:56:27.989"/>
</kw>
<msg timestamp="20230107 10:56:27.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:22.379" endtime="20230107 10:56:27.989"/>
</kw>
<status status="PASS" starttime="20230107 10:56:22.378" endtime="20230107 10:56:27.990"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:27.999" level="INFO">Running command 'ozone sh bucket create 83723-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:34.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:34.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:27.992" endtime="20230107 10:56:34.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:34.143" level="INFO"/>
<status status="PASS" starttime="20230107 10:56:34.142" endtime="20230107 10:56:34.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:34.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:34.143" endtime="20230107 10:56:34.144"/>
</kw>
<status status="PASS" starttime="20230107 10:56:27.992" endtime="20230107 10:56:34.145"/>
</kw>
<msg timestamp="20230107 10:56:34.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:27.991" endtime="20230107 10:56:34.146"/>
</kw>
<status status="PASS" starttime="20230107 10:56:27.990" endtime="20230107 10:56:34.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:34.151" level="INFO">Running command 'ozone sh key put 83723-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:43.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:43.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:34.148" endtime="20230107 10:56:43.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:43.454" level="INFO"/>
<status status="PASS" starttime="20230107 10:56:43.453" endtime="20230107 10:56:43.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:43.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:43.454" endtime="20230107 10:56:43.455"/>
</kw>
<status status="PASS" starttime="20230107 10:56:34.148" endtime="20230107 10:56:43.456"/>
</kw>
<msg timestamp="20230107 10:56:43.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:34.147" endtime="20230107 10:56:43.457"/>
</kw>
<status status="PASS" starttime="20230107 10:56:34.147" endtime="20230107 10:56:43.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:43.463" level="INFO">Running command 'ozone sh bucket create 83723-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:48.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:48.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:43.459" endtime="20230107 10:56:48.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:48.838" level="INFO"/>
<status status="PASS" starttime="20230107 10:56:48.834" endtime="20230107 10:56:48.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:48.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:48.839" endtime="20230107 10:56:48.842"/>
</kw>
<status status="PASS" starttime="20230107 10:56:43.459" endtime="20230107 10:56:48.843"/>
</kw>
<msg timestamp="20230107 10:56:48.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:43.458" endtime="20230107 10:56:48.849"/>
</kw>
<status status="PASS" starttime="20230107 10:56:43.458" endtime="20230107 10:56:48.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:48.856" level="INFO">Running command 'ozone sh bucket link 83723-source/readable-bucket 83723-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:56:54.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:56:54.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:48.854" endtime="20230107 10:56:54.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:56:54.975" level="INFO"/>
<status status="PASS" starttime="20230107 10:56:54.974" endtime="20230107 10:56:54.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:56:54.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:56:54.976" endtime="20230107 10:56:54.976"/>
</kw>
<status status="PASS" starttime="20230107 10:56:48.853" endtime="20230107 10:56:54.977"/>
</kw>
<msg timestamp="20230107 10:56:54.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:48.853" endtime="20230107 10:56:54.978"/>
</kw>
<status status="PASS" starttime="20230107 10:56:48.849" endtime="20230107 10:56:54.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:56:54.984" level="INFO">Running command 'ozone sh bucket link 83723-source/readable-bucket 83723-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:00.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:00.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:56:54.982" endtime="20230107 10:57:00.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:00.681" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:00.680" endtime="20230107 10:57:00.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:00.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:00.681" endtime="20230107 10:57:00.681"/>
</kw>
<status status="PASS" starttime="20230107 10:56:54.980" endtime="20230107 10:57:00.682"/>
</kw>
<msg timestamp="20230107 10:57:00.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:56:54.980" endtime="20230107 10:57:00.683"/>
</kw>
<status status="PASS" starttime="20230107 10:56:54.979" endtime="20230107 10:57:00.684"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:00.693" level="INFO">Running command 'ozone sh bucket link 83723-source/unreadable-bucket 83723-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:06.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:06.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:00.686" endtime="20230107 10:57:06.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:06.648" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:06.647" endtime="20230107 10:57:06.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:06.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:06.648" endtime="20230107 10:57:06.649"/>
</kw>
<status status="PASS" starttime="20230107 10:57:00.685" endtime="20230107 10:57:06.649"/>
</kw>
<msg timestamp="20230107 10:57:06.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:00.685" endtime="20230107 10:57:06.650"/>
</kw>
<status status="PASS" starttime="20230107 10:57:00.684" endtime="20230107 10:57:06.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:06.654" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83723-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:11.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:11.959" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:06.652" endtime="20230107 10:57:11.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:11.960" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:11.959" endtime="20230107 10:57:11.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:11.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:11.960" endtime="20230107 10:57:11.961"/>
</kw>
<status status="PASS" starttime="20230107 10:57:06.651" endtime="20230107 10:57:11.961"/>
</kw>
<msg timestamp="20230107 10:57:11.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:06.651" endtime="20230107 10:57:11.962"/>
</kw>
<status status="PASS" starttime="20230107 10:57:06.650" endtime="20230107 10:57:11.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:11.967" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83723-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:17.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:17.604" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:11.965" endtime="20230107 10:57:17.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:17.606" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:17.605" endtime="20230107 10:57:17.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:17.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:17.607" endtime="20230107 10:57:17.607"/>
</kw>
<status status="PASS" starttime="20230107 10:57:11.964" endtime="20230107 10:57:17.608"/>
</kw>
<msg timestamp="20230107 10:57:17.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:11.964" endtime="20230107 10:57:17.609"/>
</kw>
<status status="PASS" starttime="20230107 10:57:11.963" endtime="20230107 10:57:17.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:17.615" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83723-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:23.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:23.210" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:17.611" endtime="20230107 10:57:23.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:23.212" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:23.211" endtime="20230107 10:57:23.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:23.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:23.212" endtime="20230107 10:57:23.213"/>
</kw>
<status status="PASS" starttime="20230107 10:57:17.611" endtime="20230107 10:57:23.213"/>
</kw>
<msg timestamp="20230107 10:57:23.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:17.610" endtime="20230107 10:57:23.214"/>
</kw>
<status status="PASS" starttime="20230107 10:57:17.609" endtime="20230107 10:57:23.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:23.218" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83723-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:28.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:28.967" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:23.216" endtime="20230107 10:57:28.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:28.968" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:28.968" endtime="20230107 10:57:28.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:28.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:28.969" endtime="20230107 10:57:28.970"/>
</kw>
<status status="PASS" starttime="20230107 10:57:23.215" endtime="20230107 10:57:28.970"/>
</kw>
<msg timestamp="20230107 10:57:28.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:23.215" endtime="20230107 10:57:28.971"/>
</kw>
<status status="PASS" starttime="20230107 10:57:23.214" endtime="20230107 10:57:28.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:28.982" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83723-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:34.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:34.700" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:28.973" endtime="20230107 10:57:34.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:34.702" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:57:34.701" endtime="20230107 10:57:34.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:34.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:34.703" endtime="20230107 10:57:34.703"/>
</kw>
<status status="PASS" starttime="20230107 10:57:28.973" endtime="20230107 10:57:34.704"/>
</kw>
<msg timestamp="20230107 10:57:34.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:28.972" endtime="20230107 10:57:34.705"/>
</kw>
<status status="PASS" starttime="20230107 10:57:28.972" endtime="20230107 10:57:34.706"/>
</kw>
<status status="PASS" starttime="20230107 10:56:27.990" endtime="20230107 10:57:34.706"/>
</kw>
<status status="PASS" starttime="20230107 10:56:27.990" endtime="20230107 10:57:34.706"/>
</kw>
<status status="PASS" starttime="20230107 10:56:16.863" endtime="20230107 10:57:34.706"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:34.716" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:34.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:34.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:57:34.712" endtime="20230107 10:57:34.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:34.725" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:57:34.724" endtime="20230107 10:57:34.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:34.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:34.725" endtime="20230107 10:57:34.726"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.711" endtime="20230107 10:57:34.727"/>
</kw>
<msg timestamp="20230107 10:57:34.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:34.711" endtime="20230107 10:57:34.728"/>
</kw>
<msg timestamp="20230107 10:57:34.728" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:57:34.710" endtime="20230107 10:57:34.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:57:34.731" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:57:34.728" endtime="20230107 10:57:34.731"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:34.738" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:34.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:34.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:34.735" endtime="20230107 10:57:34.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:34.762" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:34.761" endtime="20230107 10:57:34.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:34.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:34.763" endtime="20230107 10:57:34.764"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.734" endtime="20230107 10:57:34.765"/>
</kw>
<msg timestamp="20230107 10:57:34.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:34.733" endtime="20230107 10:57:34.765"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.732" endtime="20230107 10:57:34.766"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.731" endtime="20230107 10:57:34.766"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.709" endtime="20230107 10:57:34.766"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.708" endtime="20230107 10:57:34.766"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:34.774" level="INFO">Running command 'ozone sh bucket link 83723-source/no-such-bucket 83723-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:40.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:40.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:34.769" endtime="20230107 10:57:40.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:40.449" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:40.448" endtime="20230107 10:57:40.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:40.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:40.449" endtime="20230107 10:57:40.450"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.768" endtime="20230107 10:57:40.450"/>
</kw>
<msg timestamp="20230107 10:57:40.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:34.768" endtime="20230107 10:57:40.451"/>
</kw>
<status status="PASS" starttime="20230107 10:57:34.767" endtime="20230107 10:57:40.451"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:40.455" level="INFO">Running command 'ozone sh key list 83723-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:45.947" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 10:57:45.947" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230107 10:57:40.452" endtime="20230107 10:57:45.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:45.949" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230107 10:57:45.948" endtime="20230107 10:57:45.949"/>
</kw>
<msg timestamp="20230107 10:57:45.949" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230107 10:57:40.451" endtime="20230107 10:57:45.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:57:45.950" endtime="20230107 10:57:45.950"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:57:34.707" endtime="20230107 10:57:45.950"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:45.958" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:45.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:45.964" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:57:45.956" endtime="20230107 10:57:45.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:45.966" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:57:45.964" endtime="20230107 10:57:45.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:45.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:45.966" endtime="20230107 10:57:45.967"/>
</kw>
<status status="PASS" starttime="20230107 10:57:45.955" endtime="20230107 10:57:45.967"/>
</kw>
<msg timestamp="20230107 10:57:45.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:45.955" endtime="20230107 10:57:45.968"/>
</kw>
<msg timestamp="20230107 10:57:45.968" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:57:45.954" endtime="20230107 10:57:45.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:57:45.969" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:57:45.969" endtime="20230107 10:57:45.969"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:45.976" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:45.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:45.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:45.972" endtime="20230107 10:57:45.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:45.999" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:45.998" endtime="20230107 10:57:45.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:46.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:46.000" endtime="20230107 10:57:46.000"/>
</kw>
<status status="PASS" starttime="20230107 10:57:45.972" endtime="20230107 10:57:46.001"/>
</kw>
<msg timestamp="20230107 10:57:46.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:45.971" endtime="20230107 10:57:46.002"/>
</kw>
<status status="PASS" starttime="20230107 10:57:45.970" endtime="20230107 10:57:46.002"/>
</kw>
<status status="PASS" starttime="20230107 10:57:45.969" endtime="20230107 10:57:46.002"/>
</kw>
<status status="PASS" starttime="20230107 10:57:45.953" endtime="20230107 10:57:46.002"/>
</kw>
<status status="PASS" starttime="20230107 10:57:45.953" endtime="20230107 10:57:46.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:46.007" level="INFO">Running command 'ozone sh bucket link 83723-source/bucket1 83723-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:51.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:51.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:46.005" endtime="20230107 10:57:51.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:51.659" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:51.658" endtime="20230107 10:57:51.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:51.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:51.660" endtime="20230107 10:57:51.660"/>
</kw>
<status status="PASS" starttime="20230107 10:57:46.004" endtime="20230107 10:57:51.661"/>
</kw>
<msg timestamp="20230107 10:57:51.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:46.004" endtime="20230107 10:57:51.661"/>
</kw>
<status status="PASS" starttime="20230107 10:57:46.003" endtime="20230107 10:57:51.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:51.666" level="INFO">Running command 'ozone sh bucket create 83723-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:57:56.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:57:56.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:51.664" endtime="20230107 10:57:56.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:57:56.956" level="INFO"/>
<status status="PASS" starttime="20230107 10:57:56.955" endtime="20230107 10:57:56.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:57:56.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:57:56.957" endtime="20230107 10:57:56.958"/>
</kw>
<status status="PASS" starttime="20230107 10:57:51.663" endtime="20230107 10:57:56.958"/>
</kw>
<msg timestamp="20230107 10:57:56.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:51.663" endtime="20230107 10:57:56.959"/>
</kw>
<status status="PASS" starttime="20230107 10:57:51.662" endtime="20230107 10:57:56.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:57:56.965" level="INFO">Running command 'ozone sh key put 83723-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:06.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:06.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:57:56.961" endtime="20230107 10:58:06.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:06.158" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:06.157" endtime="20230107 10:58:06.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:06.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:06.159" endtime="20230107 10:58:06.159"/>
</kw>
<status status="PASS" starttime="20230107 10:57:56.960" endtime="20230107 10:58:06.160"/>
</kw>
<msg timestamp="20230107 10:58:06.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:57:56.960" endtime="20230107 10:58:06.160"/>
</kw>
<status status="PASS" starttime="20230107 10:57:56.959" endtime="20230107 10:58:06.161"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 10:58:06.163" level="INFO">${postfix} = 65419</msg>
<status status="PASS" starttime="20230107 10:58:06.162" endtime="20230107 10:58:06.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230107 10:58:06.163" level="INFO">${tmpfile} = /tmp/tempkey-65419</msg>
<status status="PASS" starttime="20230107 10:58:06.163" endtime="20230107 10:58:06.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:06.168" level="INFO">Running command 'ozone sh key get 83723-target/link1/key1 /tmp/tempkey-65419 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:14.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:14.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:06.166" endtime="20230107 10:58:14.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:14.481" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:14.480" endtime="20230107 10:58:14.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:14.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:14.482" endtime="20230107 10:58:14.482"/>
</kw>
<status status="PASS" starttime="20230107 10:58:06.165" endtime="20230107 10:58:14.483"/>
</kw>
<msg timestamp="20230107 10:58:14.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:06.165" endtime="20230107 10:58:14.484"/>
</kw>
<status status="PASS" starttime="20230107 10:58:06.164" endtime="20230107 10:58:14.484"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230107 10:58:14.487" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-65419 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:14.491" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230107 10:58:14.484" endtime="20230107 10:58:14.491"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:14.500" level="INFO">Running command 'rm -f /tmp/tempkey-65419 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:14.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:14.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:14.495" endtime="20230107 10:58:14.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:14.506" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:14.505" endtime="20230107 10:58:14.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:14.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:14.506" endtime="20230107 10:58:14.507"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.495" endtime="20230107 10:58:14.507"/>
</kw>
<msg timestamp="20230107 10:58:14.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:14.492" endtime="20230107 10:58:14.508"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.491" endtime="20230107 10:58:14.509"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230107 10:58:14.509" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230107 10:58:14.509" endtime="20230107 10:58:14.509"/>
</kw>
<msg timestamp="20230107 10:58:14.510" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230107 10:58:06.161" endtime="20230107 10:58:14.510"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230107 10:58:14.510" endtime="20230107 10:58:14.511"/>
</kw>
<status status="PASS" starttime="20230107 10:58:06.161" endtime="20230107 10:58:14.511"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:57:45.952" endtime="20230107 10:58:14.511"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:14.520" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:14.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:14.525" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:58:14.517" endtime="20230107 10:58:14.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:14.526" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:58:14.525" endtime="20230107 10:58:14.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:14.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:14.527" endtime="20230107 10:58:14.528"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.516" endtime="20230107 10:58:14.528"/>
</kw>
<msg timestamp="20230107 10:58:14.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:14.516" endtime="20230107 10:58:14.529"/>
</kw>
<msg timestamp="20230107 10:58:14.529" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:58:14.515" endtime="20230107 10:58:14.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:58:14.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:58:14.529" endtime="20230107 10:58:14.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:14.536" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:14.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:14.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:14.534" endtime="20230107 10:58:14.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:14.629" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:14.628" endtime="20230107 10:58:14.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:14.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:14.629" endtime="20230107 10:58:14.630"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.533" endtime="20230107 10:58:14.630"/>
</kw>
<msg timestamp="20230107 10:58:14.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:14.532" endtime="20230107 10:58:14.631"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.532" endtime="20230107 10:58:14.632"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.531" endtime="20230107 10:58:14.632"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.515" endtime="20230107 10:58:14.632"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.514" endtime="20230107 10:58:14.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:14.637" level="INFO">Running command 'ozone sh key put 83723-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:23.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:23.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:14.634" endtime="20230107 10:58:23.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:23.539" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:23.538" endtime="20230107 10:58:23.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:23.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:23.539" endtime="20230107 10:58:23.540"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.633" endtime="20230107 10:58:23.541"/>
</kw>
<msg timestamp="20230107 10:58:23.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:14.633" endtime="20230107 10:58:23.541"/>
</kw>
<status status="PASS" starttime="20230107 10:58:14.632" endtime="20230107 10:58:23.542"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 10:58:23.545" level="INFO">${postfix} = 09622</msg>
<status status="PASS" starttime="20230107 10:58:23.544" endtime="20230107 10:58:23.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230107 10:58:23.545" level="INFO">${tmpfile} = /tmp/tempkey-09622</msg>
<status status="PASS" starttime="20230107 10:58:23.545" endtime="20230107 10:58:23.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:23.550" level="INFO">Running command 'ozone sh key get 83723-source/bucket1/key2 /tmp/tempkey-09622 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:32.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:32.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:23.547" endtime="20230107 10:58:32.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:32.125" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:32.124" endtime="20230107 10:58:32.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:32.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:32.125" endtime="20230107 10:58:32.126"/>
</kw>
<status status="PASS" starttime="20230107 10:58:23.547" endtime="20230107 10:58:32.126"/>
</kw>
<msg timestamp="20230107 10:58:32.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:23.546" endtime="20230107 10:58:32.127"/>
</kw>
<status status="PASS" starttime="20230107 10:58:23.546" endtime="20230107 10:58:32.128"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230107 10:58:32.130" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-09622 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:32.134" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230107 10:58:32.128" endtime="20230107 10:58:32.135"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:32.140" level="INFO">Running command 'rm -f /tmp/tempkey-09622 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:32.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:32.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:32.137" endtime="20230107 10:58:32.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:32.145" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:32.144" endtime="20230107 10:58:32.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:32.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:32.145" endtime="20230107 10:58:32.146"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.137" endtime="20230107 10:58:32.146"/>
</kw>
<msg timestamp="20230107 10:58:32.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:32.136" endtime="20230107 10:58:32.147"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.135" endtime="20230107 10:58:32.148"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230107 10:58:32.149" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230107 10:58:32.148" endtime="20230107 10:58:32.149"/>
</kw>
<msg timestamp="20230107 10:58:32.149" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230107 10:58:23.543" endtime="20230107 10:58:32.149"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230107 10:58:32.149" endtime="20230107 10:58:32.150"/>
</kw>
<status status="PASS" starttime="20230107 10:58:23.542" endtime="20230107 10:58:32.150"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:58:14.513" endtime="20230107 10:58:32.150"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:32.158" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:32.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:32.162" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:58:32.155" endtime="20230107 10:58:32.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:32.163" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:58:32.163" endtime="20230107 10:58:32.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:32.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:32.164" endtime="20230107 10:58:32.165"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.155" endtime="20230107 10:58:32.165"/>
</kw>
<msg timestamp="20230107 10:58:32.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:32.154" endtime="20230107 10:58:32.166"/>
</kw>
<msg timestamp="20230107 10:58:32.166" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:58:32.154" endtime="20230107 10:58:32.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:58:32.167" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:58:32.167" endtime="20230107 10:58:32.168"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:32.174" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:32.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:32.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:32.171" endtime="20230107 10:58:32.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:32.207" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:32.206" endtime="20230107 10:58:32.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:32.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:32.207" endtime="20230107 10:58:32.208"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.170" endtime="20230107 10:58:32.209"/>
</kw>
<msg timestamp="20230107 10:58:32.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:32.169" endtime="20230107 10:58:32.210"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.168" endtime="20230107 10:58:32.211"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.168" endtime="20230107 10:58:32.212"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.153" endtime="20230107 10:58:32.212"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.153" endtime="20230107 10:58:32.212"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:32.218" level="INFO">Running command 'ozone sh key list 83723-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:38.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:38.910" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230107 10:58:32.215" endtime="20230107 10:58:38.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:38.912" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230107 10:58:38.911" endtime="20230107 10:58:38.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:38.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:38.912" endtime="20230107 10:58:38.913"/>
</kw>
<status status="PASS" starttime="20230107 10:58:32.214" endtime="20230107 10:58:38.913"/>
</kw>
<msg timestamp="20230107 10:58:38.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:32.214" endtime="20230107 10:58:38.914"/>
</kw>
<msg timestamp="20230107 10:58:38.914" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230107 10:58:32.213" endtime="20230107 10:58:38.914"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:38.919" level="INFO">Running command 'ozone sh key list 83723-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:44.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:44.877" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230107 10:58:38.916" endtime="20230107 10:58:44.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:44.879" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230107 10:58:44.878" endtime="20230107 10:58:44.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:44.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:44.879" endtime="20230107 10:58:44.880"/>
</kw>
<status status="PASS" starttime="20230107 10:58:38.916" endtime="20230107 10:58:44.880"/>
</kw>
<msg timestamp="20230107 10:58:44.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:38.915" endtime="20230107 10:58:44.881"/>
</kw>
<msg timestamp="20230107 10:58:44.881" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230107 10:58:38.915" endtime="20230107 10:58:44.882"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 10:58:44.882" endtime="20230107 10:58:44.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:58:44.883" endtime="20230107 10:58:44.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:58:44.883" endtime="20230107 10:58:44.884"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:58:32.152" endtime="20230107 10:58:44.884"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:44.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:44.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:44.900" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:58:44.890" endtime="20230107 10:58:44.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:44.902" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:58:44.901" endtime="20230107 10:58:44.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:44.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:44.902" endtime="20230107 10:58:44.904"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.889" endtime="20230107 10:58:44.904"/>
</kw>
<msg timestamp="20230107 10:58:44.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:44.889" endtime="20230107 10:58:44.905"/>
</kw>
<msg timestamp="20230107 10:58:44.905" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:58:44.888" endtime="20230107 10:58:44.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:58:44.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:58:44.906" endtime="20230107 10:58:44.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:44.912" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:44.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:44.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:44.910" endtime="20230107 10:58:44.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:44.947" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:44.946" endtime="20230107 10:58:44.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:44.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:44.947" endtime="20230107 10:58:44.948"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.909" endtime="20230107 10:58:44.948"/>
</kw>
<msg timestamp="20230107 10:58:44.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:44.909" endtime="20230107 10:58:44.949"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.908" endtime="20230107 10:58:44.949"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.907" endtime="20230107 10:58:44.950"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.888" endtime="20230107 10:58:44.950"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.887" endtime="20230107 10:58:44.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:44.955" level="INFO">Running command 'ozone sh key delete 83723-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:51.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:51.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:44.952" endtime="20230107 10:58:51.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:51.096" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:51.095" endtime="20230107 10:58:51.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:51.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:51.097" endtime="20230107 10:58:51.097"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.951" endtime="20230107 10:58:51.098"/>
</kw>
<msg timestamp="20230107 10:58:51.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:44.951" endtime="20230107 10:58:51.098"/>
</kw>
<status status="PASS" starttime="20230107 10:58:44.950" endtime="20230107 10:58:51.099"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:51.103" level="INFO">Running command 'ozone sh key list 83723-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:57.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:57.474" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230107 10:58:51.101" endtime="20230107 10:58:57.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:57.475" level="INFO">key1</msg>
<status status="PASS" starttime="20230107 10:58:57.474" endtime="20230107 10:58:57.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:57.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:57.476" endtime="20230107 10:58:57.476"/>
</kw>
<status status="PASS" starttime="20230107 10:58:51.100" endtime="20230107 10:58:57.477"/>
</kw>
<msg timestamp="20230107 10:58:57.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:51.100" endtime="20230107 10:58:57.477"/>
</kw>
<msg timestamp="20230107 10:58:57.478" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230107 10:58:51.099" endtime="20230107 10:58:57.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:58:57.478" endtime="20230107 10:58:57.478"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:58:44.886" endtime="20230107 10:58:57.479"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:57.487" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:57.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:57.491" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:58:57.484" endtime="20230107 10:58:57.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:57.493" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:58:57.492" endtime="20230107 10:58:57.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:57.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:57.493" endtime="20230107 10:58:57.494"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.483" endtime="20230107 10:58:57.495"/>
</kw>
<msg timestamp="20230107 10:58:57.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:57.483" endtime="20230107 10:58:57.495"/>
</kw>
<msg timestamp="20230107 10:58:57.496" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:58:57.482" endtime="20230107 10:58:57.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:58:57.497" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:58:57.497" endtime="20230107 10:58:57.497"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:57.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:58:57.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:58:57.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:58:57.500" endtime="20230107 10:58:57.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:58:57.551" level="INFO"/>
<status status="PASS" starttime="20230107 10:58:57.549" endtime="20230107 10:58:57.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:58:57.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:58:57.551" endtime="20230107 10:58:57.552"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.499" endtime="20230107 10:58:57.552"/>
</kw>
<msg timestamp="20230107 10:58:57.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:57.499" endtime="20230107 10:58:57.553"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.498" endtime="20230107 10:58:57.553"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.498" endtime="20230107 10:58:57.553"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.482" endtime="20230107 10:58:57.554"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.481" endtime="20230107 10:58:57.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:58:57.558" level="INFO">Running command 'ozone sh bucket list 83723-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:04.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:04.498" level="INFO">${output} = [ {
  "volumeName" : "83723-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-07T10:57:40.356Z",
  "modific...</msg>
<status status="PASS" starttime="20230107 10:58:57.556" endtime="20230107 10:59:04.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:04.499" level="INFO">[ {
  "volumeName" : "83723-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-07T10:57:40.356Z",
  "modificationTime" : "2023-01-07T10:57:40.356Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-07T10:57:06.573Z",
  "modificationTime" : "2023-01-07T10:57:34.316Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "link1",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T10:57:51.583Z",
  "modificationTime" : "2023-01-07T10:57:51.583Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-07T10:56:54.676Z",
  "modificationTime" : "2023-01-07T10:57:28.631Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-07T10:57:00.558Z",
  "modificationTime" : "2023-01-07T10:57:00.558Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230107 10:59:04.498" endtime="20230107 10:59:04.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:04.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:04.499" endtime="20230107 10:59:04.500"/>
</kw>
<status status="PASS" starttime="20230107 10:58:57.555" endtime="20230107 10:59:04.501"/>
</kw>
<msg timestamp="20230107 10:59:04.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:58:57.555" endtime="20230107 10:59:04.501"/>
</kw>
<msg timestamp="20230107 10:59:04.502" level="INFO">${result} = [ {
  "volumeName" : "83723-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-07T10:57:40.356Z",
  "modific...</msg>
<status status="PASS" starttime="20230107 10:58:57.554" endtime="20230107 10:59:04.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:04.502" endtime="20230107 10:59:04.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:04.503" endtime="20230107 10:59:04.503"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:58:57.480" endtime="20230107 10:59:04.503"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:04.512" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:04.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:04.519" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:59:04.509" endtime="20230107 10:59:04.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:04.522" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:59:04.520" endtime="20230107 10:59:04.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:04.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:04.522" endtime="20230107 10:59:04.523"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.508" endtime="20230107 10:59:04.523"/>
</kw>
<msg timestamp="20230107 10:59:04.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:04.508" endtime="20230107 10:59:04.524"/>
</kw>
<msg timestamp="20230107 10:59:04.524" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:59:04.507" endtime="20230107 10:59:04.525"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:59:04.526" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:59:04.525" endtime="20230107 10:59:04.526"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:04.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:04.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:04.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:04.529" endtime="20230107 10:59:04.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:04.564" level="INFO"/>
<status status="PASS" starttime="20230107 10:59:04.563" endtime="20230107 10:59:04.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:04.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:04.565" endtime="20230107 10:59:04.565"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.528" endtime="20230107 10:59:04.566"/>
</kw>
<msg timestamp="20230107 10:59:04.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:04.528" endtime="20230107 10:59:04.567"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.527" endtime="20230107 10:59:04.567"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.526" endtime="20230107 10:59:04.567"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.506" endtime="20230107 10:59:04.567"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.506" endtime="20230107 10:59:04.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:04.573" level="INFO">Running command 'ozone sh bucket info 83723-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:10.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:10.226" level="INFO">${output} = {
  "volumeName" : "83723-target",
  "bucketName" : "link1",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T10:57:51.583Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230107 10:59:04.570" endtime="20230107 10:59:10.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:10.228" level="INFO">{
  "volumeName" : "83723-target",
  "bucketName" : "link1",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T10:57:51.583Z",
  "modificationTime" : "2023-01-07T10:57:51.583Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230107 10:59:10.227" endtime="20230107 10:59:10.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:10.229" endtime="20230107 10:59:10.229"/>
</kw>
<status status="PASS" starttime="20230107 10:59:04.569" endtime="20230107 10:59:10.230"/>
</kw>
<msg timestamp="20230107 10:59:10.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:04.569" endtime="20230107 10:59:10.230"/>
</kw>
<msg timestamp="20230107 10:59:10.231" level="INFO">${result} = {
  "volumeName" : "83723-target",
  "bucketName" : "link1",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T10:57:51.583Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230107 10:59:04.568" endtime="20230107 10:59:10.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.231" endtime="20230107 10:59:10.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.232" endtime="20230107 10:59:10.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.233" endtime="20230107 10:59:10.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.234" endtime="20230107 10:59:10.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.234" endtime="20230107 10:59:10.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.235" endtime="20230107 10:59:10.235"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:10.236" endtime="20230107 10:59:10.236"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:59:04.505" endtime="20230107 10:59:10.236"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:10.244" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:10.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:10.249" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:59:10.241" endtime="20230107 10:59:10.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:10.250" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:59:10.249" endtime="20230107 10:59:10.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:10.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:10.250" endtime="20230107 10:59:10.251"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.241" endtime="20230107 10:59:10.252"/>
</kw>
<msg timestamp="20230107 10:59:10.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:10.241" endtime="20230107 10:59:10.252"/>
</kw>
<msg timestamp="20230107 10:59:10.253" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:59:10.240" endtime="20230107 10:59:10.253"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:59:10.254" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:59:10.253" endtime="20230107 10:59:10.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:10.259" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:10.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:10.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:10.257" endtime="20230107 10:59:10.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:10.290" level="INFO"/>
<status status="PASS" starttime="20230107 10:59:10.290" endtime="20230107 10:59:10.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:10.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:10.291" endtime="20230107 10:59:10.291"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.256" endtime="20230107 10:59:10.292"/>
</kw>
<msg timestamp="20230107 10:59:10.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:10.255" endtime="20230107 10:59:10.293"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.255" endtime="20230107 10:59:10.293"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.254" endtime="20230107 10:59:10.293"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.239" endtime="20230107 10:59:10.294"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.239" endtime="20230107 10:59:10.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:10.298" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 83723-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:15.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:15.721" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:59:10.296" endtime="20230107 10:59:15.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:15.723" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:59:15.722" endtime="20230107 10:59:15.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:15.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:15.723" endtime="20230107 10:59:15.724"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.295" endtime="20230107 10:59:15.724"/>
</kw>
<msg timestamp="20230107 10:59:15.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:10.295" endtime="20230107 10:59:15.725"/>
</kw>
<status status="PASS" starttime="20230107 10:59:10.294" endtime="20230107 10:59:15.725"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:15.732" level="INFO">Running command 'ozone sh bucket getacl 83723-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:21.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:21.370" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230107 10:59:15.728" endtime="20230107 10:59:21.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:21.372" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230107 10:59:21.371" endtime="20230107 10:59:21.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:21.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:21.372" endtime="20230107 10:59:21.373"/>
</kw>
<status status="PASS" starttime="20230107 10:59:15.728" endtime="20230107 10:59:21.374"/>
</kw>
<msg timestamp="20230107 10:59:21.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:15.727" endtime="20230107 10:59:21.375"/>
</kw>
<msg timestamp="20230107 10:59:21.375" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230107 10:59:15.726" endtime="20230107 10:59:21.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 10:59:21.375" endtime="20230107 10:59:21.376"/>
</kw>
<status status="PASS" starttime="20230107 10:59:15.725" endtime="20230107 10:59:21.376"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:21.383" level="INFO">Running command 'ozone sh bucket getacl 83723-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:26.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:26.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:21.380" endtime="20230107 10:59:26.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:26.712" level="INFO"/>
<status status="PASS" starttime="20230107 10:59:26.711" endtime="20230107 10:59:26.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:26.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:26.712" endtime="20230107 10:59:26.713"/>
</kw>
<status status="PASS" starttime="20230107 10:59:21.379" endtime="20230107 10:59:26.714"/>
</kw>
<msg timestamp="20230107 10:59:26.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:21.379" endtime="20230107 10:59:26.714"/>
</kw>
<msg timestamp="20230107 10:59:26.715" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230107 10:59:21.378" endtime="20230107 10:59:26.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 10:59:26.715" endtime="20230107 10:59:26.716"/>
</kw>
<status status="PASS" starttime="20230107 10:59:21.376" endtime="20230107 10:59:26.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:26.721" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 83723-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:32.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:32.051" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:59:26.718" endtime="20230107 10:59:32.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:32.053" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 10:59:32.052" endtime="20230107 10:59:32.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:32.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:32.054" endtime="20230107 10:59:32.055"/>
</kw>
<status status="PASS" starttime="20230107 10:59:26.718" endtime="20230107 10:59:32.055"/>
</kw>
<msg timestamp="20230107 10:59:32.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:26.717" endtime="20230107 10:59:32.056"/>
</kw>
<status status="PASS" starttime="20230107 10:59:26.716" endtime="20230107 10:59:32.056"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:32.065" level="INFO">Running command 'ozone sh bucket getacl 83723-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:37.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:37.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:32.062" endtime="20230107 10:59:37.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:37.752" level="INFO"/>
<status status="PASS" starttime="20230107 10:59:37.751" endtime="20230107 10:59:37.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:37.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:37.752" endtime="20230107 10:59:37.753"/>
</kw>
<status status="PASS" starttime="20230107 10:59:32.062" endtime="20230107 10:59:37.753"/>
</kw>
<msg timestamp="20230107 10:59:37.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:32.061" endtime="20230107 10:59:37.754"/>
</kw>
<msg timestamp="20230107 10:59:37.754" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230107 10:59:32.060" endtime="20230107 10:59:37.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 10:59:37.755" endtime="20230107 10:59:37.755"/>
</kw>
<status status="PASS" starttime="20230107 10:59:32.056" endtime="20230107 10:59:37.756"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:37.761" level="INFO">Running command 'ozone sh bucket getacl 83723-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:43.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:43.538" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230107 10:59:37.759" endtime="20230107 10:59:43.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:43.540" level="INFO">READ</msg>
<status status="PASS" starttime="20230107 10:59:43.539" endtime="20230107 10:59:43.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:43.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:43.540" endtime="20230107 10:59:43.541"/>
</kw>
<status status="PASS" starttime="20230107 10:59:37.758" endtime="20230107 10:59:43.541"/>
</kw>
<msg timestamp="20230107 10:59:43.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:37.758" endtime="20230107 10:59:43.542"/>
</kw>
<msg timestamp="20230107 10:59:43.542" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230107 10:59:37.757" endtime="20230107 10:59:43.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 10:59:43.543" endtime="20230107 10:59:43.543"/>
</kw>
<status status="PASS" starttime="20230107 10:59:37.756" endtime="20230107 10:59:43.543"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:59:10.238" endtime="20230107 10:59:43.544"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:43.552" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:43.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:43.556" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:59:43.549" endtime="20230107 10:59:43.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:43.557" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:59:43.556" endtime="20230107 10:59:43.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:43.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:43.557" endtime="20230107 10:59:43.558"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.548" endtime="20230107 10:59:43.558"/>
</kw>
<msg timestamp="20230107 10:59:43.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:43.548" endtime="20230107 10:59:43.559"/>
</kw>
<msg timestamp="20230107 10:59:43.559" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:59:43.548" endtime="20230107 10:59:43.559"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:59:43.560" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:59:43.559" endtime="20230107 10:59:43.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:43.567" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:43.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:43.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:43.565" endtime="20230107 10:59:43.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:43.606" level="INFO"/>
<status status="PASS" starttime="20230107 10:59:43.605" endtime="20230107 10:59:43.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:43.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:43.606" endtime="20230107 10:59:43.607"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.564" endtime="20230107 10:59:43.607"/>
</kw>
<msg timestamp="20230107 10:59:43.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:43.561" endtime="20230107 10:59:43.608"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.560" endtime="20230107 10:59:43.608"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.560" endtime="20230107 10:59:43.608"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.547" endtime="20230107 10:59:43.608"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.546" endtime="20230107 10:59:43.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:43.613" level="INFO">Running command 'ozone sh bucket link 83723-source/bucket2 83723-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:48.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:59:48.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:43.611" endtime="20230107 10:59:48.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:48.802" level="INFO"/>
<status status="PASS" starttime="20230107 10:59:48.801" endtime="20230107 10:59:48.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:59:48.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:59:48.802" endtime="20230107 10:59:48.803"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.610" endtime="20230107 10:59:48.803"/>
</kw>
<msg timestamp="20230107 10:59:48.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:43.610" endtime="20230107 10:59:48.803"/>
</kw>
<status status="PASS" starttime="20230107 10:59:43.609" endtime="20230107 10:59:48.804"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:48.807" level="INFO">Running command 'ozone sh bucket create 83723-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:59:54.454" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 10:59:54.454" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230107 10:59:48.805" endtime="20230107 10:59:54.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:59:54.456" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230107 10:59:54.455" endtime="20230107 10:59:54.456"/>
</kw>
<msg timestamp="20230107 10:59:54.457" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230107 10:59:48.804" endtime="20230107 10:59:54.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 10:59:54.457" endtime="20230107 10:59:54.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:59:54.463" level="INFO">Running command 'ozone sh bucket create 83723-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:00.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:00.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:59:54.460" endtime="20230107 11:00:00.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:00.621" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:00.620" endtime="20230107 11:00:00.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:00.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:00.622" endtime="20230107 11:00:00.622"/>
</kw>
<status status="PASS" starttime="20230107 10:59:54.459" endtime="20230107 11:00:00.623"/>
</kw>
<msg timestamp="20230107 11:00:00.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:59:54.459" endtime="20230107 11:00:00.627"/>
</kw>
<status status="PASS" starttime="20230107 10:59:54.458" endtime="20230107 11:00:00.627"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:00.631" level="INFO">Running command 'ozone sh bucket link 83723-source/bucket1 83723-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:06.534" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:00:06.534" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230107 11:00:00.628" endtime="20230107 11:00:06.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:06.536" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230107 11:00:06.535" endtime="20230107 11:00:06.536"/>
</kw>
<msg timestamp="20230107 11:00:06.537" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230107 11:00:00.628" endtime="20230107 11:00:06.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:06.537" endtime="20230107 11:00:06.538"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:59:43.546" endtime="20230107 11:00:06.538"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:06.546" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:06.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:06.551" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:06.544" endtime="20230107 11:00:06.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:06.552" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:06.552" endtime="20230107 11:00:06.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:06.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:06.553" endtime="20230107 11:00:06.554"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.543" endtime="20230107 11:00:06.554"/>
</kw>
<msg timestamp="20230107 11:00:06.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:06.543" endtime="20230107 11:00:06.555"/>
</kw>
<msg timestamp="20230107 11:00:06.555" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:06.542" endtime="20230107 11:00:06.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:06.557" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:06.556" endtime="20230107 11:00:06.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:06.561" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:06.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:06.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:06.559" endtime="20230107 11:00:06.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:06.684" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:06.683" endtime="20230107 11:00:06.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:06.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:06.684" endtime="20230107 11:00:06.685"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.558" endtime="20230107 11:00:06.685"/>
</kw>
<msg timestamp="20230107 11:00:06.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:06.558" endtime="20230107 11:00:06.686"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.557" endtime="20230107 11:00:06.686"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.557" endtime="20230107 11:00:06.686"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.542" endtime="20230107 11:00:06.687"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.541" endtime="20230107 11:00:06.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:06.693" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:06.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:06.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:06.690" endtime="20230107 11:00:06.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:06.700" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:06.699" endtime="20230107 11:00:06.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:06.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:06.700" endtime="20230107 11:00:06.701"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.689" endtime="20230107 11:00:06.702"/>
</kw>
<msg timestamp="20230107 11:00:06.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:06.689" endtime="20230107 11:00:06.702"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.688" endtime="20230107 11:00:06.703"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:06.708" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:06.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:06.713" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:06.706" endtime="20230107 11:00:06.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:06.714" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:06.713" endtime="20230107 11:00:06.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:06.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:06.715" endtime="20230107 11:00:06.715"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.705" endtime="20230107 11:00:06.716"/>
</kw>
<msg timestamp="20230107 11:00:06.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:06.705" endtime="20230107 11:00:06.717"/>
</kw>
<msg timestamp="20230107 11:00:06.717" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:06.704" endtime="20230107 11:00:06.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:06.718" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:06.718" endtime="20230107 11:00:06.718"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:06.723" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:06.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:06.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:06.721" endtime="20230107 11:00:06.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:06.745" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:06.744" endtime="20230107 11:00:06.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:06.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:06.746" endtime="20230107 11:00:06.746"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.720" endtime="20230107 11:00:06.747"/>
</kw>
<msg timestamp="20230107 11:00:06.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:06.720" endtime="20230107 11:00:06.748"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.719" endtime="20230107 11:00:06.748"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.718" endtime="20230107 11:00:06.748"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.704" endtime="20230107 11:00:06.748"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.703" endtime="20230107 11:00:06.748"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:06.752" level="INFO">Running command 'ozone sh key list 83723-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:12.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:12.944" level="INFO">${output} = [ {
  "volumeName" : "83723-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-07T10:56:40.058Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230107 11:00:06.749" endtime="20230107 11:00:12.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:12.946" level="INFO">[ {
  "volumeName" : "83723-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-07T10:56:40.058Z",
  "modificationTime" : "2023-01-07T10:56:42.857Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230107 11:00:12.945" endtime="20230107 11:00:12.946"/>
</kw>
<msg timestamp="20230107 11:00:12.946" level="INFO">${result} = [ {
  "volumeName" : "83723-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2023-01-07T10:56:40.058Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230107 11:00:06.749" endtime="20230107 11:00:12.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:12.947" endtime="20230107 11:00:12.947"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.688" endtime="20230107 11:00:12.947"/>
</kw>
<status status="PASS" starttime="20230107 11:00:06.687" endtime="20230107 11:00:12.947"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:00:06.539" endtime="20230107 11:00:12.948"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:12.956" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:12.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:12.963" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:12.953" endtime="20230107 11:00:12.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:12.965" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:12.964" endtime="20230107 11:00:12.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:12.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:12.965" endtime="20230107 11:00:12.966"/>
</kw>
<status status="PASS" starttime="20230107 11:00:12.952" endtime="20230107 11:00:12.966"/>
</kw>
<msg timestamp="20230107 11:00:12.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:12.952" endtime="20230107 11:00:12.967"/>
</kw>
<msg timestamp="20230107 11:00:12.968" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:12.951" endtime="20230107 11:00:12.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:12.969" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:12.968" endtime="20230107 11:00:12.969"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:12.976" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:13.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:13.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:12.972" endtime="20230107 11:00:13.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:13.029" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:13.028" endtime="20230107 11:00:13.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:13.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:13.030" endtime="20230107 11:00:13.031"/>
</kw>
<status status="PASS" starttime="20230107 11:00:12.972" endtime="20230107 11:00:13.031"/>
</kw>
<msg timestamp="20230107 11:00:13.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:12.971" endtime="20230107 11:00:13.032"/>
</kw>
<status status="PASS" starttime="20230107 11:00:12.970" endtime="20230107 11:00:13.032"/>
</kw>
<status status="PASS" starttime="20230107 11:00:12.969" endtime="20230107 11:00:13.032"/>
</kw>
<status status="PASS" starttime="20230107 11:00:12.951" endtime="20230107 11:00:13.033"/>
</kw>
<status status="PASS" starttime="20230107 11:00:12.950" endtime="20230107 11:00:13.033"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:13.039" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:13.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:13.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:13.036" endtime="20230107 11:00:13.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:13.046" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:13.045" endtime="20230107 11:00:13.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:13.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:13.046" endtime="20230107 11:00:13.047"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.035" endtime="20230107 11:00:13.047"/>
</kw>
<msg timestamp="20230107 11:00:13.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:13.035" endtime="20230107 11:00:13.048"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.034" endtime="20230107 11:00:13.048"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:13.054" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:13.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:13.059" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:13.051" endtime="20230107 11:00:13.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:13.063" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:13.060" endtime="20230107 11:00:13.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:13.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:13.063" endtime="20230107 11:00:13.064"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.051" endtime="20230107 11:00:13.065"/>
</kw>
<msg timestamp="20230107 11:00:13.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:13.050" endtime="20230107 11:00:13.066"/>
</kw>
<msg timestamp="20230107 11:00:13.066" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:13.050" endtime="20230107 11:00:13.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:13.067" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:13.066" endtime="20230107 11:00:13.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:13.075" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:13.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:13.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:13.071" endtime="20230107 11:00:13.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:13.096" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:13.095" endtime="20230107 11:00:13.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:13.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:13.096" endtime="20230107 11:00:13.097"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.070" endtime="20230107 11:00:13.097"/>
</kw>
<msg timestamp="20230107 11:00:13.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:13.069" endtime="20230107 11:00:13.098"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.069" endtime="20230107 11:00:13.099"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.068" endtime="20230107 11:00:13.099"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.049" endtime="20230107 11:00:13.099"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.049" endtime="20230107 11:00:13.099"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:13.103" level="INFO">Running command 'ozone sh key list 83723-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:18.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:00:18.144" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:83723-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230107 11:00:13.100" endtime="20230107 11:00:18.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:18.146" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:83723-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230107 11:00:18.145" endtime="20230107 11:00:18.146"/>
</kw>
<msg timestamp="20230107 11:00:18.147" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:83723-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20230107 11:00:13.099" endtime="20230107 11:00:18.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:18.147" endtime="20230107 11:00:18.147"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.034" endtime="20230107 11:00:18.148"/>
</kw>
<status status="PASS" starttime="20230107 11:00:13.033" endtime="20230107 11:00:18.148"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:00:12.949" endtime="20230107 11:00:18.148"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:18.157" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:18.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:18.166" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:18.155" endtime="20230107 11:00:18.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:18.168" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:18.166" endtime="20230107 11:00:18.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:18.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:18.168" endtime="20230107 11:00:18.169"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.154" endtime="20230107 11:00:18.170"/>
</kw>
<msg timestamp="20230107 11:00:18.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:18.154" endtime="20230107 11:00:18.170"/>
</kw>
<msg timestamp="20230107 11:00:18.171" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:18.153" endtime="20230107 11:00:18.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:18.172" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:18.171" endtime="20230107 11:00:18.172"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:18.177" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:18.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:18.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:18.175" endtime="20230107 11:00:18.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:18.231" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:18.230" endtime="20230107 11:00:18.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:18.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:18.232" endtime="20230107 11:00:18.233"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.174" endtime="20230107 11:00:18.233"/>
</kw>
<msg timestamp="20230107 11:00:18.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:18.174" endtime="20230107 11:00:18.234"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.173" endtime="20230107 11:00:18.234"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.172" endtime="20230107 11:00:18.234"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.152" endtime="20230107 11:00:18.235"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.152" endtime="20230107 11:00:18.235"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:18.241" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:18.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:18.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:18.238" endtime="20230107 11:00:18.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:18.247" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:18.247" endtime="20230107 11:00:18.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:18.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:18.248" endtime="20230107 11:00:18.249"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.237" endtime="20230107 11:00:18.249"/>
</kw>
<msg timestamp="20230107 11:00:18.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:18.237" endtime="20230107 11:00:18.250"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.236" endtime="20230107 11:00:18.250"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:18.256" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:18.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:18.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:18.253" endtime="20230107 11:00:18.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:18.261" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:18.260" endtime="20230107 11:00:18.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:18.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:18.261" endtime="20230107 11:00:18.262"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.252" endtime="20230107 11:00:18.262"/>
</kw>
<msg timestamp="20230107 11:00:18.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:18.252" endtime="20230107 11:00:18.263"/>
</kw>
<msg timestamp="20230107 11:00:18.264" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:18.251" endtime="20230107 11:00:18.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:18.265" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:18.264" endtime="20230107 11:00:18.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:18.270" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:18.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:18.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:18.268" endtime="20230107 11:00:18.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:18.293" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:18.292" endtime="20230107 11:00:18.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:18.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:18.294" endtime="20230107 11:00:18.295"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.267" endtime="20230107 11:00:18.295"/>
</kw>
<msg timestamp="20230107 11:00:18.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:18.266" endtime="20230107 11:00:18.296"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.266" endtime="20230107 11:00:18.297"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.265" endtime="20230107 11:00:18.297"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.251" endtime="20230107 11:00:18.297"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.250" endtime="20230107 11:00:18.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:18.302" level="INFO">Running command 'ozone sh bucket info 83723-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:24.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:24.893" level="INFO">${output} = {
  "volumeName" : "83723-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-07T10:57:06.573Z...</msg>
<status status="PASS" starttime="20230107 11:00:18.299" endtime="20230107 11:00:24.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:24.895" level="INFO">{
  "volumeName" : "83723-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-07T10:57:06.573Z",
  "modificationTime" : "2023-01-07T10:57:34.316Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230107 11:00:24.894" endtime="20230107 11:00:24.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:24.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:24.895" endtime="20230107 11:00:24.896"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.298" endtime="20230107 11:00:24.897"/>
</kw>
<msg timestamp="20230107 11:00:24.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:18.298" endtime="20230107 11:00:24.897"/>
</kw>
<msg timestamp="20230107 11:00:24.899" level="INFO">${result} = {
  "volumeName" : "83723-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-07T10:57:06.573Z...</msg>
<status status="PASS" starttime="20230107 11:00:18.297" endtime="20230107 11:00:24.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:24.899" endtime="20230107 11:00:24.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:24.900" endtime="20230107 11:00:24.900"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:24.904" level="INFO">Running command 'ozone sh key list 83723-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:30.744" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:00:30.744" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:83723-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230107 11:00:24.901" endtime="20230107 11:00:30.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:30.745" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:83723-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230107 11:00:30.744" endtime="20230107 11:00:30.746"/>
</kw>
<msg timestamp="20230107 11:00:30.746" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:83723-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230107 11:00:24.900" endtime="20230107 11:00:30.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:30.746" endtime="20230107 11:00:30.747"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.236" endtime="20230107 11:00:30.747"/>
</kw>
<status status="PASS" starttime="20230107 11:00:18.235" endtime="20230107 11:00:30.747"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:00:18.150" endtime="20230107 11:00:30.748"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:30.757" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:30.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:30.762" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:30.754" endtime="20230107 11:00:30.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:30.763" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:30.762" endtime="20230107 11:00:30.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:30.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:30.764" endtime="20230107 11:00:30.765"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.754" endtime="20230107 11:00:30.765"/>
</kw>
<msg timestamp="20230107 11:00:30.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:30.753" endtime="20230107 11:00:30.766"/>
</kw>
<msg timestamp="20230107 11:00:30.766" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:30.753" endtime="20230107 11:00:30.766"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:30.767" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:30.767" endtime="20230107 11:00:30.767"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:30.774" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:30.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:30.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:30.771" endtime="20230107 11:00:30.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:30.816" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:30.815" endtime="20230107 11:00:30.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:30.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:30.816" endtime="20230107 11:00:30.817"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.770" endtime="20230107 11:00:30.817"/>
</kw>
<msg timestamp="20230107 11:00:30.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:30.769" endtime="20230107 11:00:30.818"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.769" endtime="20230107 11:00:30.819"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.768" endtime="20230107 11:00:30.819"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.752" endtime="20230107 11:00:30.819"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.751" endtime="20230107 11:00:30.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:30.824" level="INFO">Running command 'ozone sh bucket link 83723-target/loop1 83723-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:36.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:36.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:30.821" endtime="20230107 11:00:36.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:36.878" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:36.877" endtime="20230107 11:00:36.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:36.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:36.878" endtime="20230107 11:00:36.879"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.820" endtime="20230107 11:00:36.880"/>
</kw>
<msg timestamp="20230107 11:00:36.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:30.820" endtime="20230107 11:00:36.880"/>
</kw>
<status status="PASS" starttime="20230107 11:00:30.819" endtime="20230107 11:00:36.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:36.886" level="INFO">Running command 'ozone sh bucket link 83723-target/loop2 83723-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:42.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:42.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:36.883" endtime="20230107 11:00:42.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:42.891" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:42.890" endtime="20230107 11:00:42.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:42.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:42.891" endtime="20230107 11:00:42.892"/>
</kw>
<status status="PASS" starttime="20230107 11:00:36.882" endtime="20230107 11:00:42.893"/>
</kw>
<msg timestamp="20230107 11:00:42.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:36.882" endtime="20230107 11:00:42.893"/>
</kw>
<status status="PASS" starttime="20230107 11:00:36.881" endtime="20230107 11:00:42.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:42.899" level="INFO">Running command 'ozone sh bucket link 83723-target/loop3 83723-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:48.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:48.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:42.896" endtime="20230107 11:00:48.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:48.713" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:48.710" endtime="20230107 11:00:48.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:48.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:48.713" endtime="20230107 11:00:48.717"/>
</kw>
<status status="PASS" starttime="20230107 11:00:42.895" endtime="20230107 11:00:48.718"/>
</kw>
<msg timestamp="20230107 11:00:48.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:42.894" endtime="20230107 11:00:48.719"/>
</kw>
<status status="PASS" starttime="20230107 11:00:42.894" endtime="20230107 11:00:48.720"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:48.733" level="INFO">Running command 'ozone sh key list 83723-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:54.865" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:00:54.865" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 83723-target</msg>
<status status="PASS" starttime="20230107 11:00:48.720" endtime="20230107 11:00:54.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:54.867" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 83723-target</msg>
<status status="PASS" starttime="20230107 11:00:54.866" endtime="20230107 11:00:54.867"/>
</kw>
<msg timestamp="20230107 11:00:54.867" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 83723-target</msg>
<status status="PASS" starttime="20230107 11:00:48.720" endtime="20230107 11:00:54.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:00:54.868" endtime="20230107 11:00:54.868"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:00:30.750" endtime="20230107 11:00:54.868"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:54.876" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:54.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:54.881" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:00:54.874" endtime="20230107 11:00:54.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:54.882" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:00:54.881" endtime="20230107 11:00:54.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:54.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:54.882" endtime="20230107 11:00:54.883"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.873" endtime="20230107 11:00:54.883"/>
</kw>
<msg timestamp="20230107 11:00:54.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:54.873" endtime="20230107 11:00:54.884"/>
</kw>
<msg timestamp="20230107 11:00:54.885" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:00:54.872" endtime="20230107 11:00:54.885"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:00:54.886" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:00:54.885" endtime="20230107 11:00:54.886"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:54.891" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:00:54.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:00:54.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:54.889" endtime="20230107 11:00:54.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:00:54.931" level="INFO"/>
<status status="PASS" starttime="20230107 11:00:54.930" endtime="20230107 11:00:54.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:00:54.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:00:54.931" endtime="20230107 11:00:54.932"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.888" endtime="20230107 11:00:54.932"/>
</kw>
<msg timestamp="20230107 11:00:54.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:54.888" endtime="20230107 11:00:54.933"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.887" endtime="20230107 11:00:54.934"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.886" endtime="20230107 11:00:54.934"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.871" endtime="20230107 11:00:54.934"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.871" endtime="20230107 11:00:54.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:00:54.940" level="INFO">Running command 'ozone sh bucket link 83723-source/bucket1 83723-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:00.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:00.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:00:54.937" endtime="20230107 11:01:00.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:00.481" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:00.481" endtime="20230107 11:01:00.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:00.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:00.482" endtime="20230107 11:01:00.482"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.936" endtime="20230107 11:01:00.483"/>
</kw>
<msg timestamp="20230107 11:01:00.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:00:54.935" endtime="20230107 11:01:00.483"/>
</kw>
<status status="PASS" starttime="20230107 11:00:54.934" endtime="20230107 11:01:00.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:00.489" level="INFO">Running command 'ozone sh key put 83723-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:09.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:09.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:00.486" endtime="20230107 11:01:09.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:09.168" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:09.167" endtime="20230107 11:01:09.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:09.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:09.168" endtime="20230107 11:01:09.169"/>
</kw>
<status status="PASS" starttime="20230107 11:01:00.485" endtime="20230107 11:01:09.170"/>
</kw>
<msg timestamp="20230107 11:01:09.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:00.484" endtime="20230107 11:01:09.170"/>
</kw>
<status status="PASS" starttime="20230107 11:01:00.484" endtime="20230107 11:01:09.171"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 11:01:09.173" level="INFO">${postfix} = 77376</msg>
<status status="PASS" starttime="20230107 11:01:09.173" endtime="20230107 11:01:09.173"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230107 11:01:09.174" level="INFO">${tmpfile} = /tmp/tempkey-77376</msg>
<status status="PASS" starttime="20230107 11:01:09.174" endtime="20230107 11:01:09.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:09.182" level="INFO">Running command 'ozone sh key get 83723-target/link1/key3 /tmp/tempkey-77376 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:17.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:17.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:09.177" endtime="20230107 11:01:17.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:17.421" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:17.420" endtime="20230107 11:01:17.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:17.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:17.422" endtime="20230107 11:01:17.422"/>
</kw>
<status status="PASS" starttime="20230107 11:01:09.176" endtime="20230107 11:01:17.423"/>
</kw>
<msg timestamp="20230107 11:01:17.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:09.176" endtime="20230107 11:01:17.424"/>
</kw>
<status status="PASS" starttime="20230107 11:01:09.174" endtime="20230107 11:01:17.424"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230107 11:01:17.428" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-77376 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:17.431" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230107 11:01:17.424" endtime="20230107 11:01:17.431"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:17.436" level="INFO">Running command 'rm -f /tmp/tempkey-77376 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:17.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:17.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:17.434" endtime="20230107 11:01:17.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:17.441" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:17.441" endtime="20230107 11:01:17.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:17.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:17.442" endtime="20230107 11:01:17.442"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.433" endtime="20230107 11:01:17.443"/>
</kw>
<msg timestamp="20230107 11:01:17.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:17.432" endtime="20230107 11:01:17.444"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.431" endtime="20230107 11:01:17.444"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230107 11:01:17.445" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230107 11:01:17.444" endtime="20230107 11:01:17.445"/>
</kw>
<msg timestamp="20230107 11:01:17.445" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230107 11:01:09.172" endtime="20230107 11:01:17.445"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230107 11:01:17.445" endtime="20230107 11:01:17.446"/>
</kw>
<status status="PASS" starttime="20230107 11:01:09.171" endtime="20230107 11:01:17.446"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:00:54.870" endtime="20230107 11:01:17.446"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:17.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:17.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:17.458" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:01:17.451" endtime="20230107 11:01:17.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:17.460" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:01:17.459" endtime="20230107 11:01:17.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:17.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:17.460" endtime="20230107 11:01:17.461"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.451" endtime="20230107 11:01:17.461"/>
</kw>
<msg timestamp="20230107 11:01:17.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:17.450" endtime="20230107 11:01:17.462"/>
</kw>
<msg timestamp="20230107 11:01:17.462" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:01:17.450" endtime="20230107 11:01:17.462"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:01:17.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:01:17.462" endtime="20230107 11:01:17.463"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:17.468" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:17.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:17.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:17.465" endtime="20230107 11:01:17.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:17.511" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:17.510" endtime="20230107 11:01:17.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:17.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:17.512" endtime="20230107 11:01:17.512"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.465" endtime="20230107 11:01:17.513"/>
</kw>
<msg timestamp="20230107 11:01:17.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:17.464" endtime="20230107 11:01:17.514"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.464" endtime="20230107 11:01:17.514"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.463" endtime="20230107 11:01:17.514"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.449" endtime="20230107 11:01:17.514"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.449" endtime="20230107 11:01:17.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:17.519" level="INFO">Running command 'ozone sh bucket delete 83723-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:23.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:23.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:17.516" endtime="20230107 11:01:23.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:23.007" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:23.006" endtime="20230107 11:01:23.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:23.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:23.007" endtime="20230107 11:01:23.008"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.516" endtime="20230107 11:01:23.009"/>
</kw>
<msg timestamp="20230107 11:01:23.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:17.515" endtime="20230107 11:01:23.009"/>
</kw>
<status status="PASS" starttime="20230107 11:01:17.515" endtime="20230107 11:01:23.009"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:23.014" level="INFO">Running command 'ozone sh bucket list 83723-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:28.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:28.821" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "83723-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-0...</msg>
<status status="PASS" starttime="20230107 11:01:23.011" endtime="20230107 11:01:28.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:28.823" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "83723-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-07T11:00:00.290Z",
  "modificationTime" : "2023-01-07T11:00:00.290Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "83723-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-01-07T10:57:40.356Z",
  "modificationTime" : "2023-01-07T10:57:40.356Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-01-07T10:57:06.573Z",
  "modificationTime" : "2023-01-07T10:57:34.316Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "link2",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-01-07T10:59:48.674Z",
  "modificationTime" : "2023-01-07T10:59:48.674Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "link3",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T11:01:00.139Z",
  "modificationTime" : "2023-01-07T11:01:00.139Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "loop1",
  "sourceVolume" : "83723-target",
  "sourceBucket" : "loop3",
  "creationTime" : "2023-01-07T11:00:48.478Z",
  "modificationTime" : "2023-01-07T11:00:48.478Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "loop2",
  "sourceVolume" : "83723-target",
  "sourceBucket" : "loop1",
  "creationTime" : "2023-01-07T11:00:36.542Z",
  "modificationTime" : "2023-01-07T11:00:36.542Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "loop3",
  "sourceVolume" : "83723-target",
  "sourceBucket" : "loop2",
  "creationTime" : "2023-01-07T11:00:42.817Z",
  "modificationTime" : "2023-01-07T11:00:42.817Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-07T10:56:54.676Z",
  "modificationTime" : "2023-01-07T10:57:28.631Z",
  "owner" : "testuser"
}, {
  "volumeName" : "83723-target",
  "bucketName" : "unreadable-link",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-01-07T10:57:00.558Z",
  "modificationTime" : "2023-01-07T10:57:00.558Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230107 11:01:28.822" endtime="20230107 11:01:28.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:28.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:28.824" endtime="20230107 11:01:28.824"/>
</kw>
<status status="PASS" starttime="20230107 11:01:23.011" endtime="20230107 11:01:28.825"/>
</kw>
<msg timestamp="20230107 11:01:28.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:23.010" endtime="20230107 11:01:28.825"/>
</kw>
<msg timestamp="20230107 11:01:28.826" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "83723-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-01-0...</msg>
<status status="PASS" starttime="20230107 11:01:23.010" endtime="20230107 11:01:28.826"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:01:28.826" endtime="20230107 11:01:28.827"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:28.831" level="INFO">Running command 'ozone sh key list 83723-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:34.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:34.990" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230107 11:01:28.829" endtime="20230107 11:01:34.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:34.993" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230107 11:01:34.991" endtime="20230107 11:01:34.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:34.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:34.993" endtime="20230107 11:01:34.994"/>
</kw>
<status status="PASS" starttime="20230107 11:01:28.828" endtime="20230107 11:01:34.995"/>
</kw>
<msg timestamp="20230107 11:01:34.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:28.827" endtime="20230107 11:01:34.996"/>
</kw>
<msg timestamp="20230107 11:01:34.996" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230107 11:01:28.827" endtime="20230107 11:01:34.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:01:34.996" endtime="20230107 11:01:34.997"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:01:17.448" endtime="20230107 11:01:34.997"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:35.006" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:35.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:35.010" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:01:35.003" endtime="20230107 11:01:35.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:35.012" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:01:35.011" endtime="20230107 11:01:35.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:35.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:35.012" endtime="20230107 11:01:35.013"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.002" endtime="20230107 11:01:35.014"/>
</kw>
<msg timestamp="20230107 11:01:35.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:35.002" endtime="20230107 11:01:35.015"/>
</kw>
<msg timestamp="20230107 11:01:35.015" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:01:35.001" endtime="20230107 11:01:35.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:01:35.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:01:35.015" endtime="20230107 11:01:35.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:35.022" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:35.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:35.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:35.020" endtime="20230107 11:01:35.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:35.065" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:35.063" endtime="20230107 11:01:35.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:35.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:35.065" endtime="20230107 11:01:35.066"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.019" endtime="20230107 11:01:35.066"/>
</kw>
<msg timestamp="20230107 11:01:35.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:35.018" endtime="20230107 11:01:35.067"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.017" endtime="20230107 11:01:35.068"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.017" endtime="20230107 11:01:35.068"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.001" endtime="20230107 11:01:35.068"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.000" endtime="20230107 11:01:35.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:35.076" level="INFO">Running command 'ozone sh bucket link 83723-source/bucket1 83723-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:41.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:41.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:35.070" endtime="20230107 11:01:41.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:41.040" level="INFO"/>
<status status="PASS" starttime="20230107 11:01:41.038" endtime="20230107 11:01:41.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:41.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:41.040" endtime="20230107 11:01:41.041"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.069" endtime="20230107 11:01:41.041"/>
</kw>
<msg timestamp="20230107 11:01:41.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:35.069" endtime="20230107 11:01:41.042"/>
</kw>
<status status="PASS" starttime="20230107 11:01:35.068" endtime="20230107 11:01:41.042"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:41.047" level="INFO">Running command 'ozone sh bucket setquota 83723-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:46.244" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:01:46.245" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230107 11:01:41.043" endtime="20230107 11:01:46.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:46.247" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230107 11:01:46.245" endtime="20230107 11:01:46.247"/>
</kw>
<msg timestamp="20230107 11:01:46.247" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230107 11:01:41.043" endtime="20230107 11:01:46.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:01:46.248" endtime="20230107 11:01:46.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:46.253" level="INFO">Running command 'ozone sh bucket info 83723-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:52.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:01:52.378" level="INFO">${output} = {
  "volumeName" : "83723-target",
  "bucketName" : "link4",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T11:01:40.874Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230107 11:01:46.250" endtime="20230107 11:01:52.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:52.384" level="INFO">{
  "volumeName" : "83723-target",
  "bucketName" : "link4",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T11:01:40.874Z",
  "modificationTime" : "2023-01-07T11:01:40.874Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230107 11:01:52.379" endtime="20230107 11:01:52.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:52.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:52.384" endtime="20230107 11:01:52.385"/>
</kw>
<status status="PASS" starttime="20230107 11:01:46.250" endtime="20230107 11:01:52.385"/>
</kw>
<msg timestamp="20230107 11:01:52.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:46.249" endtime="20230107 11:01:52.386"/>
</kw>
<msg timestamp="20230107 11:01:52.386" level="INFO">${result} = {
  "volumeName" : "83723-target",
  "bucketName" : "link4",
  "sourceVolume" : "83723-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-01-07T11:01:40.874Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230107 11:01:46.248" endtime="20230107 11:01:52.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:01:52.386" endtime="20230107 11:01:52.387"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 11:01:34.999" endtime="20230107 11:01:52.387"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230107 10:56:16.843" endtime="20230107 11:01:52.390"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 11:01:52.429" level="INFO">${random} = 71975</msg>
<status status="PASS" starttime="20230107 11:01:52.429" endtime="20230107 11:01:52.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:01:52.430" level="INFO">${prefix} = 71975</msg>
<status status="PASS" starttime="20230107 11:01:52.430" endtime="20230107 11:01:52.430"/>
</kw>
<status status="PASS" starttime="20230107 11:01:52.428" endtime="20230107 11:01:52.431"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:52.437" level="INFO">Running command 'ozone sh volume info /71975-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:01:57.796" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:01:57.796" level="INFO">${output} = VOLUME_NOT_FOUND Volume 71975-without-scheme is not found</msg>
<status status="PASS" starttime="20230107 11:01:52.435" endtime="20230107 11:01:57.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:01:57.798" level="INFO">VOLUME_NOT_FOUND Volume 71975-without-scheme is not found</msg>
<status status="PASS" starttime="20230107 11:01:57.797" endtime="20230107 11:01:57.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:01:57.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:01:57.798" endtime="20230107 11:01:57.799"/>
</kw>
<msg timestamp="20230107 11:01:57.799" level="INFO">${result} = VOLUME_NOT_FOUND Volume 71975-without-scheme is not found</msg>
<status status="PASS" starttime="20230107 11:01:52.434" endtime="20230107 11:01:57.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:01:57.799" endtime="20230107 11:01:57.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:01:57.805" level="INFO">Running command 'ozone sh volume create /71975-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:03.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:03.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:01:57.802" endtime="20230107 11:02:03.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:03.127" level="INFO"/>
<status status="PASS" starttime="20230107 11:02:03.126" endtime="20230107 11:02:03.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:03.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:03.127" endtime="20230107 11:02:03.128"/>
</kw>
<status status="PASS" starttime="20230107 11:01:57.801" endtime="20230107 11:02:03.128"/>
</kw>
<msg timestamp="20230107 11:02:03.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:01:57.801" endtime="20230107 11:02:03.129"/>
</kw>
<msg timestamp="20230107 11:02:03.129" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:01:57.800" endtime="20230107 11:02:03.130"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230107 11:02:03.130" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230107 11:02:03.130" endtime="20230107 11:02:03.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:03.136" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="71975-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:08.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:08.445" level="INFO">${output} = {
  "metadata": {},
  "name": "71975-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230107 11:02:03.133" endtime="20230107 11:02:08.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:08.446" level="INFO">{
  "metadata": {},
  "name": "71975-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-07T11:02:03.042Z",
  "modificationTime": "2023-01-07T11:02:03.042Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230107 11:02:08.446" endtime="20230107 11:02:08.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:08.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:08.447" endtime="20230107 11:02:08.448"/>
</kw>
<status status="PASS" starttime="20230107 11:02:03.132" endtime="20230107 11:02:08.449"/>
</kw>
<msg timestamp="20230107 11:02:08.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:03.132" endtime="20230107 11:02:08.450"/>
</kw>
<msg timestamp="20230107 11:02:08.450" level="INFO">${result} = {
  "metadata": {},
  "name": "71975-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230107 11:02:03.131" endtime="20230107 11:02:08.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:02:08.450" endtime="20230107 11:02:08.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:08.456" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="71975-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:14.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:14.401" level="INFO">${output} = {
  "metadata": {},
  "name": "71975-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230107 11:02:08.453" endtime="20230107 11:02:14.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:14.403" level="INFO">{
  "metadata": {},
  "name": "71975-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-07T11:02:03.042Z",
  "modificationTime": "2023-01-07T11:02:03.042Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230107 11:02:14.402" endtime="20230107 11:02:14.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:14.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:14.403" endtime="20230107 11:02:14.404"/>
</kw>
<status status="PASS" starttime="20230107 11:02:08.452" endtime="20230107 11:02:14.404"/>
</kw>
<msg timestamp="20230107 11:02:14.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:08.452" endtime="20230107 11:02:14.405"/>
</kw>
<msg timestamp="20230107 11:02:14.406" level="INFO">${result} = {
  "metadata": {},
  "name": "71975-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20230107 11:02:08.451" endtime="20230107 11:02:14.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:02:14.406" endtime="20230107 11:02:14.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:14.415" level="INFO">Running command 'ozone sh volume setquota /71975-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:20.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:20.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:02:14.409" endtime="20230107 11:02:20.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:20.062" level="INFO"/>
<status status="PASS" starttime="20230107 11:02:20.061" endtime="20230107 11:02:20.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:20.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:20.063" endtime="20230107 11:02:20.064"/>
</kw>
<status status="PASS" starttime="20230107 11:02:14.408" endtime="20230107 11:02:20.064"/>
</kw>
<msg timestamp="20230107 11:02:20.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:14.408" endtime="20230107 11:02:20.065"/>
</kw>
<status status="PASS" starttime="20230107 11:02:14.407" endtime="20230107 11:02:20.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:20.070" level="INFO">Running command 'ozone sh volume info /71975-without-scheme | jq -r '. | select(.name=="71975-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:26.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:26.010" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:02:20.068" endtime="20230107 11:02:26.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:26.012" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230107 11:02:26.011" endtime="20230107 11:02:26.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:26.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:26.013" endtime="20230107 11:02:26.013"/>
</kw>
<status status="PASS" starttime="20230107 11:02:20.067" endtime="20230107 11:02:26.014"/>
</kw>
<msg timestamp="20230107 11:02:26.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:20.067" endtime="20230107 11:02:26.015"/>
</kw>
<msg timestamp="20230107 11:02:26.015" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:02:20.066" endtime="20230107 11:02:26.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:02:26.016" endtime="20230107 11:02:26.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:26.021" level="INFO">Running command 'ozone sh bucket create /71975-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:31.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:31.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:02:26.019" endtime="20230107 11:02:31.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:31.581" level="INFO"/>
<status status="PASS" starttime="20230107 11:02:31.580" endtime="20230107 11:02:31.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:31.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:31.582" endtime="20230107 11:02:31.584"/>
</kw>
<status status="PASS" starttime="20230107 11:02:26.018" endtime="20230107 11:02:31.584"/>
</kw>
<msg timestamp="20230107 11:02:31.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:26.018" endtime="20230107 11:02:31.585"/>
</kw>
<msg timestamp="20230107 11:02:31.585" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:02:26.016" endtime="20230107 11:02:31.585"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230107 11:02:31.586" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230107 11:02:31.585" endtime="20230107 11:02:31.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:31.591" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:37.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:37.094" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230107 11:02:31.588" endtime="20230107 11:02:37.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:37.096" level="INFO">DISK</msg>
<status status="PASS" starttime="20230107 11:02:37.095" endtime="20230107 11:02:37.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:37.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:37.097" endtime="20230107 11:02:37.098"/>
</kw>
<status status="PASS" starttime="20230107 11:02:31.587" endtime="20230107 11:02:37.099"/>
</kw>
<msg timestamp="20230107 11:02:37.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:31.587" endtime="20230107 11:02:37.099"/>
</kw>
<msg timestamp="20230107 11:02:37.100" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230107 11:02:31.586" endtime="20230107 11:02:37.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:02:37.100" endtime="20230107 11:02:37.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:37.107" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:42.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:42.898" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:02:37.104" endtime="20230107 11:02:42.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:42.899" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230107 11:02:42.899" endtime="20230107 11:02:42.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:42.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:42.900" endtime="20230107 11:02:42.900"/>
</kw>
<status status="PASS" starttime="20230107 11:02:37.103" endtime="20230107 11:02:42.901"/>
</kw>
<msg timestamp="20230107 11:02:42.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:37.103" endtime="20230107 11:02:42.902"/>
</kw>
<msg timestamp="20230107 11:02:42.902" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:02:37.101" endtime="20230107 11:02:42.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:02:42.902" endtime="20230107 11:02:42.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:42.908" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:48.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:48.788" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230107 11:02:42.905" endtime="20230107 11:02:48.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:48.790" level="INFO">100</msg>
<status status="PASS" starttime="20230107 11:02:48.789" endtime="20230107 11:02:48.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:48.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:48.790" endtime="20230107 11:02:48.791"/>
</kw>
<status status="PASS" starttime="20230107 11:02:42.904" endtime="20230107 11:02:48.791"/>
</kw>
<msg timestamp="20230107 11:02:48.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:42.904" endtime="20230107 11:02:48.792"/>
</kw>
<msg timestamp="20230107 11:02:48.792" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230107 11:02:42.903" endtime="20230107 11:02:48.792"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:02:48.793" endtime="20230107 11:02:48.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:48.797" level="INFO">Running command 'ozone sh bucket setquota /71975-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:54.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:54.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:02:48.795" endtime="20230107 11:02:54.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:54.193" level="INFO"/>
<status status="PASS" starttime="20230107 11:02:54.192" endtime="20230107 11:02:54.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:54.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:54.194" endtime="20230107 11:02:54.206"/>
</kw>
<status status="PASS" starttime="20230107 11:02:48.794" endtime="20230107 11:02:54.206"/>
</kw>
<msg timestamp="20230107 11:02:54.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:48.794" endtime="20230107 11:02:54.206"/>
</kw>
<status status="PASS" starttime="20230107 11:02:48.793" endtime="20230107 11:02:54.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:54.212" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:02:59.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:02:59.348" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230107 11:02:54.209" endtime="20230107 11:02:59.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:02:59.350" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230107 11:02:59.349" endtime="20230107 11:02:59.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:02:59.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:02:59.350" endtime="20230107 11:02:59.351"/>
</kw>
<status status="PASS" starttime="20230107 11:02:54.208" endtime="20230107 11:02:59.352"/>
</kw>
<msg timestamp="20230107 11:02:59.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:54.208" endtime="20230107 11:02:59.353"/>
</kw>
<msg timestamp="20230107 11:02:59.353" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230107 11:02:54.207" endtime="20230107 11:02:59.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:02:59.354" endtime="20230107 11:02:59.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:02:59.360" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:05.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:05.334" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230107 11:02:59.357" endtime="20230107 11:03:05.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:05.336" level="INFO">1000</msg>
<status status="PASS" starttime="20230107 11:03:05.335" endtime="20230107 11:03:05.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:05.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:05.336" endtime="20230107 11:03:05.337"/>
</kw>
<status status="PASS" starttime="20230107 11:02:59.357" endtime="20230107 11:03:05.337"/>
</kw>
<msg timestamp="20230107 11:03:05.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:02:59.356" endtime="20230107 11:03:05.338"/>
</kw>
<msg timestamp="20230107 11:03:05.338" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230107 11:02:59.355" endtime="20230107 11:03:05.338"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:03:05.338" endtime="20230107 11:03:05.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:05.345" level="INFO">Running command 'ozone sh bucket list /71975-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:11.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:11.721" level="INFO">${output} = 71975-without-scheme</msg>
<status status="PASS" starttime="20230107 11:03:05.342" endtime="20230107 11:03:11.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:11.723" level="INFO">71975-without-scheme</msg>
<status status="PASS" starttime="20230107 11:03:11.722" endtime="20230107 11:03:11.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:11.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:11.723" endtime="20230107 11:03:11.724"/>
</kw>
<status status="PASS" starttime="20230107 11:03:05.341" endtime="20230107 11:03:11.725"/>
</kw>
<msg timestamp="20230107 11:03:11.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:05.341" endtime="20230107 11:03:11.725"/>
</kw>
<msg timestamp="20230107 11:03:11.726" level="INFO">${result} = 71975-without-scheme</msg>
<status status="PASS" starttime="20230107 11:03:05.339" endtime="20230107 11:03:11.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:03:11.726" endtime="20230107 11:03:11.727"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:11.733" level="INFO">Running command 'ozone sh key put /71975-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:20.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:20.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:11.730" endtime="20230107 11:03:20.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:20.348" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:20.347" endtime="20230107 11:03:20.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:20.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:20.348" endtime="20230107 11:03:20.349"/>
</kw>
<status status="PASS" starttime="20230107 11:03:11.730" endtime="20230107 11:03:20.349"/>
</kw>
<msg timestamp="20230107 11:03:20.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:11.729" endtime="20230107 11:03:20.350"/>
</kw>
<status status="PASS" starttime="20230107 11:03:11.729" endtime="20230107 11:03:20.350"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:20.355" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:20.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:20.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:20.352" endtime="20230107 11:03:20.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:20.360" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:20.359" endtime="20230107 11:03:20.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:20.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:20.360" endtime="20230107 11:03:20.361"/>
</kw>
<status status="PASS" starttime="20230107 11:03:20.351" endtime="20230107 11:03:20.361"/>
</kw>
<msg timestamp="20230107 11:03:20.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:20.351" endtime="20230107 11:03:20.362"/>
</kw>
<status status="PASS" starttime="20230107 11:03:20.350" endtime="20230107 11:03:20.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:20.367" level="INFO">Running command 'ozone sh key get /71975-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:29.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:29.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:20.365" endtime="20230107 11:03:29.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:29.213" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:29.212" endtime="20230107 11:03:29.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:29.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:29.213" endtime="20230107 11:03:29.214"/>
</kw>
<status status="PASS" starttime="20230107 11:03:20.364" endtime="20230107 11:03:29.215"/>
</kw>
<msg timestamp="20230107 11:03:29.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:20.364" endtime="20230107 11:03:29.216"/>
</kw>
<status status="PASS" starttime="20230107 11:03:20.363" endtime="20230107 11:03:29.216"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:29.222" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:29.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:29.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:29.219" endtime="20230107 11:03:29.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:29.227" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:29.226" endtime="20230107 11:03:29.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:29.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:29.227" endtime="20230107 11:03:29.228"/>
</kw>
<status status="PASS" starttime="20230107 11:03:29.217" endtime="20230107 11:03:29.229"/>
</kw>
<msg timestamp="20230107 11:03:29.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:29.217" endtime="20230107 11:03:29.229"/>
</kw>
<status status="PASS" starttime="20230107 11:03:29.216" endtime="20230107 11:03:29.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:29.234" level="INFO">Running command 'ozone sh key put -t RATIS /71975-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:38.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:38.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:29.232" endtime="20230107 11:03:38.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:38.382" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:38.381" endtime="20230107 11:03:38.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:38.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:38.382" endtime="20230107 11:03:38.383"/>
</kw>
<status status="PASS" starttime="20230107 11:03:29.231" endtime="20230107 11:03:38.384"/>
</kw>
<msg timestamp="20230107 11:03:38.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:29.231" endtime="20230107 11:03:38.385"/>
</kw>
<status status="PASS" starttime="20230107 11:03:29.230" endtime="20230107 11:03:38.385"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:38.390" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:38.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:38.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:38.387" endtime="20230107 11:03:38.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:38.395" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:38.394" endtime="20230107 11:03:38.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:38.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:38.395" endtime="20230107 11:03:38.396"/>
</kw>
<status status="PASS" starttime="20230107 11:03:38.386" endtime="20230107 11:03:38.396"/>
</kw>
<msg timestamp="20230107 11:03:38.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:38.386" endtime="20230107 11:03:38.398"/>
</kw>
<status status="PASS" starttime="20230107 11:03:38.385" endtime="20230107 11:03:38.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:38.403" level="INFO">Running command 'ozone sh key get /71975-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:47.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:47.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:38.400" endtime="20230107 11:03:47.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:47.221" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:47.220" endtime="20230107 11:03:47.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:47.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:47.221" endtime="20230107 11:03:47.222"/>
</kw>
<status status="PASS" starttime="20230107 11:03:38.399" endtime="20230107 11:03:47.222"/>
</kw>
<msg timestamp="20230107 11:03:47.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:38.399" endtime="20230107 11:03:47.223"/>
</kw>
<status status="PASS" starttime="20230107 11:03:38.398" endtime="20230107 11:03:47.223"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:47.227" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:47.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:47.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:47.225" endtime="20230107 11:03:47.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:47.232" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:47.232" endtime="20230107 11:03:47.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:47.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:47.233" endtime="20230107 11:03:47.234"/>
</kw>
<status status="PASS" starttime="20230107 11:03:47.225" endtime="20230107 11:03:47.235"/>
</kw>
<msg timestamp="20230107 11:03:47.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:47.224" endtime="20230107 11:03:47.236"/>
</kw>
<status status="PASS" starttime="20230107 11:03:47.224" endtime="20230107 11:03:47.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:47.241" level="INFO">Running command 'ozone sh key info /71975-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:53.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:53.321" level="INFO">${output} = {
  "volumeName": "71975-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:03:34.972Z",
  "modificationTime": "2023-01-07T11:03:37.8...</msg>
<status status="PASS" starttime="20230107 11:03:47.238" endtime="20230107 11:03:53.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:53.322" level="INFO">{
  "volumeName": "71975-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:03:34.972Z",
  "modificationTime": "2023-01-07T11:03:37.888Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230107 11:03:53.321" endtime="20230107 11:03:53.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:53.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:53.323" endtime="20230107 11:03:53.324"/>
</kw>
<status status="PASS" starttime="20230107 11:03:47.237" endtime="20230107 11:03:53.324"/>
</kw>
<msg timestamp="20230107 11:03:53.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:47.237" endtime="20230107 11:03:53.328"/>
</kw>
<msg timestamp="20230107 11:03:53.329" level="INFO">${result} = {
  "volumeName": "71975-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:03:34.972Z",
  "modificationTime": "2023-01-07T11:03:37.8...</msg>
<status status="PASS" starttime="20230107 11:03:47.236" endtime="20230107 11:03:53.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:03:53.329" endtime="20230107 11:03:53.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:53.336" level="INFO">Running command 'ozone sh key delete /71975-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:03:59.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:03:59.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:53.333" endtime="20230107 11:03:59.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:03:59.084" level="INFO"/>
<status status="PASS" starttime="20230107 11:03:59.083" endtime="20230107 11:03:59.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:03:59.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:03:59.084" endtime="20230107 11:03:59.085"/>
</kw>
<status status="PASS" starttime="20230107 11:03:53.332" endtime="20230107 11:03:59.086"/>
</kw>
<msg timestamp="20230107 11:03:59.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:53.331" endtime="20230107 11:03:59.087"/>
</kw>
<status status="PASS" starttime="20230107 11:03:53.330" endtime="20230107 11:03:59.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:03:59.092" level="INFO">Running command 'ozone sh key cp /71975-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:07.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:07.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:03:59.089" endtime="20230107 11:04:07.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:07.907" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:07.906" endtime="20230107 11:04:07.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:07.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:07.907" endtime="20230107 11:04:07.908"/>
</kw>
<status status="PASS" starttime="20230107 11:03:59.088" endtime="20230107 11:04:07.908"/>
</kw>
<msg timestamp="20230107 11:04:07.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:03:59.088" endtime="20230107 11:04:07.909"/>
</kw>
<status status="PASS" starttime="20230107 11:03:59.087" endtime="20230107 11:04:07.909"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:07.918" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:07.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:07.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:04:07.915" endtime="20230107 11:04:07.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:07.923" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:07.922" endtime="20230107 11:04:07.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:07.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:07.923" endtime="20230107 11:04:07.924"/>
</kw>
<status status="PASS" starttime="20230107 11:04:07.910" endtime="20230107 11:04:07.924"/>
</kw>
<msg timestamp="20230107 11:04:07.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:07.910" endtime="20230107 11:04:07.925"/>
</kw>
<status status="PASS" starttime="20230107 11:04:07.909" endtime="20230107 11:04:07.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:07.930" level="INFO">Running command 'ozone sh key get /71975-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:16.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:16.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:04:07.928" endtime="20230107 11:04:16.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:16.131" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:16.130" endtime="20230107 11:04:16.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:16.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:16.131" endtime="20230107 11:04:16.132"/>
</kw>
<status status="PASS" starttime="20230107 11:04:07.927" endtime="20230107 11:04:16.132"/>
</kw>
<msg timestamp="20230107 11:04:16.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:07.926" endtime="20230107 11:04:16.133"/>
</kw>
<status status="PASS" starttime="20230107 11:04:07.926" endtime="20230107 11:04:16.133"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:16.141" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:16.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:16.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:04:16.138" endtime="20230107 11:04:16.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:16.145" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:16.145" endtime="20230107 11:04:16.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:16.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:16.145" endtime="20230107 11:04:16.146"/>
</kw>
<status status="PASS" starttime="20230107 11:04:16.138" endtime="20230107 11:04:16.147"/>
</kw>
<msg timestamp="20230107 11:04:16.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:16.134" endtime="20230107 11:04:16.148"/>
</kw>
<status status="PASS" starttime="20230107 11:04:16.133" endtime="20230107 11:04:16.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:16.152" level="INFO">Running command 'ozone sh key delete /71975-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:21.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:21.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:04:16.150" endtime="20230107 11:04:21.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:21.882" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:21.882" endtime="20230107 11:04:21.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:21.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:21.883" endtime="20230107 11:04:21.883"/>
</kw>
<status status="PASS" starttime="20230107 11:04:16.149" endtime="20230107 11:04:21.884"/>
</kw>
<msg timestamp="20230107 11:04:21.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:16.149" endtime="20230107 11:04:21.884"/>
</kw>
<status status="PASS" starttime="20230107 11:04:16.148" endtime="20230107 11:04:21.885"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:21.889" level="INFO">Running command 'ozone sh key get /71975-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:27.336" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:04:27.336" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:04:21.886" endtime="20230107 11:04:27.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:27.342" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:04:27.337" endtime="20230107 11:04:27.342"/>
</kw>
<msg timestamp="20230107 11:04:27.342" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:04:21.885" endtime="20230107 11:04:27.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:04:27.343" endtime="20230107 11:04:27.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:27.349" level="INFO">Running command 'ozone sh key get --force /71975-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:36.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:36.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:04:27.346" endtime="20230107 11:04:36.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:36.057" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:36.056" endtime="20230107 11:04:36.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:36.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:36.058" endtime="20230107 11:04:36.058"/>
</kw>
<status status="PASS" starttime="20230107 11:04:27.345" endtime="20230107 11:04:36.059"/>
</kw>
<msg timestamp="20230107 11:04:36.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:27.345" endtime="20230107 11:04:36.059"/>
</kw>
<msg timestamp="20230107 11:04:36.060" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:04:27.344" endtime="20230107 11:04:36.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:04:36.060" endtime="20230107 11:04:36.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:36.067" level="INFO">Running command 'ozone sh key info /71975-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:42.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:42.302" level="INFO">${output} = {
  "volumeName": "71975-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:03:16.886Z",
  "modificationTime": "2023-01-07T11:03:19.903Z",
...</msg>
<status status="PASS" starttime="20230107 11:04:36.064" endtime="20230107 11:04:42.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:42.304" level="INFO">{
  "volumeName": "71975-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:03:16.886Z",
  "modificationTime": "2023-01-07T11:03:19.903Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200000,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230107 11:04:42.303" endtime="20230107 11:04:42.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:42.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:42.304" endtime="20230107 11:04:42.305"/>
</kw>
<status status="PASS" starttime="20230107 11:04:36.063" endtime="20230107 11:04:42.306"/>
</kw>
<msg timestamp="20230107 11:04:42.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:36.062" endtime="20230107 11:04:42.307"/>
</kw>
<msg timestamp="20230107 11:04:42.308" level="INFO">${result} = {
  "volumeName": "71975-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:03:16.886Z",
  "modificationTime": "2023-01-07T11:03:19.903Z",
...</msg>
<status status="PASS" starttime="20230107 11:04:36.061" endtime="20230107 11:04:42.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:04:42.308" endtime="20230107 11:04:42.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:42.314" level="INFO">Running command 'ozone sh key list /71975-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:48.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:48.632" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230107 11:04:42.311" endtime="20230107 11:04:48.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:48.634" level="INFO">key1</msg>
<status status="PASS" starttime="20230107 11:04:48.633" endtime="20230107 11:04:48.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:48.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:48.634" endtime="20230107 11:04:48.636"/>
</kw>
<status status="PASS" starttime="20230107 11:04:42.310" endtime="20230107 11:04:48.637"/>
</kw>
<msg timestamp="20230107 11:04:48.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:42.310" endtime="20230107 11:04:48.639"/>
</kw>
<msg timestamp="20230107 11:04:48.640" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230107 11:04:42.308" endtime="20230107 11:04:48.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:04:48.640" endtime="20230107 11:04:48.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:48.652" level="INFO">Running command 'ozone sh key rename /71975-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:04:54.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:04:54.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:04:48.647" endtime="20230107 11:04:54.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:04:54.157" level="INFO"/>
<status status="PASS" starttime="20230107 11:04:54.156" endtime="20230107 11:04:54.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:04:54.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:04:54.157" endtime="20230107 11:04:54.158"/>
</kw>
<status status="PASS" starttime="20230107 11:04:48.644" endtime="20230107 11:04:54.158"/>
</kw>
<msg timestamp="20230107 11:04:54.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:48.643" endtime="20230107 11:04:54.159"/>
</kw>
<status status="PASS" starttime="20230107 11:04:48.641" endtime="20230107 11:04:54.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:04:54.165" level="INFO">Running command 'ozone sh key list /71975-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:00.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:00.069" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230107 11:04:54.162" endtime="20230107 11:05:00.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:00.071" level="INFO">key2</msg>
<status status="PASS" starttime="20230107 11:05:00.070" endtime="20230107 11:05:00.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:00.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:00.071" endtime="20230107 11:05:00.072"/>
</kw>
<status status="PASS" starttime="20230107 11:04:54.161" endtime="20230107 11:05:00.073"/>
</kw>
<msg timestamp="20230107 11:05:00.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:04:54.161" endtime="20230107 11:05:00.074"/>
</kw>
<msg timestamp="20230107 11:05:00.074" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230107 11:04:54.160" endtime="20230107 11:05:00.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:05:00.074" endtime="20230107 11:05:00.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:00.081" level="INFO">Running command 'ozone sh key delete /71975-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:05.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:05.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:05:00.077" endtime="20230107 11:05:05.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:05.421" level="INFO"/>
<status status="PASS" starttime="20230107 11:05:05.420" endtime="20230107 11:05:05.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:05.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:05.422" endtime="20230107 11:05:05.423"/>
</kw>
<status status="PASS" starttime="20230107 11:05:00.077" endtime="20230107 11:05:05.424"/>
</kw>
<msg timestamp="20230107 11:05:05.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:00.076" endtime="20230107 11:05:05.425"/>
</kw>
<status status="PASS" starttime="20230107 11:05:00.075" endtime="20230107 11:05:05.425"/>
</kw>
<status status="PASS" starttime="20230107 11:03:11.728" endtime="20230107 11:05:05.425"/>
</kw>
<status status="PASS" starttime="20230107 11:03:11.727" endtime="20230107 11:05:05.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:05.430" level="INFO">Running command 'ozone sh volume clrquota --space-quota /71975-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:11.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:11.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:05:05.428" endtime="20230107 11:05:11.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:11.275" level="INFO"/>
<status status="PASS" starttime="20230107 11:05:11.275" endtime="20230107 11:05:11.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:11.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:11.276" endtime="20230107 11:05:11.277"/>
</kw>
<status status="PASS" starttime="20230107 11:05:05.427" endtime="20230107 11:05:11.277"/>
</kw>
<msg timestamp="20230107 11:05:11.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:05.427" endtime="20230107 11:05:11.278"/>
</kw>
<status status="PASS" starttime="20230107 11:05:05.426" endtime="20230107 11:05:11.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:11.283" level="INFO">Running command 'ozone sh volume info /71975-without-scheme | jq -r '. | select(.name=="71975-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:16.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:16.623" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:05:11.281" endtime="20230107 11:05:16.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:16.625" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:05:16.624" endtime="20230107 11:05:16.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:16.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:16.626" endtime="20230107 11:05:16.626"/>
</kw>
<status status="PASS" starttime="20230107 11:05:11.280" endtime="20230107 11:05:16.627"/>
</kw>
<msg timestamp="20230107 11:05:16.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:11.280" endtime="20230107 11:05:16.627"/>
</kw>
<msg timestamp="20230107 11:05:16.628" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:05:11.278" endtime="20230107 11:05:16.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:05:16.628" endtime="20230107 11:05:16.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:16.633" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /71975-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:22.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:22.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:05:16.630" endtime="20230107 11:05:22.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:22.593" level="INFO"/>
<status status="PASS" starttime="20230107 11:05:22.592" endtime="20230107 11:05:22.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:22.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:22.593" endtime="20230107 11:05:22.594"/>
</kw>
<status status="PASS" starttime="20230107 11:05:16.630" endtime="20230107 11:05:22.594"/>
</kw>
<msg timestamp="20230107 11:05:22.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:16.630" endtime="20230107 11:05:22.595"/>
</kw>
<status status="PASS" starttime="20230107 11:05:16.629" endtime="20230107 11:05:22.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:22.601" level="INFO">Running command 'ozone sh volume info /71975-without-scheme | jq -r '. | select(.name=="71975-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:28.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:28.536" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:05:22.598" endtime="20230107 11:05:28.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:28.537" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:05:28.536" endtime="20230107 11:05:28.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:28.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:28.538" endtime="20230107 11:05:28.539"/>
</kw>
<status status="PASS" starttime="20230107 11:05:22.597" endtime="20230107 11:05:28.539"/>
</kw>
<msg timestamp="20230107 11:05:28.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:22.597" endtime="20230107 11:05:28.540"/>
</kw>
<msg timestamp="20230107 11:05:28.540" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:05:22.595" endtime="20230107 11:05:28.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:05:28.540" endtime="20230107 11:05:28.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:28.546" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /71975-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:34.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:34.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:05:28.543" endtime="20230107 11:05:34.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:34.198" level="INFO"/>
<status status="PASS" starttime="20230107 11:05:34.197" endtime="20230107 11:05:34.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:34.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:34.198" endtime="20230107 11:05:34.199"/>
</kw>
<status status="PASS" starttime="20230107 11:05:28.543" endtime="20230107 11:05:34.200"/>
</kw>
<msg timestamp="20230107 11:05:34.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:28.542" endtime="20230107 11:05:34.200"/>
</kw>
<status status="PASS" starttime="20230107 11:05:28.541" endtime="20230107 11:05:34.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:34.206" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:40.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:40.058" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:05:34.203" endtime="20230107 11:05:40.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:40.060" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:05:40.059" endtime="20230107 11:05:40.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:40.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:40.060" endtime="20230107 11:05:40.061"/>
</kw>
<status status="PASS" starttime="20230107 11:05:34.202" endtime="20230107 11:05:40.062"/>
</kw>
<msg timestamp="20230107 11:05:40.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:34.202" endtime="20230107 11:05:40.062"/>
</kw>
<msg timestamp="20230107 11:05:40.063" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:05:34.201" endtime="20230107 11:05:40.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:05:40.063" endtime="20230107 11:05:40.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:40.069" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /71975-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:45.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:45.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:05:40.066" endtime="20230107 11:05:45.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:45.181" level="INFO"/>
<status status="PASS" starttime="20230107 11:05:45.180" endtime="20230107 11:05:45.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:45.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:45.182" endtime="20230107 11:05:45.182"/>
</kw>
<status status="PASS" starttime="20230107 11:05:40.065" endtime="20230107 11:05:45.183"/>
</kw>
<msg timestamp="20230107 11:05:45.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:40.065" endtime="20230107 11:05:45.184"/>
</kw>
<status status="PASS" starttime="20230107 11:05:40.064" endtime="20230107 11:05:45.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:45.189" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:50.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:50.990" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:05:45.186" endtime="20230107 11:05:50.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:50.992" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:05:50.991" endtime="20230107 11:05:50.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:50.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:50.992" endtime="20230107 11:05:50.993"/>
</kw>
<status status="PASS" starttime="20230107 11:05:45.186" endtime="20230107 11:05:50.994"/>
</kw>
<msg timestamp="20230107 11:05:50.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:45.185" endtime="20230107 11:05:50.994"/>
</kw>
<msg timestamp="20230107 11:05:50.995" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:05:45.184" endtime="20230107 11:05:50.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:05:50.995" endtime="20230107 11:05:50.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:51.001" level="INFO">Running command 'ozone sh bucket delete /71975-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:05:56.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:05:56.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:05:50.998" endtime="20230107 11:05:56.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:05:56.150" level="INFO"/>
<status status="PASS" starttime="20230107 11:05:56.149" endtime="20230107 11:05:56.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:05:56.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:05:56.150" endtime="20230107 11:05:56.151"/>
</kw>
<status status="PASS" starttime="20230107 11:05:50.998" endtime="20230107 11:05:56.151"/>
</kw>
<msg timestamp="20230107 11:05:56.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:50.997" endtime="20230107 11:05:56.152"/>
</kw>
<status status="PASS" starttime="20230107 11:05:50.996" endtime="20230107 11:05:56.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:05:56.157" level="INFO">Running command 'ozone sh volume delete /71975-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:01.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:01.499" level="INFO">${output} = Volume 71975-without-scheme is deleted</msg>
<status status="PASS" starttime="20230107 11:05:56.155" endtime="20230107 11:06:01.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:01.500" level="INFO">Volume 71975-without-scheme is deleted</msg>
<status status="PASS" starttime="20230107 11:06:01.499" endtime="20230107 11:06:01.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:01.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:01.500" endtime="20230107 11:06:01.501"/>
</kw>
<status status="PASS" starttime="20230107 11:05:56.154" endtime="20230107 11:06:01.502"/>
</kw>
<msg timestamp="20230107 11:06:01.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:05:56.154" endtime="20230107 11:06:01.503"/>
</kw>
<status status="PASS" starttime="20230107 11:05:56.153" endtime="20230107 11:06:01.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:01.508" level="INFO">Running command 'ozone sh volume create /71975-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:07.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:07.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:06:01.506" endtime="20230107 11:06:07.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:07.164" level="INFO"/>
<status status="PASS" starttime="20230107 11:06:07.163" endtime="20230107 11:06:07.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:07.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:07.164" endtime="20230107 11:06:07.165"/>
</kw>
<status status="PASS" starttime="20230107 11:06:01.505" endtime="20230107 11:06:07.166"/>
</kw>
<msg timestamp="20230107 11:06:07.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:01.504" endtime="20230107 11:06:07.166"/>
</kw>
<status status="PASS" starttime="20230107 11:06:01.503" endtime="20230107 11:06:07.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:07.171" level="INFO">Running command 'ozone sh volume info /71975-without-scheme | jq -r '. | select(.name=="71975-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:13.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:13.062" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:06:07.169" endtime="20230107 11:06:13.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:13.063" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:06:13.062" endtime="20230107 11:06:13.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:13.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:13.064" endtime="20230107 11:06:13.065"/>
</kw>
<status status="PASS" starttime="20230107 11:06:07.168" endtime="20230107 11:06:13.065"/>
</kw>
<msg timestamp="20230107 11:06:13.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:07.168" endtime="20230107 11:06:13.066"/>
</kw>
<msg timestamp="20230107 11:06:13.066" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:06:07.166" endtime="20230107 11:06:13.066"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:06:13.066" endtime="20230107 11:06:13.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:13.073" level="INFO">Running command 'ozone sh volume info /71975-without-scheme | jq -r '. | select(.name=="71975-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:18.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:18.673" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:06:13.070" endtime="20230107 11:06:18.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:18.675" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:06:18.674" endtime="20230107 11:06:18.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:18.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:18.675" endtime="20230107 11:06:18.676"/>
</kw>
<status status="PASS" starttime="20230107 11:06:13.069" endtime="20230107 11:06:18.677"/>
</kw>
<msg timestamp="20230107 11:06:18.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:13.069" endtime="20230107 11:06:18.677"/>
</kw>
<msg timestamp="20230107 11:06:18.678" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:06:13.067" endtime="20230107 11:06:18.678"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:06:18.678" endtime="20230107 11:06:18.679"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:18.684" level="INFO">Running command 'ozone sh bucket create /71975-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:24.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:24.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:06:18.681" endtime="20230107 11:06:24.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:24.318" level="INFO"/>
<status status="PASS" starttime="20230107 11:06:24.317" endtime="20230107 11:06:24.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:24.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:24.319" endtime="20230107 11:06:24.319"/>
</kw>
<status status="PASS" starttime="20230107 11:06:18.681" endtime="20230107 11:06:24.320"/>
</kw>
<msg timestamp="20230107 11:06:24.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:18.680" endtime="20230107 11:06:24.321"/>
</kw>
<status status="PASS" starttime="20230107 11:06:18.679" endtime="20230107 11:06:24.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:24.326" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:30.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:30.013" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:06:24.323" endtime="20230107 11:06:30.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:30.015" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:06:30.014" endtime="20230107 11:06:30.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:30.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:30.015" endtime="20230107 11:06:30.016"/>
</kw>
<status status="PASS" starttime="20230107 11:06:24.323" endtime="20230107 11:06:30.016"/>
</kw>
<msg timestamp="20230107 11:06:30.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:24.322" endtime="20230107 11:06:30.017"/>
</kw>
<msg timestamp="20230107 11:06:30.017" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:06:24.321" endtime="20230107 11:06:30.017"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:06:30.017" endtime="20230107 11:06:30.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:30.023" level="INFO">Running command 'ozone sh bucket info /71975-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:35.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:35.528" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:06:30.021" endtime="20230107 11:06:35.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:35.530" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:06:35.529" endtime="20230107 11:06:35.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:35.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:35.530" endtime="20230107 11:06:35.531"/>
</kw>
<status status="PASS" starttime="20230107 11:06:30.020" endtime="20230107 11:06:35.532"/>
</kw>
<msg timestamp="20230107 11:06:35.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:30.020" endtime="20230107 11:06:35.532"/>
</kw>
<msg timestamp="20230107 11:06:35.533" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:06:30.018" endtime="20230107 11:06:35.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:06:35.533" endtime="20230107 11:06:35.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:35.538" level="INFO">Running command 'ozone sh bucket delete /71975-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:41.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:41.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:06:35.536" endtime="20230107 11:06:41.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:41.197" level="INFO"/>
<status status="PASS" starttime="20230107 11:06:41.196" endtime="20230107 11:06:41.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:41.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:41.197" endtime="20230107 11:06:41.198"/>
</kw>
<status status="PASS" starttime="20230107 11:06:35.535" endtime="20230107 11:06:41.198"/>
</kw>
<msg timestamp="20230107 11:06:41.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:35.534" endtime="20230107 11:06:41.199"/>
</kw>
<status status="PASS" starttime="20230107 11:06:35.534" endtime="20230107 11:06:41.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:41.205" level="INFO">Running command 'ozone sh volume delete /71975-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:46.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:46.439" level="INFO">${output} = Volume 71975-without-scheme is deleted</msg>
<status status="PASS" starttime="20230107 11:06:41.202" endtime="20230107 11:06:46.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:46.441" level="INFO">Volume 71975-without-scheme is deleted</msg>
<status status="PASS" starttime="20230107 11:06:46.440" endtime="20230107 11:06:46.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:46.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:46.441" endtime="20230107 11:06:46.442"/>
</kw>
<status status="PASS" starttime="20230107 11:06:41.201" endtime="20230107 11:06:46.442"/>
</kw>
<msg timestamp="20230107 11:06:46.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:41.201" endtime="20230107 11:06:46.443"/>
</kw>
<status status="PASS" starttime="20230107 11:06:41.199" endtime="20230107 11:06:46.443"/>
</kw>
<status status="PASS" starttime="20230107 11:01:52.432" endtime="20230107 11:06:46.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:01:52.431" endtime="20230107 11:06:46.444"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230107 11:01:52.396" endtime="20230107 11:06:46.446"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 11:06:46.459" level="INFO">${random} = 46106</msg>
<status status="PASS" starttime="20230107 11:06:46.458" endtime="20230107 11:06:46.459"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:06:46.459" level="INFO">${prefix} = 46106</msg>
<status status="PASS" starttime="20230107 11:06:46.459" endtime="20230107 11:06:46.459"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.458" endtime="20230107 11:06:46.460"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:46.467" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:46.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:46.472" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:06:46.464" endtime="20230107 11:06:46.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:46.474" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:06:46.473" endtime="20230107 11:06:46.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:46.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:46.474" endtime="20230107 11:06:46.474"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.464" endtime="20230107 11:06:46.475"/>
</kw>
<msg timestamp="20230107 11:06:46.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:46.463" endtime="20230107 11:06:46.476"/>
</kw>
<msg timestamp="20230107 11:06:46.476" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:06:46.463" endtime="20230107 11:06:46.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:06:46.478" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:06:46.476" endtime="20230107 11:06:46.478"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:46.483" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:46.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:46.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:06:46.481" endtime="20230107 11:06:46.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:46.560" level="INFO"/>
<status status="PASS" starttime="20230107 11:06:46.559" endtime="20230107 11:06:46.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:46.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:46.560" endtime="20230107 11:06:46.561"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.480" endtime="20230107 11:06:46.562"/>
</kw>
<msg timestamp="20230107 11:06:46.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:46.480" endtime="20230107 11:06:46.562"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.479" endtime="20230107 11:06:46.563"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.478" endtime="20230107 11:06:46.563"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.462" endtime="20230107 11:06:46.563"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.461" endtime="20230107 11:06:46.563"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:46.568" level="INFO">Running command 'ozone sh volume info o3://om:9862/46106-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:52.267" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:06:52.267" level="INFO">${output} = VOLUME_NOT_FOUND Volume 46106-with-host is not found</msg>
<status status="PASS" starttime="20230107 11:06:46.565" endtime="20230107 11:06:52.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:52.268" level="INFO">VOLUME_NOT_FOUND Volume 46106-with-host is not found</msg>
<status status="PASS" starttime="20230107 11:06:52.267" endtime="20230107 11:06:52.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:52.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:52.269" endtime="20230107 11:06:52.270"/>
</kw>
<msg timestamp="20230107 11:06:52.270" level="INFO">${result} = VOLUME_NOT_FOUND Volume 46106-with-host is not found</msg>
<status status="PASS" starttime="20230107 11:06:46.564" endtime="20230107 11:06:52.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:06:52.270" endtime="20230107 11:06:52.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:52.275" level="INFO">Running command 'ozone sh volume create o3://om:9862/46106-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:06:57.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:06:57.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:06:52.273" endtime="20230107 11:06:57.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:06:57.203" level="INFO"/>
<status status="PASS" starttime="20230107 11:06:57.202" endtime="20230107 11:06:57.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:06:57.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:06:57.203" endtime="20230107 11:06:57.205"/>
</kw>
<status status="PASS" starttime="20230107 11:06:52.272" endtime="20230107 11:06:57.206"/>
</kw>
<msg timestamp="20230107 11:06:57.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:52.272" endtime="20230107 11:06:57.206"/>
</kw>
<msg timestamp="20230107 11:06:57.207" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:06:52.271" endtime="20230107 11:06:57.207"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230107 11:06:57.208" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230107 11:06:57.207" endtime="20230107 11:06:57.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:06:57.213" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="46106-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:02.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:02.885" level="INFO">${output} = {
  "metadata": {},
  "name": "46106-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230107 11:06:57.210" endtime="20230107 11:07:02.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:02.886" level="INFO">{
  "metadata": {},
  "name": "46106-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-07T11:06:57.123Z",
  "modificationTime": "2023-01-07T11:06:57.123Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230107 11:07:02.885" endtime="20230107 11:07:02.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:02.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:02.886" endtime="20230107 11:07:02.887"/>
</kw>
<status status="PASS" starttime="20230107 11:06:57.209" endtime="20230107 11:07:02.888"/>
</kw>
<msg timestamp="20230107 11:07:02.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:06:57.209" endtime="20230107 11:07:02.889"/>
</kw>
<msg timestamp="20230107 11:07:02.889" level="INFO">${result} = {
  "metadata": {},
  "name": "46106-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230107 11:06:57.208" endtime="20230107 11:07:02.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:07:02.889" endtime="20230107 11:07:02.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:02.895" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="46106-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:08.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:08.925" level="INFO">${output} = {
  "metadata": {},
  "name": "46106-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230107 11:07:02.892" endtime="20230107 11:07:08.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:08.927" level="INFO">{
  "metadata": {},
  "name": "46106-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-07T11:06:57.123Z",
  "modificationTime": "2023-01-07T11:06:57.123Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230107 11:07:08.925" endtime="20230107 11:07:08.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:08.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:08.927" endtime="20230107 11:07:08.928"/>
</kw>
<status status="PASS" starttime="20230107 11:07:02.891" endtime="20230107 11:07:08.928"/>
</kw>
<msg timestamp="20230107 11:07:08.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:02.891" endtime="20230107 11:07:08.929"/>
</kw>
<msg timestamp="20230107 11:07:08.930" level="INFO">${result} = {
  "metadata": {},
  "name": "46106-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20230107 11:07:02.890" endtime="20230107 11:07:08.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:07:08.930" endtime="20230107 11:07:08.930"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:08.935" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/46106-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:14.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:14.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:07:08.933" endtime="20230107 11:07:14.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:14.117" level="INFO"/>
<status status="PASS" starttime="20230107 11:07:14.116" endtime="20230107 11:07:14.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:14.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:14.117" endtime="20230107 11:07:14.118"/>
</kw>
<status status="PASS" starttime="20230107 11:07:08.932" endtime="20230107 11:07:14.118"/>
</kw>
<msg timestamp="20230107 11:07:14.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:08.931" endtime="20230107 11:07:14.119"/>
</kw>
<status status="PASS" starttime="20230107 11:07:08.931" endtime="20230107 11:07:14.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:14.125" level="INFO">Running command 'ozone sh volume info o3://om:9862/46106-with-host | jq -r '. | select(.name=="46106-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:20.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:20.024" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:07:14.122" endtime="20230107 11:07:20.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:20.026" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230107 11:07:20.025" endtime="20230107 11:07:20.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:20.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:20.026" endtime="20230107 11:07:20.028"/>
</kw>
<status status="PASS" starttime="20230107 11:07:14.121" endtime="20230107 11:07:20.028"/>
</kw>
<msg timestamp="20230107 11:07:20.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:14.121" endtime="20230107 11:07:20.029"/>
</kw>
<msg timestamp="20230107 11:07:20.029" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:07:14.120" endtime="20230107 11:07:20.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:07:20.030" endtime="20230107 11:07:20.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:20.036" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46106-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:25.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:25.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:07:20.033" endtime="20230107 11:07:25.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:25.572" level="INFO"/>
<status status="PASS" starttime="20230107 11:07:25.571" endtime="20230107 11:07:25.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:25.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:25.572" endtime="20230107 11:07:25.573"/>
</kw>
<status status="PASS" starttime="20230107 11:07:20.032" endtime="20230107 11:07:25.573"/>
</kw>
<msg timestamp="20230107 11:07:25.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:20.031" endtime="20230107 11:07:25.574"/>
</kw>
<msg timestamp="20230107 11:07:25.574" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:07:20.030" endtime="20230107 11:07:25.574"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230107 11:07:25.575" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230107 11:07:25.574" endtime="20230107 11:07:25.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:25.580" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:31.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:31.266" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230107 11:07:25.577" endtime="20230107 11:07:31.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:31.268" level="INFO">DISK</msg>
<status status="PASS" starttime="20230107 11:07:31.267" endtime="20230107 11:07:31.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:31.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:31.268" endtime="20230107 11:07:31.269"/>
</kw>
<status status="PASS" starttime="20230107 11:07:25.577" endtime="20230107 11:07:31.269"/>
</kw>
<msg timestamp="20230107 11:07:31.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:25.576" endtime="20230107 11:07:31.270"/>
</kw>
<msg timestamp="20230107 11:07:31.270" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230107 11:07:25.575" endtime="20230107 11:07:31.270"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:07:31.270" endtime="20230107 11:07:31.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:31.276" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:37.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:37.381" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:07:31.273" endtime="20230107 11:07:37.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:37.382" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230107 11:07:37.381" endtime="20230107 11:07:37.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:37.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:37.383" endtime="20230107 11:07:37.384"/>
</kw>
<status status="PASS" starttime="20230107 11:07:31.272" endtime="20230107 11:07:37.384"/>
</kw>
<msg timestamp="20230107 11:07:37.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:31.272" endtime="20230107 11:07:37.385"/>
</kw>
<msg timestamp="20230107 11:07:37.385" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:07:31.271" endtime="20230107 11:07:37.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:07:37.385" endtime="20230107 11:07:37.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:37.392" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:43.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:43.199" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230107 11:07:37.389" endtime="20230107 11:07:43.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:43.202" level="INFO">100</msg>
<status status="PASS" starttime="20230107 11:07:43.200" endtime="20230107 11:07:43.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:43.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:43.202" endtime="20230107 11:07:43.204"/>
</kw>
<status status="PASS" starttime="20230107 11:07:37.389" endtime="20230107 11:07:43.204"/>
</kw>
<msg timestamp="20230107 11:07:43.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:37.388" endtime="20230107 11:07:43.205"/>
</kw>
<msg timestamp="20230107 11:07:43.205" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230107 11:07:37.386" endtime="20230107 11:07:43.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:07:43.205" endtime="20230107 11:07:43.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:43.211" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/46106-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:48.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:48.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:07:43.209" endtime="20230107 11:07:48.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:48.380" level="INFO"/>
<status status="PASS" starttime="20230107 11:07:48.379" endtime="20230107 11:07:48.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:48.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:48.380" endtime="20230107 11:07:48.381"/>
</kw>
<status status="PASS" starttime="20230107 11:07:43.208" endtime="20230107 11:07:48.381"/>
</kw>
<msg timestamp="20230107 11:07:48.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:43.207" endtime="20230107 11:07:48.382"/>
</kw>
<status status="PASS" starttime="20230107 11:07:43.206" endtime="20230107 11:07:48.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:48.387" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:54.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:54.181" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230107 11:07:48.385" endtime="20230107 11:07:54.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:54.183" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230107 11:07:54.182" endtime="20230107 11:07:54.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:54.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:54.184" endtime="20230107 11:07:54.184"/>
</kw>
<status status="PASS" starttime="20230107 11:07:48.384" endtime="20230107 11:07:54.185"/>
</kw>
<msg timestamp="20230107 11:07:54.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:48.384" endtime="20230107 11:07:54.186"/>
</kw>
<msg timestamp="20230107 11:07:54.186" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230107 11:07:48.382" endtime="20230107 11:07:54.186"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:07:54.187" endtime="20230107 11:07:54.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:54.192" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:07:59.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:07:59.821" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230107 11:07:54.190" endtime="20230107 11:07:59.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:07:59.823" level="INFO">1000</msg>
<status status="PASS" starttime="20230107 11:07:59.822" endtime="20230107 11:07:59.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:07:59.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:07:59.823" endtime="20230107 11:07:59.824"/>
</kw>
<status status="PASS" starttime="20230107 11:07:54.189" endtime="20230107 11:07:59.825"/>
</kw>
<msg timestamp="20230107 11:07:59.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:54.189" endtime="20230107 11:07:59.825"/>
</kw>
<msg timestamp="20230107 11:07:59.826" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230107 11:07:54.187" endtime="20230107 11:07:59.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:07:59.826" endtime="20230107 11:07:59.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:07:59.832" level="INFO">Running command 'ozone sh bucket list o3://om:9862/46106-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:05.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:05.639" level="INFO">${output} = 46106-with-host</msg>
<status status="PASS" starttime="20230107 11:07:59.829" endtime="20230107 11:08:05.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:05.640" level="INFO">46106-with-host</msg>
<status status="PASS" starttime="20230107 11:08:05.639" endtime="20230107 11:08:05.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:05.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:05.641" endtime="20230107 11:08:05.641"/>
</kw>
<status status="PASS" starttime="20230107 11:07:59.829" endtime="20230107 11:08:05.642"/>
</kw>
<msg timestamp="20230107 11:08:05.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:07:59.828" endtime="20230107 11:08:05.643"/>
</kw>
<msg timestamp="20230107 11:08:05.643" level="INFO">${result} = 46106-with-host</msg>
<status status="PASS" starttime="20230107 11:07:59.827" endtime="20230107 11:08:05.643"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:08:05.643" endtime="20230107 11:08:05.644"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:05.651" level="INFO">Running command 'ozone sh key put o3://om:9862/46106-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:14.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:14.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:05.648" endtime="20230107 11:08:14.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:14.085" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:14.084" endtime="20230107 11:08:14.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:14.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:14.086" endtime="20230107 11:08:14.086"/>
</kw>
<status status="PASS" starttime="20230107 11:08:05.648" endtime="20230107 11:08:14.087"/>
</kw>
<msg timestamp="20230107 11:08:14.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:05.647" endtime="20230107 11:08:14.087"/>
</kw>
<status status="PASS" starttime="20230107 11:08:05.646" endtime="20230107 11:08:14.088"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:14.093" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:14.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:14.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:14.090" endtime="20230107 11:08:14.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:14.099" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:14.098" endtime="20230107 11:08:14.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:14.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:14.100" endtime="20230107 11:08:14.101"/>
</kw>
<status status="PASS" starttime="20230107 11:08:14.089" endtime="20230107 11:08:14.101"/>
</kw>
<msg timestamp="20230107 11:08:14.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:14.089" endtime="20230107 11:08:14.102"/>
</kw>
<status status="PASS" starttime="20230107 11:08:14.088" endtime="20230107 11:08:14.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:14.107" level="INFO">Running command 'ozone sh key get o3://om:9862/46106-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:22.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:22.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:14.105" endtime="20230107 11:08:22.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:22.629" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:22.628" endtime="20230107 11:08:22.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:22.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:22.629" endtime="20230107 11:08:22.630"/>
</kw>
<status status="PASS" starttime="20230107 11:08:14.104" endtime="20230107 11:08:22.630"/>
</kw>
<msg timestamp="20230107 11:08:22.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:14.104" endtime="20230107 11:08:22.631"/>
</kw>
<status status="PASS" starttime="20230107 11:08:14.103" endtime="20230107 11:08:22.632"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:22.637" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:22.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:22.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:22.634" endtime="20230107 11:08:22.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:22.645" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:22.644" endtime="20230107 11:08:22.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:22.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:22.646" endtime="20230107 11:08:22.646"/>
</kw>
<status status="PASS" starttime="20230107 11:08:22.633" endtime="20230107 11:08:22.647"/>
</kw>
<msg timestamp="20230107 11:08:22.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:22.633" endtime="20230107 11:08:22.648"/>
</kw>
<status status="PASS" starttime="20230107 11:08:22.632" endtime="20230107 11:08:22.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:22.655" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/46106-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:31.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:31.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:22.652" endtime="20230107 11:08:31.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:31.244" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:31.243" endtime="20230107 11:08:31.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:31.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:31.244" endtime="20230107 11:08:31.245"/>
</kw>
<status status="PASS" starttime="20230107 11:08:22.651" endtime="20230107 11:08:31.245"/>
</kw>
<msg timestamp="20230107 11:08:31.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:22.650" endtime="20230107 11:08:31.246"/>
</kw>
<status status="PASS" starttime="20230107 11:08:22.649" endtime="20230107 11:08:31.246"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:31.251" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:31.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:31.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:31.249" endtime="20230107 11:08:31.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:31.257" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:31.256" endtime="20230107 11:08:31.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:31.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:31.258" endtime="20230107 11:08:31.258"/>
</kw>
<status status="PASS" starttime="20230107 11:08:31.248" endtime="20230107 11:08:31.259"/>
</kw>
<msg timestamp="20230107 11:08:31.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:31.247" endtime="20230107 11:08:31.260"/>
</kw>
<status status="PASS" starttime="20230107 11:08:31.246" endtime="20230107 11:08:31.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:31.265" level="INFO">Running command 'ozone sh key get o3://om:9862/46106-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:39.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:39.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:31.262" endtime="20230107 11:08:39.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:39.555" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:39.554" endtime="20230107 11:08:39.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:39.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:39.555" endtime="20230107 11:08:39.556"/>
</kw>
<status status="PASS" starttime="20230107 11:08:31.261" endtime="20230107 11:08:39.557"/>
</kw>
<msg timestamp="20230107 11:08:39.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:31.261" endtime="20230107 11:08:39.558"/>
</kw>
<status status="PASS" starttime="20230107 11:08:31.260" endtime="20230107 11:08:39.559"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:39.565" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:39.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:39.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:39.562" endtime="20230107 11:08:39.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:39.570" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:39.570" endtime="20230107 11:08:39.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:39.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:39.571" endtime="20230107 11:08:39.571"/>
</kw>
<status status="PASS" starttime="20230107 11:08:39.561" endtime="20230107 11:08:39.572"/>
</kw>
<msg timestamp="20230107 11:08:39.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:39.560" endtime="20230107 11:08:39.573"/>
</kw>
<status status="PASS" starttime="20230107 11:08:39.559" endtime="20230107 11:08:39.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:39.578" level="INFO">Running command 'ozone sh key info o3://om:9862/46106-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:45.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:45.785" level="INFO">${output} = {
  "volumeName": "46106-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:08:27.945Z",
  "modificationTime": "2023-01-07T11:08:30.802Z",...</msg>
<status status="PASS" starttime="20230107 11:08:39.576" endtime="20230107 11:08:45.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:45.787" level="INFO">{
  "volumeName": "46106-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:08:27.945Z",
  "modificationTime": "2023-01-07T11:08:30.802Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230107 11:08:45.786" endtime="20230107 11:08:45.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:45.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:45.787" endtime="20230107 11:08:45.788"/>
</kw>
<status status="PASS" starttime="20230107 11:08:39.575" endtime="20230107 11:08:45.788"/>
</kw>
<msg timestamp="20230107 11:08:45.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:39.575" endtime="20230107 11:08:45.789"/>
</kw>
<msg timestamp="20230107 11:08:45.789" level="INFO">${result} = {
  "volumeName": "46106-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:08:27.945Z",
  "modificationTime": "2023-01-07T11:08:30.802Z",...</msg>
<status status="PASS" starttime="20230107 11:08:39.573" endtime="20230107 11:08:45.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:08:45.790" endtime="20230107 11:08:45.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:45.796" level="INFO">Running command 'ozone sh key delete o3://om:9862/46106-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:08:51.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:08:51.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:45.793" endtime="20230107 11:08:51.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:08:51.494" level="INFO"/>
<status status="PASS" starttime="20230107 11:08:51.493" endtime="20230107 11:08:51.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:08:51.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:08:51.494" endtime="20230107 11:08:51.496"/>
</kw>
<status status="PASS" starttime="20230107 11:08:45.792" endtime="20230107 11:08:51.496"/>
</kw>
<msg timestamp="20230107 11:08:51.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:45.792" endtime="20230107 11:08:51.497"/>
</kw>
<status status="PASS" starttime="20230107 11:08:45.791" endtime="20230107 11:08:51.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:08:51.502" level="INFO">Running command 'ozone sh key cp o3://om:9862/46106-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:00.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:00.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:08:51.499" endtime="20230107 11:09:00.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:00.755" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:00.754" endtime="20230107 11:09:00.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:00.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:00.755" endtime="20230107 11:09:00.756"/>
</kw>
<status status="PASS" starttime="20230107 11:08:51.498" endtime="20230107 11:09:00.756"/>
</kw>
<msg timestamp="20230107 11:09:00.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:08:51.498" endtime="20230107 11:09:00.757"/>
</kw>
<status status="PASS" starttime="20230107 11:08:51.497" endtime="20230107 11:09:00.758"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:00.763" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:00.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:00.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:00.760" endtime="20230107 11:09:00.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:00.769" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:00.768" endtime="20230107 11:09:00.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:00.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:00.770" endtime="20230107 11:09:00.771"/>
</kw>
<status status="PASS" starttime="20230107 11:09:00.759" endtime="20230107 11:09:00.771"/>
</kw>
<msg timestamp="20230107 11:09:00.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:00.759" endtime="20230107 11:09:00.772"/>
</kw>
<status status="PASS" starttime="20230107 11:09:00.758" endtime="20230107 11:09:00.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:00.778" level="INFO">Running command 'ozone sh key get o3://om:9862/46106-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:09.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:09.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:00.775" endtime="20230107 11:09:09.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:09.779" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:09.778" endtime="20230107 11:09:09.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:09.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:09.779" endtime="20230107 11:09:09.780"/>
</kw>
<status status="PASS" starttime="20230107 11:09:00.774" endtime="20230107 11:09:09.780"/>
</kw>
<msg timestamp="20230107 11:09:09.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:00.774" endtime="20230107 11:09:09.781"/>
</kw>
<status status="PASS" starttime="20230107 11:09:00.773" endtime="20230107 11:09:09.782"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:09.786" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:09.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:09.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:09.783" endtime="20230107 11:09:09.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:09.791" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:09.790" endtime="20230107 11:09:09.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:09.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:09.791" endtime="20230107 11:09:09.792"/>
</kw>
<status status="PASS" starttime="20230107 11:09:09.783" endtime="20230107 11:09:09.793"/>
</kw>
<msg timestamp="20230107 11:09:09.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:09.782" endtime="20230107 11:09:09.794"/>
</kw>
<status status="PASS" starttime="20230107 11:09:09.782" endtime="20230107 11:09:09.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:09.800" level="INFO">Running command 'ozone sh key delete o3://om:9862/46106-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:15.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:15.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:09.797" endtime="20230107 11:09:15.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:15.156" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:15.155" endtime="20230107 11:09:15.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:15.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:15.156" endtime="20230107 11:09:15.157"/>
</kw>
<status status="PASS" starttime="20230107 11:09:09.796" endtime="20230107 11:09:15.157"/>
</kw>
<msg timestamp="20230107 11:09:15.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:09.795" endtime="20230107 11:09:15.158"/>
</kw>
<status status="PASS" starttime="20230107 11:09:09.794" endtime="20230107 11:09:15.158"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:15.162" level="INFO">Running command 'ozone sh key get o3://om:9862/46106-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:20.722" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:09:20.722" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:09:15.159" endtime="20230107 11:09:20.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:20.723" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:09:20.722" endtime="20230107 11:09:20.723"/>
</kw>
<msg timestamp="20230107 11:09:20.724" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:09:15.159" endtime="20230107 11:09:20.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:09:20.724" endtime="20230107 11:09:20.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:20.730" level="INFO">Running command 'ozone sh key get --force o3://om:9862/46106-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:28.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:28.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:20.727" endtime="20230107 11:09:28.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:28.178" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:28.177" endtime="20230107 11:09:28.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:28.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:28.178" endtime="20230107 11:09:28.179"/>
</kw>
<status status="PASS" starttime="20230107 11:09:20.726" endtime="20230107 11:09:28.180"/>
</kw>
<msg timestamp="20230107 11:09:28.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:20.726" endtime="20230107 11:09:28.181"/>
</kw>
<msg timestamp="20230107 11:09:28.182" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:09:20.725" endtime="20230107 11:09:28.182"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:09:28.182" endtime="20230107 11:09:28.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:28.189" level="INFO">Running command 'ozone sh key info o3://om:9862/46106-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:33.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:33.855" level="INFO">${output} = {
  "volumeName": "46106-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:08:10.695Z",
  "modificationTime": "2023-01-07T11:08:13.637Z",
  "re...</msg>
<status status="PASS" starttime="20230107 11:09:28.186" endtime="20230107 11:09:33.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:33.856" level="INFO">{
  "volumeName": "46106-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:08:10.695Z",
  "modificationTime": "2023-01-07T11:08:13.637Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230107 11:09:33.855" endtime="20230107 11:09:33.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:33.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:33.856" endtime="20230107 11:09:33.857"/>
</kw>
<status status="PASS" starttime="20230107 11:09:28.185" endtime="20230107 11:09:33.857"/>
</kw>
<msg timestamp="20230107 11:09:33.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:28.185" endtime="20230107 11:09:33.858"/>
</kw>
<msg timestamp="20230107 11:09:33.858" level="INFO">${result} = {
  "volumeName": "46106-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:08:10.695Z",
  "modificationTime": "2023-01-07T11:08:13.637Z",
  "re...</msg>
<status status="PASS" starttime="20230107 11:09:28.183" endtime="20230107 11:09:33.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:09:33.859" endtime="20230107 11:09:33.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:33.863" level="INFO">Running command 'ozone sh key list o3://om:9862/46106-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:39.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:39.616" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230107 11:09:33.861" endtime="20230107 11:09:39.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:39.618" level="INFO">key1</msg>
<status status="PASS" starttime="20230107 11:09:39.617" endtime="20230107 11:09:39.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:39.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:39.618" endtime="20230107 11:09:39.619"/>
</kw>
<status status="PASS" starttime="20230107 11:09:33.860" endtime="20230107 11:09:39.620"/>
</kw>
<msg timestamp="20230107 11:09:39.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:33.860" endtime="20230107 11:09:39.620"/>
</kw>
<msg timestamp="20230107 11:09:39.621" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230107 11:09:33.859" endtime="20230107 11:09:39.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:09:39.621" endtime="20230107 11:09:39.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:39.626" level="INFO">Running command 'ozone sh key rename o3://om:9862/46106-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:45.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:45.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:39.624" endtime="20230107 11:09:45.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:45.753" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:45.752" endtime="20230107 11:09:45.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:45.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:45.754" endtime="20230107 11:09:45.754"/>
</kw>
<status status="PASS" starttime="20230107 11:09:39.623" endtime="20230107 11:09:45.755"/>
</kw>
<msg timestamp="20230107 11:09:45.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:39.622" endtime="20230107 11:09:45.756"/>
</kw>
<status status="PASS" starttime="20230107 11:09:39.622" endtime="20230107 11:09:45.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:45.762" level="INFO">Running command 'ozone sh key list o3://om:9862/46106-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:51.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:51.707" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230107 11:09:45.759" endtime="20230107 11:09:51.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:51.708" level="INFO">key2</msg>
<status status="PASS" starttime="20230107 11:09:51.707" endtime="20230107 11:09:51.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:51.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:51.708" endtime="20230107 11:09:51.709"/>
</kw>
<status status="PASS" starttime="20230107 11:09:45.758" endtime="20230107 11:09:51.710"/>
</kw>
<msg timestamp="20230107 11:09:51.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:45.758" endtime="20230107 11:09:51.714"/>
</kw>
<msg timestamp="20230107 11:09:51.714" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230107 11:09:45.756" endtime="20230107 11:09:51.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:09:51.715" endtime="20230107 11:09:51.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:51.720" level="INFO">Running command 'ozone sh key delete o3://om:9862/46106-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:09:57.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:09:57.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:51.717" endtime="20230107 11:09:57.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:09:57.412" level="INFO"/>
<status status="PASS" starttime="20230107 11:09:57.411" endtime="20230107 11:09:57.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:09:57.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:09:57.413" endtime="20230107 11:09:57.413"/>
</kw>
<status status="PASS" starttime="20230107 11:09:51.716" endtime="20230107 11:09:57.414"/>
</kw>
<msg timestamp="20230107 11:09:57.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:51.716" endtime="20230107 11:09:57.415"/>
</kw>
<status status="PASS" starttime="20230107 11:09:51.715" endtime="20230107 11:09:57.415"/>
</kw>
<status status="PASS" starttime="20230107 11:08:05.645" endtime="20230107 11:09:57.415"/>
</kw>
<status status="PASS" starttime="20230107 11:08:05.644" endtime="20230107 11:09:57.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:09:57.420" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/46106-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:03.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:03.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:09:57.418" endtime="20230107 11:10:03.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:03.277" level="INFO"/>
<status status="PASS" starttime="20230107 11:10:03.276" endtime="20230107 11:10:03.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:03.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:03.277" endtime="20230107 11:10:03.278"/>
</kw>
<status status="PASS" starttime="20230107 11:09:57.417" endtime="20230107 11:10:03.278"/>
</kw>
<msg timestamp="20230107 11:10:03.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:09:57.416" endtime="20230107 11:10:03.279"/>
</kw>
<status status="PASS" starttime="20230107 11:09:57.416" endtime="20230107 11:10:03.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:03.285" level="INFO">Running command 'ozone sh volume info o3://om:9862/46106-with-host | jq -r '. | select(.name=="46106-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:09.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:09.263" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:10:03.282" endtime="20230107 11:10:09.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:09.265" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:10:09.264" endtime="20230107 11:10:09.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:09.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:09.265" endtime="20230107 11:10:09.266"/>
</kw>
<status status="PASS" starttime="20230107 11:10:03.281" endtime="20230107 11:10:09.266"/>
</kw>
<msg timestamp="20230107 11:10:09.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:03.281" endtime="20230107 11:10:09.267"/>
</kw>
<msg timestamp="20230107 11:10:09.267" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:10:03.280" endtime="20230107 11:10:09.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:10:09.267" endtime="20230107 11:10:09.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:09.276" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/46106-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:15.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:15.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:10:09.273" endtime="20230107 11:10:15.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:15.081" level="INFO"/>
<status status="PASS" starttime="20230107 11:10:15.080" endtime="20230107 11:10:15.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:15.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:15.082" endtime="20230107 11:10:15.083"/>
</kw>
<status status="PASS" starttime="20230107 11:10:09.272" endtime="20230107 11:10:15.083"/>
</kw>
<msg timestamp="20230107 11:10:15.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:09.270" endtime="20230107 11:10:15.084"/>
</kw>
<status status="PASS" starttime="20230107 11:10:09.268" endtime="20230107 11:10:15.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:15.089" level="INFO">Running command 'ozone sh volume info o3://om:9862/46106-with-host | jq -r '. | select(.name=="46106-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:21.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:21.079" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:10:15.087" endtime="20230107 11:10:21.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:21.080" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:10:21.079" endtime="20230107 11:10:21.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:21.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:21.081" endtime="20230107 11:10:21.081"/>
</kw>
<status status="PASS" starttime="20230107 11:10:15.086" endtime="20230107 11:10:21.082"/>
</kw>
<msg timestamp="20230107 11:10:21.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:15.086" endtime="20230107 11:10:21.082"/>
</kw>
<msg timestamp="20230107 11:10:21.083" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:10:15.084" endtime="20230107 11:10:21.083"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:10:21.083" endtime="20230107 11:10:21.083"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:21.088" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/46106-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:26.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:26.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:10:21.085" endtime="20230107 11:10:26.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:26.592" level="INFO"/>
<status status="PASS" starttime="20230107 11:10:26.591" endtime="20230107 11:10:26.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:26.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:26.592" endtime="20230107 11:10:26.593"/>
</kw>
<status status="PASS" starttime="20230107 11:10:21.085" endtime="20230107 11:10:26.594"/>
</kw>
<msg timestamp="20230107 11:10:26.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:21.084" endtime="20230107 11:10:26.594"/>
</kw>
<status status="PASS" starttime="20230107 11:10:21.083" endtime="20230107 11:10:26.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:26.601" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:32.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:32.585" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:10:26.598" endtime="20230107 11:10:32.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:32.586" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:10:32.585" endtime="20230107 11:10:32.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:32.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:32.587" endtime="20230107 11:10:32.588"/>
</kw>
<status status="PASS" starttime="20230107 11:10:26.597" endtime="20230107 11:10:32.588"/>
</kw>
<msg timestamp="20230107 11:10:32.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:26.596" endtime="20230107 11:10:32.590"/>
</kw>
<msg timestamp="20230107 11:10:32.590" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:10:26.595" endtime="20230107 11:10:32.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:10:32.590" endtime="20230107 11:10:32.591"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:32.596" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/46106-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:38.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:38.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:10:32.593" endtime="20230107 11:10:38.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:38.268" level="INFO"/>
<status status="PASS" starttime="20230107 11:10:38.267" endtime="20230107 11:10:38.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:38.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:38.269" endtime="20230107 11:10:38.270"/>
</kw>
<status status="PASS" starttime="20230107 11:10:32.592" endtime="20230107 11:10:38.270"/>
</kw>
<msg timestamp="20230107 11:10:38.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:32.592" endtime="20230107 11:10:38.271"/>
</kw>
<status status="PASS" starttime="20230107 11:10:32.591" endtime="20230107 11:10:38.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:38.277" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:44.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:44.262" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:10:38.274" endtime="20230107 11:10:44.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:44.264" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:10:44.263" endtime="20230107 11:10:44.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:44.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:44.264" endtime="20230107 11:10:44.265"/>
</kw>
<status status="PASS" starttime="20230107 11:10:38.273" endtime="20230107 11:10:44.265"/>
</kw>
<msg timestamp="20230107 11:10:44.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:38.273" endtime="20230107 11:10:44.266"/>
</kw>
<msg timestamp="20230107 11:10:44.267" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:10:38.272" endtime="20230107 11:10:44.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:10:44.267" endtime="20230107 11:10:44.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:44.272" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/46106-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:49.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:49.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:10:44.270" endtime="20230107 11:10:49.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:49.808" level="INFO"/>
<status status="PASS" starttime="20230107 11:10:49.806" endtime="20230107 11:10:49.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:49.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:49.808" endtime="20230107 11:10:49.809"/>
</kw>
<status status="PASS" starttime="20230107 11:10:44.269" endtime="20230107 11:10:49.809"/>
</kw>
<msg timestamp="20230107 11:10:49.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:44.269" endtime="20230107 11:10:49.810"/>
</kw>
<status status="PASS" starttime="20230107 11:10:44.268" endtime="20230107 11:10:49.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:49.816" level="INFO">Running command 'ozone sh volume delete o3://om:9862/46106-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:10:55.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:10:55.587" level="INFO">${output} = Volume 46106-with-host is deleted</msg>
<status status="PASS" starttime="20230107 11:10:49.813" endtime="20230107 11:10:55.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:10:55.588" level="INFO">Volume 46106-with-host is deleted</msg>
<status status="PASS" starttime="20230107 11:10:55.587" endtime="20230107 11:10:55.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:10:55.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:10:55.589" endtime="20230107 11:10:55.590"/>
</kw>
<status status="PASS" starttime="20230107 11:10:49.812" endtime="20230107 11:10:55.590"/>
</kw>
<msg timestamp="20230107 11:10:55.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:49.812" endtime="20230107 11:10:55.592"/>
</kw>
<status status="PASS" starttime="20230107 11:10:49.811" endtime="20230107 11:10:55.592"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:10:55.598" level="INFO">Running command 'ozone sh volume create o3://om:9862/46106-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:01.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:01.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:10:55.595" endtime="20230107 11:11:01.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:01.567" level="INFO"/>
<status status="PASS" starttime="20230107 11:11:01.566" endtime="20230107 11:11:01.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:01.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:01.568" endtime="20230107 11:11:01.569"/>
</kw>
<status status="PASS" starttime="20230107 11:10:55.594" endtime="20230107 11:11:01.569"/>
</kw>
<msg timestamp="20230107 11:11:01.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:10:55.593" endtime="20230107 11:11:01.570"/>
</kw>
<status status="PASS" starttime="20230107 11:10:55.592" endtime="20230107 11:11:01.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:01.579" level="INFO">Running command 'ozone sh volume info o3://om:9862/46106-with-host | jq -r '. | select(.name=="46106-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:07.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:07.629" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:11:01.574" endtime="20230107 11:11:07.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:07.632" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:11:07.630" endtime="20230107 11:11:07.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:07.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:07.632" endtime="20230107 11:11:07.633"/>
</kw>
<status status="PASS" starttime="20230107 11:11:01.573" endtime="20230107 11:11:07.633"/>
</kw>
<msg timestamp="20230107 11:11:07.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:01.572" endtime="20230107 11:11:07.634"/>
</kw>
<msg timestamp="20230107 11:11:07.635" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:11:01.571" endtime="20230107 11:11:07.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:11:07.635" endtime="20230107 11:11:07.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:07.642" level="INFO">Running command 'ozone sh volume info o3://om:9862/46106-with-host | jq -r '. | select(.name=="46106-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:13.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:13.936" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:11:07.639" endtime="20230107 11:11:13.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:13.938" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:11:13.937" endtime="20230107 11:11:13.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:13.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:13.938" endtime="20230107 11:11:13.939"/>
</kw>
<status status="PASS" starttime="20230107 11:11:07.638" endtime="20230107 11:11:13.940"/>
</kw>
<msg timestamp="20230107 11:11:13.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:07.638" endtime="20230107 11:11:13.940"/>
</kw>
<msg timestamp="20230107 11:11:13.941" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:11:07.636" endtime="20230107 11:11:13.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:11:13.941" endtime="20230107 11:11:13.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:13.947" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46106-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:19.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:19.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:11:13.944" endtime="20230107 11:11:19.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:19.778" level="INFO"/>
<status status="PASS" starttime="20230107 11:11:19.777" endtime="20230107 11:11:19.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:19.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:19.778" endtime="20230107 11:11:19.779"/>
</kw>
<status status="PASS" starttime="20230107 11:11:13.943" endtime="20230107 11:11:19.780"/>
</kw>
<msg timestamp="20230107 11:11:19.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:13.943" endtime="20230107 11:11:19.780"/>
</kw>
<status status="PASS" starttime="20230107 11:11:13.942" endtime="20230107 11:11:19.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:19.786" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:25.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:25.690" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:11:19.783" endtime="20230107 11:11:25.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:25.692" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:11:25.691" endtime="20230107 11:11:25.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:25.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:25.693" endtime="20230107 11:11:25.694"/>
</kw>
<status status="PASS" starttime="20230107 11:11:19.782" endtime="20230107 11:11:25.694"/>
</kw>
<msg timestamp="20230107 11:11:25.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:19.782" endtime="20230107 11:11:25.695"/>
</kw>
<msg timestamp="20230107 11:11:25.696" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:11:19.781" endtime="20230107 11:11:25.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:11:25.696" endtime="20230107 11:11:25.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:25.702" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46106-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:32.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:32.061" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:11:25.699" endtime="20230107 11:11:32.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:32.063" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:11:32.061" endtime="20230107 11:11:32.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:32.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:32.063" endtime="20230107 11:11:32.064"/>
</kw>
<status status="PASS" starttime="20230107 11:11:25.698" endtime="20230107 11:11:32.065"/>
</kw>
<msg timestamp="20230107 11:11:32.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:25.698" endtime="20230107 11:11:32.065"/>
</kw>
<msg timestamp="20230107 11:11:32.066" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:11:25.697" endtime="20230107 11:11:32.066"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:11:32.066" endtime="20230107 11:11:32.067"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:32.073" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/46106-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:38.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:38.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:11:32.069" endtime="20230107 11:11:38.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:38.287" level="INFO"/>
<status status="PASS" starttime="20230107 11:11:38.285" endtime="20230107 11:11:38.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:38.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:38.287" endtime="20230107 11:11:38.288"/>
</kw>
<status status="PASS" starttime="20230107 11:11:32.068" endtime="20230107 11:11:38.288"/>
</kw>
<msg timestamp="20230107 11:11:38.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:32.068" endtime="20230107 11:11:38.289"/>
</kw>
<status status="PASS" starttime="20230107 11:11:32.067" endtime="20230107 11:11:38.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:38.294" level="INFO">Running command 'ozone sh volume delete o3://om:9862/46106-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:43.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:43.873" level="INFO">${output} = Volume 46106-with-host is deleted</msg>
<status status="PASS" starttime="20230107 11:11:38.292" endtime="20230107 11:11:43.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:43.875" level="INFO">Volume 46106-with-host is deleted</msg>
<status status="PASS" starttime="20230107 11:11:43.874" endtime="20230107 11:11:43.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:43.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:43.875" endtime="20230107 11:11:43.877"/>
</kw>
<status status="PASS" starttime="20230107 11:11:38.291" endtime="20230107 11:11:43.878"/>
</kw>
<msg timestamp="20230107 11:11:43.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:38.290" endtime="20230107 11:11:43.879"/>
</kw>
<status status="PASS" starttime="20230107 11:11:38.289" endtime="20230107 11:11:43.880"/>
</kw>
<status status="PASS" starttime="20230107 11:06:46.563" endtime="20230107 11:11:43.880"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:06:46.460" endtime="20230107 11:11:43.880"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:43.889" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:43.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:43.895" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:11:43.887" endtime="20230107 11:11:43.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:43.896" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:11:43.895" endtime="20230107 11:11:43.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:43.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:43.897" endtime="20230107 11:11:43.897"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.886" endtime="20230107 11:11:43.898"/>
</kw>
<msg timestamp="20230107 11:11:43.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:43.885" endtime="20230107 11:11:43.898"/>
</kw>
<msg timestamp="20230107 11:11:43.899" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:11:43.885" endtime="20230107 11:11:43.899"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:11:43.900" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:11:43.899" endtime="20230107 11:11:43.900"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:43.906" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:43.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:43.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:11:43.904" endtime="20230107 11:11:43.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:43.987" level="INFO"/>
<status status="PASS" starttime="20230107 11:11:43.985" endtime="20230107 11:11:43.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:43.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:43.987" endtime="20230107 11:11:43.988"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.902" endtime="20230107 11:11:43.988"/>
</kw>
<msg timestamp="20230107 11:11:43.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:11:43.901" endtime="20230107 11:11:43.989"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.900" endtime="20230107 11:11:43.989"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.900" endtime="20230107 11:11:43.990"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.884" endtime="20230107 11:11:43.990"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.883" endtime="20230107 11:11:43.990"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:43.995" level="INFO">Running command 'ozone sh volume create o3://om:9862/46106-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:49.755" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:11:49.756" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230107 11:11:43.992" endtime="20230107 11:11:49.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:49.757" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230107 11:11:49.756" endtime="20230107 11:11:49.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:49.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:49.758" endtime="20230107 11:11:49.758"/>
</kw>
<msg timestamp="20230107 11:11:49.759" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230107 11:11:43.991" endtime="20230107 11:11:49.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:11:49.759" endtime="20230107 11:11:49.760"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:49.764" level="INFO">Running command 'ozone sh volume create o3://om:9862/46106-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:11:55.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:11:55.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:11:49.761" endtime="20230107 11:11:55.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:11:55.288" level="INFO"/>
<status status="PASS" starttime="20230107 11:11:55.287" endtime="20230107 11:11:55.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:11:55.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:11:55.288" endtime="20230107 11:11:55.289"/>
</kw>
<status status="PASS" starttime="20230107 11:11:49.760" endtime="20230107 11:11:55.289"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:11:55.294" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46106-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:00.618" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:12:00.618" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230107 11:11:55.291" endtime="20230107 11:12:00.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:00.619" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230107 11:12:00.618" endtime="20230107 11:12:00.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:00.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:00.620" endtime="20230107 11:12:00.620"/>
</kw>
<msg timestamp="20230107 11:12:00.621" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20230107 11:11:55.290" endtime="20230107 11:12:00.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:12:00.621" endtime="20230107 11:12:00.622"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:00.626" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46106-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:03.862" level="INFO">${rc} = 2</msg>
<msg timestamp="20230107 11:12:03.863" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230107 11:12:00.623" endtime="20230107 11:12:03.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:03.864" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230107 11:12:03.863" endtime="20230107 11:12:03.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:03.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:03.865" endtime="20230107 11:12:03.865"/>
</kw>
<msg timestamp="20230107 11:12:03.866" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230107 11:12:00.622" endtime="20230107 11:12:03.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:12:03.866" endtime="20230107 11:12:03.866"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:03.870" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46106-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:09.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:09.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:12:03.867" endtime="20230107 11:12:09.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:09.364" level="INFO"/>
<status status="PASS" starttime="20230107 11:12:09.363" endtime="20230107 11:12:09.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:09.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:09.364" endtime="20230107 11:12:09.365"/>
</kw>
<status status="PASS" starttime="20230107 11:12:03.866" endtime="20230107 11:12:09.365"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:09.369" level="INFO">Running command 'ozone sh key info o3://om:9862/46106-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:15.278" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:12:15.278" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230107 11:12:09.366" endtime="20230107 11:12:15.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:15.281" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230107 11:12:15.279" endtime="20230107 11:12:15.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:15.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:15.283" endtime="20230107 11:12:15.283"/>
</kw>
<msg timestamp="20230107 11:12:15.284" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230107 11:12:09.365" endtime="20230107 11:12:15.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:12:15.284" endtime="20230107 11:12:15.285"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:15.289" level="INFO">Running command 'ozone sh key put o3://om:9862/46106-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:18.310" level="INFO">${rc} = 2</msg>
<msg timestamp="20230107 11:12:18.311" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230107 11:12:15.286" endtime="20230107 11:12:18.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:18.313" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230107 11:12:18.311" endtime="20230107 11:12:18.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:18.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:18.313" endtime="20230107 11:12:18.314"/>
</kw>
<msg timestamp="20230107 11:12:18.314" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230107 11:12:15.285" endtime="20230107 11:12:18.315"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:18.319" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/46106-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:24.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:24.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:12:18.316" endtime="20230107 11:12:24.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:24.750" level="INFO"/>
<status status="PASS" starttime="20230107 11:12:24.749" endtime="20230107 11:12:24.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:24.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:24.750" endtime="20230107 11:12:24.751"/>
</kw>
<status status="PASS" starttime="20230107 11:12:18.315" endtime="20230107 11:12:24.752"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:24.756" level="INFO">Running command 'ozone sh volume delete o3://om:9862/46106-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:30.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:30.643" level="INFO">${output} = Volume 46106-with-errors is deleted</msg>
<status status="PASS" starttime="20230107 11:12:24.753" endtime="20230107 11:12:30.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:30.645" level="INFO">Volume 46106-with-errors is deleted</msg>
<status status="PASS" starttime="20230107 11:12:30.644" endtime="20230107 11:12:30.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:30.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:30.645" endtime="20230107 11:12:30.646"/>
</kw>
<status status="PASS" starttime="20230107 11:12:24.752" endtime="20230107 11:12:30.646"/>
</kw>
<status status="PASS" starttime="20230107 11:11:43.991" endtime="20230107 11:12:30.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:11:43.882" endtime="20230107 11:12:30.647"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:30.658" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:30.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:30.662" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:12:30.653" endtime="20230107 11:12:30.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:30.664" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:12:30.663" endtime="20230107 11:12:30.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:30.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:30.665" endtime="20230107 11:12:30.666"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.652" endtime="20230107 11:12:30.666"/>
</kw>
<msg timestamp="20230107 11:12:30.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:30.652" endtime="20230107 11:12:30.667"/>
</kw>
<msg timestamp="20230107 11:12:30.667" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:12:30.651" endtime="20230107 11:12:30.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:12:30.668" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:12:30.668" endtime="20230107 11:12:30.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:30.674" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:30.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:30.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:12:30.671" endtime="20230107 11:12:30.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:30.744" level="INFO"/>
<status status="PASS" starttime="20230107 11:12:30.743" endtime="20230107 11:12:30.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:30.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:30.745" endtime="20230107 11:12:30.746"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.670" endtime="20230107 11:12:30.746"/>
</kw>
<msg timestamp="20230107 11:12:30.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:30.670" endtime="20230107 11:12:30.747"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.669" endtime="20230107 11:12:30.747"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.668" endtime="20230107 11:12:30.747"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.651" endtime="20230107 11:12:30.748"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.650" endtime="20230107 11:12:30.748"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:30.754" level="INFO">Running command 'ozone sh volume create o3://om:9862/46106-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:37.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:37.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:12:30.751" endtime="20230107 11:12:37.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:37.017" level="INFO"/>
<status status="PASS" starttime="20230107 11:12:37.016" endtime="20230107 11:12:37.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:37.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:37.018" endtime="20230107 11:12:37.019"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.750" endtime="20230107 11:12:37.020"/>
</kw>
<msg timestamp="20230107 11:12:37.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:30.750" endtime="20230107 11:12:37.021"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.749" endtime="20230107 11:12:37.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:37.027" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46106-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:43.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:43.119" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:12:37.024" endtime="20230107 11:12:43.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:43.121" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:12:43.120" endtime="20230107 11:12:43.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:43.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:43.122" endtime="20230107 11:12:43.123"/>
</kw>
<status status="PASS" starttime="20230107 11:12:37.023" endtime="20230107 11:12:43.123"/>
</kw>
<msg timestamp="20230107 11:12:43.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:37.023" endtime="20230107 11:12:43.124"/>
</kw>
<msg timestamp="20230107 11:12:43.125" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:12:37.021" endtime="20230107 11:12:43.125"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:12:43.125" endtime="20230107 11:12:43.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:43.133" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/46106-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:48.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:48.626" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230107 11:12:43.130" endtime="20230107 11:12:48.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:48.628" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230107 11:12:48.627" endtime="20230107 11:12:48.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:48.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:48.629" endtime="20230107 11:12:48.630"/>
</kw>
<status status="PASS" starttime="20230107 11:12:43.129" endtime="20230107 11:12:48.630"/>
</kw>
<msg timestamp="20230107 11:12:48.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:43.128" endtime="20230107 11:12:48.631"/>
</kw>
<msg timestamp="20230107 11:12:48.632" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230107 11:12:43.127" endtime="20230107 11:12:48.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:48.638" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46106-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:54.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:54.766" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230107 11:12:48.635" endtime="20230107 11:12:54.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:54.767" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:12:54.766" endtime="20230107 11:12:54.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:54.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:54.768" endtime="20230107 11:12:54.768"/>
</kw>
<status status="PASS" starttime="20230107 11:12:48.634" endtime="20230107 11:12:54.769"/>
</kw>
<msg timestamp="20230107 11:12:54.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:48.634" endtime="20230107 11:12:54.769"/>
</kw>
<msg timestamp="20230107 11:12:54.770" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230107 11:12:48.633" endtime="20230107 11:12:54.770"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:12:54.770" endtime="20230107 11:12:54.771"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:12:54.775" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/46106-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:12:59.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:12:59.993" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:12:54.773" endtime="20230107 11:12:59.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:12:59.994" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:12:59.993" endtime="20230107 11:12:59.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:12:59.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:12:59.994" endtime="20230107 11:12:59.995"/>
</kw>
<status status="PASS" starttime="20230107 11:12:54.772" endtime="20230107 11:12:59.996"/>
</kw>
<msg timestamp="20230107 11:12:59.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:54.772" endtime="20230107 11:12:59.996"/>
</kw>
<msg timestamp="20230107 11:12:59.996" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:12:54.771" endtime="20230107 11:12:59.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:00.003" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46106-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:06.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:06.276" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230107 11:12:59.998" endtime="20230107 11:13:06.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:06.278" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:13:06.277" endtime="20230107 11:13:06.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:06.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:06.278" endtime="20230107 11:13:06.279"/>
</kw>
<status status="PASS" starttime="20230107 11:12:59.998" endtime="20230107 11:13:06.279"/>
</kw>
<msg timestamp="20230107 11:13:06.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:12:59.997" endtime="20230107 11:13:06.280"/>
</kw>
<msg timestamp="20230107 11:13:06.280" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20230107 11:12:59.997" endtime="20230107 11:13:06.280"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:13:06.280" endtime="20230107 11:13:06.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:06.286" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/46106-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:11.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:11.730" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:13:06.283" endtime="20230107 11:13:11.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:11.732" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:13:11.731" endtime="20230107 11:13:11.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:11.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:11.732" endtime="20230107 11:13:11.733"/>
</kw>
<status status="PASS" starttime="20230107 11:13:06.283" endtime="20230107 11:13:11.734"/>
</kw>
<msg timestamp="20230107 11:13:11.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:06.282" endtime="20230107 11:13:11.736"/>
</kw>
<msg timestamp="20230107 11:13:11.736" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:13:06.281" endtime="20230107 11:13:11.736"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:11.741" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46106-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:17.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:17.635" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230107 11:13:11.739" endtime="20230107 11:13:17.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:17.636" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:13:17.636" endtime="20230107 11:13:17.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:17.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:17.637" endtime="20230107 11:13:17.637"/>
</kw>
<status status="PASS" starttime="20230107 11:13:11.738" endtime="20230107 11:13:17.638"/>
</kw>
<msg timestamp="20230107 11:13:17.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:11.738" endtime="20230107 11:13:17.639"/>
</kw>
<msg timestamp="20230107 11:13:17.639" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230107 11:13:11.737" endtime="20230107 11:13:17.639"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:13:17.640" endtime="20230107 11:13:17.640"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:13:17.640" endtime="20230107 11:13:17.641"/>
</kw>
<status status="PASS" starttime="20230107 11:12:30.748" endtime="20230107 11:13:17.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:12:30.649" endtime="20230107 11:13:17.642"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:17.650" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:17.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:17.655" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:13:17.648" endtime="20230107 11:13:17.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:17.656" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:13:17.655" endtime="20230107 11:13:17.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:17.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:17.656" endtime="20230107 11:13:17.657"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.646" endtime="20230107 11:13:17.657"/>
</kw>
<msg timestamp="20230107 11:13:17.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:17.646" endtime="20230107 11:13:17.658"/>
</kw>
<msg timestamp="20230107 11:13:17.658" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:13:17.645" endtime="20230107 11:13:17.659"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:13:17.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:13:17.659" endtime="20230107 11:13:17.660"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:17.664" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:17.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:17.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:13:17.662" endtime="20230107 11:13:17.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:17.741" level="INFO"/>
<status status="PASS" starttime="20230107 11:13:17.741" endtime="20230107 11:13:17.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:17.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:17.742" endtime="20230107 11:13:17.742"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.661" endtime="20230107 11:13:17.743"/>
</kw>
<msg timestamp="20230107 11:13:17.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:17.661" endtime="20230107 11:13:17.744"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.660" endtime="20230107 11:13:17.744"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.660" endtime="20230107 11:13:17.744"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.645" endtime="20230107 11:13:17.744"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.644" endtime="20230107 11:13:17.744"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:17.749" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46106-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:23.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:23.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:13:17.747" endtime="20230107 11:13:23.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:23.454" level="INFO"/>
<status status="PASS" starttime="20230107 11:13:23.452" endtime="20230107 11:13:23.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:23.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:23.454" endtime="20230107 11:13:23.455"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.746" endtime="20230107 11:13:23.455"/>
</kw>
<msg timestamp="20230107 11:13:23.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:17.746" endtime="20230107 11:13:23.456"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.745" endtime="20230107 11:13:23.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:23.461" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46106-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:29.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:29.550" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:13:23.459" endtime="20230107 11:13:29.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:29.553" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:13:29.551" endtime="20230107 11:13:29.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:29.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:29.553" endtime="20230107 11:13:29.555"/>
</kw>
<status status="PASS" starttime="20230107 11:13:23.458" endtime="20230107 11:13:29.556"/>
</kw>
<msg timestamp="20230107 11:13:29.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:23.458" endtime="20230107 11:13:29.557"/>
</kw>
<msg timestamp="20230107 11:13:29.557" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:13:23.457" endtime="20230107 11:13:29.557"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:13:29.557" endtime="20230107 11:13:29.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:29.564" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/46106-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:35.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:35.189" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230107 11:13:29.560" endtime="20230107 11:13:35.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:35.190" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230107 11:13:35.189" endtime="20230107 11:13:35.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:35.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:35.191" endtime="20230107 11:13:35.192"/>
</kw>
<status status="PASS" starttime="20230107 11:13:29.560" endtime="20230107 11:13:35.192"/>
</kw>
<msg timestamp="20230107 11:13:35.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:29.559" endtime="20230107 11:13:35.193"/>
</kw>
<msg timestamp="20230107 11:13:35.193" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230107 11:13:29.558" endtime="20230107 11:13:35.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:35.204" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46106-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:41.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:41.839" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:13:35.195" endtime="20230107 11:13:41.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:41.841" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:13:41.840" endtime="20230107 11:13:41.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:41.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:41.841" endtime="20230107 11:13:41.842"/>
</kw>
<status status="PASS" starttime="20230107 11:13:35.195" endtime="20230107 11:13:41.843"/>
</kw>
<msg timestamp="20230107 11:13:41.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:35.194" endtime="20230107 11:13:41.844"/>
</kw>
<msg timestamp="20230107 11:13:41.844" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:13:35.193" endtime="20230107 11:13:41.844"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:13:41.845" endtime="20230107 11:13:41.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:41.855" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/46106-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:47.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:47.760" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:13:41.849" endtime="20230107 11:13:47.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:47.762" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:13:47.761" endtime="20230107 11:13:47.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:47.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:47.762" endtime="20230107 11:13:47.763"/>
</kw>
<status status="PASS" starttime="20230107 11:13:41.848" endtime="20230107 11:13:47.764"/>
</kw>
<msg timestamp="20230107 11:13:47.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:41.848" endtime="20230107 11:13:47.765"/>
</kw>
<msg timestamp="20230107 11:13:47.765" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:13:41.846" endtime="20230107 11:13:47.765"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:47.771" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46106-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:53.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:53.949" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:13:47.768" endtime="20230107 11:13:53.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:53.950" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:13:53.949" endtime="20230107 11:13:53.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:53.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:53.950" endtime="20230107 11:13:53.951"/>
</kw>
<status status="PASS" starttime="20230107 11:13:47.767" endtime="20230107 11:13:53.952"/>
</kw>
<msg timestamp="20230107 11:13:53.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:47.767" endtime="20230107 11:13:53.953"/>
</kw>
<msg timestamp="20230107 11:13:53.953" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:13:47.766" endtime="20230107 11:13:53.953"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:13:53.953" endtime="20230107 11:13:53.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:53.960" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/46106-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:13:59.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:13:59.860" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:13:53.957" endtime="20230107 11:13:59.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:13:59.862" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:13:59.861" endtime="20230107 11:13:59.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:13:59.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:13:59.862" endtime="20230107 11:13:59.863"/>
</kw>
<status status="PASS" starttime="20230107 11:13:53.957" endtime="20230107 11:13:59.863"/>
</kw>
<msg timestamp="20230107 11:13:59.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:53.956" endtime="20230107 11:13:59.864"/>
</kw>
<msg timestamp="20230107 11:13:59.864" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:13:53.955" endtime="20230107 11:13:59.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:13:59.870" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46106-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:05.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:05.371" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230107 11:13:59.867" endtime="20230107 11:14:05.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:05.372" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:14:05.372" endtime="20230107 11:14:05.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:05.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:05.373" endtime="20230107 11:14:05.373"/>
</kw>
<status status="PASS" starttime="20230107 11:13:59.866" endtime="20230107 11:14:05.374"/>
</kw>
<msg timestamp="20230107 11:14:05.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:13:59.865" endtime="20230107 11:14:05.374"/>
</kw>
<msg timestamp="20230107 11:14:05.375" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230107 11:13:59.864" endtime="20230107 11:14:05.375"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:05.375" endtime="20230107 11:14:05.375"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:05.376" endtime="20230107 11:14:05.376"/>
</kw>
<status status="PASS" starttime="20230107 11:13:17.744" endtime="20230107 11:14:05.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:13:17.643" endtime="20230107 11:14:05.377"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:05.385" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:05.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:05.390" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:14:05.383" endtime="20230107 11:14:05.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:05.391" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:14:05.390" endtime="20230107 11:14:05.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:05.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:05.391" endtime="20230107 11:14:05.392"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.382" endtime="20230107 11:14:05.392"/>
</kw>
<msg timestamp="20230107 11:14:05.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:05.382" endtime="20230107 11:14:05.393"/>
</kw>
<msg timestamp="20230107 11:14:05.393" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:14:05.381" endtime="20230107 11:14:05.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:14:05.394" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:14:05.393" endtime="20230107 11:14:05.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:05.399" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:05.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:05.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:14:05.396" endtime="20230107 11:14:05.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:05.430" level="INFO"/>
<status status="PASS" starttime="20230107 11:14:05.428" endtime="20230107 11:14:05.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:05.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:05.430" endtime="20230107 11:14:05.431"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.396" endtime="20230107 11:14:05.432"/>
</kw>
<msg timestamp="20230107 11:14:05.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:05.395" endtime="20230107 11:14:05.432"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.395" endtime="20230107 11:14:05.433"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.394" endtime="20230107 11:14:05.433"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.380" endtime="20230107 11:14:05.433"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.380" endtime="20230107 11:14:05.433"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:05.441" level="INFO">Running command 'ozone sh key put o3://om:9862/46106-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:14.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:14.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:14:05.438" endtime="20230107 11:14:14.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:14.501" level="INFO"/>
<status status="PASS" starttime="20230107 11:14:14.500" endtime="20230107 11:14:14.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:14.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:14.501" endtime="20230107 11:14:14.502"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.436" endtime="20230107 11:14:14.502"/>
</kw>
<msg timestamp="20230107 11:14:14.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:05.436" endtime="20230107 11:14:14.503"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.435" endtime="20230107 11:14:14.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:14.508" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46106-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:20.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:20.405" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:14:14.505" endtime="20230107 11:14:20.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:20.407" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:14:20.406" endtime="20230107 11:14:20.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:20.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:20.407" endtime="20230107 11:14:20.408"/>
</kw>
<status status="PASS" starttime="20230107 11:14:14.505" endtime="20230107 11:14:20.408"/>
</kw>
<msg timestamp="20230107 11:14:20.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:14.504" endtime="20230107 11:14:20.408"/>
</kw>
<msg timestamp="20230107 11:14:20.409" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:14:14.504" endtime="20230107 11:14:20.409"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:20.409" endtime="20230107 11:14:20.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:20.415" level="INFO">Running command 'ozone sh key addacl o3://om:9862/46106-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:25.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:25.937" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 11:14:20.412" endtime="20230107 11:14:25.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:25.939" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 11:14:25.938" endtime="20230107 11:14:25.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:25.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:25.940" endtime="20230107 11:14:25.940"/>
</kw>
<status status="PASS" starttime="20230107 11:14:20.411" endtime="20230107 11:14:25.941"/>
</kw>
<msg timestamp="20230107 11:14:25.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:20.411" endtime="20230107 11:14:25.941"/>
</kw>
<msg timestamp="20230107 11:14:25.942" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230107 11:14:20.410" endtime="20230107 11:14:25.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:25.948" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46106-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:32.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:32.226" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:14:25.944" endtime="20230107 11:14:32.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:32.229" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:14:32.227" endtime="20230107 11:14:32.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:32.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:32.229" endtime="20230107 11:14:32.230"/>
</kw>
<status status="PASS" starttime="20230107 11:14:25.944" endtime="20230107 11:14:32.230"/>
</kw>
<msg timestamp="20230107 11:14:32.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:25.943" endtime="20230107 11:14:32.231"/>
</kw>
<msg timestamp="20230107 11:14:32.231" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:14:25.942" endtime="20230107 11:14:32.232"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:32.232" endtime="20230107 11:14:32.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:32.238" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/46106-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:37.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:37.800" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:14:32.236" endtime="20230107 11:14:37.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:37.802" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:14:37.801" endtime="20230107 11:14:37.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:37.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:37.802" endtime="20230107 11:14:37.803"/>
</kw>
<status status="PASS" starttime="20230107 11:14:32.235" endtime="20230107 11:14:37.804"/>
</kw>
<msg timestamp="20230107 11:14:37.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:32.235" endtime="20230107 11:14:37.805"/>
</kw>
<msg timestamp="20230107 11:14:37.805" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230107 11:14:32.233" endtime="20230107 11:14:37.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:37.810" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46106-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:43.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:43.652" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:14:37.807" endtime="20230107 11:14:43.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:43.653" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:14:43.652" endtime="20230107 11:14:43.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:43.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:43.654" endtime="20230107 11:14:43.655"/>
</kw>
<status status="PASS" starttime="20230107 11:14:37.806" endtime="20230107 11:14:43.655"/>
</kw>
<msg timestamp="20230107 11:14:43.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:37.806" endtime="20230107 11:14:43.656"/>
</kw>
<msg timestamp="20230107 11:14:43.656" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:14:37.805" endtime="20230107 11:14:43.656"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:43.656" endtime="20230107 11:14:43.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:43.662" level="INFO">Running command 'ozone sh key setacl o3://om:9862/46106-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:49.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:49.085" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:14:43.659" endtime="20230107 11:14:49.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:49.088" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:14:49.087" endtime="20230107 11:14:49.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:49.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:49.088" endtime="20230107 11:14:49.089"/>
</kw>
<status status="PASS" starttime="20230107 11:14:43.658" endtime="20230107 11:14:49.090"/>
</kw>
<msg timestamp="20230107 11:14:49.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:43.658" endtime="20230107 11:14:49.091"/>
</kw>
<msg timestamp="20230107 11:14:49.092" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:14:43.657" endtime="20230107 11:14:49.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:49.102" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46106-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:55.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:55.040" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230107 11:14:49.095" endtime="20230107 11:14:55.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:55.042" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:14:55.041" endtime="20230107 11:14:55.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:55.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:55.042" endtime="20230107 11:14:55.043"/>
</kw>
<status status="PASS" starttime="20230107 11:14:49.094" endtime="20230107 11:14:55.044"/>
</kw>
<msg timestamp="20230107 11:14:55.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:49.094" endtime="20230107 11:14:55.044"/>
</kw>
<msg timestamp="20230107 11:14:55.045" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230107 11:14:49.092" endtime="20230107 11:14:55.045"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:55.045" endtime="20230107 11:14:55.046"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:14:55.046" endtime="20230107 11:14:55.047"/>
</kw>
<status status="PASS" starttime="20230107 11:14:05.434" endtime="20230107 11:14:55.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:14:05.378" endtime="20230107 11:14:55.048"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:55.058" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:55.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:55.063" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:14:55.054" endtime="20230107 11:14:55.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:55.065" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:14:55.064" endtime="20230107 11:14:55.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:55.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:55.066" endtime="20230107 11:14:55.067"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.053" endtime="20230107 11:14:55.067"/>
</kw>
<msg timestamp="20230107 11:14:55.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:55.053" endtime="20230107 11:14:55.068"/>
</kw>
<msg timestamp="20230107 11:14:55.069" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:14:55.052" endtime="20230107 11:14:55.069"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:14:55.070" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:14:55.069" endtime="20230107 11:14:55.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:55.076" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:14:55.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:14:55.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:14:55.072" endtime="20230107 11:14:55.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:14:55.119" level="INFO"/>
<status status="PASS" starttime="20230107 11:14:55.118" endtime="20230107 11:14:55.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:14:55.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:14:55.119" endtime="20230107 11:14:55.120"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.072" endtime="20230107 11:14:55.120"/>
</kw>
<msg timestamp="20230107 11:14:55.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:55.071" endtime="20230107 11:14:55.121"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.071" endtime="20230107 11:14:55.122"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.070" endtime="20230107 11:14:55.122"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.051" endtime="20230107 11:14:55.122"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.051" endtime="20230107 11:14:55.122"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:14:55.129" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/46106-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:00.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:00.769" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230107 11:14:55.125" endtime="20230107 11:15:00.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:00.771" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230107 11:15:00.770" endtime="20230107 11:15:00.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:00.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:00.771" endtime="20230107 11:15:00.772"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.125" endtime="20230107 11:15:00.773"/>
</kw>
<msg timestamp="20230107 11:15:00.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:14:55.124" endtime="20230107 11:15:00.774"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.123" endtime="20230107 11:15:00.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:00.781" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/46106-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:06.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:06.404" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230107 11:15:00.776" endtime="20230107 11:15:06.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:06.406" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:15:06.405" endtime="20230107 11:15:06.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:06.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:06.406" endtime="20230107 11:15:06.407"/>
</kw>
<status status="PASS" starttime="20230107 11:15:00.776" endtime="20230107 11:15:06.409"/>
</kw>
<msg timestamp="20230107 11:15:06.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:00.775" endtime="20230107 11:15:06.410"/>
</kw>
<msg timestamp="20230107 11:15:06.410" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230107 11:15:00.774" endtime="20230107 11:15:06.410"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:15:06.410" endtime="20230107 11:15:06.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:06.417" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/46106-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:12.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:12.101" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230107 11:15:06.414" endtime="20230107 11:15:12.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:12.103" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230107 11:15:12.102" endtime="20230107 11:15:12.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:12.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:12.103" endtime="20230107 11:15:12.104"/>
</kw>
<status status="PASS" starttime="20230107 11:15:06.413" endtime="20230107 11:15:12.105"/>
</kw>
<msg timestamp="20230107 11:15:12.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:06.413" endtime="20230107 11:15:12.106"/>
</kw>
<msg timestamp="20230107 11:15:12.106" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230107 11:15:06.412" endtime="20230107 11:15:12.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:12.112" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/46106-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:18.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:18.120" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230107 11:15:12.109" endtime="20230107 11:15:18.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:18.122" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:15:18.121" endtime="20230107 11:15:18.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:18.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:18.123" endtime="20230107 11:15:18.124"/>
</kw>
<status status="PASS" starttime="20230107 11:15:12.108" endtime="20230107 11:15:18.124"/>
</kw>
<msg timestamp="20230107 11:15:18.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:12.108" endtime="20230107 11:15:18.125"/>
</kw>
<msg timestamp="20230107 11:15:18.125" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230107 11:15:12.107" endtime="20230107 11:15:18.125"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:15:18.125" endtime="20230107 11:15:18.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:18.131" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/46106-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:23.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:23.785" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:15:18.129" endtime="20230107 11:15:23.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:23.786" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:15:23.785" endtime="20230107 11:15:23.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:23.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:23.786" endtime="20230107 11:15:23.787"/>
</kw>
<status status="PASS" starttime="20230107 11:15:18.128" endtime="20230107 11:15:23.787"/>
</kw>
<msg timestamp="20230107 11:15:23.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:18.128" endtime="20230107 11:15:23.788"/>
</kw>
<msg timestamp="20230107 11:15:23.788" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230107 11:15:18.127" endtime="20230107 11:15:23.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:23.792" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/46106-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:29.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:29.404" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230107 11:15:23.790" endtime="20230107 11:15:29.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:29.406" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:15:29.405" endtime="20230107 11:15:29.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:29.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:29.407" endtime="20230107 11:15:29.407"/>
</kw>
<status status="PASS" starttime="20230107 11:15:23.790" endtime="20230107 11:15:29.408"/>
</kw>
<msg timestamp="20230107 11:15:29.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:23.789" endtime="20230107 11:15:29.409"/>
</kw>
<msg timestamp="20230107 11:15:29.410" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230107 11:15:23.788" endtime="20230107 11:15:29.410"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:15:29.411" endtime="20230107 11:15:29.412"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:15:29.412" endtime="20230107 11:15:29.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:29.418" level="INFO">Running command 'ozone sh key put o3://om:9862/46106-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:37.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:37.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:15:29.415" endtime="20230107 11:15:37.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:37.659" level="INFO"/>
<status status="PASS" starttime="20230107 11:15:37.658" endtime="20230107 11:15:37.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:37.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:37.659" endtime="20230107 11:15:37.660"/>
</kw>
<status status="PASS" starttime="20230107 11:15:29.414" endtime="20230107 11:15:37.661"/>
</kw>
<msg timestamp="20230107 11:15:37.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:29.413" endtime="20230107 11:15:37.662"/>
</kw>
<status status="PASS" starttime="20230107 11:15:29.412" endtime="20230107 11:15:37.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:37.667" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46106-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:43.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:43.471" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:15:37.664" endtime="20230107 11:15:43.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:43.473" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230107 11:15:43.471" endtime="20230107 11:15:43.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:43.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:43.473" endtime="20230107 11:15:43.474"/>
</kw>
<status status="PASS" starttime="20230107 11:15:37.664" endtime="20230107 11:15:43.475"/>
</kw>
<msg timestamp="20230107 11:15:43.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:37.663" endtime="20230107 11:15:43.475"/>
</kw>
<msg timestamp="20230107 11:15:43.476" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230107 11:15:37.662" endtime="20230107 11:15:43.476"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:15:43.476" endtime="20230107 11:15:43.477"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230107 11:15:43.477" endtime="20230107 11:15:43.478"/>
</kw>
<status status="PASS" starttime="20230107 11:14:55.122" endtime="20230107 11:15:43.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:14:55.050" endtime="20230107 11:15:43.478"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:43.486" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:43.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:43.490" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:15:43.484" endtime="20230107 11:15:43.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:43.492" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:15:43.491" endtime="20230107 11:15:43.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:43.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:43.492" endtime="20230107 11:15:43.493"/>
</kw>
<status status="PASS" starttime="20230107 11:15:43.483" endtime="20230107 11:15:43.493"/>
</kw>
<msg timestamp="20230107 11:15:43.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:43.482" endtime="20230107 11:15:43.494"/>
</kw>
<msg timestamp="20230107 11:15:43.494" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:15:43.482" endtime="20230107 11:15:43.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:15:43.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:15:43.495" endtime="20230107 11:15:43.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:43.501" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:43.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:43.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:15:43.498" endtime="20230107 11:15:43.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:43.549" level="INFO"/>
<status status="PASS" starttime="20230107 11:15:43.548" endtime="20230107 11:15:43.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:43.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:43.550" endtime="20230107 11:15:43.550"/>
</kw>
<status status="PASS" starttime="20230107 11:15:43.497" endtime="20230107 11:15:43.551"/>
</kw>
<msg timestamp="20230107 11:15:43.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:43.497" endtime="20230107 11:15:43.552"/>
</kw>
<status status="PASS" starttime="20230107 11:15:43.496" endtime="20230107 11:15:43.552"/>
</kw>
<status status="PASS" starttime="20230107 11:15:43.496" endtime="20230107 11:15:43.552"/>
</kw>
<status status="PASS" starttime="20230107 11:15:43.481" endtime="20230107 11:15:43.552"/>
</kw>
<status status="PASS" starttime="20230107 11:15:43.480" endtime="20230107 11:15:43.552"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:43.559" level="INFO">Running command 'ozone sh volume info o3:///46106-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:48.678" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:15:48.678" level="INFO">${output} = VOLUME_NOT_FOUND Volume 46106-without-host is not found</msg>
<status status="PASS" starttime="20230107 11:15:43.557" endtime="20230107 11:15:48.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:48.680" level="INFO">VOLUME_NOT_FOUND Volume 46106-without-host is not found</msg>
<status status="PASS" starttime="20230107 11:15:48.679" endtime="20230107 11:15:48.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:48.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:48.681" endtime="20230107 11:15:48.681"/>
</kw>
<msg timestamp="20230107 11:15:48.682" level="INFO">${result} = VOLUME_NOT_FOUND Volume 46106-without-host is not found</msg>
<status status="PASS" starttime="20230107 11:15:43.554" endtime="20230107 11:15:48.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:15:48.682" endtime="20230107 11:15:48.683"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:48.687" level="INFO">Running command 'ozone sh volume create o3:///46106-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:15:54.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:15:54.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:15:48.685" endtime="20230107 11:15:54.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:15:54.282" level="INFO"/>
<status status="PASS" starttime="20230107 11:15:54.281" endtime="20230107 11:15:54.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:15:54.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:15:54.283" endtime="20230107 11:15:54.283"/>
</kw>
<status status="PASS" starttime="20230107 11:15:48.684" endtime="20230107 11:15:54.284"/>
</kw>
<msg timestamp="20230107 11:15:54.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:48.684" endtime="20230107 11:15:54.285"/>
</kw>
<msg timestamp="20230107 11:15:54.285" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:15:48.683" endtime="20230107 11:15:54.285"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230107 11:15:54.286" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230107 11:15:54.285" endtime="20230107 11:15:54.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:15:54.291" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="46106-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:00.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:00.039" level="INFO">${output} = {
  "metadata": {},
  "name": "46106-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230107 11:15:54.288" endtime="20230107 11:16:00.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:00.040" level="INFO">{
  "metadata": {},
  "name": "46106-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-07T11:15:54.063Z",
  "modificationTime": "2023-01-07T11:15:54.063Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230107 11:16:00.039" endtime="20230107 11:16:00.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:00.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:00.041" endtime="20230107 11:16:00.042"/>
</kw>
<status status="PASS" starttime="20230107 11:15:54.288" endtime="20230107 11:16:00.042"/>
</kw>
<msg timestamp="20230107 11:16:00.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:15:54.287" endtime="20230107 11:16:00.043"/>
</kw>
<msg timestamp="20230107 11:16:00.043" level="INFO">${result} = {
  "metadata": {},
  "name": "46106-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230107 11:15:54.286" endtime="20230107 11:16:00.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:16:00.043" endtime="20230107 11:16:00.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:00.049" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="46106-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:06.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:06.241" level="INFO">${output} = {
  "metadata": {},
  "name": "46106-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230107 11:16:00.047" endtime="20230107 11:16:06.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:06.243" level="INFO">{
  "metadata": {},
  "name": "46106-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-01-07T11:15:54.063Z",
  "modificationTime": "2023-01-07T11:15:54.063Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230107 11:16:06.242" endtime="20230107 11:16:06.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:06.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:06.243" endtime="20230107 11:16:06.244"/>
</kw>
<status status="PASS" starttime="20230107 11:16:00.046" endtime="20230107 11:16:06.244"/>
</kw>
<msg timestamp="20230107 11:16:06.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:00.045" endtime="20230107 11:16:06.245"/>
</kw>
<msg timestamp="20230107 11:16:06.245" level="INFO">${result} = {
  "metadata": {},
  "name": "46106-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20230107 11:16:00.044" endtime="20230107 11:16:06.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:16:06.246" endtime="20230107 11:16:06.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:06.251" level="INFO">Running command 'ozone sh volume setquota o3:///46106-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:11.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:11.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:16:06.248" endtime="20230107 11:16:11.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:12.000" level="INFO"/>
<status status="PASS" starttime="20230107 11:16:11.999" endtime="20230107 11:16:12.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:12.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:12.000" endtime="20230107 11:16:12.001"/>
</kw>
<status status="PASS" starttime="20230107 11:16:06.248" endtime="20230107 11:16:12.002"/>
</kw>
<msg timestamp="20230107 11:16:12.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:06.247" endtime="20230107 11:16:12.003"/>
</kw>
<status status="PASS" starttime="20230107 11:16:06.246" endtime="20230107 11:16:12.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:12.009" level="INFO">Running command 'ozone sh volume info o3:///46106-without-host | jq -r '. | select(.name=="46106-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:18.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:18.434" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:16:12.006" endtime="20230107 11:16:18.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:18.435" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230107 11:16:18.434" endtime="20230107 11:16:18.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:18.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:18.436" endtime="20230107 11:16:18.437"/>
</kw>
<status status="PASS" starttime="20230107 11:16:12.005" endtime="20230107 11:16:18.437"/>
</kw>
<msg timestamp="20230107 11:16:18.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:12.004" endtime="20230107 11:16:18.438"/>
</kw>
<msg timestamp="20230107 11:16:18.438" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:16:12.003" endtime="20230107 11:16:18.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:16:18.438" endtime="20230107 11:16:18.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:18.445" level="INFO">Running command 'ozone sh bucket create o3:///46106-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:24.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:24.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:16:18.441" endtime="20230107 11:16:24.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:24.761" level="INFO"/>
<status status="PASS" starttime="20230107 11:16:24.760" endtime="20230107 11:16:24.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:24.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:24.761" endtime="20230107 11:16:24.762"/>
</kw>
<status status="PASS" starttime="20230107 11:16:18.441" endtime="20230107 11:16:24.762"/>
</kw>
<msg timestamp="20230107 11:16:24.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:18.440" endtime="20230107 11:16:24.763"/>
</kw>
<msg timestamp="20230107 11:16:24.763" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:16:18.439" endtime="20230107 11:16:24.763"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230107 11:16:24.764" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230107 11:16:24.764" endtime="20230107 11:16:24.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:24.769" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:31.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:31.030" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230107 11:16:24.766" endtime="20230107 11:16:31.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:31.031" level="INFO">DISK</msg>
<status status="PASS" starttime="20230107 11:16:31.030" endtime="20230107 11:16:31.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:31.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:31.032" endtime="20230107 11:16:31.032"/>
</kw>
<status status="PASS" starttime="20230107 11:16:24.766" endtime="20230107 11:16:31.033"/>
</kw>
<msg timestamp="20230107 11:16:31.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:24.765" endtime="20230107 11:16:31.034"/>
</kw>
<msg timestamp="20230107 11:16:31.034" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230107 11:16:24.764" endtime="20230107 11:16:31.034"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:16:31.034" endtime="20230107 11:16:31.035"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:31.040" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:37.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:37.305" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:16:31.037" endtime="20230107 11:16:37.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:37.306" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230107 11:16:37.305" endtime="20230107 11:16:37.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:37.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:37.307" endtime="20230107 11:16:37.308"/>
</kw>
<status status="PASS" starttime="20230107 11:16:31.036" endtime="20230107 11:16:37.308"/>
</kw>
<msg timestamp="20230107 11:16:37.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:31.036" endtime="20230107 11:16:37.309"/>
</kw>
<msg timestamp="20230107 11:16:37.309" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230107 11:16:31.035" endtime="20230107 11:16:37.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:16:37.310" endtime="20230107 11:16:37.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:37.319" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:43.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:43.857" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230107 11:16:37.316" endtime="20230107 11:16:43.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:43.859" level="INFO">100</msg>
<status status="PASS" starttime="20230107 11:16:43.858" endtime="20230107 11:16:43.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:43.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:43.859" endtime="20230107 11:16:43.860"/>
</kw>
<status status="PASS" starttime="20230107 11:16:37.315" endtime="20230107 11:16:43.861"/>
</kw>
<msg timestamp="20230107 11:16:43.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:37.315" endtime="20230107 11:16:43.862"/>
</kw>
<msg timestamp="20230107 11:16:43.862" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230107 11:16:37.311" endtime="20230107 11:16:43.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:16:43.862" endtime="20230107 11:16:43.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:43.869" level="INFO">Running command 'ozone sh bucket setquota o3:///46106-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:49.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:49.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:16:43.866" endtime="20230107 11:16:49.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:49.607" level="INFO"/>
<status status="PASS" starttime="20230107 11:16:49.606" endtime="20230107 11:16:49.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:49.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:49.607" endtime="20230107 11:16:49.608"/>
</kw>
<status status="PASS" starttime="20230107 11:16:43.865" endtime="20230107 11:16:49.608"/>
</kw>
<msg timestamp="20230107 11:16:49.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:43.864" endtime="20230107 11:16:49.609"/>
</kw>
<status status="PASS" starttime="20230107 11:16:43.863" endtime="20230107 11:16:49.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:49.615" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:16:55.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:16:55.810" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230107 11:16:49.612" endtime="20230107 11:16:55.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:16:55.811" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230107 11:16:55.810" endtime="20230107 11:16:55.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:16:55.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:16:55.812" endtime="20230107 11:16:55.813"/>
</kw>
<status status="PASS" starttime="20230107 11:16:49.612" endtime="20230107 11:16:55.813"/>
</kw>
<msg timestamp="20230107 11:16:55.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:49.611" endtime="20230107 11:16:55.815"/>
</kw>
<msg timestamp="20230107 11:16:55.816" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230107 11:16:49.610" endtime="20230107 11:16:55.816"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:16:55.816" endtime="20230107 11:16:55.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:16:55.823" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:02.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:02.661" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230107 11:16:55.820" endtime="20230107 11:17:02.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:02.662" level="INFO">1000</msg>
<status status="PASS" starttime="20230107 11:17:02.661" endtime="20230107 11:17:02.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:02.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:02.663" endtime="20230107 11:17:02.664"/>
</kw>
<status status="PASS" starttime="20230107 11:16:55.819" endtime="20230107 11:17:02.664"/>
</kw>
<msg timestamp="20230107 11:17:02.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:16:55.818" endtime="20230107 11:17:02.665"/>
</kw>
<msg timestamp="20230107 11:17:02.665" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230107 11:16:55.817" endtime="20230107 11:17:02.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:17:02.665" endtime="20230107 11:17:02.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:02.673" level="INFO">Running command 'ozone sh bucket list o3:///46106-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:08.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:08.892" level="INFO">${output} = 46106-without-host</msg>
<status status="PASS" starttime="20230107 11:17:02.670" endtime="20230107 11:17:08.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:08.894" level="INFO">46106-without-host</msg>
<status status="PASS" starttime="20230107 11:17:08.893" endtime="20230107 11:17:08.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:08.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:08.895" endtime="20230107 11:17:08.896"/>
</kw>
<status status="PASS" starttime="20230107 11:17:02.668" endtime="20230107 11:17:08.896"/>
</kw>
<msg timestamp="20230107 11:17:08.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:02.668" endtime="20230107 11:17:08.897"/>
</kw>
<msg timestamp="20230107 11:17:08.897" level="INFO">${result} = 46106-without-host</msg>
<status status="PASS" starttime="20230107 11:17:02.666" endtime="20230107 11:17:08.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:17:08.898" endtime="20230107 11:17:08.898"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:08.909" level="INFO">Running command 'ozone sh key put o3:///46106-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:18.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:18.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:08.902" endtime="20230107 11:17:18.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:18.252" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:18.251" endtime="20230107 11:17:18.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:18.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:18.253" endtime="20230107 11:17:18.253"/>
</kw>
<status status="PASS" starttime="20230107 11:17:08.901" endtime="20230107 11:17:18.254"/>
</kw>
<msg timestamp="20230107 11:17:18.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:08.901" endtime="20230107 11:17:18.255"/>
</kw>
<status status="PASS" starttime="20230107 11:17:08.900" endtime="20230107 11:17:18.255"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:18.261" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:18.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:18.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:18.257" endtime="20230107 11:17:18.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:18.266" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:18.265" endtime="20230107 11:17:18.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:18.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:18.267" endtime="20230107 11:17:18.268"/>
</kw>
<status status="PASS" starttime="20230107 11:17:18.257" endtime="20230107 11:17:18.268"/>
</kw>
<msg timestamp="20230107 11:17:18.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:18.256" endtime="20230107 11:17:18.269"/>
</kw>
<status status="PASS" starttime="20230107 11:17:18.256" endtime="20230107 11:17:18.269"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:18.275" level="INFO">Running command 'ozone sh key get o3:///46106-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:27.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:27.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:18.271" endtime="20230107 11:17:27.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:27.163" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:27.163" endtime="20230107 11:17:27.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:27.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:27.164" endtime="20230107 11:17:27.164"/>
</kw>
<status status="PASS" starttime="20230107 11:17:18.271" endtime="20230107 11:17:27.165"/>
</kw>
<msg timestamp="20230107 11:17:27.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:18.270" endtime="20230107 11:17:27.166"/>
</kw>
<status status="PASS" starttime="20230107 11:17:18.269" endtime="20230107 11:17:27.166"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:27.171" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:27.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:27.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:27.168" endtime="20230107 11:17:27.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:27.176" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:27.175" endtime="20230107 11:17:27.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:27.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:27.176" endtime="20230107 11:17:27.177"/>
</kw>
<status status="PASS" starttime="20230107 11:17:27.167" endtime="20230107 11:17:27.177"/>
</kw>
<msg timestamp="20230107 11:17:27.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:27.167" endtime="20230107 11:17:27.178"/>
</kw>
<status status="PASS" starttime="20230107 11:17:27.166" endtime="20230107 11:17:27.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:27.184" level="INFO">Running command 'ozone sh key put -t RATIS o3:///46106-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:35.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:35.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:27.181" endtime="20230107 11:17:35.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:35.978" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:35.977" endtime="20230107 11:17:35.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:35.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:35.979" endtime="20230107 11:17:35.979"/>
</kw>
<status status="PASS" starttime="20230107 11:17:27.181" endtime="20230107 11:17:35.980"/>
</kw>
<msg timestamp="20230107 11:17:35.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:27.180" endtime="20230107 11:17:35.980"/>
</kw>
<status status="PASS" starttime="20230107 11:17:27.179" endtime="20230107 11:17:35.981"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:35.985" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:35.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:35.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:35.983" endtime="20230107 11:17:35.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:35.990" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:35.989" endtime="20230107 11:17:35.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:35.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:35.990" endtime="20230107 11:17:35.990"/>
</kw>
<status status="PASS" starttime="20230107 11:17:35.982" endtime="20230107 11:17:35.991"/>
</kw>
<msg timestamp="20230107 11:17:35.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:35.982" endtime="20230107 11:17:35.991"/>
</kw>
<status status="PASS" starttime="20230107 11:17:35.981" endtime="20230107 11:17:35.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:35.996" level="INFO">Running command 'ozone sh key get o3:///46106-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:44.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:44.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:35.994" endtime="20230107 11:17:44.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:44.839" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:44.838" endtime="20230107 11:17:44.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:44.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:44.840" endtime="20230107 11:17:44.840"/>
</kw>
<status status="PASS" starttime="20230107 11:17:35.993" endtime="20230107 11:17:44.841"/>
</kw>
<msg timestamp="20230107 11:17:44.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:35.993" endtime="20230107 11:17:44.842"/>
</kw>
<status status="PASS" starttime="20230107 11:17:35.992" endtime="20230107 11:17:44.842"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:44.847" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:44.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:44.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:44.844" endtime="20230107 11:17:44.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:44.851" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:44.851" endtime="20230107 11:17:44.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:44.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:44.852" endtime="20230107 11:17:44.852"/>
</kw>
<status status="PASS" starttime="20230107 11:17:44.843" endtime="20230107 11:17:44.853"/>
</kw>
<msg timestamp="20230107 11:17:44.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:44.843" endtime="20230107 11:17:44.854"/>
</kw>
<status status="PASS" starttime="20230107 11:17:44.842" endtime="20230107 11:17:44.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:44.859" level="INFO">Running command 'ozone sh key info o3:///46106-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:50.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:50.853" level="INFO">${output} = {
  "volumeName": "46106-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:17:32.481Z",
  "modificationTime": "2023-01-07T11:17:35.443...</msg>
<status status="PASS" starttime="20230107 11:17:44.857" endtime="20230107 11:17:50.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:50.856" level="INFO">{
  "volumeName": "46106-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:17:32.481Z",
  "modificationTime": "2023-01-07T11:17:35.443Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230107 11:17:50.855" endtime="20230107 11:17:50.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:50.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:50.857" endtime="20230107 11:17:50.857"/>
</kw>
<status status="PASS" starttime="20230107 11:17:44.856" endtime="20230107 11:17:50.858"/>
</kw>
<msg timestamp="20230107 11:17:50.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:44.855" endtime="20230107 11:17:50.859"/>
</kw>
<msg timestamp="20230107 11:17:50.860" level="INFO">${result} = {
  "volumeName": "46106-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:17:32.481Z",
  "modificationTime": "2023-01-07T11:17:35.443...</msg>
<status status="PASS" starttime="20230107 11:17:44.854" endtime="20230107 11:17:50.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:17:50.860" endtime="20230107 11:17:50.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:50.866" level="INFO">Running command 'ozone sh key delete o3:///46106-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:17:56.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:17:56.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:50.863" endtime="20230107 11:17:56.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:17:56.312" level="INFO"/>
<status status="PASS" starttime="20230107 11:17:56.311" endtime="20230107 11:17:56.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:17:56.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:17:56.312" endtime="20230107 11:17:56.313"/>
</kw>
<status status="PASS" starttime="20230107 11:17:50.862" endtime="20230107 11:17:56.313"/>
</kw>
<msg timestamp="20230107 11:17:56.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:50.861" endtime="20230107 11:17:56.314"/>
</kw>
<status status="PASS" starttime="20230107 11:17:50.861" endtime="20230107 11:17:56.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:17:56.320" level="INFO">Running command 'ozone sh key cp o3:///46106-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:06.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:06.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:17:56.317" endtime="20230107 11:18:06.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:06.168" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:06.166" endtime="20230107 11:18:06.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:06.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:06.168" endtime="20230107 11:18:06.169"/>
</kw>
<status status="PASS" starttime="20230107 11:17:56.316" endtime="20230107 11:18:06.170"/>
</kw>
<msg timestamp="20230107 11:18:06.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:17:56.316" endtime="20230107 11:18:06.171"/>
</kw>
<status status="PASS" starttime="20230107 11:17:56.315" endtime="20230107 11:18:06.171"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:06.176" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:06.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:06.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:06.174" endtime="20230107 11:18:06.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:06.182" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:06.181" endtime="20230107 11:18:06.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:06.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:06.182" endtime="20230107 11:18:06.183"/>
</kw>
<status status="PASS" starttime="20230107 11:18:06.173" endtime="20230107 11:18:06.184"/>
</kw>
<msg timestamp="20230107 11:18:06.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:06.172" endtime="20230107 11:18:06.185"/>
</kw>
<status status="PASS" starttime="20230107 11:18:06.172" endtime="20230107 11:18:06.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:06.191" level="INFO">Running command 'ozone sh key get o3:///46106-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:14.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:14.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:06.188" endtime="20230107 11:18:14.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:14.242" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:14.241" endtime="20230107 11:18:14.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:14.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:14.242" endtime="20230107 11:18:14.243"/>
</kw>
<status status="PASS" starttime="20230107 11:18:06.187" endtime="20230107 11:18:14.243"/>
</kw>
<msg timestamp="20230107 11:18:14.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:06.186" endtime="20230107 11:18:14.244"/>
</kw>
<status status="PASS" starttime="20230107 11:18:06.185" endtime="20230107 11:18:14.245"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:14.251" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:14.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:14.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:14.248" endtime="20230107 11:18:14.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:14.256" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:14.255" endtime="20230107 11:18:14.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:14.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:14.256" endtime="20230107 11:18:14.257"/>
</kw>
<status status="PASS" starttime="20230107 11:18:14.247" endtime="20230107 11:18:14.257"/>
</kw>
<msg timestamp="20230107 11:18:14.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:14.246" endtime="20230107 11:18:14.258"/>
</kw>
<status status="PASS" starttime="20230107 11:18:14.245" endtime="20230107 11:18:14.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:14.264" level="INFO">Running command 'ozone sh key delete o3:///46106-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:19.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:19.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:14.261" endtime="20230107 11:18:19.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:19.172" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:19.171" endtime="20230107 11:18:19.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:19.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:19.173" endtime="20230107 11:18:19.173"/>
</kw>
<status status="PASS" starttime="20230107 11:18:14.260" endtime="20230107 11:18:19.174"/>
</kw>
<msg timestamp="20230107 11:18:19.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:14.260" endtime="20230107 11:18:19.175"/>
</kw>
<status status="PASS" starttime="20230107 11:18:14.259" endtime="20230107 11:18:19.175"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:19.179" level="INFO">Running command 'ozone sh key get o3:///46106-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:24.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20230107 11:18:24.481" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:18:19.176" endtime="20230107 11:18:24.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:24.482" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:18:24.481" endtime="20230107 11:18:24.482"/>
</kw>
<msg timestamp="20230107 11:18:24.483" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230107 11:18:19.175" endtime="20230107 11:18:24.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:18:24.483" endtime="20230107 11:18:24.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:24.488" level="INFO">Running command 'ozone sh key get --force o3:///46106-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:32.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:32.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:24.486" endtime="20230107 11:18:32.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:32.297" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:32.296" endtime="20230107 11:18:32.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:32.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:32.298" endtime="20230107 11:18:32.298"/>
</kw>
<status status="PASS" starttime="20230107 11:18:24.485" endtime="20230107 11:18:32.299"/>
</kw>
<msg timestamp="20230107 11:18:32.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:24.485" endtime="20230107 11:18:32.300"/>
</kw>
<msg timestamp="20230107 11:18:32.300" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230107 11:18:24.484" endtime="20230107 11:18:32.300"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:18:32.300" endtime="20230107 11:18:32.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:32.306" level="INFO">Running command 'ozone sh key info o3:///46106-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:38.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:38.376" level="INFO">${output} = {
  "volumeName": "46106-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:17:14.741Z",
  "modificationTime": "2023-01-07T11:17:17.775Z",
  ...</msg>
<status status="PASS" starttime="20230107 11:18:32.303" endtime="20230107 11:18:38.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:38.378" level="INFO">{
  "volumeName": "46106-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:17:14.741Z",
  "modificationTime": "2023-01-07T11:17:17.775Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200020,
      "length": 17539,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230107 11:18:38.377" endtime="20230107 11:18:38.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:38.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:38.378" endtime="20230107 11:18:38.379"/>
</kw>
<status status="PASS" starttime="20230107 11:18:32.302" endtime="20230107 11:18:38.380"/>
</kw>
<msg timestamp="20230107 11:18:38.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:32.302" endtime="20230107 11:18:38.381"/>
</kw>
<msg timestamp="20230107 11:18:38.381" level="INFO">${result} = {
  "volumeName": "46106-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17539,
  "creationTime": "2023-01-07T11:17:14.741Z",
  "modificationTime": "2023-01-07T11:17:17.775Z",
  ...</msg>
<status status="PASS" starttime="20230107 11:18:32.301" endtime="20230107 11:18:38.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:18:38.382" endtime="20230107 11:18:38.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:38.388" level="INFO">Running command 'ozone sh key list o3:///46106-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:44.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:44.173" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230107 11:18:38.386" endtime="20230107 11:18:44.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:44.175" level="INFO">key1</msg>
<status status="PASS" starttime="20230107 11:18:44.174" endtime="20230107 11:18:44.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:44.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:44.175" endtime="20230107 11:18:44.176"/>
</kw>
<status status="PASS" starttime="20230107 11:18:38.384" endtime="20230107 11:18:44.177"/>
</kw>
<msg timestamp="20230107 11:18:44.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:38.384" endtime="20230107 11:18:44.178"/>
</kw>
<msg timestamp="20230107 11:18:44.178" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230107 11:18:38.382" endtime="20230107 11:18:44.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:18:44.179" endtime="20230107 11:18:44.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:44.185" level="INFO">Running command 'ozone sh key rename o3:///46106-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:49.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:49.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:44.181" endtime="20230107 11:18:49.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:49.753" level="INFO"/>
<status status="PASS" starttime="20230107 11:18:49.752" endtime="20230107 11:18:49.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:49.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:49.754" endtime="20230107 11:18:49.754"/>
</kw>
<status status="PASS" starttime="20230107 11:18:44.181" endtime="20230107 11:18:49.755"/>
</kw>
<msg timestamp="20230107 11:18:49.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:44.180" endtime="20230107 11:18:49.756"/>
</kw>
<status status="PASS" starttime="20230107 11:18:44.179" endtime="20230107 11:18:49.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:49.761" level="INFO">Running command 'ozone sh key list o3:///46106-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:18:55.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:18:55.962" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230107 11:18:49.758" endtime="20230107 11:18:55.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:18:55.964" level="INFO">key2</msg>
<status status="PASS" starttime="20230107 11:18:55.963" endtime="20230107 11:18:55.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:18:55.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:18:55.965" endtime="20230107 11:18:55.965"/>
</kw>
<status status="PASS" starttime="20230107 11:18:49.758" endtime="20230107 11:18:55.966"/>
</kw>
<msg timestamp="20230107 11:18:55.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:49.757" endtime="20230107 11:18:55.967"/>
</kw>
<msg timestamp="20230107 11:18:55.968" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230107 11:18:49.757" endtime="20230107 11:18:55.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:18:55.968" endtime="20230107 11:18:55.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:18:55.977" level="INFO">Running command 'ozone sh key delete o3:///46106-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:01.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:01.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:18:55.971" endtime="20230107 11:19:01.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:01.821" level="INFO"/>
<status status="PASS" starttime="20230107 11:19:01.820" endtime="20230107 11:19:01.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:01.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:01.822" endtime="20230107 11:19:01.823"/>
</kw>
<status status="PASS" starttime="20230107 11:18:55.971" endtime="20230107 11:19:01.823"/>
</kw>
<msg timestamp="20230107 11:19:01.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:18:55.970" endtime="20230107 11:19:01.824"/>
</kw>
<status status="PASS" starttime="20230107 11:18:55.969" endtime="20230107 11:19:01.825"/>
</kw>
<status status="PASS" starttime="20230107 11:17:08.899" endtime="20230107 11:19:01.825"/>
</kw>
<status status="PASS" starttime="20230107 11:17:08.898" endtime="20230107 11:19:01.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:01.831" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///46106-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:07.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:07.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:19:01.827" endtime="20230107 11:19:07.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:07.269" level="INFO"/>
<status status="PASS" starttime="20230107 11:19:07.268" endtime="20230107 11:19:07.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:07.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:07.269" endtime="20230107 11:19:07.271"/>
</kw>
<status status="PASS" starttime="20230107 11:19:01.826" endtime="20230107 11:19:07.271"/>
</kw>
<msg timestamp="20230107 11:19:07.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:01.826" endtime="20230107 11:19:07.272"/>
</kw>
<status status="PASS" starttime="20230107 11:19:01.825" endtime="20230107 11:19:07.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:07.277" level="INFO">Running command 'ozone sh volume info o3:///46106-without-host | jq -r '. | select(.name=="46106-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:13.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:13.352" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:19:07.275" endtime="20230107 11:19:13.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:13.354" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:19:13.353" endtime="20230107 11:19:13.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:13.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:13.354" endtime="20230107 11:19:13.355"/>
</kw>
<status status="PASS" starttime="20230107 11:19:07.274" endtime="20230107 11:19:13.356"/>
</kw>
<msg timestamp="20230107 11:19:13.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:07.274" endtime="20230107 11:19:13.356"/>
</kw>
<msg timestamp="20230107 11:19:13.357" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:19:07.272" endtime="20230107 11:19:13.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:19:13.357" endtime="20230107 11:19:13.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:13.363" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///46106-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:19.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:19.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:19:13.360" endtime="20230107 11:19:19.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:19.051" level="INFO"/>
<status status="PASS" starttime="20230107 11:19:19.050" endtime="20230107 11:19:19.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:19.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:19.052" endtime="20230107 11:19:19.053"/>
</kw>
<status status="PASS" starttime="20230107 11:19:13.360" endtime="20230107 11:19:19.054"/>
</kw>
<msg timestamp="20230107 11:19:19.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:13.359" endtime="20230107 11:19:19.055"/>
</kw>
<status status="PASS" starttime="20230107 11:19:13.358" endtime="20230107 11:19:19.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:19.061" level="INFO">Running command 'ozone sh volume info o3:///46106-without-host | jq -r '. | select(.name=="46106-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:25.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:25.306" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:19:19.058" endtime="20230107 11:19:25.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:25.308" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:19:25.307" endtime="20230107 11:19:25.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:25.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:25.308" endtime="20230107 11:19:25.309"/>
</kw>
<status status="PASS" starttime="20230107 11:19:19.057" endtime="20230107 11:19:25.310"/>
</kw>
<msg timestamp="20230107 11:19:25.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:19.057" endtime="20230107 11:19:25.310"/>
</kw>
<msg timestamp="20230107 11:19:25.311" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:19:19.055" endtime="20230107 11:19:25.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:19:25.311" endtime="20230107 11:19:25.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:25.316" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///46106-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:31.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:31.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:19:25.313" endtime="20230107 11:19:31.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:31.303" level="INFO"/>
<status status="PASS" starttime="20230107 11:19:31.302" endtime="20230107 11:19:31.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:31.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:31.303" endtime="20230107 11:19:31.304"/>
</kw>
<status status="PASS" starttime="20230107 11:19:25.313" endtime="20230107 11:19:31.305"/>
</kw>
<msg timestamp="20230107 11:19:31.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:25.313" endtime="20230107 11:19:31.305"/>
</kw>
<status status="PASS" starttime="20230107 11:19:25.312" endtime="20230107 11:19:31.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:31.313" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:37.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:37.550" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:19:31.310" endtime="20230107 11:19:37.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:37.551" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:19:37.550" endtime="20230107 11:19:37.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:37.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:37.552" endtime="20230107 11:19:37.553"/>
</kw>
<status status="PASS" starttime="20230107 11:19:31.308" endtime="20230107 11:19:37.553"/>
</kw>
<msg timestamp="20230107 11:19:37.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:31.308" endtime="20230107 11:19:37.554"/>
</kw>
<msg timestamp="20230107 11:19:37.554" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:19:31.306" endtime="20230107 11:19:37.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:19:37.554" endtime="20230107 11:19:37.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:37.561" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///46106-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:43.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:43.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:19:37.557" endtime="20230107 11:19:43.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:43.420" level="INFO"/>
<status status="PASS" starttime="20230107 11:19:43.418" endtime="20230107 11:19:43.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:43.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:43.420" endtime="20230107 11:19:43.421"/>
</kw>
<status status="PASS" starttime="20230107 11:19:37.556" endtime="20230107 11:19:43.421"/>
</kw>
<msg timestamp="20230107 11:19:43.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:37.556" endtime="20230107 11:19:43.422"/>
</kw>
<status status="PASS" starttime="20230107 11:19:37.555" endtime="20230107 11:19:43.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:43.428" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:49.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:49.062" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:19:43.425" endtime="20230107 11:19:49.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:49.070" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:19:49.063" endtime="20230107 11:19:49.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:49.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:49.071" endtime="20230107 11:19:49.072"/>
</kw>
<status status="PASS" starttime="20230107 11:19:43.424" endtime="20230107 11:19:49.073"/>
</kw>
<msg timestamp="20230107 11:19:49.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:43.424" endtime="20230107 11:19:49.091"/>
</kw>
<msg timestamp="20230107 11:19:49.091" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:19:43.422" endtime="20230107 11:19:49.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:19:49.092" endtime="20230107 11:19:49.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:49.109" level="INFO">Running command 'ozone sh bucket delete o3:///46106-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:19:54.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:19:54.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:19:49.100" endtime="20230107 11:19:54.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:19:54.730" level="INFO"/>
<status status="PASS" starttime="20230107 11:19:54.729" endtime="20230107 11:19:54.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:19:54.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:19:54.730" endtime="20230107 11:19:54.731"/>
</kw>
<status status="PASS" starttime="20230107 11:19:49.100" endtime="20230107 11:19:54.731"/>
</kw>
<msg timestamp="20230107 11:19:54.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:49.098" endtime="20230107 11:19:54.732"/>
</kw>
<status status="PASS" starttime="20230107 11:19:49.093" endtime="20230107 11:19:54.732"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:19:54.737" level="INFO">Running command 'ozone sh volume delete o3:///46106-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:00.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:00.121" level="INFO">${output} = Volume 46106-without-host is deleted</msg>
<status status="PASS" starttime="20230107 11:19:54.734" endtime="20230107 11:20:00.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:00.123" level="INFO">Volume 46106-without-host is deleted</msg>
<status status="PASS" starttime="20230107 11:20:00.122" endtime="20230107 11:20:00.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:00.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:00.123" endtime="20230107 11:20:00.126"/>
</kw>
<status status="PASS" starttime="20230107 11:19:54.734" endtime="20230107 11:20:00.127"/>
</kw>
<msg timestamp="20230107 11:20:00.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:19:54.733" endtime="20230107 11:20:00.128"/>
</kw>
<status status="PASS" starttime="20230107 11:19:54.733" endtime="20230107 11:20:00.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:00.133" level="INFO">Running command 'ozone sh volume create o3:///46106-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:05.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:05.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:20:00.130" endtime="20230107 11:20:05.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:05.292" level="INFO"/>
<status status="PASS" starttime="20230107 11:20:05.291" endtime="20230107 11:20:05.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:05.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:05.292" endtime="20230107 11:20:05.293"/>
</kw>
<status status="PASS" starttime="20230107 11:20:00.129" endtime="20230107 11:20:05.294"/>
</kw>
<msg timestamp="20230107 11:20:05.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:00.129" endtime="20230107 11:20:05.294"/>
</kw>
<status status="PASS" starttime="20230107 11:20:00.128" endtime="20230107 11:20:05.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:05.300" level="INFO">Running command 'ozone sh volume info o3:///46106-without-host | jq -r '. | select(.name=="46106-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:10.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:10.967" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:20:05.297" endtime="20230107 11:20:10.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:10.969" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:20:10.968" endtime="20230107 11:20:10.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:10.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:10.969" endtime="20230107 11:20:10.970"/>
</kw>
<status status="PASS" starttime="20230107 11:20:05.297" endtime="20230107 11:20:10.970"/>
</kw>
<msg timestamp="20230107 11:20:10.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:05.296" endtime="20230107 11:20:10.971"/>
</kw>
<msg timestamp="20230107 11:20:10.972" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:20:05.295" endtime="20230107 11:20:10.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:20:10.972" endtime="20230107 11:20:10.973"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:10.978" level="INFO">Running command 'ozone sh volume info o3:///46106-without-host | jq -r '. | select(.name=="46106-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:16.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:16.757" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:20:10.975" endtime="20230107 11:20:16.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:16.759" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:20:16.757" endtime="20230107 11:20:16.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:16.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:16.759" endtime="20230107 11:20:16.760"/>
</kw>
<status status="PASS" starttime="20230107 11:20:10.974" endtime="20230107 11:20:16.760"/>
</kw>
<msg timestamp="20230107 11:20:16.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:10.974" endtime="20230107 11:20:16.761"/>
</kw>
<msg timestamp="20230107 11:20:16.761" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:20:10.973" endtime="20230107 11:20:16.761"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:20:16.761" endtime="20230107 11:20:16.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:16.768" level="INFO">Running command 'ozone sh bucket create o3:///46106-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:22.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:22.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:20:16.764" endtime="20230107 11:20:22.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:22.218" level="INFO"/>
<status status="PASS" starttime="20230107 11:20:22.217" endtime="20230107 11:20:22.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:22.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:22.219" endtime="20230107 11:20:22.219"/>
</kw>
<status status="PASS" starttime="20230107 11:20:16.763" endtime="20230107 11:20:22.220"/>
</kw>
<msg timestamp="20230107 11:20:22.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:16.763" endtime="20230107 11:20:22.221"/>
</kw>
<status status="PASS" starttime="20230107 11:20:16.762" endtime="20230107 11:20:22.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:22.227" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:28.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:28.000" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:20:22.224" endtime="20230107 11:20:28.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:28.003" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:20:28.001" endtime="20230107 11:20:28.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:28.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:28.003" endtime="20230107 11:20:28.004"/>
</kw>
<status status="PASS" starttime="20230107 11:20:22.224" endtime="20230107 11:20:28.004"/>
</kw>
<msg timestamp="20230107 11:20:28.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:22.222" endtime="20230107 11:20:28.005"/>
</kw>
<msg timestamp="20230107 11:20:28.006" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:20:22.221" endtime="20230107 11:20:28.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:20:28.006" endtime="20230107 11:20:28.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:28.013" level="INFO">Running command 'ozone sh bucket info o3:///46106-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:33.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:33.848" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230107 11:20:28.010" endtime="20230107 11:20:33.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:33.850" level="INFO">-1</msg>
<status status="PASS" starttime="20230107 11:20:33.849" endtime="20230107 11:20:33.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:33.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:33.850" endtime="20230107 11:20:33.852"/>
</kw>
<status status="PASS" starttime="20230107 11:20:28.009" endtime="20230107 11:20:33.852"/>
</kw>
<msg timestamp="20230107 11:20:33.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:28.008" endtime="20230107 11:20:33.853"/>
</kw>
<msg timestamp="20230107 11:20:33.854" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230107 11:20:28.007" endtime="20230107 11:20:33.854"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230107 11:20:33.854" endtime="20230107 11:20:33.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:33.860" level="INFO">Running command 'ozone sh bucket delete o3:///46106-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:39.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:39.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:20:33.857" endtime="20230107 11:20:39.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:39.478" level="INFO"/>
<status status="PASS" starttime="20230107 11:20:39.477" endtime="20230107 11:20:39.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:39.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:39.478" endtime="20230107 11:20:39.479"/>
</kw>
<status status="PASS" starttime="20230107 11:20:33.856" endtime="20230107 11:20:39.480"/>
</kw>
<msg timestamp="20230107 11:20:39.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:33.856" endtime="20230107 11:20:39.481"/>
</kw>
<status status="PASS" starttime="20230107 11:20:33.855" endtime="20230107 11:20:39.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:39.486" level="INFO">Running command 'ozone sh volume delete o3:///46106-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:43.480" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230107 11:20:39.483" endtime="20230107 11:20:43.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230107 11:20:43.481" endtime="20230107 11:20:43.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230107 11:20:43.482" endtime="20230107 11:20:43.482"/>
</kw>
<status status="FAIL" starttime="20230107 11:20:39.482" endtime="20230107 11:20:43.482"/>
</kw>
<msg timestamp="20230107 11:20:43.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230107 11:20:39.482" endtime="20230107 11:20:43.483"/>
</kw>
<status status="FAIL" starttime="20230107 11:20:39.481" endtime="20230107 11:20:43.484"/>
</kw>
<status status="FAIL" starttime="20230107 11:15:43.553" endtime="20230107 11:20:43.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230107 11:15:43.479" endtime="20230107 11:20:43.485">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20230107 11:06:46.448" endtime="20230107 11:20:43.489"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:43.547" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:43.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:43.563" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 11:20:43.535" endtime="20230107 11:20:43.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:43.565" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 11:20:43.564" endtime="20230107 11:20:43.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:43.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:43.565" endtime="20230107 11:20:43.566"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.533" endtime="20230107 11:20:43.567"/>
</kw>
<msg timestamp="20230107 11:20:43.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:43.532" endtime="20230107 11:20:43.567"/>
</kw>
<msg timestamp="20230107 11:20:43.568" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 11:20:43.531" endtime="20230107 11:20:43.568"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 11:20:43.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 11:20:43.568" endtime="20230107 11:20:43.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:43.604" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:43.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:43.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 11:20:43.588" endtime="20230107 11:20:43.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:43.727" level="INFO"/>
<status status="PASS" starttime="20230107 11:20:43.726" endtime="20230107 11:20:43.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:43.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:43.728" endtime="20230107 11:20:43.729"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.581" endtime="20230107 11:20:43.729"/>
</kw>
<msg timestamp="20230107 11:20:43.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:43.581" endtime="20230107 11:20:43.730"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.579" endtime="20230107 11:20:43.730"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.578" endtime="20230107 11:20:43.730"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.530" endtime="20230107 11:20:43.730"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.528" endtime="20230107 11:20:43.731"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230107 11:20:43.733" level="INFO">${random} = yt1Ycu9Ovb</msg>
<status status="PASS" starttime="20230107 11:20:43.731" endtime="20230107 11:20:43.733"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:43.751" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p yt1Ycu9Ovb --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:20:54.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:20:54.605" level="INFO">${output} = 2023-01-07 11:20:47,596 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 11:20:47,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 11:20:43.741" endtime="20230107 11:20:54.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:20:54.607" level="INFO">2023-01-07 11:20:47,596 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 11:20:47,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-07 11:20:47,760 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-07 11:20:47,979 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yt1Ycu9Ovb and number-of-tests 1
2023-01-07 11:20:48,117 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:49,122 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:50,123 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:51,124 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:51,251 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-07 11:20:51,318 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-01-07 11:20:51,763 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-01-07 11:20:52,124 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:53,125 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:54,125 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-07 11:20:54,247 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2814.780483, max=2814.780483, mean=2814.780483, stddev=0.0, median=2814.780483, p75=2814.780483, p95=2814.780483, p98=2814.780483, p99=2814.780483, p999=2814.780483, mean_rate=0.2646399640560496, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-07 11:20:54,248 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-07 11:20:54,248 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-07 11:20:54,248 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230107 11:20:54.606" endtime="20230107 11:20:54.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:20:54.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:20:54.608" endtime="20230107 11:20:54.609"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.739" endtime="20230107 11:20:54.609"/>
</kw>
<msg timestamp="20230107 11:20:54.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:43.738" endtime="20230107 11:20:54.610"/>
</kw>
<msg timestamp="20230107 11:20:54.610" level="INFO">${result} = 2023-01-07 11:20:47,596 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 11:20:47,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 11:20:43.736" endtime="20230107 11:20:54.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:20:54.611" endtime="20230107 11:20:54.611"/>
</kw>
<status status="PASS" starttime="20230107 11:20:43.734" endtime="20230107 11:20:54.612"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 11:20:54.620" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p yt1Ycu9Ovb  2&gt;&amp;1'.</msg>
<msg timestamp="20230107 11:21:03.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 11:21:03.955" level="INFO">${output} = 2023-01-07 11:20:57,318 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 11:20:57,469 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 11:20:54.617" endtime="20230107 11:21:03.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 11:21:03.957" level="INFO">2023-01-07 11:20:57,318 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 11:20:57,469 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-01-07 11:20:57,469 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-01-07 11:20:57,744 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yt1Ycu9Ovb and number-of-tests 1
2023-01-07 11:20:57,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:58,845 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:20:59,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:21:00,804 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-01-07 11:21:00,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:21:01,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-01-07 11:21:02,849 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-01-07 11:21:03,530 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=42.374628, max=42.374628, mean=42.374628, stddev=0.0, median=42.374628, p75=42.374628, p95=42.374628, p98=42.374628, p99=42.374628, p999=42.374628, mean_rate=0.9112796512093173, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-01-07 11:21:03,531 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-01-07 11:21:03,547 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-01-07 11:21:03,547 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230107 11:21:03.956" endtime="20230107 11:21:03.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 11:21:03.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 11:21:03.958" endtime="20230107 11:21:03.958"/>
</kw>
<status status="PASS" starttime="20230107 11:20:54.615" endtime="20230107 11:21:03.959"/>
</kw>
<msg timestamp="20230107 11:21:03.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 11:20:54.615" endtime="20230107 11:21:03.960"/>
</kw>
<msg timestamp="20230107 11:21:03.960" level="INFO">${result} = 2023-01-07 11:20:57,318 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-01-07 11:20:57,469 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230107 11:20:54.614" endtime="20230107 11:21:03.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230107 11:21:03.960" endtime="20230107 11:21:03.961"/>
</kw>
<status status="PASS" starttime="20230107 11:20:54.612" endtime="20230107 11:21:03.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230107 11:20:43.526" endtime="20230107 11:21:03.962"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230107 11:20:43.497" endtime="20230107 11:21:03.963"/>
</suite>
<status status="FAIL" starttime="20230107 10:55:38.712" endtime="20230107 11:21:03.967"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:29.870" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:29.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:29.875" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230107 10:55:29.864" endtime="20230107 10:55:29.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:29.876" level="INFO">scm</msg>
<status status="PASS" starttime="20230107 10:55:29.876" endtime="20230107 10:55:29.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:29.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:29.877" endtime="20230107 10:55:29.878"/>
</kw>
<status status="PASS" starttime="20230107 10:55:29.863" endtime="20230107 10:55:29.878"/>
</kw>
<msg timestamp="20230107 10:55:29.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:29.863" endtime="20230107 10:55:29.880"/>
</kw>
<msg timestamp="20230107 10:55:29.880" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230107 10:55:29.862" endtime="20230107 10:55:29.880"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230107 10:55:29.881" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230107 10:55:29.880" endtime="20230107 10:55:29.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230107 10:55:29.886" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230107 10:55:29.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230107 10:55:29.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230107 10:55:29.884" endtime="20230107 10:55:29.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230107 10:55:29.941" level="INFO"/>
<status status="PASS" starttime="20230107 10:55:29.939" endtime="20230107 10:55:29.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230107 10:55:29.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230107 10:55:29.941" endtime="20230107 10:55:29.942"/>
</kw>
<status status="PASS" starttime="20230107 10:55:29.883" endtime="20230107 10:55:29.943"/>
</kw>
<msg timestamp="20230107 10:55:29.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230107 10:55:29.883" endtime="20230107 10:55:29.943"/>
</kw>
<status status="PASS" starttime="20230107 10:55:29.882" endtime="20230107 10:55:29.944"/>
</kw>
<status status="PASS" starttime="20230107 10:55:29.882" endtime="20230107 10:55:29.944"/>
</kw>
<status status="PASS" starttime="20230107 10:55:29.860" endtime="20230107 10:55:29.944"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230107 10:55:29.859" endtime="20230107 10:55:29.945"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230107 10:55:29.772" endtime="20230107 10:55:29.947"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1525430"/>
</suite>
<statistics>
<total>
<stat pass="31" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="31" fail="1" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="30" fail="1" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="6" fail="1" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
