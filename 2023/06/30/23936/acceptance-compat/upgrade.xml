<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230630 10:14:41.134" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:41.999" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:44.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:44.605" level="INFO">${output} = 2023-06-30 10:06:44,434 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230630 10:06:41.995" endtime="20230630 10:06:44.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:44.606" level="INFO">2023-06-30 10:06:44,434 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230630 10:06:44.605" endtime="20230630 10:06:44.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:44.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:44.606" endtime="20230630 10:06:44.607"/>
</kw>
<status status="PASS" starttime="20230630 10:06:41.995" endtime="20230630 10:06:44.607"/>
</kw>
<msg timestamp="20230630 10:06:44.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:41.995" endtime="20230630 10:06:44.610"/>
</kw>
<msg timestamp="20230630 10:06:44.610" level="INFO">${output} = 2023-06-30 10:06:44,434 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230630 10:06:41.994" endtime="20230630 10:06:44.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:06:44.611" endtime="20230630 10:06:44.611"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:44.619" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:47.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:47.815" level="INFO">${output} = 2023-06-30 10:06:47,747 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230630 10:06:44.612" endtime="20230630 10:06:47.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:47.816" level="INFO">2023-06-30 10:06:47,747 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230630 10:06:47.815" endtime="20230630 10:06:47.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:47.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:47.816" endtime="20230630 10:06:47.817"/>
</kw>
<status status="PASS" starttime="20230630 10:06:44.612" endtime="20230630 10:06:47.817"/>
</kw>
<msg timestamp="20230630 10:06:47.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:44.612" endtime="20230630 10:06:47.818"/>
</kw>
<msg timestamp="20230630 10:06:47.818" level="INFO">${output} = 2023-06-30 10:06:47,747 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230630 10:06:44.611" endtime="20230630 10:06:47.818"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:06:47.818" endtime="20230630 10:06:47.818"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:06:41.993" endtime="20230630 10:06:47.818"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:47.823" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230630 10:06:47.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:47.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:06:47.821" endtime="20230630 10:06:47.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:47.826" level="INFO"/>
<status status="PASS" starttime="20230630 10:06:47.826" endtime="20230630 10:06:47.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:47.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:47.826" endtime="20230630 10:06:47.827"/>
</kw>
<status status="PASS" starttime="20230630 10:06:47.821" endtime="20230630 10:06:47.827"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:47.830" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:53.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:53.461" level="INFO">${output} = 2023-06-30 10:06:51,410 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:06:51,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230630 10:06:47.829" endtime="20230630 10:06:53.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:53.462" level="INFO">2023-06-30 10:06:51,410 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:06:51,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-30 10:06:51,482 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-30 10:06:51,715 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230630 10:06:53.461" endtime="20230630 10:06:53.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:53.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:53.462" endtime="20230630 10:06:53.463"/>
</kw>
<status status="PASS" starttime="20230630 10:06:47.828" endtime="20230630 10:06:53.463"/>
</kw>
<msg timestamp="20230630 10:06:53.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:47.828" endtime="20230630 10:06:53.464"/>
</kw>
<msg timestamp="20230630 10:06:53.464" level="INFO">${output} = 2023-06-30 10:06:51,410 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:06:51,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230630 10:06:47.827" endtime="20230630 10:06:53.464"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:06:53.464" endtime="20230630 10:06:53.464"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:53.467" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:53.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:53.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:06:53.465" endtime="20230630 10:06:53.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:53.470" level="INFO"/>
<status status="PASS" starttime="20230630 10:06:53.470" endtime="20230630 10:06:53.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:53.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:53.470" endtime="20230630 10:06:53.471"/>
</kw>
<status status="PASS" starttime="20230630 10:06:53.464" endtime="20230630 10:06:53.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:06:47.820" endtime="20230630 10:06:53.471"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:53.477" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:56.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:56.300" level="INFO">${output} = 2023-06-30 10:06:56,235 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230630 10:06:53.475" endtime="20230630 10:06:56.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:56.301" level="INFO">2023-06-30 10:06:56,235 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230630 10:06:56.300" endtime="20230630 10:06:56.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:56.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:56.301" endtime="20230630 10:06:56.301"/>
</kw>
<status status="PASS" starttime="20230630 10:06:53.474" endtime="20230630 10:06:56.302"/>
</kw>
<msg timestamp="20230630 10:06:56.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:53.474" endtime="20230630 10:06:56.302"/>
</kw>
<msg timestamp="20230630 10:06:56.302" level="INFO">${output} = 2023-06-30 10:06:56,235 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230630 10:06:53.474" endtime="20230630 10:06:56.302"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:06:56.303" endtime="20230630 10:06:56.303"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:06:53.473" endtime="20230630 10:06:56.303"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:56.307" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230630 10:06:56.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:56.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:06:56.305" endtime="20230630 10:06:56.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:56.310" level="INFO"/>
<status status="PASS" starttime="20230630 10:06:56.310" endtime="20230630 10:06:56.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:56.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:56.310" endtime="20230630 10:06:56.311"/>
</kw>
<status status="PASS" starttime="20230630 10:06:56.305" endtime="20230630 10:06:56.311"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:56.314" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:00.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:00.746" level="INFO">${output} = 2023-06-30 10:06:59,357 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:06:59,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230630 10:06:56.313" endtime="20230630 10:07:00.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:00.747" level="INFO">2023-06-30 10:06:59,357 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:06:59,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-30 10:06:59,435 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-30 10:06:59,671 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230630 10:07:00.747" endtime="20230630 10:07:00.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:00.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:00.747" endtime="20230630 10:07:00.748"/>
</kw>
<status status="PASS" starttime="20230630 10:06:56.312" endtime="20230630 10:07:00.748"/>
</kw>
<msg timestamp="20230630 10:07:00.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:56.312" endtime="20230630 10:07:00.749"/>
</kw>
<msg timestamp="20230630 10:07:00.749" level="INFO">${output} = 2023-06-30 10:06:59,357 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:06:59,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230630 10:06:56.311" endtime="20230630 10:07:00.749"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:00.749" endtime="20230630 10:07:00.750"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:00.752" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:00.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:00.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:00.751" endtime="20230630 10:07:00.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:00.756" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:00.755" endtime="20230630 10:07:00.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:00.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:00.756" endtime="20230630 10:07:00.756"/>
</kw>
<status status="PASS" starttime="20230630 10:07:00.750" endtime="20230630 10:07:00.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:06:56.304" endtime="20230630 10:07:00.757"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:00.763" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:01.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:01.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:00.761" endtime="20230630 10:07:01.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:01.335" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:01.335" endtime="20230630 10:07:01.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:01.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:01.336" endtime="20230630 10:07:01.336"/>
</kw>
<status status="PASS" starttime="20230630 10:07:00.761" endtime="20230630 10:07:01.336"/>
</kw>
<msg timestamp="20230630 10:07:01.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:00.760" endtime="20230630 10:07:01.337"/>
</kw>
<status status="PASS" starttime="20230630 10:07:00.760" endtime="20230630 10:07:01.337"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:01.340" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:01.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:01.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:01.339" endtime="20230630 10:07:01.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:01.800" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:01.799" endtime="20230630 10:07:01.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:01.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:01.800" endtime="20230630 10:07:01.801"/>
</kw>
<status status="PASS" starttime="20230630 10:07:01.338" endtime="20230630 10:07:01.801"/>
</kw>
<msg timestamp="20230630 10:07:01.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:01.338" endtime="20230630 10:07:01.801"/>
</kw>
<status status="PASS" starttime="20230630 10:07:01.337" endtime="20230630 10:07:01.802"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:01.805" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:02.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:02.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:01.803" endtime="20230630 10:07:02.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:02.248" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:02.247" endtime="20230630 10:07:02.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:02.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:02.248" endtime="20230630 10:07:02.249"/>
</kw>
<status status="PASS" starttime="20230630 10:07:01.802" endtime="20230630 10:07:02.249"/>
</kw>
<msg timestamp="20230630 10:07:02.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:01.802" endtime="20230630 10:07:02.250"/>
</kw>
<status status="PASS" starttime="20230630 10:07:01.802" endtime="20230630 10:07:02.250"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:02.253" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:02.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:02.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:02.251" endtime="20230630 10:07:02.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:02.689" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:02.688" endtime="20230630 10:07:02.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:02.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:02.689" endtime="20230630 10:07:02.689"/>
</kw>
<status status="PASS" starttime="20230630 10:07:02.251" endtime="20230630 10:07:02.690"/>
</kw>
<msg timestamp="20230630 10:07:02.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:02.250" endtime="20230630 10:07:02.690"/>
</kw>
<status status="PASS" starttime="20230630 10:07:02.250" endtime="20230630 10:07:02.690"/>
</kw>
<status status="PASS" starttime="20230630 10:07:00.759" endtime="20230630 10:07:02.690"/>
</kw>
<status status="PASS" starttime="20230630 10:07:00.758" endtime="20230630 10:07:02.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:00.758" endtime="20230630 10:07:02.691"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:02.696" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:04.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:04.460" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230630 10:07:02.694" endtime="20230630 10:07:04.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:04.462" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230630 10:07:04.461" endtime="20230630 10:07:04.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:04.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:04.462" endtime="20230630 10:07:04.462"/>
</kw>
<status status="PASS" starttime="20230630 10:07:02.694" endtime="20230630 10:07:04.462"/>
</kw>
<msg timestamp="20230630 10:07:04.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:02.693" endtime="20230630 10:07:04.463"/>
</kw>
<msg timestamp="20230630 10:07:04.463" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230630 10:07:02.693" endtime="20230630 10:07:04.463"/>
</kw>
<msg timestamp="20230630 10:07:04.464" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230630 10:07:02.692" endtime="20230630 10:07:04.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:04.464" endtime="20230630 10:07:04.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:04.464" endtime="20230630 10:07:04.465"/>
</kw>
<msg timestamp="20230630 10:07:04.465" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230630 10:07:02.692" endtime="20230630 10:07:04.465"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230630 10:07:04.465" endtime="20230630 10:07:04.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:02.691" endtime="20230630 10:07:04.466"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:04.470" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230630 10:07:04.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:04.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:04.468" endtime="20230630 10:07:04.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:04.473" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:04.473" endtime="20230630 10:07:04.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:04.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:04.473" endtime="20230630 10:07:04.474"/>
</kw>
<status status="PASS" starttime="20230630 10:07:04.467" endtime="20230630 10:07:04.474"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:04.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:06.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:06.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:04.476" endtime="20230630 10:07:06.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:06.116" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:06.115" endtime="20230630 10:07:06.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:06.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:06.116" endtime="20230630 10:07:06.117"/>
</kw>
<msg timestamp="20230630 10:07:06.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:04.475" endtime="20230630 10:07:06.117"/>
</kw>
<msg timestamp="20230630 10:07:06.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:04.475" endtime="20230630 10:07:06.117"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:06.117" endtime="20230630 10:07:06.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:06.120" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:06.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:06.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:06.118" endtime="20230630 10:07:06.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:06.124" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:06.123" endtime="20230630 10:07:06.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:06.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:06.124" endtime="20230630 10:07:06.124"/>
</kw>
<status status="PASS" starttime="20230630 10:07:06.118" endtime="20230630 10:07:06.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:04.467" endtime="20230630 10:07:06.125"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230630 10:06:41.917" endtime="20230630 10:07:06.126"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230630 10:07:09.918" level="INFO">${random} = 15782</msg>
<status status="PASS" starttime="20230630 10:07:09.917" endtime="20230630 10:07:09.918"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:09.923" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-15782 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:13.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:13.935" level="INFO">${output} = 2023-06-30 10:07:12,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:07:12,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230630 10:07:09.920" endtime="20230630 10:07:13.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:13.936" level="INFO">2023-06-30 10:07:12,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:07:12,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-30 10:07:12,816 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230630 10:07:13.935" endtime="20230630 10:07:13.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:13.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:13.936" endtime="20230630 10:07:13.937"/>
</kw>
<status status="PASS" starttime="20230630 10:07:09.919" endtime="20230630 10:07:13.937"/>
</kw>
<msg timestamp="20230630 10:07:13.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:09.918" endtime="20230630 10:07:13.938"/>
</kw>
<msg timestamp="20230630 10:07:13.939" level="INFO">${output} = 2023-06-30 10:07:12,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-30 10:07:12,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230630 10:07:09.918" endtime="20230630 10:07:13.939"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:13.939" endtime="20230630 10:07:13.939"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:13.942" level="INFO">Running command 'cat /tmp/key-15782 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:13.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:13.944" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230630 10:07:13.940" endtime="20230630 10:07:13.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:13.945" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230630 10:07:13.945" endtime="20230630 10:07:13.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:13.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:13.946" endtime="20230630 10:07:13.946"/>
</kw>
<msg timestamp="20230630 10:07:13.946" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230630 10:07:13.939" endtime="20230630 10:07:13.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:13.947" endtime="20230630 10:07:13.947"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:13.949" level="INFO">Running command 'rm /tmp/key-15782 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:13.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:13.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:13.948" endtime="20230630 10:07:13.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:13.953" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:13.952" endtime="20230630 10:07:13.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:13.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:13.953" endtime="20230630 10:07:13.954"/>
</kw>
<status status="PASS" starttime="20230630 10:07:13.947" endtime="20230630 10:07:13.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:09.916" endtime="20230630 10:07:13.954"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:13.960" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:14.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:14.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:13.959" endtime="20230630 10:07:14.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:14.413" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:14.413" endtime="20230630 10:07:14.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:14.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:14.414" endtime="20230630 10:07:14.414"/>
</kw>
<status status="PASS" starttime="20230630 10:07:13.958" endtime="20230630 10:07:14.414"/>
</kw>
<msg timestamp="20230630 10:07:14.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:13.958" endtime="20230630 10:07:14.415"/>
</kw>
<status status="PASS" starttime="20230630 10:07:13.958" endtime="20230630 10:07:14.415"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:14.418" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:14.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:14.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:14.416" endtime="20230630 10:07:14.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:14.855" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:14.855" endtime="20230630 10:07:14.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:14.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:14.856" endtime="20230630 10:07:14.856"/>
</kw>
<status status="PASS" starttime="20230630 10:07:14.416" endtime="20230630 10:07:14.856"/>
</kw>
<msg timestamp="20230630 10:07:14.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:14.416" endtime="20230630 10:07:14.857"/>
</kw>
<status status="PASS" starttime="20230630 10:07:14.415" endtime="20230630 10:07:14.857"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:14.860" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:15.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:15.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:14.858" endtime="20230630 10:07:15.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:15.304" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:15.303" endtime="20230630 10:07:15.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:15.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:15.304" endtime="20230630 10:07:15.305"/>
</kw>
<status status="PASS" starttime="20230630 10:07:14.858" endtime="20230630 10:07:15.305"/>
</kw>
<msg timestamp="20230630 10:07:15.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:14.858" endtime="20230630 10:07:15.306"/>
</kw>
<status status="PASS" starttime="20230630 10:07:14.857" endtime="20230630 10:07:15.306"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:15.310" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:15.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:15.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:15.307" endtime="20230630 10:07:15.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:15.794" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:15.793" endtime="20230630 10:07:15.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:15.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:15.794" endtime="20230630 10:07:15.795"/>
</kw>
<status status="PASS" starttime="20230630 10:07:15.307" endtime="20230630 10:07:15.795"/>
</kw>
<msg timestamp="20230630 10:07:15.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:07:15.307" endtime="20230630 10:07:15.795"/>
</kw>
<status status="PASS" starttime="20230630 10:07:15.306" endtime="20230630 10:07:15.795"/>
</kw>
<status status="PASS" starttime="20230630 10:07:13.957" endtime="20230630 10:07:15.796"/>
</kw>
<status status="PASS" starttime="20230630 10:07:13.957" endtime="20230630 10:07:15.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:13.956" endtime="20230630 10:07:15.796"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:15.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:16.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:16.544" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:00 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230630 10:07:15.798" endtime="20230630 10:07:16.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:16.545" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:00 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 30 Jun 2023 10:07:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230630 10:07:16.545" endtime="20230630 10:07:16.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:16.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:16.546" endtime="20230630 10:07:16.546"/>
</kw>
<msg timestamp="20230630 10:07:16.547" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:00 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230630 10:07:15.798" endtime="20230630 10:07:16.547"/>
</kw>
<msg timestamp="20230630 10:07:16.547" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:00 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230630 10:07:15.797" endtime="20230630 10:07:16.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:16.547" endtime="20230630 10:07:16.547"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:16.553" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:16.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:16.555" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230630 10:07:16.548" endtime="20230630 10:07:16.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:16.556" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230630 10:07:16.555" endtime="20230630 10:07:16.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:16.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:16.556" endtime="20230630 10:07:16.557"/>
</kw>
<msg timestamp="20230630 10:07:16.557" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230630 10:07:16.548" endtime="20230630 10:07:16.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:16.557" endtime="20230630 10:07:16.557"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:16.560" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:16.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:16.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:16.558" endtime="20230630 10:07:16.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:16.564" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:16.563" endtime="20230630 10:07:16.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:16.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:16.564" endtime="20230630 10:07:16.565"/>
</kw>
<status status="PASS" starttime="20230630 10:07:16.558" endtime="20230630 10:07:16.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:15.797" endtime="20230630 10:07:16.565"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:16.570" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:17.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:17.179" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:06 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230630 10:07:16.569" endtime="20230630 10:07:17.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:17.180" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:06 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 30 Jun 2023 10:07:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230630 10:07:17.179" endtime="20230630 10:07:17.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:17.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:17.180" endtime="20230630 10:07:17.180"/>
</kw>
<msg timestamp="20230630 10:07:17.181" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:06 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230630 10:07:16.568" endtime="20230630 10:07:17.181"/>
</kw>
<msg timestamp="20230630 10:07:17.181" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 30 Jun 2023 10:07:06 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230630 10:07:16.567" endtime="20230630 10:07:17.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:17.181" endtime="20230630 10:07:17.182"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:17.184" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:17.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:17.187" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230630 10:07:17.182" endtime="20230630 10:07:17.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:17.188" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230630 10:07:17.187" endtime="20230630 10:07:17.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:17.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:17.188" endtime="20230630 10:07:17.189"/>
</kw>
<msg timestamp="20230630 10:07:17.189" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230630 10:07:17.182" endtime="20230630 10:07:17.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230630 10:07:17.189" endtime="20230630 10:07:17.189"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:17.192" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:07:17.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:07:17.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230630 10:07:17.190" endtime="20230630 10:07:17.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:07:17.195" level="INFO"/>
<status status="PASS" starttime="20230630 10:07:17.195" endtime="20230630 10:07:17.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:07:17.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:07:17.195" endtime="20230630 10:07:17.196"/>
</kw>
<status status="PASS" starttime="20230630 10:07:17.190" endtime="20230630 10:07:17.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230630 10:07:16.567" endtime="20230630 10:07:17.196"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230630 10:07:09.843" endtime="20230630 10:07:17.198"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230630 10:07:21.102" endtime="20230630 10:07:21.102"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230630 10:07:21.103" endtime="20230630 10:07:21.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:07:21.108" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:12:21.102" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230630 10:07:21.104" endtime="20230630 10:12:21.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230630 10:12:21.103" endtime="20230630 10:12:21.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230630 10:12:21.103" endtime="20230630 10:12:21.103"/>
</kw>
<status status="FAIL" starttime="20230630 10:07:21.104" endtime="20230630 10:12:21.103"/>
</kw>
<msg timestamp="20230630 10:12:21.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230630 10:07:21.103" endtime="20230630 10:12:21.105"/>
</kw>
<status status="FAIL" starttime="20230630 10:07:21.103" endtime="20230630 10:12:21.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230630 10:12:21.105" endtime="20230630 10:12:21.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230630 10:07:21.101" endtime="20230630 10:12:21.106">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230630 10:07:21.055" endtime="20230630 10:12:21.107"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230630 10:06:33.018" endtime="20230630 10:06:33.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:33.026" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:33.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:33.028" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=23fba701d2d6
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230630 10:06:33.022" endtime="20230630 10:06:33.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:33.029" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=23fba701d2d6
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230630 10:06:33.029" endtime="20230630 10:06:33.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:33.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:33.029" endtime="20230630 10:06:33.030"/>
</kw>
<status status="PASS" starttime="20230630 10:06:33.021" endtime="20230630 10:06:33.030"/>
</kw>
<msg timestamp="20230630 10:06:33.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:33.021" endtime="20230630 10:06:33.031"/>
</kw>
<msg timestamp="20230630 10:06:33.032" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=23fba701d2d6
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230630 10:06:33.021" endtime="20230630 10:06:33.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:33.032" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=23fba701d2d6
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230630 10:06:33.032" endtime="20230630 10:06:33.032"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230630 10:06:33.032" endtime="20230630 10:06:33.033"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:33.036" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:35.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:35.686" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230630 10:06:33.034" endtime="20230630 10:06:35.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:35.687" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230630 10:06:35.686" endtime="20230630 10:06:35.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:35.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:35.687" endtime="20230630 10:06:35.688"/>
</kw>
<status status="PASS" starttime="20230630 10:06:33.034" endtime="20230630 10:06:35.688"/>
</kw>
<msg timestamp="20230630 10:06:35.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:33.033" endtime="20230630 10:06:35.689"/>
</kw>
<msg timestamp="20230630 10:06:35.689" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230630 10:06:33.033" endtime="20230630 10:06:35.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:35.689" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230630 10:06:35.689" endtime="20230630 10:06:35.689"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230630 10:06:35.689" endtime="20230630 10:06:35.690"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230630 10:06:33.017" endtime="20230630 10:06:35.690"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230630 10:06:35.692" endtime="20230630 10:06:35.693"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230630 10:06:35.693" endtime="20230630 10:06:35.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230630 10:06:35.697" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230630 10:06:38.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230630 10:06:38.201" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230630 10:06:35.695" endtime="20230630 10:06:38.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:38.204" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230630 10:06:38.201" endtime="20230630 10:06:38.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230630 10:06:38.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230630 10:06:38.205" endtime="20230630 10:06:38.205"/>
</kw>
<status status="PASS" starttime="20230630 10:06:35.694" endtime="20230630 10:06:38.205"/>
</kw>
<msg timestamp="20230630 10:06:38.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230630 10:06:35.694" endtime="20230630 10:06:38.206"/>
</kw>
<msg timestamp="20230630 10:06:38.206" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230630 10:06:35.693" endtime="20230630 10:06:38.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230630 10:06:38.207" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230630 10:06:38.206" endtime="20230630 10:06:38.207"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230630 10:06:38.207" endtime="20230630 10:06:38.207"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230630 10:06:35.691" endtime="20230630 10:06:38.207"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230630 10:06:32.964" endtime="20230630 10:06:38.208"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="336860"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
