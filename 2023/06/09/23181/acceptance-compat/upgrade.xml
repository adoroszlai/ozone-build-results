<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230609 20:54:41.790" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:31.867" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:34.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:34.631" level="INFO">${output} = 2023-06-09 20:48:34,349 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230609 20:48:31.863" endtime="20230609 20:48:34.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:34.633" level="INFO">2023-06-09 20:48:34,349 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230609 20:48:34.633" endtime="20230609 20:48:34.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:34.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:34.634" endtime="20230609 20:48:34.634"/>
</kw>
<status status="PASS" starttime="20230609 20:48:31.862" endtime="20230609 20:48:34.634"/>
</kw>
<msg timestamp="20230609 20:48:34.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:31.862" endtime="20230609 20:48:34.636"/>
</kw>
<msg timestamp="20230609 20:48:34.636" level="INFO">${output} = 2023-06-09 20:48:34,349 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230609 20:48:31.862" endtime="20230609 20:48:34.636"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:34.636" endtime="20230609 20:48:34.636"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:34.644" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:37.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:37.586" level="INFO">${output} = 2023-06-09 20:48:37,505 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230609 20:48:34.638" endtime="20230609 20:48:37.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:37.587" level="INFO">2023-06-09 20:48:37,505 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230609 20:48:37.587" endtime="20230609 20:48:37.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:37.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:37.588" endtime="20230609 20:48:37.589"/>
</kw>
<status status="PASS" starttime="20230609 20:48:34.637" endtime="20230609 20:48:37.589"/>
</kw>
<msg timestamp="20230609 20:48:37.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:34.637" endtime="20230609 20:48:37.589"/>
</kw>
<msg timestamp="20230609 20:48:37.590" level="INFO">${output} = 2023-06-09 20:48:37,505 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230609 20:48:34.637" endtime="20230609 20:48:37.590"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:37.590" endtime="20230609 20:48:37.590"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:31.861" endtime="20230609 20:48:37.590"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:37.595" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230609 20:48:37.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:37.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:37.593" endtime="20230609 20:48:37.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:37.598" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:37.597" endtime="20230609 20:48:37.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:37.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:37.598" endtime="20230609 20:48:37.599"/>
</kw>
<status status="PASS" starttime="20230609 20:48:37.592" endtime="20230609 20:48:37.599"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:37.612" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:45.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:45.561" level="INFO">${output} = 2023-06-09 20:48:41,160 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:48:41,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230609 20:48:37.607" endtime="20230609 20:48:45.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:45.562" level="INFO">2023-06-09 20:48:41,160 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:48:41,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-09 20:48:41,264 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-09 20:48:41,507 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230609 20:48:45.561" endtime="20230609 20:48:45.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:45.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:45.563" endtime="20230609 20:48:45.563"/>
</kw>
<status status="PASS" starttime="20230609 20:48:37.600" endtime="20230609 20:48:45.564"/>
</kw>
<msg timestamp="20230609 20:48:45.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:37.600" endtime="20230609 20:48:45.564"/>
</kw>
<msg timestamp="20230609 20:48:45.564" level="INFO">${output} = 2023-06-09 20:48:41,160 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:48:41,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230609 20:48:37.599" endtime="20230609 20:48:45.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:45.565" endtime="20230609 20:48:45.565"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:45.568" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:45.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:45.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:45.566" endtime="20230609 20:48:45.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:45.572" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:45.571" endtime="20230609 20:48:45.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:45.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:45.572" endtime="20230609 20:48:45.573"/>
</kw>
<status status="PASS" starttime="20230609 20:48:45.565" endtime="20230609 20:48:45.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:37.591" endtime="20230609 20:48:45.573"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:45.578" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:48.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:48.184" level="INFO">${output} = 2023-06-09 20:48:48,132 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230609 20:48:45.576" endtime="20230609 20:48:48.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:48.185" level="INFO">2023-06-09 20:48:48,132 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230609 20:48:48.184" endtime="20230609 20:48:48.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:48.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:48.185" endtime="20230609 20:48:48.186"/>
</kw>
<status status="PASS" starttime="20230609 20:48:45.576" endtime="20230609 20:48:48.186"/>
</kw>
<msg timestamp="20230609 20:48:48.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:45.575" endtime="20230609 20:48:48.187"/>
</kw>
<msg timestamp="20230609 20:48:48.187" level="INFO">${output} = 2023-06-09 20:48:48,132 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230609 20:48:45.575" endtime="20230609 20:48:48.187"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:48.187" endtime="20230609 20:48:48.187"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:45.574" endtime="20230609 20:48:48.188"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:48.193" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230609 20:48:48.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:48.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:48.190" endtime="20230609 20:48:48.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:48.195" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:48.194" endtime="20230609 20:48:48.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:48.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:48.195" endtime="20230609 20:48:48.196"/>
</kw>
<status status="PASS" starttime="20230609 20:48:48.190" endtime="20230609 20:48:48.196"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:48.200" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:52.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:52.409" level="INFO">${output} = 2023-06-09 20:48:50,995 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:48:51,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230609 20:48:48.198" endtime="20230609 20:48:52.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:52.411" level="INFO">2023-06-09 20:48:50,995 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:48:51,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-09 20:48:51,103 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-09 20:48:51,364 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230609 20:48:52.410" endtime="20230609 20:48:52.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:52.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:52.411" endtime="20230609 20:48:52.412"/>
</kw>
<status status="PASS" starttime="20230609 20:48:48.197" endtime="20230609 20:48:52.412"/>
</kw>
<msg timestamp="20230609 20:48:52.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:48.197" endtime="20230609 20:48:52.412"/>
</kw>
<msg timestamp="20230609 20:48:52.413" level="INFO">${output} = 2023-06-09 20:48:50,995 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:48:51,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230609 20:48:48.196" endtime="20230609 20:48:52.413"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:52.413" endtime="20230609 20:48:52.413"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:52.416" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:52.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:52.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:52.414" endtime="20230609 20:48:52.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:52.420" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:52.419" endtime="20230609 20:48:52.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:52.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:52.420" endtime="20230609 20:48:52.420"/>
</kw>
<status status="PASS" starttime="20230609 20:48:52.413" endtime="20230609 20:48:52.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:48.189" endtime="20230609 20:48:52.421"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:52.426" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:53.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:53.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:52.424" endtime="20230609 20:48:53.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:53.114" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:53.113" endtime="20230609 20:48:53.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:53.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:53.114" endtime="20230609 20:48:53.115"/>
</kw>
<status status="PASS" starttime="20230609 20:48:52.424" endtime="20230609 20:48:53.115"/>
</kw>
<msg timestamp="20230609 20:48:53.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:52.424" endtime="20230609 20:48:53.116"/>
</kw>
<status status="PASS" starttime="20230609 20:48:52.423" endtime="20230609 20:48:53.116"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:53.120" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:53.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:53.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:53.118" endtime="20230609 20:48:53.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:53.589" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:53.588" endtime="20230609 20:48:53.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:53.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:53.589" endtime="20230609 20:48:53.590"/>
</kw>
<status status="PASS" starttime="20230609 20:48:53.117" endtime="20230609 20:48:53.590"/>
</kw>
<msg timestamp="20230609 20:48:53.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:53.117" endtime="20230609 20:48:53.591"/>
</kw>
<status status="PASS" starttime="20230609 20:48:53.116" endtime="20230609 20:48:53.591"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:53.595" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:54.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:54.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:53.593" endtime="20230609 20:48:54.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:54.066" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:54.065" endtime="20230609 20:48:54.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:54.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:54.066" endtime="20230609 20:48:54.067"/>
</kw>
<status status="PASS" starttime="20230609 20:48:53.592" endtime="20230609 20:48:54.067"/>
</kw>
<msg timestamp="20230609 20:48:54.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:53.592" endtime="20230609 20:48:54.068"/>
</kw>
<status status="PASS" starttime="20230609 20:48:53.591" endtime="20230609 20:48:54.068"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:54.071" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:54.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:54.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:54.069" endtime="20230609 20:48:54.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:54.544" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:54.544" endtime="20230609 20:48:54.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:54.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:54.545" endtime="20230609 20:48:54.545"/>
</kw>
<status status="PASS" starttime="20230609 20:48:54.069" endtime="20230609 20:48:54.545"/>
</kw>
<msg timestamp="20230609 20:48:54.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:54.068" endtime="20230609 20:48:54.546"/>
</kw>
<status status="PASS" starttime="20230609 20:48:54.068" endtime="20230609 20:48:54.546"/>
</kw>
<status status="PASS" starttime="20230609 20:48:52.423" endtime="20230609 20:48:54.546"/>
</kw>
<status status="PASS" starttime="20230609 20:48:52.423" endtime="20230609 20:48:54.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:52.422" endtime="20230609 20:48:54.546"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:54.552" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:56.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:56.330" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230609 20:48:54.550" endtime="20230609 20:48:56.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:56.331" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230609 20:48:56.330" endtime="20230609 20:48:56.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:56.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:56.331" endtime="20230609 20:48:56.332"/>
</kw>
<status status="PASS" starttime="20230609 20:48:54.550" endtime="20230609 20:48:56.332"/>
</kw>
<msg timestamp="20230609 20:48:56.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:54.550" endtime="20230609 20:48:56.333"/>
</kw>
<msg timestamp="20230609 20:48:56.333" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230609 20:48:54.549" endtime="20230609 20:48:56.333"/>
</kw>
<msg timestamp="20230609 20:48:56.333" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230609 20:48:54.549" endtime="20230609 20:48:56.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:56.334" endtime="20230609 20:48:56.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:56.334" endtime="20230609 20:48:56.335"/>
</kw>
<msg timestamp="20230609 20:48:56.335" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230609 20:48:54.548" endtime="20230609 20:48:56.335"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230609 20:48:56.335" endtime="20230609 20:48:56.336"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:54.547" endtime="20230609 20:48:56.336"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:56.341" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230609 20:48:56.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:56.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:56.339" endtime="20230609 20:48:56.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:56.344" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:56.344" endtime="20230609 20:48:56.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:56.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:56.345" endtime="20230609 20:48:56.345"/>
</kw>
<status status="PASS" starttime="20230609 20:48:56.338" endtime="20230609 20:48:56.346"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:56.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:58.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:58.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:56.347" endtime="20230609 20:48:58.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:58.084" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:58.083" endtime="20230609 20:48:58.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:58.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:58.084" endtime="20230609 20:48:58.085"/>
</kw>
<msg timestamp="20230609 20:48:58.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:56.346" endtime="20230609 20:48:58.085"/>
</kw>
<msg timestamp="20230609 20:48:58.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:56.346" endtime="20230609 20:48:58.085"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:48:58.086" endtime="20230609 20:48:58.086"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:58.089" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:58.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:58.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:48:58.086" endtime="20230609 20:48:58.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:58.092" level="INFO"/>
<status status="PASS" starttime="20230609 20:48:58.092" endtime="20230609 20:48:58.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:58.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:58.092" endtime="20230609 20:48:58.093"/>
</kw>
<status status="PASS" starttime="20230609 20:48:58.086" endtime="20230609 20:48:58.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:48:56.337" endtime="20230609 20:48:58.094"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230609 20:48:31.782" endtime="20230609 20:48:58.095"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230609 20:49:01.902" level="INFO">${random} = 42156</msg>
<status status="PASS" starttime="20230609 20:49:01.902" endtime="20230609 20:49:01.902"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:01.907" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-42156 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:06.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:06.523" level="INFO">${output} = 2023-06-09 20:49:05,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:49:05,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230609 20:49:01.904" endtime="20230609 20:49:06.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:06.524" level="INFO">2023-06-09 20:49:05,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:49:05,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-09 20:49:05,296 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230609 20:49:06.523" endtime="20230609 20:49:06.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:06.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:06.524" endtime="20230609 20:49:06.525"/>
</kw>
<status status="PASS" starttime="20230609 20:49:01.904" endtime="20230609 20:49:06.525"/>
</kw>
<msg timestamp="20230609 20:49:06.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:49:01.903" endtime="20230609 20:49:06.526"/>
</kw>
<msg timestamp="20230609 20:49:06.527" level="INFO">${output} = 2023-06-09 20:49:05,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-09 20:49:05,295 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230609 20:49:01.902" endtime="20230609 20:49:06.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:49:06.527" endtime="20230609 20:49:06.527"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:06.530" level="INFO">Running command 'cat /tmp/key-42156 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:06.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:06.532" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230609 20:49:06.528" endtime="20230609 20:49:06.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:06.533" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230609 20:49:06.533" endtime="20230609 20:49:06.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:06.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:06.534" endtime="20230609 20:49:06.534"/>
</kw>
<msg timestamp="20230609 20:49:06.534" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230609 20:49:06.527" endtime="20230609 20:49:06.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:49:06.535" endtime="20230609 20:49:06.535"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:06.538" level="INFO">Running command 'rm /tmp/key-42156 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:06.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:06.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:06.536" endtime="20230609 20:49:06.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:06.541" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:06.541" endtime="20230609 20:49:06.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:06.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:06.542" endtime="20230609 20:49:06.542"/>
</kw>
<status status="PASS" starttime="20230609 20:49:06.535" endtime="20230609 20:49:06.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:49:01.901" endtime="20230609 20:49:06.543"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:06.548" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:07.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:07.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:06.546" endtime="20230609 20:49:07.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:07.016" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:07.015" endtime="20230609 20:49:07.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:07.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:07.016" endtime="20230609 20:49:07.017"/>
</kw>
<status status="PASS" starttime="20230609 20:49:06.546" endtime="20230609 20:49:07.017"/>
</kw>
<msg timestamp="20230609 20:49:07.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:49:06.545" endtime="20230609 20:49:07.018"/>
</kw>
<status status="PASS" starttime="20230609 20:49:06.545" endtime="20230609 20:49:07.018"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:07.021" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:07.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:07.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:07.019" endtime="20230609 20:49:07.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:07.483" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:07.482" endtime="20230609 20:49:07.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:07.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:07.483" endtime="20230609 20:49:07.483"/>
</kw>
<status status="PASS" starttime="20230609 20:49:07.019" endtime="20230609 20:49:07.484"/>
</kw>
<msg timestamp="20230609 20:49:07.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:49:07.018" endtime="20230609 20:49:07.484"/>
</kw>
<status status="PASS" starttime="20230609 20:49:07.018" endtime="20230609 20:49:07.484"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:07.488" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:07.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:07.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:07.486" endtime="20230609 20:49:07.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:07.956" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:07.956" endtime="20230609 20:49:07.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:07.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:07.957" endtime="20230609 20:49:07.957"/>
</kw>
<status status="PASS" starttime="20230609 20:49:07.485" endtime="20230609 20:49:07.957"/>
</kw>
<msg timestamp="20230609 20:49:07.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:49:07.485" endtime="20230609 20:49:07.958"/>
</kw>
<status status="PASS" starttime="20230609 20:49:07.485" endtime="20230609 20:49:07.958"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:07.962" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:08.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:08.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:07.959" endtime="20230609 20:49:08.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:08.431" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:08.430" endtime="20230609 20:49:08.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:08.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:08.431" endtime="20230609 20:49:08.432"/>
</kw>
<status status="PASS" starttime="20230609 20:49:07.959" endtime="20230609 20:49:08.432"/>
</kw>
<msg timestamp="20230609 20:49:08.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:49:07.959" endtime="20230609 20:49:08.432"/>
</kw>
<status status="PASS" starttime="20230609 20:49:07.958" endtime="20230609 20:49:08.433"/>
</kw>
<status status="PASS" starttime="20230609 20:49:06.544" endtime="20230609 20:49:08.433"/>
</kw>
<status status="PASS" starttime="20230609 20:49:06.544" endtime="20230609 20:49:08.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:49:06.543" endtime="20230609 20:49:08.433"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:08.438" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:09.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:09.234" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230609 20:49:08.436" endtime="20230609 20:49:09.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:09.236" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 09 Jun 2023 20:49:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230609 20:49:09.235" endtime="20230609 20:49:09.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:09.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:09.236" endtime="20230609 20:49:09.237"/>
</kw>
<msg timestamp="20230609 20:49:09.237" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230609 20:49:08.435" endtime="20230609 20:49:09.237"/>
</kw>
<msg timestamp="20230609 20:49:09.237" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230609 20:49:08.434" endtime="20230609 20:49:09.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:49:09.237" endtime="20230609 20:49:09.238"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:09.241" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:09.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:09.243" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230609 20:49:09.238" endtime="20230609 20:49:09.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:09.244" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230609 20:49:09.244" endtime="20230609 20:49:09.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:09.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:09.245" endtime="20230609 20:49:09.245"/>
</kw>
<msg timestamp="20230609 20:49:09.245" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230609 20:49:09.238" endtime="20230609 20:49:09.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:49:09.246" endtime="20230609 20:49:09.246"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:09.248" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:09.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:09.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:09.247" endtime="20230609 20:49:09.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:09.252" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:09.251" endtime="20230609 20:49:09.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:09.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:09.252" endtime="20230609 20:49:09.253"/>
</kw>
<status status="PASS" starttime="20230609 20:49:09.246" endtime="20230609 20:49:09.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:49:08.434" endtime="20230609 20:49:09.253"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:09.257" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:09.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:09.905" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:57 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230609 20:49:09.256" endtime="20230609 20:49:09.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:09.906" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:57 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 09 Jun 2023 20:49:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230609 20:49:09.905" endtime="20230609 20:49:09.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:09.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:09.906" endtime="20230609 20:49:09.907"/>
</kw>
<msg timestamp="20230609 20:49:09.907" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:57 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230609 20:49:09.255" endtime="20230609 20:49:09.907"/>
</kw>
<msg timestamp="20230609 20:49:09.908" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 09 Jun 2023 20:48:57 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230609 20:49:09.254" endtime="20230609 20:49:09.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:49:09.908" endtime="20230609 20:49:09.908"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:09.911" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:09.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:09.914" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230609 20:49:09.909" endtime="20230609 20:49:09.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:09.914" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230609 20:49:09.914" endtime="20230609 20:49:09.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:09.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:09.915" endtime="20230609 20:49:09.915"/>
</kw>
<msg timestamp="20230609 20:49:09.916" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230609 20:49:09.908" endtime="20230609 20:49:09.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230609 20:49:09.916" endtime="20230609 20:49:09.916"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:09.919" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:49:09.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:49:09.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230609 20:49:09.917" endtime="20230609 20:49:09.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:49:09.923" level="INFO"/>
<status status="PASS" starttime="20230609 20:49:09.922" endtime="20230609 20:49:09.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:49:09.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:49:09.923" endtime="20230609 20:49:09.923"/>
</kw>
<status status="PASS" starttime="20230609 20:49:09.917" endtime="20230609 20:49:09.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230609 20:49:09.254" endtime="20230609 20:49:09.924"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230609 20:49:01.825" endtime="20230609 20:49:09.926"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230609 20:49:13.865" endtime="20230609 20:49:13.866"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230609 20:49:13.866" endtime="20230609 20:49:13.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:49:13.872" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:54:13.866" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230609 20:49:13.868" endtime="20230609 20:54:13.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230609 20:54:13.867" endtime="20230609 20:54:13.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230609 20:54:13.867" endtime="20230609 20:54:13.867"/>
</kw>
<status status="FAIL" starttime="20230609 20:49:13.867" endtime="20230609 20:54:13.868"/>
</kw>
<msg timestamp="20230609 20:54:13.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230609 20:49:13.867" endtime="20230609 20:54:13.869"/>
</kw>
<status status="FAIL" starttime="20230609 20:49:13.867" endtime="20230609 20:54:13.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230609 20:54:13.870" endtime="20230609 20:54:13.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230609 20:49:13.865" endtime="20230609 20:54:13.870">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230609 20:49:13.816" endtime="20230609 20:54:13.872"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230609 20:48:22.687" endtime="20230609 20:48:22.688"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:22.694" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:22.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:22.697" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b4e9f007c29e
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230609 20:48:22.689" endtime="20230609 20:48:22.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:22.697" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b4e9f007c29e
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230609 20:48:22.697" endtime="20230609 20:48:22.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:22.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:22.698" endtime="20230609 20:48:22.698"/>
</kw>
<status status="PASS" starttime="20230609 20:48:22.688" endtime="20230609 20:48:22.698"/>
</kw>
<msg timestamp="20230609 20:48:22.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:22.688" endtime="20230609 20:48:22.700"/>
</kw>
<msg timestamp="20230609 20:48:22.700" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b4e9f007c29e
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230609 20:48:22.688" endtime="20230609 20:48:22.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:22.700" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b4e9f007c29e
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230609 20:48:22.700" endtime="20230609 20:48:22.700"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230609 20:48:22.701" endtime="20230609 20:48:22.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:22.704" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:25.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:25.307" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230609 20:48:22.702" endtime="20230609 20:48:25.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:25.308" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230609 20:48:25.307" endtime="20230609 20:48:25.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:25.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:25.308" endtime="20230609 20:48:25.309"/>
</kw>
<status status="PASS" starttime="20230609 20:48:22.702" endtime="20230609 20:48:25.309"/>
</kw>
<msg timestamp="20230609 20:48:25.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:22.702" endtime="20230609 20:48:25.310"/>
</kw>
<msg timestamp="20230609 20:48:25.310" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230609 20:48:22.701" endtime="20230609 20:48:25.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:25.311" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230609 20:48:25.310" endtime="20230609 20:48:25.311"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230609 20:48:25.311" endtime="20230609 20:48:25.311"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230609 20:48:22.686" endtime="20230609 20:48:25.311"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230609 20:48:25.313" endtime="20230609 20:48:25.314"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230609 20:48:25.314" endtime="20230609 20:48:25.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230609 20:48:25.317" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230609 20:48:28.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230609 20:48:28.003" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230609 20:48:25.315" endtime="20230609 20:48:28.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:28.008" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230609 20:48:28.003" endtime="20230609 20:48:28.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230609 20:48:28.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:48:28.008" endtime="20230609 20:48:28.009"/>
</kw>
<status status="PASS" starttime="20230609 20:48:25.315" endtime="20230609 20:48:28.010"/>
</kw>
<msg timestamp="20230609 20:48:28.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230609 20:48:25.315" endtime="20230609 20:48:28.010"/>
</kw>
<msg timestamp="20230609 20:48:28.010" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230609 20:48:25.314" endtime="20230609 20:48:28.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230609 20:48:28.011" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230609 20:48:28.011" endtime="20230609 20:48:28.011"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230609 20:48:28.011" endtime="20230609 20:48:28.012"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230609 20:48:25.312" endtime="20230609 20:48:28.012"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230609 20:48:22.617" endtime="20230609 20:48:28.013"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="339866"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
