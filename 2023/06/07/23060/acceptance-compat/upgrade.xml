<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230607 13:29:56.120" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:49.687" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:23:52.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:23:52.637" level="INFO">${output} = 2023-06-07 13:23:52,407 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230607 13:23:49.683" endtime="20230607 13:23:52.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:52.638" level="INFO">2023-06-07 13:23:52,407 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230607 13:23:52.638" endtime="20230607 13:23:52.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:23:52.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:23:52.639" endtime="20230607 13:23:52.639"/>
</kw>
<status status="PASS" starttime="20230607 13:23:49.683" endtime="20230607 13:23:52.639"/>
</kw>
<msg timestamp="20230607 13:23:52.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:23:49.682" endtime="20230607 13:23:52.641"/>
</kw>
<msg timestamp="20230607 13:23:52.641" level="INFO">${output} = 2023-06-07 13:23:52,407 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230607 13:23:49.682" endtime="20230607 13:23:52.641"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:23:52.641" endtime="20230607 13:23:52.641"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:52.649" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:23:55.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:23:55.719" level="INFO">${output} = 2023-06-07 13:23:55,650 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230607 13:23:52.643" endtime="20230607 13:23:55.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:55.721" level="INFO">2023-06-07 13:23:55,650 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230607 13:23:55.719" endtime="20230607 13:23:55.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:23:55.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:23:55.721" endtime="20230607 13:23:55.721"/>
</kw>
<status status="PASS" starttime="20230607 13:23:52.642" endtime="20230607 13:23:55.722"/>
</kw>
<msg timestamp="20230607 13:23:55.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:23:52.642" endtime="20230607 13:23:55.722"/>
</kw>
<msg timestamp="20230607 13:23:55.723" level="INFO">${output} = 2023-06-07 13:23:55,650 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230607 13:23:52.642" endtime="20230607 13:23:55.723"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:23:55.723" endtime="20230607 13:23:55.723"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:23:49.681" endtime="20230607 13:23:55.724"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:55.728" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230607 13:23:55.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:23:55.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:23:55.726" endtime="20230607 13:23:55.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:55.730" level="INFO"/>
<status status="PASS" starttime="20230607 13:23:55.730" endtime="20230607 13:23:55.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:23:55.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:23:55.731" endtime="20230607 13:23:55.731"/>
</kw>
<status status="PASS" starttime="20230607 13:23:55.725" endtime="20230607 13:23:55.732"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:55.735" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:01.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:01.198" level="INFO">${output} = 2023-06-07 13:23:58,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:23:59,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230607 13:23:55.733" endtime="20230607 13:24:01.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:01.200" level="INFO">2023-06-07 13:23:58,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:23:59,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-07 13:23:59,010 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-07 13:23:59,289 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230607 13:24:01.199" endtime="20230607 13:24:01.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:01.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:01.200" endtime="20230607 13:24:01.200"/>
</kw>
<status status="PASS" starttime="20230607 13:23:55.733" endtime="20230607 13:24:01.201"/>
</kw>
<msg timestamp="20230607 13:24:01.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:23:55.732" endtime="20230607 13:24:01.201"/>
</kw>
<msg timestamp="20230607 13:24:01.201" level="INFO">${output} = 2023-06-07 13:23:58,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:23:59,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230607 13:23:55.732" endtime="20230607 13:24:01.202"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:01.202" endtime="20230607 13:24:01.202"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:01.205" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:01.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:01.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:01.203" endtime="20230607 13:24:01.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:01.209" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:01.208" endtime="20230607 13:24:01.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:01.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:01.209" endtime="20230607 13:24:01.209"/>
</kw>
<status status="PASS" starttime="20230607 13:24:01.202" endtime="20230607 13:24:01.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:23:55.724" endtime="20230607 13:24:01.210"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:01.215" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:04.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:04.196" level="INFO">${output} = 2023-06-07 13:24:04,115 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230607 13:24:01.213" endtime="20230607 13:24:04.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:04.197" level="INFO">2023-06-07 13:24:04,115 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230607 13:24:04.197" endtime="20230607 13:24:04.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:04.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:04.198" endtime="20230607 13:24:04.198"/>
</kw>
<status status="PASS" starttime="20230607 13:24:01.213" endtime="20230607 13:24:04.199"/>
</kw>
<msg timestamp="20230607 13:24:04.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:01.213" endtime="20230607 13:24:04.199"/>
</kw>
<msg timestamp="20230607 13:24:04.199" level="INFO">${output} = 2023-06-07 13:24:04,115 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230607 13:24:01.212" endtime="20230607 13:24:04.199"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:04.200" endtime="20230607 13:24:04.201"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:01.211" endtime="20230607 13:24:04.201"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:04.206" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230607 13:24:04.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:04.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:04.204" endtime="20230607 13:24:04.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:04.209" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:04.209" endtime="20230607 13:24:04.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:04.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:04.210" endtime="20230607 13:24:04.210"/>
</kw>
<status status="PASS" starttime="20230607 13:24:04.203" endtime="20230607 13:24:04.211"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:04.214" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:08.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:08.970" level="INFO">${output} = 2023-06-07 13:24:07,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:24:07,620 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230607 13:24:04.212" endtime="20230607 13:24:08.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:08.972" level="INFO">2023-06-07 13:24:07,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:24:07,620 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-07 13:24:07,620 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-07 13:24:07,866 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230607 13:24:08.971" endtime="20230607 13:24:08.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:08.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:08.972" endtime="20230607 13:24:08.973"/>
</kw>
<status status="PASS" starttime="20230607 13:24:04.212" endtime="20230607 13:24:08.973"/>
</kw>
<msg timestamp="20230607 13:24:08.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:04.211" endtime="20230607 13:24:08.974"/>
</kw>
<msg timestamp="20230607 13:24:08.974" level="INFO">${output} = 2023-06-07 13:24:07,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:24:07,620 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230607 13:24:04.211" endtime="20230607 13:24:08.974"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:08.974" endtime="20230607 13:24:08.974"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:08.978" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:08.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:08.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:08.975" endtime="20230607 13:24:08.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:08.981" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:08.980" endtime="20230607 13:24:08.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:08.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:08.981" endtime="20230607 13:24:08.982"/>
</kw>
<status status="PASS" starttime="20230607 13:24:08.975" endtime="20230607 13:24:08.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:04.203" endtime="20230607 13:24:08.982"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:08.988" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:09.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:09.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:08.986" endtime="20230607 13:24:09.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:09.685" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:09.684" endtime="20230607 13:24:09.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:09.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:09.685" endtime="20230607 13:24:09.685"/>
</kw>
<status status="PASS" starttime="20230607 13:24:08.985" endtime="20230607 13:24:09.686"/>
</kw>
<msg timestamp="20230607 13:24:09.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:08.985" endtime="20230607 13:24:09.686"/>
</kw>
<status status="PASS" starttime="20230607 13:24:08.985" endtime="20230607 13:24:09.686"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:09.690" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:10.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:10.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:09.688" endtime="20230607 13:24:10.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:10.171" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:10.171" endtime="20230607 13:24:10.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:10.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:10.172" endtime="20230607 13:24:10.172"/>
</kw>
<status status="PASS" starttime="20230607 13:24:09.687" endtime="20230607 13:24:10.173"/>
</kw>
<msg timestamp="20230607 13:24:10.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:09.687" endtime="20230607 13:24:10.173"/>
</kw>
<status status="PASS" starttime="20230607 13:24:09.687" endtime="20230607 13:24:10.173"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:10.177" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:10.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:10.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:10.175" endtime="20230607 13:24:10.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:10.648" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:10.647" endtime="20230607 13:24:10.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:10.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:10.648" endtime="20230607 13:24:10.649"/>
</kw>
<status status="PASS" starttime="20230607 13:24:10.174" endtime="20230607 13:24:10.649"/>
</kw>
<msg timestamp="20230607 13:24:10.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:10.174" endtime="20230607 13:24:10.649"/>
</kw>
<status status="PASS" starttime="20230607 13:24:10.173" endtime="20230607 13:24:10.650"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:10.653" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:11.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:11.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:10.651" endtime="20230607 13:24:11.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:11.169" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:11.168" endtime="20230607 13:24:11.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:11.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:11.169" endtime="20230607 13:24:11.170"/>
</kw>
<status status="PASS" starttime="20230607 13:24:10.650" endtime="20230607 13:24:11.170"/>
</kw>
<msg timestamp="20230607 13:24:11.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:10.650" endtime="20230607 13:24:11.171"/>
</kw>
<status status="PASS" starttime="20230607 13:24:10.650" endtime="20230607 13:24:11.171"/>
</kw>
<status status="PASS" starttime="20230607 13:24:08.984" endtime="20230607 13:24:11.171"/>
</kw>
<status status="PASS" starttime="20230607 13:24:08.984" endtime="20230607 13:24:11.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:08.983" endtime="20230607 13:24:11.171"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:11.177" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:13.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:13.492" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230607 13:24:11.175" endtime="20230607 13:24:13.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:13.494" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230607 13:24:13.493" endtime="20230607 13:24:13.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:13.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:13.494" endtime="20230607 13:24:13.495"/>
</kw>
<status status="PASS" starttime="20230607 13:24:11.174" endtime="20230607 13:24:13.495"/>
</kw>
<msg timestamp="20230607 13:24:13.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:11.174" endtime="20230607 13:24:13.496"/>
</kw>
<msg timestamp="20230607 13:24:13.496" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230607 13:24:11.173" endtime="20230607 13:24:13.496"/>
</kw>
<msg timestamp="20230607 13:24:13.496" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230607 13:24:11.173" endtime="20230607 13:24:13.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:13.496" endtime="20230607 13:24:13.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:13.497" endtime="20230607 13:24:13.497"/>
</kw>
<msg timestamp="20230607 13:24:13.497" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230607 13:24:11.173" endtime="20230607 13:24:13.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230607 13:24:13.498" endtime="20230607 13:24:13.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:11.172" endtime="20230607 13:24:13.498"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:13.503" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230607 13:24:13.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:13.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:13.500" endtime="20230607 13:24:13.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:13.506" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:13.505" endtime="20230607 13:24:13.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:13.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:13.506" endtime="20230607 13:24:13.506"/>
</kw>
<status status="PASS" starttime="20230607 13:24:13.500" endtime="20230607 13:24:13.507"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:13.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:15.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:15.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:13.508" endtime="20230607 13:24:15.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:15.400" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:15.400" endtime="20230607 13:24:15.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:15.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:15.400" endtime="20230607 13:24:15.401"/>
</kw>
<msg timestamp="20230607 13:24:15.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:13.507" endtime="20230607 13:24:15.402"/>
</kw>
<msg timestamp="20230607 13:24:15.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:13.507" endtime="20230607 13:24:15.402"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:15.402" endtime="20230607 13:24:15.403"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:15.406" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:15.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:15.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:15.403" endtime="20230607 13:24:15.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:15.410" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:15.409" endtime="20230607 13:24:15.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:15.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:15.410" endtime="20230607 13:24:15.410"/>
</kw>
<status status="PASS" starttime="20230607 13:24:15.403" endtime="20230607 13:24:15.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:13.499" endtime="20230607 13:24:15.411"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230607 13:23:49.605" endtime="20230607 13:24:15.413"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230607 13:24:19.322" level="INFO">${random} = 85682</msg>
<status status="PASS" starttime="20230607 13:24:19.322" endtime="20230607 13:24:19.322"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:19.328" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-85682 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:24.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:24.018" level="INFO">${output} = 2023-06-07 13:24:22,645 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:24:22,736 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230607 13:24:19.325" endtime="20230607 13:24:24.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:24.019" level="INFO">2023-06-07 13:24:22,645 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:24:22,736 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-07 13:24:22,736 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230607 13:24:24.018" endtime="20230607 13:24:24.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:24.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:24.019" endtime="20230607 13:24:24.020"/>
</kw>
<status status="PASS" starttime="20230607 13:24:19.324" endtime="20230607 13:24:24.020"/>
</kw>
<msg timestamp="20230607 13:24:24.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:19.323" endtime="20230607 13:24:24.022"/>
</kw>
<msg timestamp="20230607 13:24:24.022" level="INFO">${output} = 2023-06-07 13:24:22,645 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-07 13:24:22,736 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230607 13:24:19.323" endtime="20230607 13:24:24.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:24.022" endtime="20230607 13:24:24.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:24.026" level="INFO">Running command 'cat /tmp/key-85682 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:24.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:24.028" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230607 13:24:24.023" endtime="20230607 13:24:24.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:24.030" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230607 13:24:24.029" endtime="20230607 13:24:24.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:24.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:24.030" endtime="20230607 13:24:24.031"/>
</kw>
<msg timestamp="20230607 13:24:24.031" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230607 13:24:24.023" endtime="20230607 13:24:24.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:24.031" endtime="20230607 13:24:24.032"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:24.035" level="INFO">Running command 'rm /tmp/key-85682 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:24.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:24.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:24.032" endtime="20230607 13:24:24.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:24.038" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:24.037" endtime="20230607 13:24:24.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:24.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:24.038" endtime="20230607 13:24:24.039"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.032" endtime="20230607 13:24:24.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:19.321" endtime="20230607 13:24:24.040"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:24.046" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:24.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:24.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:24.044" endtime="20230607 13:24:24.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:24.534" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:24.534" endtime="20230607 13:24:24.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:24.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:24.535" endtime="20230607 13:24:24.535"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.043" endtime="20230607 13:24:24.535"/>
</kw>
<msg timestamp="20230607 13:24:24.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:24.043" endtime="20230607 13:24:24.536"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.042" endtime="20230607 13:24:24.536"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:24.540" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:25.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:25.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:24.537" endtime="20230607 13:24:25.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:25.017" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:25.016" endtime="20230607 13:24:25.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:25.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:25.017" endtime="20230607 13:24:25.018"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.537" endtime="20230607 13:24:25.018"/>
</kw>
<msg timestamp="20230607 13:24:25.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:24.537" endtime="20230607 13:24:25.019"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.536" endtime="20230607 13:24:25.019"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:25.023" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:25.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:25.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:25.020" endtime="20230607 13:24:25.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:25.507" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:25.506" endtime="20230607 13:24:25.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:25.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:25.507" endtime="20230607 13:24:25.508"/>
</kw>
<status status="PASS" starttime="20230607 13:24:25.020" endtime="20230607 13:24:25.508"/>
</kw>
<msg timestamp="20230607 13:24:25.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:25.019" endtime="20230607 13:24:25.509"/>
</kw>
<status status="PASS" starttime="20230607 13:24:25.019" endtime="20230607 13:24:25.509"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:25.512" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:26.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:26.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:25.510" endtime="20230607 13:24:26.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:26.003" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:26.003" endtime="20230607 13:24:26.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:26.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:26.004" endtime="20230607 13:24:26.004"/>
</kw>
<status status="PASS" starttime="20230607 13:24:25.510" endtime="20230607 13:24:26.004"/>
</kw>
<msg timestamp="20230607 13:24:26.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:24:25.509" endtime="20230607 13:24:26.005"/>
</kw>
<status status="PASS" starttime="20230607 13:24:25.509" endtime="20230607 13:24:26.005"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.042" endtime="20230607 13:24:26.005"/>
</kw>
<status status="PASS" starttime="20230607 13:24:24.042" endtime="20230607 13:24:26.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:24.041" endtime="20230607 13:24:26.006"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:26.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:26.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:26.878" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230607 13:24:26.008" endtime="20230607 13:24:26.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:26.880" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 07 Jun 2023 13:24:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230607 13:24:26.879" endtime="20230607 13:24:26.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:26.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:26.880" endtime="20230607 13:24:26.881"/>
</kw>
<msg timestamp="20230607 13:24:26.881" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230607 13:24:26.007" endtime="20230607 13:24:26.881"/>
</kw>
<msg timestamp="20230607 13:24:26.881" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230607 13:24:26.007" endtime="20230607 13:24:26.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:26.881" endtime="20230607 13:24:26.882"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:26.885" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:26.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:26.888" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230607 13:24:26.882" endtime="20230607 13:24:26.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:26.889" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230607 13:24:26.888" endtime="20230607 13:24:26.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:26.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:26.889" endtime="20230607 13:24:26.890"/>
</kw>
<msg timestamp="20230607 13:24:26.890" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230607 13:24:26.882" endtime="20230607 13:24:26.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:26.891" endtime="20230607 13:24:26.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:26.894" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:26.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:26.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:26.892" endtime="20230607 13:24:26.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:26.898" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:26.897" endtime="20230607 13:24:26.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:26.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:26.898" endtime="20230607 13:24:26.898"/>
</kw>
<status status="PASS" starttime="20230607 13:24:26.891" endtime="20230607 13:24:26.899"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:26.006" endtime="20230607 13:24:26.899"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:26.905" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:27.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:27.524" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230607 13:24:26.903" endtime="20230607 13:24:27.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:27.525" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 07 Jun 2023 13:24:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230607 13:24:27.524" endtime="20230607 13:24:27.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:27.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:27.525" endtime="20230607 13:24:27.526"/>
</kw>
<msg timestamp="20230607 13:24:27.526" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230607 13:24:26.902" endtime="20230607 13:24:27.526"/>
</kw>
<msg timestamp="20230607 13:24:27.527" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 07 Jun 2023 13:24:15 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230607 13:24:26.901" endtime="20230607 13:24:27.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:27.527" endtime="20230607 13:24:27.527"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:27.530" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:27.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:27.533" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230607 13:24:27.528" endtime="20230607 13:24:27.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:27.534" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230607 13:24:27.533" endtime="20230607 13:24:27.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:27.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:27.534" endtime="20230607 13:24:27.534"/>
</kw>
<msg timestamp="20230607 13:24:27.535" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230607 13:24:27.527" endtime="20230607 13:24:27.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230607 13:24:27.535" endtime="20230607 13:24:27.535"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:27.538" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:24:27.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:24:27.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230607 13:24:27.536" endtime="20230607 13:24:27.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:24:27.542" level="INFO"/>
<status status="PASS" starttime="20230607 13:24:27.541" endtime="20230607 13:24:27.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:24:27.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:24:27.542" endtime="20230607 13:24:27.543"/>
</kw>
<status status="PASS" starttime="20230607 13:24:27.536" endtime="20230607 13:24:27.543"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230607 13:24:26.901" endtime="20230607 13:24:27.543"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230607 13:24:19.246" endtime="20230607 13:24:27.546"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230607 13:24:31.443" endtime="20230607 13:24:31.444"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230607 13:24:31.444" endtime="20230607 13:24:31.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:24:31.449" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:29:31.444" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230607 13:24:31.446" endtime="20230607 13:29:31.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230607 13:29:31.444" endtime="20230607 13:29:31.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230607 13:29:31.445" endtime="20230607 13:29:31.445"/>
</kw>
<status status="FAIL" starttime="20230607 13:24:31.445" endtime="20230607 13:29:31.445"/>
</kw>
<msg timestamp="20230607 13:29:31.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230607 13:24:31.445" endtime="20230607 13:29:31.447"/>
</kw>
<status status="FAIL" starttime="20230607 13:24:31.445" endtime="20230607 13:29:31.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230607 13:29:31.447" endtime="20230607 13:29:31.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230607 13:24:31.443" endtime="20230607 13:29:31.448">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230607 13:24:31.394" endtime="20230607 13:29:31.449"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230607 13:23:40.568" endtime="20230607 13:23:40.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:40.575" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:23:40.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:23:40.577" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=5a1ba4b43525
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230607 13:23:40.569" endtime="20230607 13:23:40.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:40.578" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=5a1ba4b43525
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230607 13:23:40.577" endtime="20230607 13:23:40.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:23:40.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:23:40.578" endtime="20230607 13:23:40.579"/>
</kw>
<status status="PASS" starttime="20230607 13:23:40.569" endtime="20230607 13:23:40.579"/>
</kw>
<msg timestamp="20230607 13:23:40.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:23:40.569" endtime="20230607 13:23:40.580"/>
</kw>
<msg timestamp="20230607 13:23:40.581" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=5a1ba4b43525
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230607 13:23:40.568" endtime="20230607 13:23:40.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:40.581" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=5a1ba4b43525
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230607 13:23:40.581" endtime="20230607 13:23:40.581"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230607 13:23:40.582" endtime="20230607 13:23:40.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:40.585" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:23:43.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:23:43.321" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230607 13:23:40.583" endtime="20230607 13:23:43.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:43.322" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230607 13:23:43.321" endtime="20230607 13:23:43.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:23:43.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:23:43.322" endtime="20230607 13:23:43.323"/>
</kw>
<status status="PASS" starttime="20230607 13:23:40.583" endtime="20230607 13:23:43.323"/>
</kw>
<msg timestamp="20230607 13:23:43.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:23:40.583" endtime="20230607 13:23:43.323"/>
</kw>
<msg timestamp="20230607 13:23:43.324" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230607 13:23:40.582" endtime="20230607 13:23:43.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:43.324" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230607 13:23:43.324" endtime="20230607 13:23:43.324"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230607 13:23:43.324" endtime="20230607 13:23:43.324"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230607 13:23:40.567" endtime="20230607 13:23:43.325"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230607 13:23:43.326" endtime="20230607 13:23:43.326"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230607 13:23:43.327" endtime="20230607 13:23:43.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230607 13:23:43.330" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230607 13:23:45.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20230607 13:23:45.915" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230607 13:23:43.328" endtime="20230607 13:23:45.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:45.917" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230607 13:23:45.916" endtime="20230607 13:23:45.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230607 13:23:45.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 13:23:45.917" endtime="20230607 13:23:45.917"/>
</kw>
<status status="PASS" starttime="20230607 13:23:43.328" endtime="20230607 13:23:45.918"/>
</kw>
<msg timestamp="20230607 13:23:45.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230607 13:23:43.327" endtime="20230607 13:23:45.918"/>
</kw>
<msg timestamp="20230607 13:23:45.918" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230607 13:23:43.327" endtime="20230607 13:23:45.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230607 13:23:45.919" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230607 13:23:45.919" endtime="20230607 13:23:45.919"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230607 13:23:45.919" endtime="20230607 13:23:45.919"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230607 13:23:43.325" endtime="20230607 13:23:45.920"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230607 13:23:40.515" endtime="20230607 13:23:45.921"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="339569"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
