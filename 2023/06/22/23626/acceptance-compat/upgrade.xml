<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230622 08:27:27.838" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:11.918" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:15.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:15.099" level="INFO">${output} = 2023-06-22 08:21:14,992 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230622 08:21:11.913" endtime="20230622 08:21:15.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:15.100" level="INFO">2023-06-22 08:21:14,992 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230622 08:21:15.100" endtime="20230622 08:21:15.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:15.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:15.101" endtime="20230622 08:21:15.101"/>
</kw>
<status status="PASS" starttime="20230622 08:21:11.912" endtime="20230622 08:21:15.102"/>
</kw>
<msg timestamp="20230622 08:21:15.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:11.912" endtime="20230622 08:21:15.104"/>
</kw>
<msg timestamp="20230622 08:21:15.104" level="INFO">${output} = 2023-06-22 08:21:14,992 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230622 08:21:11.911" endtime="20230622 08:21:15.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:15.104" endtime="20230622 08:21:15.105"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:15.109" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:18.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:18.214" level="INFO">${output} = 2023-06-22 08:21:18,100 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230622 08:21:15.107" endtime="20230622 08:21:18.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:18.215" level="INFO">2023-06-22 08:21:18,100 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230622 08:21:18.214" endtime="20230622 08:21:18.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:18.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:18.215" endtime="20230622 08:21:18.216"/>
</kw>
<status status="PASS" starttime="20230622 08:21:15.106" endtime="20230622 08:21:18.216"/>
</kw>
<msg timestamp="20230622 08:21:18.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:15.106" endtime="20230622 08:21:18.218"/>
</kw>
<msg timestamp="20230622 08:21:18.220" level="INFO">${output} = 2023-06-22 08:21:18,100 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230622 08:21:15.105" endtime="20230622 08:21:18.220"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:18.220" endtime="20230622 08:21:18.221"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:11.910" endtime="20230622 08:21:18.221"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:18.229" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230622 08:21:18.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:18.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:18.225" endtime="20230622 08:21:18.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:18.232" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:18.231" endtime="20230622 08:21:18.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:18.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:18.232" endtime="20230622 08:21:18.233"/>
</kw>
<status status="PASS" starttime="20230622 08:21:18.224" endtime="20230622 08:21:18.233"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:18.237" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:25.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:25.401" level="INFO">${output} = 2023-06-22 08:21:22,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:22,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230622 08:21:18.235" endtime="20230622 08:21:25.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:25.402" level="INFO">2023-06-22 08:21:22,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:22,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-22 08:21:22,636 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-22 08:21:23,120 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230622 08:21:25.401" endtime="20230622 08:21:25.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:25.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:25.403" endtime="20230622 08:21:25.403"/>
</kw>
<status status="PASS" starttime="20230622 08:21:18.234" endtime="20230622 08:21:25.404"/>
</kw>
<msg timestamp="20230622 08:21:25.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:18.234" endtime="20230622 08:21:25.405"/>
</kw>
<msg timestamp="20230622 08:21:25.405" level="INFO">${output} = 2023-06-22 08:21:22,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:22,635 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230622 08:21:18.233" endtime="20230622 08:21:25.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:25.405" endtime="20230622 08:21:25.406"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:25.410" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:25.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:25.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:25.407" endtime="20230622 08:21:25.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:25.414" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:25.413" endtime="20230622 08:21:25.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:25.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:25.414" endtime="20230622 08:21:25.415"/>
</kw>
<status status="PASS" starttime="20230622 08:21:25.406" endtime="20230622 08:21:25.416"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:18.223" endtime="20230622 08:21:25.416"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:25.422" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:28.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:28.362" level="INFO">${output} = 2023-06-22 08:21:28,300 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230622 08:21:25.420" endtime="20230622 08:21:28.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:28.364" level="INFO">2023-06-22 08:21:28,300 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230622 08:21:28.363" endtime="20230622 08:21:28.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:28.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:28.364" endtime="20230622 08:21:28.365"/>
</kw>
<status status="PASS" starttime="20230622 08:21:25.419" endtime="20230622 08:21:28.365"/>
</kw>
<msg timestamp="20230622 08:21:28.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:25.419" endtime="20230622 08:21:28.366"/>
</kw>
<msg timestamp="20230622 08:21:28.366" level="INFO">${output} = 2023-06-22 08:21:28,300 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230622 08:21:25.418" endtime="20230622 08:21:28.366"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:28.366" endtime="20230622 08:21:28.367"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:25.417" endtime="20230622 08:21:28.367"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:28.373" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230622 08:21:28.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:28.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:28.370" endtime="20230622 08:21:28.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:28.376" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:28.375" endtime="20230622 08:21:28.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:28.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:28.376" endtime="20230622 08:21:28.377"/>
</kw>
<status status="PASS" starttime="20230622 08:21:28.370" endtime="20230622 08:21:28.377"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:28.382" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:34.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:34.242" level="INFO">${output} = 2023-06-22 08:21:32,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:32,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230622 08:21:28.380" endtime="20230622 08:21:34.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:34.244" level="INFO">2023-06-22 08:21:32,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:32,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-22 08:21:32,580 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-22 08:21:32,943 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230622 08:21:34.243" endtime="20230622 08:21:34.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:34.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:34.244" endtime="20230622 08:21:34.245"/>
</kw>
<status status="PASS" starttime="20230622 08:21:28.379" endtime="20230622 08:21:34.245"/>
</kw>
<msg timestamp="20230622 08:21:34.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:28.378" endtime="20230622 08:21:34.246"/>
</kw>
<msg timestamp="20230622 08:21:34.246" level="INFO">${output} = 2023-06-22 08:21:32,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:32,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230622 08:21:28.378" endtime="20230622 08:21:34.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:34.246" endtime="20230622 08:21:34.246"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:34.250" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:34.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:34.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:34.247" endtime="20230622 08:21:34.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:34.254" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:34.253" endtime="20230622 08:21:34.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:34.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:34.254" endtime="20230622 08:21:34.255"/>
</kw>
<status status="PASS" starttime="20230622 08:21:34.247" endtime="20230622 08:21:34.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:28.369" endtime="20230622 08:21:34.255"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:34.263" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:35.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:35.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:34.260" endtime="20230622 08:21:35.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:35.115" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:35.114" endtime="20230622 08:21:35.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:35.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:35.115" endtime="20230622 08:21:35.116"/>
</kw>
<status status="PASS" starttime="20230622 08:21:34.259" endtime="20230622 08:21:35.116"/>
</kw>
<msg timestamp="20230622 08:21:35.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:34.259" endtime="20230622 08:21:35.117"/>
</kw>
<status status="PASS" starttime="20230622 08:21:34.259" endtime="20230622 08:21:35.117"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:35.121" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:35.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:35.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:35.119" endtime="20230622 08:21:35.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:35.693" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:35.692" endtime="20230622 08:21:35.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:35.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:35.693" endtime="20230622 08:21:35.693"/>
</kw>
<status status="PASS" starttime="20230622 08:21:35.118" endtime="20230622 08:21:35.694"/>
</kw>
<msg timestamp="20230622 08:21:35.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:35.118" endtime="20230622 08:21:35.694"/>
</kw>
<status status="PASS" starttime="20230622 08:21:35.117" endtime="20230622 08:21:35.695"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:35.699" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:36.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:36.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:35.696" endtime="20230622 08:21:36.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:36.301" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:36.300" endtime="20230622 08:21:36.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:36.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:36.302" endtime="20230622 08:21:36.302"/>
</kw>
<status status="PASS" starttime="20230622 08:21:35.696" endtime="20230622 08:21:36.302"/>
</kw>
<msg timestamp="20230622 08:21:36.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:35.695" endtime="20230622 08:21:36.303"/>
</kw>
<status status="PASS" starttime="20230622 08:21:35.695" endtime="20230622 08:21:36.303"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:36.310" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:36.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:36.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:36.306" endtime="20230622 08:21:36.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:36.959" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:36.958" endtime="20230622 08:21:36.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:36.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:36.959" endtime="20230622 08:21:36.960"/>
</kw>
<status status="PASS" starttime="20230622 08:21:36.305" endtime="20230622 08:21:36.960"/>
</kw>
<msg timestamp="20230622 08:21:36.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:36.305" endtime="20230622 08:21:36.961"/>
</kw>
<status status="PASS" starttime="20230622 08:21:36.304" endtime="20230622 08:21:36.961"/>
</kw>
<status status="PASS" starttime="20230622 08:21:34.258" endtime="20230622 08:21:36.961"/>
</kw>
<status status="PASS" starttime="20230622 08:21:34.258" endtime="20230622 08:21:36.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:34.257" endtime="20230622 08:21:36.961"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:36.969" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:39.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:39.256" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230622 08:21:36.966" endtime="20230622 08:21:39.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:39.257" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230622 08:21:39.256" endtime="20230622 08:21:39.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:39.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:39.257" endtime="20230622 08:21:39.258"/>
</kw>
<status status="PASS" starttime="20230622 08:21:36.966" endtime="20230622 08:21:39.258"/>
</kw>
<msg timestamp="20230622 08:21:39.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:36.966" endtime="20230622 08:21:39.259"/>
</kw>
<msg timestamp="20230622 08:21:39.260" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230622 08:21:36.965" endtime="20230622 08:21:39.260"/>
</kw>
<msg timestamp="20230622 08:21:39.260" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230622 08:21:36.964" endtime="20230622 08:21:39.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:39.260" endtime="20230622 08:21:39.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:39.261" endtime="20230622 08:21:39.261"/>
</kw>
<msg timestamp="20230622 08:21:39.262" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230622 08:21:36.964" endtime="20230622 08:21:39.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230622 08:21:39.262" endtime="20230622 08:21:39.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:36.963" endtime="20230622 08:21:39.263"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:39.269" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230622 08:21:39.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:39.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:39.266" endtime="20230622 08:21:39.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:39.273" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:39.272" endtime="20230622 08:21:39.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:39.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:39.273" endtime="20230622 08:21:39.274"/>
</kw>
<status status="PASS" starttime="20230622 08:21:39.265" endtime="20230622 08:21:39.274"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:39.279" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:41.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:41.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:39.277" endtime="20230622 08:21:41.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:41.208" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:41.207" endtime="20230622 08:21:41.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:41.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:41.208" endtime="20230622 08:21:41.209"/>
</kw>
<msg timestamp="20230622 08:21:41.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:39.275" endtime="20230622 08:21:41.210"/>
</kw>
<msg timestamp="20230622 08:21:41.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:39.274" endtime="20230622 08:21:41.210"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:41.210" endtime="20230622 08:21:41.211"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:41.215" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:41.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:41.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:41.212" endtime="20230622 08:21:41.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:41.221" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:41.220" endtime="20230622 08:21:41.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:41.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:41.221" endtime="20230622 08:21:41.223"/>
</kw>
<status status="PASS" starttime="20230622 08:21:41.211" endtime="20230622 08:21:41.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:39.264" endtime="20230622 08:21:41.223"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230622 08:21:11.792" endtime="20230622 08:21:41.226"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230622 08:21:45.789" level="INFO">${random} = 22320</msg>
<status status="PASS" starttime="20230622 08:21:45.788" endtime="20230622 08:21:45.789"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:45.796" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-22320 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:50.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:50.981" level="INFO">${output} = 2023-06-22 08:21:49,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:49,608 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230622 08:21:45.791" endtime="20230622 08:21:50.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:50.982" level="INFO">2023-06-22 08:21:49,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:49,608 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-22 08:21:49,608 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230622 08:21:50.981" endtime="20230622 08:21:50.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:50.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:50.982" endtime="20230622 08:21:50.983"/>
</kw>
<status status="PASS" starttime="20230622 08:21:45.791" endtime="20230622 08:21:50.983"/>
</kw>
<msg timestamp="20230622 08:21:50.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:45.790" endtime="20230622 08:21:50.985"/>
</kw>
<msg timestamp="20230622 08:21:50.985" level="INFO">${output} = 2023-06-22 08:21:49,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-22 08:21:49,608 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230622 08:21:45.789" endtime="20230622 08:21:50.985"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:50.985" endtime="20230622 08:21:50.986"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:50.989" level="INFO">Running command 'cat /tmp/key-22320 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:50.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:50.992" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230622 08:21:50.987" endtime="20230622 08:21:50.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:50.993" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230622 08:21:50.992" endtime="20230622 08:21:50.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:50.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:50.994" endtime="20230622 08:21:50.994"/>
</kw>
<msg timestamp="20230622 08:21:50.995" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230622 08:21:50.986" endtime="20230622 08:21:50.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:50.995" endtime="20230622 08:21:50.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:50.998" level="INFO">Running command 'rm /tmp/key-22320 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:51.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:51.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:50.996" endtime="20230622 08:21:51.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:51.003" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:51.002" endtime="20230622 08:21:51.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:51.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:51.003" endtime="20230622 08:21:51.003"/>
</kw>
<status status="PASS" starttime="20230622 08:21:50.996" endtime="20230622 08:21:51.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:45.787" endtime="20230622 08:21:51.004"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:51.016" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:51.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:51.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:51.008" endtime="20230622 08:21:51.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:51.593" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:51.592" endtime="20230622 08:21:51.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:51.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:51.593" endtime="20230622 08:21:51.594"/>
</kw>
<status status="PASS" starttime="20230622 08:21:51.008" endtime="20230622 08:21:51.594"/>
</kw>
<msg timestamp="20230622 08:21:51.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:51.007" endtime="20230622 08:21:51.595"/>
</kw>
<status status="PASS" starttime="20230622 08:21:51.007" endtime="20230622 08:21:51.595"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:51.599" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:52.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:52.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:51.597" endtime="20230622 08:21:52.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:52.181" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:52.181" endtime="20230622 08:21:52.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:52.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:52.182" endtime="20230622 08:21:52.182"/>
</kw>
<status status="PASS" starttime="20230622 08:21:51.596" endtime="20230622 08:21:52.183"/>
</kw>
<msg timestamp="20230622 08:21:52.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:51.596" endtime="20230622 08:21:52.183"/>
</kw>
<status status="PASS" starttime="20230622 08:21:51.595" endtime="20230622 08:21:52.183"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:52.188" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:52.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:52.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:52.185" endtime="20230622 08:21:52.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:52.747" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:52.746" endtime="20230622 08:21:52.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:52.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:52.748" endtime="20230622 08:21:52.749"/>
</kw>
<status status="PASS" starttime="20230622 08:21:52.184" endtime="20230622 08:21:52.749"/>
</kw>
<msg timestamp="20230622 08:21:52.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:52.184" endtime="20230622 08:21:52.750"/>
</kw>
<status status="PASS" starttime="20230622 08:21:52.184" endtime="20230622 08:21:52.750"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:52.754" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:53.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:53.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:52.752" endtime="20230622 08:21:53.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:53.328" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:53.327" endtime="20230622 08:21:53.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:53.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:53.328" endtime="20230622 08:21:53.329"/>
</kw>
<status status="PASS" starttime="20230622 08:21:52.751" endtime="20230622 08:21:53.329"/>
</kw>
<msg timestamp="20230622 08:21:53.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:52.751" endtime="20230622 08:21:53.330"/>
</kw>
<status status="PASS" starttime="20230622 08:21:52.750" endtime="20230622 08:21:53.330"/>
</kw>
<status status="PASS" starttime="20230622 08:21:51.006" endtime="20230622 08:21:53.330"/>
</kw>
<status status="PASS" starttime="20230622 08:21:51.006" endtime="20230622 08:21:53.330"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:51.005" endtime="20230622 08:21:53.331"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:53.337" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:54.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:54.179" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:33 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230622 08:21:53.334" endtime="20230622 08:21:54.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:54.182" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:33 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 22 Jun 2023 08:21:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230622 08:21:54.180" endtime="20230622 08:21:54.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:54.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:54.183" endtime="20230622 08:21:54.184"/>
</kw>
<msg timestamp="20230622 08:21:54.184" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:33 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230622 08:21:53.333" endtime="20230622 08:21:54.184"/>
</kw>
<msg timestamp="20230622 08:21:54.185" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:33 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230622 08:21:53.332" endtime="20230622 08:21:54.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:54.185" endtime="20230622 08:21:54.185"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:54.189" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:54.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:54.192" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230622 08:21:54.186" endtime="20230622 08:21:54.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:54.193" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230622 08:21:54.193" endtime="20230622 08:21:54.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:54.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:54.194" endtime="20230622 08:21:54.194"/>
</kw>
<msg timestamp="20230622 08:21:54.195" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230622 08:21:54.185" endtime="20230622 08:21:54.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:54.195" endtime="20230622 08:21:54.195"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:54.204" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:54.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:54.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:54.196" endtime="20230622 08:21:54.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:54.207" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:54.206" endtime="20230622 08:21:54.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:54.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:54.207" endtime="20230622 08:21:54.208"/>
</kw>
<status status="PASS" starttime="20230622 08:21:54.196" endtime="20230622 08:21:54.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:53.331" endtime="20230622 08:21:54.208"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:54.215" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:54.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:54.993" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230622 08:21:54.212" endtime="20230622 08:21:54.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:54.995" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 22 Jun 2023 08:21:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230622 08:21:54.994" endtime="20230622 08:21:54.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:54.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:54.995" endtime="20230622 08:21:54.996"/>
</kw>
<msg timestamp="20230622 08:21:54.996" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230622 08:21:54.211" endtime="20230622 08:21:54.996"/>
</kw>
<msg timestamp="20230622 08:21:54.997" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 22 Jun 2023 08:21:41 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230622 08:21:54.211" endtime="20230622 08:21:54.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:54.997" endtime="20230622 08:21:54.997"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:55.001" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:55.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:55.004" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230622 08:21:54.998" endtime="20230622 08:21:55.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:55.005" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230622 08:21:55.004" endtime="20230622 08:21:55.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:55.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:55.005" endtime="20230622 08:21:55.006"/>
</kw>
<msg timestamp="20230622 08:21:55.006" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230622 08:21:54.998" endtime="20230622 08:21:55.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230622 08:21:55.007" endtime="20230622 08:21:55.007"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:55.010" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:55.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:55.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230622 08:21:55.008" endtime="20230622 08:21:55.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:55.014" level="INFO"/>
<status status="PASS" starttime="20230622 08:21:55.013" endtime="20230622 08:21:55.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:55.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:55.014" endtime="20230622 08:21:55.015"/>
</kw>
<status status="PASS" starttime="20230622 08:21:55.007" endtime="20230622 08:21:55.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230622 08:21:54.210" endtime="20230622 08:21:55.016"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230622 08:21:45.696" endtime="20230622 08:21:55.018"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230622 08:21:59.742" endtime="20230622 08:21:59.743"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230622 08:21:59.743" endtime="20230622 08:21:59.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:59.750" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:26:59.742" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230622 08:21:59.745" endtime="20230622 08:26:59.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230622 08:26:59.743" endtime="20230622 08:26:59.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230622 08:26:59.743" endtime="20230622 08:26:59.743"/>
</kw>
<status status="FAIL" starttime="20230622 08:21:59.744" endtime="20230622 08:26:59.744"/>
</kw>
<msg timestamp="20230622 08:26:59.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230622 08:21:59.744" endtime="20230622 08:26:59.745"/>
</kw>
<status status="FAIL" starttime="20230622 08:21:59.743" endtime="20230622 08:26:59.745"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230622 08:26:59.746" endtime="20230622 08:26:59.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230622 08:21:59.741" endtime="20230622 08:26:59.747">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230622 08:21:59.684" endtime="20230622 08:26:59.749"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230622 08:21:00.677" endtime="20230622 08:21:00.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:00.685" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:00.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:00.688" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9c09e689b6a2
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230622 08:21:00.679" endtime="20230622 08:21:00.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:00.689" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9c09e689b6a2
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230622 08:21:00.688" endtime="20230622 08:21:00.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:00.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:00.689" endtime="20230622 08:21:00.690"/>
</kw>
<status status="PASS" starttime="20230622 08:21:00.678" endtime="20230622 08:21:00.690"/>
</kw>
<msg timestamp="20230622 08:21:00.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:00.678" endtime="20230622 08:21:00.692"/>
</kw>
<msg timestamp="20230622 08:21:00.693" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9c09e689b6a2
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230622 08:21:00.677" endtime="20230622 08:21:00.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:00.693" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9c09e689b6a2
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230622 08:21:00.693" endtime="20230622 08:21:00.693"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230622 08:21:00.693" endtime="20230622 08:21:00.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:00.698" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:04.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:04.050" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230622 08:21:00.695" endtime="20230622 08:21:04.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:04.051" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230622 08:21:04.050" endtime="20230622 08:21:04.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:04.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:04.051" endtime="20230622 08:21:04.052"/>
</kw>
<status status="PASS" starttime="20230622 08:21:00.695" endtime="20230622 08:21:04.052"/>
</kw>
<msg timestamp="20230622 08:21:04.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:00.694" endtime="20230622 08:21:04.053"/>
</kw>
<msg timestamp="20230622 08:21:04.053" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230622 08:21:00.694" endtime="20230622 08:21:04.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:04.054" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230622 08:21:04.053" endtime="20230622 08:21:04.054"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230622 08:21:04.054" endtime="20230622 08:21:04.054"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230622 08:21:00.675" endtime="20230622 08:21:04.055"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230622 08:21:04.056" endtime="20230622 08:21:04.057"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230622 08:21:04.057" endtime="20230622 08:21:04.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230622 08:21:04.062" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230622 08:21:07.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230622 08:21:07.148" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230622 08:21:04.059" endtime="20230622 08:21:07.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:07.150" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230622 08:21:07.149" endtime="20230622 08:21:07.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230622 08:21:07.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230622 08:21:07.150" endtime="20230622 08:21:07.151"/>
</kw>
<status status="PASS" starttime="20230622 08:21:04.058" endtime="20230622 08:21:07.151"/>
</kw>
<msg timestamp="20230622 08:21:07.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230622 08:21:04.058" endtime="20230622 08:21:07.152"/>
</kw>
<msg timestamp="20230622 08:21:07.152" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230622 08:21:04.058" endtime="20230622 08:21:07.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230622 08:21:07.153" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230622 08:21:07.152" endtime="20230622 08:21:07.153"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230622 08:21:07.153" endtime="20230622 08:21:07.154"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230622 08:21:04.055" endtime="20230622 08:21:07.154"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230622 08:21:00.615" endtime="20230622 08:21:07.156"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="345362"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
