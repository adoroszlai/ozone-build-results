<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230616 07:08:39.530" rpa="false" schemaversion="4">
<suite id="s1" name="ozone">
<suite id="s1-s1" name="Ozone-Lib" source="/opt/hadoop/smoketest/ozone-lib">
<suite id="s1-s1-s1" name="Shell Tests" source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot">
<test id="s1-s1-s1-t1" name="Bucket Exists should not if No Such Volume" line="27">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:51.515" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:32:56.819" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:32:56.819" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230616 06:32:51.511" endtime="20230616 06:32:56.819"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230616 06:32:56.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:32:56.819" endtime="20230616 06:32:56.820"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230616 06:32:56.820" endtime="20230616 06:32:56.820"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230616 06:32:56.820" endtime="20230616 06:32:56.820"/>
</kw>
<msg timestamp="20230616 06:32:56.821" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230616 06:32:51.511" endtime="20230616 06:32:56.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:56.822" endtime="20230616 06:32:56.823"/>
</kw>
<status status="PASS" starttime="20230616 06:32:51.508" endtime="20230616 06:32:56.823"/>
</test>
<test id="s1-s1-s1-t2" name="Bucket Exists should not if No Such Bucket" line="31">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:56.827" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:01.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:01.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:32:56.825" endtime="20230616 06:33:01.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:01.325" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:01.324" endtime="20230616 06:33:01.325"/>
</kw>
<status status="PASS" starttime="20230616 06:32:56.825" endtime="20230616 06:33:01.325"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:01.327" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:05.844" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:33:05.844" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230616 06:33:01.326" endtime="20230616 06:33:05.844"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230616 06:33:05.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:05.845" endtime="20230616 06:33:05.846"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230616 06:33:05.846" endtime="20230616 06:33:05.846"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230616 06:33:05.846" endtime="20230616 06:33:05.846"/>
</kw>
<msg timestamp="20230616 06:33:05.846" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230616 06:33:01.325" endtime="20230616 06:33:05.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:33:05.847" endtime="20230616 06:33:05.847"/>
</kw>
<status status="PASS" starttime="20230616 06:32:56.824" endtime="20230616 06:33:05.847"/>
</test>
<test id="s1-s1-s1-t3" name="Bucket Exists" line="36">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:05.851" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:10.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:10.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:05.849" endtime="20230616 06:33:10.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:10.775" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:10.775" endtime="20230616 06:33:10.776"/>
</kw>
<status status="PASS" starttime="20230616 06:33:05.849" endtime="20230616 06:33:10.776"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:10.779" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:15.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:15.199" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-16T06:33:10....</msg>
<status status="PASS" starttime="20230616 06:33:10.777" endtime="20230616 06:33:15.199"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:33:15.199" endtime="20230616 06:33:15.200"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:33:15.200" endtime="20230616 06:33:15.201"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:33:15.201" endtime="20230616 06:33:15.201"/>
</kw>
<msg timestamp="20230616 06:33:15.201" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20230616 06:33:10.776" endtime="20230616 06:33:15.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${TRUE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:33:15.202" endtime="20230616 06:33:15.202"/>
</kw>
<status status="PASS" starttime="20230616 06:33:05.848" endtime="20230616 06:33:15.208"/>
</test>
<test id="s1-s1-s1-t4" name="Bucket Exists should not if No Such OM service" line="41">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:15.212" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:19.171" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:33:19.171" level="INFO">${output} = Cannot resolve OM host no-such-host in the URI</msg>
<status status="PASS" starttime="20230616 06:33:15.210" endtime="20230616 06:33:19.171"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230616 06:33:19.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:19.171" endtime="20230616 06:33:19.173"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230616 06:33:19.173" endtime="20230616 06:33:19.173"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230616 06:33:19.174" endtime="20230616 06:33:19.174"/>
</kw>
<msg timestamp="20230616 06:33:19.174" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230616 06:33:15.210" endtime="20230616 06:33:19.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:33:19.174" endtime="20230616 06:33:19.175"/>
</kw>
<status status="PASS" starttime="20230616 06:33:15.209" endtime="20230616 06:33:19.175"/>
</test>
<test id="s1-s1-s1-t5" name="Key Should Match Local File" line="46">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:19.180" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:28.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:28.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:19.178" endtime="20230616 06:33:28.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:28.320" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:28.319" endtime="20230616 06:33:28.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:28.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:28.320" endtime="20230616 06:33:28.328"/>
</kw>
<status status="PASS" starttime="20230616 06:33:19.178" endtime="20230616 06:33:28.328"/>
</kw>
<msg timestamp="20230616 06:33:28.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:19.177" endtime="20230616 06:33:28.328"/>
</kw>
<status status="PASS" starttime="20230616 06:33:19.176" endtime="20230616 06:33:28.329"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:33:28.332" level="INFO">${postfix} = 52724</msg>
<status status="PASS" starttime="20230616 06:33:28.331" endtime="20230616 06:33:28.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:33:28.332" level="INFO">${tmpfile} = /tmp/tempkey-52724</msg>
<status status="PASS" starttime="20230616 06:33:28.332" endtime="20230616 06:33:28.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:28.335" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-52724 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:35.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:35.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:28.333" endtime="20230616 06:33:35.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:35.472" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:35.472" endtime="20230616 06:33:35.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:35.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:35.473" endtime="20230616 06:33:35.473"/>
</kw>
<status status="PASS" starttime="20230616 06:33:28.333" endtime="20230616 06:33:35.474"/>
</kw>
<msg timestamp="20230616 06:33:35.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:28.333" endtime="20230616 06:33:35.474"/>
</kw>
<status status="PASS" starttime="20230616 06:33:28.332" endtime="20230616 06:33:35.474"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230616 06:33:35.476" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-52724 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:35.480" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230616 06:33:35.474" endtime="20230616 06:33:35.480"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:35.484" level="INFO">Running command 'rm -f /tmp/tempkey-52724 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:35.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:35.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:35.482" endtime="20230616 06:33:35.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:35.487" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:35.487" endtime="20230616 06:33:35.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:35.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:35.487" endtime="20230616 06:33:35.488"/>
</kw>
<status status="PASS" starttime="20230616 06:33:35.482" endtime="20230616 06:33:35.488"/>
</kw>
<msg timestamp="20230616 06:33:35.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:35.481" endtime="20230616 06:33:35.488"/>
</kw>
<status status="PASS" starttime="20230616 06:33:35.480" endtime="20230616 06:33:35.488"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:33:35.489" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230616 06:33:35.488" endtime="20230616 06:33:35.489"/>
</kw>
<msg timestamp="20230616 06:33:35.489" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230616 06:33:28.330" endtime="20230616 06:33:35.489"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230616 06:33:35.489" endtime="20230616 06:33:35.489"/>
</kw>
<status status="PASS" starttime="20230616 06:33:28.329" endtime="20230616 06:33:35.490"/>
</kw>
<status status="PASS" starttime="20230616 06:33:19.176" endtime="20230616 06:33:35.490"/>
</test>
<test id="s1-s1-s1-t6" name="Compare Key With Local File with Different File" line="50">
<kw name="Create Random File" library="os">
<var>${random_file}</var>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:33:35.493" level="INFO">${postfix} = 23505</msg>
<status status="PASS" starttime="20230616 06:33:35.492" endtime="20230616 06:33:35.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:33:35.493" level="INFO">${tmpfile} = /tmp/tempfile-23505</msg>
<status status="PASS" starttime="20230616 06:33:35.493" endtime="20230616 06:33:35.493"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20230616 06:33:35.494" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-23505"&gt;/tmp/tempfile-23505&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20230616 06:33:35.493" endtime="20230616 06:33:35.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>"Random string"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:33:35.494" level="INFO">${content} = "Random string"</msg>
<status status="PASS" starttime="20230616 06:33:35.494" endtime="20230616 06:33:35.494"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>${tmpfile}</arg>
<arg>${content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20230616 06:33:35.495" level="INFO" html="true">Created file '&lt;a href="file:///tmp/tempfile-23505"&gt;/tmp/tempfile-23505&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:33:35.494" endtime="20230616 06:33:35.495"/>
</kw>
<msg timestamp="20230616 06:33:35.495" level="INFO">${random_file} = /tmp/tempfile-23505</msg>
<status status="PASS" starttime="20230616 06:33:35.491" endtime="20230616 06:33:35.495"/>
</kw>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:33:35.496" level="INFO">${postfix} = 14132</msg>
<status status="PASS" starttime="20230616 06:33:35.496" endtime="20230616 06:33:35.496"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:33:35.497" level="INFO">${tmpfile} = /tmp/tempkey-14132</msg>
<status status="PASS" starttime="20230616 06:33:35.496" endtime="20230616 06:33:35.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:35.499" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-14132 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:41.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:41.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:35.498" endtime="20230616 06:33:41.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:41.761" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:41.761" endtime="20230616 06:33:41.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:41.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:41.762" endtime="20230616 06:33:41.762"/>
</kw>
<status status="PASS" starttime="20230616 06:33:35.497" endtime="20230616 06:33:41.762"/>
</kw>
<msg timestamp="20230616 06:33:41.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:35.497" endtime="20230616 06:33:41.763"/>
</kw>
<status status="PASS" starttime="20230616 06:33:35.497" endtime="20230616 06:33:41.763"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230616 06:33:41.765" level="INFO">Running command 'diff -q /tmp/tempfile-23505 /tmp/tempkey-14132 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:41.767" level="INFO">${rc} = 1</msg>
<status status="PASS" starttime="20230616 06:33:41.763" endtime="20230616 06:33:41.767"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:41.771" level="INFO">Running command 'rm -f /tmp/tempkey-14132 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:41.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:41.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:41.769" endtime="20230616 06:33:41.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:41.775" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:41.774" endtime="20230616 06:33:41.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:41.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:41.775" endtime="20230616 06:33:41.775"/>
</kw>
<status status="PASS" starttime="20230616 06:33:41.769" endtime="20230616 06:33:41.776"/>
</kw>
<msg timestamp="20230616 06:33:41.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:41.769" endtime="20230616 06:33:41.776"/>
</kw>
<status status="PASS" starttime="20230616 06:33:41.768" endtime="20230616 06:33:41.776"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:33:41.777" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20230616 06:33:41.776" endtime="20230616 06:33:41.777"/>
</kw>
<msg timestamp="20230616 06:33:41.777" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20230616 06:33:35.495" endtime="20230616 06:33:41.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:33:41.777" endtime="20230616 06:33:41.777"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${random_file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230616 06:33:41.778" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-23505"&gt;/tmp/tempfile-23505&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:33:41.778" endtime="20230616 06:33:41.778"/>
</kw>
<status status="PASS" starttime="20230616 06:33:35.491" endtime="20230616 06:33:41.778"/>
</test>
<test id="s1-s1-s1-t7" name="Compare Key With Local File if File Does Not Exist" line="56">
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:33:41.781" level="INFO">${postfix} = 23075</msg>
<status status="PASS" starttime="20230616 06:33:41.780" endtime="20230616 06:33:41.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:33:41.781" level="INFO">${tmpfile} = /tmp/tempkey-23075</msg>
<status status="PASS" starttime="20230616 06:33:41.781" endtime="20230616 06:33:41.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:41.784" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-23075 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:47.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:47.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:41.783" endtime="20230616 06:33:47.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:47.766" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:47.766" endtime="20230616 06:33:47.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:47.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:47.766" endtime="20230616 06:33:47.767"/>
</kw>
<status status="PASS" starttime="20230616 06:33:41.782" endtime="20230616 06:33:47.767"/>
</kw>
<msg timestamp="20230616 06:33:47.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:41.782" endtime="20230616 06:33:47.767"/>
</kw>
<status status="PASS" starttime="20230616 06:33:41.781" endtime="20230616 06:33:47.767"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230616 06:33:47.769" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-23075 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:47.772" level="INFO">${rc} = 2</msg>
<status status="PASS" starttime="20230616 06:33:47.767" endtime="20230616 06:33:47.772"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:47.777" level="INFO">Running command 'rm -f /tmp/tempkey-23075 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:47.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:47.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:33:47.775" endtime="20230616 06:33:47.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:47.781" level="INFO"/>
<status status="PASS" starttime="20230616 06:33:47.781" endtime="20230616 06:33:47.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:47.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:47.781" endtime="20230616 06:33:47.782"/>
</kw>
<status status="PASS" starttime="20230616 06:33:47.774" endtime="20230616 06:33:47.782"/>
</kw>
<msg timestamp="20230616 06:33:47.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:47.774" endtime="20230616 06:33:47.782"/>
</kw>
<status status="PASS" starttime="20230616 06:33:47.773" endtime="20230616 06:33:47.782"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:33:47.783" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20230616 06:33:47.782" endtime="20230616 06:33:47.783"/>
</kw>
<msg timestamp="20230616 06:33:47.783" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20230616 06:33:41.780" endtime="20230616 06:33:47.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:33:47.783" endtime="20230616 06:33:47.784"/>
</kw>
<status status="PASS" starttime="20230616 06:33:41.779" endtime="20230616 06:33:47.784"/>
</test>
<status status="PASS" starttime="20230616 06:32:51.482" endtime="20230616 06:33:47.786"/>
</suite>
<status status="PASS" starttime="20230616 06:32:51.455" endtime="20230616 06:33:47.788"/>
</suite>
<suite id="s1-s2" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s2-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s2-s1-t1" name="Incomplete command" line="23">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:51.460" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:54.287" level="INFO">${rc} = 2</msg>
<msg timestamp="20230616 06:58:54.287" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230616 06:58:51.456" endtime="20230616 06:58:54.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:54.288" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  namespace           Namespace Summary specific admin operations
  om                  Ozone Manager specific admin operations
  reconfig            Dynamically reconfigure server without restarting it
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20230616 06:58:54.288" endtime="20230616 06:58:54.288"/>
</kw>
<msg timestamp="20230616 06:58:54.289" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230616 06:58:51.456" endtime="20230616 06:58:54.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.289" endtime="20230616 06:58:54.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.290" endtime="20230616 06:58:54.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.290" endtime="20230616 06:58:54.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.291" endtime="20230616 06:58:54.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.291" endtime="20230616 06:58:54.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.292" endtime="20230616 06:58:54.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.292" endtime="20230616 06:58:54.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:54.293" endtime="20230616 06:58:54.293"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:51.455" endtime="20230616 06:58:54.293"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20230616 06:58:51.432" endtime="20230616 06:58:54.295"/>
</suite>
<suite id="s1-s2-s2" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:58:54.302" endtime="20230616 06:58:54.303"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:54.306" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:00.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:00.478" level="INFO">${output} = 2023-06-16 06:58:56,402 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:56,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:54.304" endtime="20230616 06:59:00.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:00.479" level="INFO">2023-06-16 06:58:56,402 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:56,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:56,516 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:56,582 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container and number-of-tests 1
2023-06-16 06:58:56,635 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:57,640 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:58,530 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:58:58,640 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:58,862 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:58:59,641 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:58:59,954 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1691.711481, max=1691.711481, mean=1691.711481, stddev=0.0, median=1691.711481, p75=1691.711481, p95=1691.711481, p98=1691.711481, p99=1691.711481, p999=1691.711481, mean_rate=0.486923030275476, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:59,954 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-06-16 06:58:59,954 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:59,955 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:59:00.478" endtime="20230616 06:59:00.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:00.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:00.479" endtime="20230616 06:59:00.480"/>
</kw>
<status status="PASS" starttime="20230616 06:58:54.303" endtime="20230616 06:59:00.480"/>
</kw>
<msg timestamp="20230616 06:59:00.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:54.303" endtime="20230616 06:59:00.480"/>
</kw>
<status status="PASS" starttime="20230616 06:58:54.303" endtime="20230616 06:59:00.480"/>
</kw>
<status status="PASS" starttime="20230616 06:58:54.302" endtime="20230616 06:59:00.480"/>
</kw>
<test id="s1-s2-s2-t1" name="Create container" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:00.485" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:06.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:06.042" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230616 06:59:00.483" endtime="20230616 06:59:06.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:06.044" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230616 06:59:06.043" endtime="20230616 06:59:06.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:06.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:06.044" endtime="20230616 06:59:06.044"/>
</kw>
<status status="PASS" starttime="20230616 06:59:00.482" endtime="20230616 06:59:06.045"/>
</kw>
<msg timestamp="20230616 06:59:06.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:00.482" endtime="20230616 06:59:06.045"/>
</kw>
<msg timestamp="20230616 06:59:06.045" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230616 06:59:00.482" endtime="20230616 06:59:06.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:06.045" endtime="20230616 06:59:06.046"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:06.049" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:06.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:06.054" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230616 06:59:06.047" endtime="20230616 06:59:06.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:06.055" level="INFO">3</msg>
<status status="PASS" starttime="20230616 06:59:06.054" endtime="20230616 06:59:06.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:06.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:06.055" endtime="20230616 06:59:06.056"/>
</kw>
<status status="PASS" starttime="20230616 06:59:06.047" endtime="20230616 06:59:06.056"/>
</kw>
<msg timestamp="20230616 06:59:06.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:06.046" endtime="20230616 06:59:06.056"/>
</kw>
<msg timestamp="20230616 06:59:06.056" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20230616 06:59:06.046" endtime="20230616 06:59:06.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:59:06.057" level="INFO">${CONTAINER} = 3</msg>
<status status="PASS" starttime="20230616 06:59:06.057" endtime="20230616 06:59:06.057"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:00.481" endtime="20230616 06:59:06.057"/>
</test>
<test id="s1-s2-s2-t2" name="List containers" line="44">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:06.063" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:09.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:09.877" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "num...</msg>
<status status="PASS" starttime="20230616 06:59:06.061" endtime="20230616 06:59:09.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:09.879" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "numberOfKeys" : 248,
  "lastUsed" : "2023-06-16T06:59:09.657740Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 13,
  "sequenceId" : 1199,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:52:08.544Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberOfKeys" : 1,
  "lastUsed" : "2023-06-16T06:59:09.657777Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 3,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:59:03.729Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-06-16T06:59:09.658572Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230616 06:59:09.878" endtime="20230616 06:59:09.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:09.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:09.879" endtime="20230616 06:59:09.879"/>
</kw>
<status status="PASS" starttime="20230616 06:59:06.060" endtime="20230616 06:59:09.880"/>
</kw>
<msg timestamp="20230616 06:59:09.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:06.060" endtime="20230616 06:59:09.880"/>
</kw>
<msg timestamp="20230616 06:59:09.880" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "num...</msg>
<status status="PASS" starttime="20230616 06:59:06.059" endtime="20230616 06:59:09.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:09.880" endtime="20230616 06:59:09.881"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:06.059" endtime="20230616 06:59:09.881"/>
</test>
<test id="s1-s2-s2-t3" name="List containers with explicit host" line="48">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:09.886" level="INFO">Running command 'ozone admin container list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:13.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:13.544" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "num...</msg>
<status status="PASS" starttime="20230616 06:59:09.884" endtime="20230616 06:59:13.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:13.546" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "numberOfKeys" : 248,
  "lastUsed" : "2023-06-16T06:59:13.429010Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 13,
  "sequenceId" : 1199,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:52:08.544Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberOfKeys" : 1,
  "lastUsed" : "2023-06-16T06:59:13.429144Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 3,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:59:03.729Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-06-16T06:59:13.430442Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230616 06:59:13.545" endtime="20230616 06:59:13.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:13.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:13.546" endtime="20230616 06:59:13.546"/>
</kw>
<status status="PASS" starttime="20230616 06:59:09.884" endtime="20230616 06:59:13.547"/>
</kw>
<msg timestamp="20230616 06:59:13.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:09.883" endtime="20230616 06:59:13.547"/>
</kw>
<msg timestamp="20230616 06:59:13.547" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "num...</msg>
<status status="PASS" starttime="20230616 06:59:09.883" endtime="20230616 06:59:13.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:13.547" endtime="20230616 06:59:13.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:09.882" endtime="20230616 06:59:13.548"/>
</test>
<test id="s1-s2-s2-t4" name="List containers with container state" line="52">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:13.554" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:16.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:16.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:59:13.551" endtime="20230616 06:59:16.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:16.969" level="INFO"/>
<status status="PASS" starttime="20230616 06:59:16.968" endtime="20230616 06:59:16.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:16.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:16.969" endtime="20230616 06:59:16.970"/>
</kw>
<status status="PASS" starttime="20230616 06:59:13.551" endtime="20230616 06:59:16.970"/>
</kw>
<msg timestamp="20230616 06:59:16.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:13.550" endtime="20230616 06:59:16.970"/>
</kw>
<msg timestamp="20230616 06:59:16.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:59:13.550" endtime="20230616 06:59:16.970"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:16.970" endtime="20230616 06:59:16.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:13.549" endtime="20230616 06:59:16.971"/>
</test>
<test id="s1-s2-s2-t5" name="List containers with replication factor ONE" line="56">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r ONE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:16.977" level="INFO">Running command 'ozone admin container list -t RATIS -r ONE 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:20.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:20.798" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:52:08.544Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberO...</msg>
<status status="PASS" starttime="20230616 06:59:16.975" endtime="20230616 06:59:20.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:20.799" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:52:08.544Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberOfKeys" : 1,
  "lastUsed" : "2023-06-16T06:59:20.698131Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 3,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230616 06:59:20.799" endtime="20230616 06:59:20.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:20.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:20.800" endtime="20230616 06:59:20.800"/>
</kw>
<status status="PASS" starttime="20230616 06:59:16.974" endtime="20230616 06:59:20.801"/>
</kw>
<msg timestamp="20230616 06:59:20.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:16.974" endtime="20230616 06:59:20.801"/>
</kw>
<msg timestamp="20230616 06:59:20.801" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:52:08.544Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 10240,
  "numberO...</msg>
<status status="PASS" starttime="20230616 06:59:16.973" endtime="20230616 06:59:20.801"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>THREE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:20.801" endtime="20230616 06:59:20.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:16.972" endtime="20230616 06:59:20.802"/>
</test>
<test id="s1-s2-s2-t6" name="List containers with replication factor THREE" line="60">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r THREE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:20.807" level="INFO">Running command 'ozone admin container list -t RATIS -r THREE 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:25.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:25.032" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "num...</msg>
<status status="PASS" starttime="20230616 06:59:20.805" endtime="20230616 06:59:25.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:25.033" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "numberOfKeys" : 248,
  "lastUsed" : "2023-06-16T06:59:24.826806Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 13,
  "sequenceId" : 1199,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230616 06:59:25.032" endtime="20230616 06:59:25.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:25.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:25.033" endtime="20230616 06:59:25.034"/>
</kw>
<status status="PASS" starttime="20230616 06:59:20.804" endtime="20230616 06:59:25.034"/>
</kw>
<msg timestamp="20230616 06:59:25.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:20.804" endtime="20230616 06:59:25.034"/>
</kw>
<msg timestamp="20230616 06:59:25.034" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-06-16T06:33:23.791Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 1515606,
  "num...</msg>
<status status="PASS" starttime="20230616 06:59:20.804" endtime="20230616 06:59:25.034"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ONE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:25.034" endtime="20230616 06:59:25.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:20.803" endtime="20230616 06:59:25.035"/>
</test>
<test id="s1-s2-s2-t7" name="Container info" line="64">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:25.040" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:28.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:28.759" level="INFO">${output} = Container id: 3
Pipeline id: a68c0900-d76e-43d5-b2cf-f18d878a0458
Container State: OPEN
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default]
Replicas: [State: OPEN; Replica...</msg>
<status status="PASS" starttime="20230616 06:59:25.038" endtime="20230616 06:59:28.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:28.761" level="INFO">Container id: 3
Pipeline id: a68c0900-d76e-43d5-b2cf-f18d878a0458
Container State: OPEN
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: 28f28295-f9b6-4a85-ad72-14a73ae69d77; Location: 28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default]</msg>
<status status="PASS" starttime="20230616 06:59:28.760" endtime="20230616 06:59:28.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:28.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:28.761" endtime="20230616 06:59:28.761"/>
</kw>
<status status="PASS" starttime="20230616 06:59:25.037" endtime="20230616 06:59:28.762"/>
</kw>
<msg timestamp="20230616 06:59:28.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:25.037" endtime="20230616 06:59:28.762"/>
</kw>
<msg timestamp="20230616 06:59:28.762" level="INFO">${output} = Container id: 3
Pipeline id: a68c0900-d76e-43d5-b2cf-f18d878a0458
Container State: OPEN
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default]
Replicas: [State: OPEN; Replica...</msg>
<status status="PASS" starttime="20230616 06:59:25.037" endtime="20230616 06:59:28.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:28.762" endtime="20230616 06:59:28.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:28.763" endtime="20230616 06:59:28.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:28.763" endtime="20230616 06:59:28.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:25.036" endtime="20230616 06:59:28.764"/>
</test>
<test id="s1-s2-s2-t8" name="Verbose container info" line="70">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:28.769" level="INFO">Running command 'ozone admin --verbose container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:32.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:32.598" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: a68c0900-d76e-43d5-b2cf-f18d878a0458, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: STANDALONE...</msg>
<status status="PASS" starttime="20230616 06:59:28.767" endtime="20230616 06:59:32.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:32.600" level="INFO">Container id: 3
Pipeline Info: Pipeline[ Id: a68c0900-d76e-43d5-b2cf-f18d878a0458, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T06:59:03.724Z[UTC]]
Container State: OPEN
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: 28f28295-f9b6-4a85-ad72-14a73ae69d77; Location: 28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default]</msg>
<status status="PASS" starttime="20230616 06:59:32.598" endtime="20230616 06:59:32.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:32.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:32.600" endtime="20230616 06:59:32.601"/>
</kw>
<status status="PASS" starttime="20230616 06:59:28.766" endtime="20230616 06:59:32.601"/>
</kw>
<msg timestamp="20230616 06:59:32.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:28.766" endtime="20230616 06:59:32.601"/>
</kw>
<msg timestamp="20230616 06:59:32.601" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: a68c0900-d76e-43d5-b2cf-f18d878a0458, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: STANDALONE...</msg>
<status status="PASS" starttime="20230616 06:59:28.765" endtime="20230616 06:59:32.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:32.601" endtime="20230616 06:59:32.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:28.765" endtime="20230616 06:59:32.602"/>
</test>
<test id="s1-s2-s2-t9" name="Close container" line="74">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:32.608" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:36.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:36.103" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20230616 06:59:32.605" endtime="20230616 06:59:36.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:36.104" level="INFO">1</msg>
<status status="PASS" starttime="20230616 06:59:36.103" endtime="20230616 06:59:36.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:36.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:36.104" endtime="20230616 06:59:36.105"/>
</kw>
<status status="PASS" starttime="20230616 06:59:32.605" endtime="20230616 06:59:36.105"/>
</kw>
<msg timestamp="20230616 06:59:36.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:32.604" endtime="20230616 06:59:36.106"/>
</kw>
<msg timestamp="20230616 06:59:36.106" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20230616 06:59:32.604" endtime="20230616 06:59:36.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:36.110" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:39.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:39.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:59:36.108" endtime="20230616 06:59:39.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:39.687" level="INFO"/>
<status status="PASS" starttime="20230616 06:59:39.686" endtime="20230616 06:59:39.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:39.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:39.688" endtime="20230616 06:59:39.688"/>
</kw>
<status status="PASS" starttime="20230616 06:59:36.107" endtime="20230616 06:59:39.689"/>
</kw>
<msg timestamp="20230616 06:59:39.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:36.107" endtime="20230616 06:59:39.689"/>
</kw>
<status status="PASS" starttime="20230616 06:59:36.106" endtime="20230616 06:59:39.689"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:39.693" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:43.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:43.164" level="INFO">${output} = Container id: 1
Pipeline id: 1fa4b221-6054-40b9-bd76-c869776ea9e9
Container State: CLOSING
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
2afe77c9-b70d-4f60-853c-539d...</msg>
<status status="PASS" starttime="20230616 06:59:39.691" endtime="20230616 06:59:43.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:43.165" level="INFO">Container id: 1
Pipeline id: 1fa4b221-6054-40b9-bd76-c869776ea9e9
Container State: CLOSING
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
2afe77c9-b70d-4f60-853c-539dbe25ad50/ozone_datanode_3.ozone_default,
55d42d4b-e26a-4462-832c-2eb2975f0613/ozone_datanode_2.ozone_default]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: 2afe77c9-b70d-4f60-853c-539dbe25ad50; Location: 2afe77c9-b70d-4f60-853c-539dbe25ad50/ozone_datanode_3.ozone_default,
State: OPEN; ReplicaIndex: 0; Origin: 28f28295-f9b6-4a85-ad72-14a73ae69d77; Location: 28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
State: OPEN; ReplicaIndex: 0; Origin: 55d42d4b-e26a-4462-832c-2eb2975f0613; Location: 55d42d4b-e26a-4462-832c-2eb2975f0613/ozone_datanode_2.ozone_default]</msg>
<status status="PASS" starttime="20230616 06:59:43.165" endtime="20230616 06:59:43.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:43.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:43.166" endtime="20230616 06:59:43.166"/>
</kw>
<status status="PASS" starttime="20230616 06:59:39.690" endtime="20230616 06:59:43.166"/>
</kw>
<msg timestamp="20230616 06:59:43.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:39.690" endtime="20230616 06:59:43.167"/>
</kw>
<msg timestamp="20230616 06:59:43.167" level="INFO">${output} = Container id: 1
Pipeline id: 1fa4b221-6054-40b9-bd76-c869776ea9e9
Container State: CLOSING
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
2afe77c9-b70d-4f60-853c-539d...</msg>
<status status="PASS" starttime="20230616 06:59:39.689" endtime="20230616 06:59:43.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:43.167" endtime="20230616 06:59:43.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:43.172" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:47.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:47.160" level="INFO">${output} = Container id: 1
Pipeline id: 1fa4b221-6054-40b9-bd76-c869776ea9e9
Container State: CLOSING
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
2afe77c9-b70d-4f60-853c-539d...</msg>
<status status="PASS" starttime="20230616 06:59:43.170" endtime="20230616 06:59:47.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:47.161" level="INFO">Container id: 1
Pipeline id: 1fa4b221-6054-40b9-bd76-c869776ea9e9
Container State: CLOSING
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
2afe77c9-b70d-4f60-853c-539dbe25ad50/ozone_datanode_3.ozone_default,
55d42d4b-e26a-4462-832c-2eb2975f0613/ozone_datanode_2.ozone_default]
Replicas: [State: CLOSED; ReplicaIndex: 0; Origin: 2afe77c9-b70d-4f60-853c-539dbe25ad50; Location: 2afe77c9-b70d-4f60-853c-539dbe25ad50/ozone_datanode_3.ozone_default,
State: CLOSED; ReplicaIndex: 0; Origin: 28f28295-f9b6-4a85-ad72-14a73ae69d77; Location: 28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
State: CLOSED; ReplicaIndex: 0; Origin: 55d42d4b-e26a-4462-832c-2eb2975f0613; Location: 55d42d4b-e26a-4462-832c-2eb2975f0613/ozone_datanode_2.ozone_default]</msg>
<status status="PASS" starttime="20230616 06:59:47.161" endtime="20230616 06:59:47.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:47.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:47.162" endtime="20230616 06:59:47.162"/>
</kw>
<status status="PASS" starttime="20230616 06:59:43.169" endtime="20230616 06:59:47.163"/>
</kw>
<msg timestamp="20230616 06:59:47.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:43.169" endtime="20230616 06:59:47.163"/>
</kw>
<msg timestamp="20230616 06:59:47.163" level="INFO">${output} = Container id: 1
Pipeline id: 1fa4b221-6054-40b9-bd76-c869776ea9e9
Container State: CLOSING
Datanodes: [28f28295-f9b6-4a85-ad72-14a73ae69d77/ozone_datanode_1.ozone_default,
2afe77c9-b70d-4f60-853c-539d...</msg>
<status status="PASS" starttime="20230616 06:59:43.168" endtime="20230616 06:59:47.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:47.163" endtime="20230616 06:59:47.164"/>
</kw>
<status status="PASS" starttime="20230616 06:59:43.168" endtime="20230616 06:59:47.164"/>
</kw>
<status status="PASS" starttime="20230616 06:59:43.168" endtime="20230616 06:59:47.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:32.603" endtime="20230616 06:59:47.164"/>
</test>
<test id="s1-s2-s2-t10" name="Incomplete command" line="81">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:47.169" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:50.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:59:50.182" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230616 06:59:47.167" endtime="20230616 06:59:50.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:50.185" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  create  Create container
  close   close container
  report  Display the container summary report</msg>
<status status="PASS" starttime="20230616 06:59:50.184" endtime="20230616 06:59:50.185"/>
</kw>
<msg timestamp="20230616 06:59:50.186" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230616 06:59:47.166" endtime="20230616 06:59:50.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:50.187" endtime="20230616 06:59:50.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:50.188" endtime="20230616 06:59:50.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:50.188" endtime="20230616 06:59:50.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:50.189" endtime="20230616 06:59:50.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:50.189" endtime="20230616 06:59:50.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:47.165" endtime="20230616 06:59:50.190"/>
</test>
<test id="s1-s2-s2-t11" name="Cannot close container without admin privilege" line="93">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230616 06:59:50.193" level="INFO">Execution passed with message:
Skip privilege check in unsecure cluster</msg>
<status status="PASS" starttime="20230616 06:59:50.192" endtime="20230616 06:59:50.193"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<status status="NOT RUN" starttime="20230616 06:59:50.193" endtime="20230616 06:59:50.193"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<status status="NOT RUN" starttime="20230616 06:59:50.193" endtime="20230616 06:59:50.193"/>
</kw>
<status status="PASS" starttime="20230616 06:59:50.192" endtime="20230616 06:59:50.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:50.191" endtime="20230616 06:59:50.194">Skip privilege check in unsecure cluster</status>
</test>
<test id="s1-s2-s2-t12" name="Cannot create container without admin privilege" line="96">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230616 06:59:50.196" level="INFO">Execution passed with message:
Skip privilege check in unsecure cluster</msg>
<status status="PASS" starttime="20230616 06:59:50.196" endtime="20230616 06:59:50.196"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<status status="NOT RUN" starttime="20230616 06:59:50.196" endtime="20230616 06:59:50.196"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<status status="NOT RUN" starttime="20230616 06:59:50.196" endtime="20230616 06:59:50.196"/>
</kw>
<status status="PASS" starttime="20230616 06:59:50.195" endtime="20230616 06:59:50.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:50.195" endtime="20230616 06:59:50.197">Skip privilege check in unsecure cluster</status>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20230616 06:58:54.296" endtime="20230616 06:59:50.198"/>
</suite>
<suite id="s1-s2-s3" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s2-s3-t1" name="List datanodes" line="23">
<kw name="Execute" library="os">
<arg>ozone admin datanode list &gt; datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:50.209" level="INFO">Running command 'ozone admin datanode list &gt; datanode.list'.</msg>
<msg timestamp="20230616 06:59:53.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:53.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:59:50.207" endtime="20230616 06:59:53.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:53.693" level="INFO"/>
<status status="PASS" starttime="20230616 06:59:53.692" endtime="20230616 06:59:53.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:53.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:53.693" endtime="20230616 06:59:53.693"/>
</kw>
<status status="PASS" starttime="20230616 06:59:50.207" endtime="20230616 06:59:53.694"/>
</kw>
<msg timestamp="20230616 06:59:53.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:50.206" endtime="20230616 06:59:53.694"/>
</kw>
<status status="PASS" starttime="20230616 06:59:50.206" endtime="20230616 06:59:53.694"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${output}</var>
<arg>datanode.list</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230616 06:59:53.695" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/datanode.list"&gt;/opt/hadoop/datanode.list&lt;/a&gt;'.</msg>
<msg timestamp="20230616 06:59:53.695" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 06:59:53.694" endtime="20230616 06:59:53.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:53.695" endtime="20230616 06:59:53.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:53.695" endtime="20230616 06:59:53.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:50.205" endtime="20230616 06:59:53.696"/>
</test>
<test id="s1-s2-s3-t2" name="Filter list by UUID" line="29">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:53.701" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:53.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:53.705" level="INFO">${output} = 28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 06:59:53.699" endtime="20230616 06:59:53.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:53.706" level="INFO">28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 06:59:53.706" endtime="20230616 06:59:53.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:53.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:53.707" endtime="20230616 06:59:53.708"/>
</kw>
<status status="PASS" starttime="20230616 06:59:53.698" endtime="20230616 06:59:53.708"/>
</kw>
<msg timestamp="20230616 06:59:53.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:53.698" endtime="20230616 06:59:53.708"/>
</kw>
<msg timestamp="20230616 06:59:53.708" level="INFO">${uuid} = 28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 06:59:53.698" endtime="20230616 06:59:53.708"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:53.711" level="INFO">Running command 'ozone admin datanode list --id "28f28295-f9b6-4a85-ad72-14a73ae69d77" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:57.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:57.540" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 06:59:53.710" endtime="20230616 06:59:57.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:57.542" level="INFO">Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a2-4a1e-ab43-1d6ea8daff6e/RATIS/ONE/RATIS/OPEN/Leader
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Leader
a68c0900-d76e-43d5-b2cf-f18d878a0458/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
</msg>
<status status="PASS" starttime="20230616 06:59:57.541" endtime="20230616 06:59:57.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:57.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:57.542" endtime="20230616 06:59:57.543"/>
</kw>
<status status="PASS" starttime="20230616 06:59:53.709" endtime="20230616 06:59:57.543"/>
</kw>
<msg timestamp="20230616 06:59:57.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:53.709" endtime="20230616 06:59:57.543"/>
</kw>
<msg timestamp="20230616 06:59:57.543" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 06:59:53.708" endtime="20230616 06:59:57.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:59:57.544" endtime="20230616 06:59:57.544"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230616 06:59:57.545" level="INFO">1 out of 7 lines matched</msg>
<msg timestamp="20230616 06:59:57.545" level="INFO">${datanodes} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)</msg>
<status status="PASS" starttime="20230616 06:59:57.544" endtime="20230616 06:59:57.545"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230616 06:59:57.545" level="INFO">1 lines returned</msg>
<msg timestamp="20230616 06:59:57.545" level="INFO">@{lines} = [ Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines) ]</msg>
<status status="PASS" starttime="20230616 06:59:57.545" endtime="20230616 06:59:57.545"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230616 06:59:57.546" level="INFO">Length is 1</msg>
<msg timestamp="20230616 06:59:57.546" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230616 06:59:57.546" endtime="20230616 06:59:57.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:57.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:57.546" endtime="20230616 06:59:57.547"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:53.697" endtime="20230616 06:59:57.547"/>
</test>
<test id="s1-s2-s3-t3" name="Filter list by NodeOperationalState" line="38">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:57.552" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:57.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:57.556" level="INFO">${output} = 28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 06:59:57.550" endtime="20230616 06:59:57.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:57.557" level="INFO">28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 06:59:57.556" endtime="20230616 06:59:57.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:57.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:57.557" endtime="20230616 06:59:57.558"/>
</kw>
<status status="PASS" starttime="20230616 06:59:57.549" endtime="20230616 06:59:57.558"/>
</kw>
<msg timestamp="20230616 06:59:57.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:57.549" endtime="20230616 06:59:57.558"/>
</kw>
<msg timestamp="20230616 06:59:57.558" level="INFO">${uuid} = 28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 06:59:57.549" endtime="20230616 06:59:57.558"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Operational State: IN_SERVICE' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:57.561" level="INFO">Running command 'grep -c 'Operational State: IN_SERVICE' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:59:57.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:59:57.564" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230616 06:59:57.560" endtime="20230616 06:59:57.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:59:57.565" level="INFO">3</msg>
<status status="PASS" starttime="20230616 06:59:57.565" endtime="20230616 06:59:57.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:59:57.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:59:57.565" endtime="20230616 06:59:57.566"/>
</kw>
<status status="PASS" starttime="20230616 06:59:57.559" endtime="20230616 06:59:57.566"/>
</kw>
<msg timestamp="20230616 06:59:57.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:57.559" endtime="20230616 06:59:57.566"/>
</kw>
<msg timestamp="20230616 06:59:57.567" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230616 06:59:57.558" endtime="20230616 06:59:57.567"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:59:57.570" level="INFO">Running command 'ozone admin datanode list --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:01.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:01.453" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 06:59:57.568" endtime="20230616 07:00:01.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:01.454" level="INFO">Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a2-4a1e-ab43-1d6ea8daff6e/RATIS/ONE/RATIS/OPEN/Leader
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Leader
a68c0900-d76e-43d5-b2cf-f18d878a0458/STANDALONE/ONE/STAND_ALONE/OPEN/Follower

Datanode: 2afe77c9-b70d-4f60-853c-539dbe25ad50 (/default-rack/172.19.0.3/ozone_datanode_3.ozone_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Follower
0991da7b-5ae8-495b-8d74-442b6e284ff2/RATIS/ONE/RATIS/OPEN/Leader

Datanode: 55d42d4b-e26a-4462-832c-2eb2975f0613 (/default-rack/172.19.0.7/ozone_datanode_2.ozone_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Follower
e986ce8a-de65-475c-800f-36120d4c2016/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20230616 07:00:01.453" endtime="20230616 07:00:01.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:01.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:01.455" endtime="20230616 07:00:01.455"/>
</kw>
<status status="PASS" starttime="20230616 06:59:57.568" endtime="20230616 07:00:01.456"/>
</kw>
<msg timestamp="20230616 07:00:01.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:59:57.567" endtime="20230616 07:00:01.456"/>
</kw>
<msg timestamp="20230616 07:00:01.456" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 06:59:57.567" endtime="20230616 07:00:01.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:01.456" endtime="20230616 07:00:01.457"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230616 07:00:01.457" level="INFO">3 out of 21 lines matched</msg>
<msg timestamp="20230616 07:00:01.457" level="INFO">${datanodes} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Datanode: 2afe77c9-b70d-4f60-853c-539dbe25ad50 (/default-rack/172.19.0.3/ozone_data...</msg>
<status status="PASS" starttime="20230616 07:00:01.457" endtime="20230616 07:00:01.457"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230616 07:00:01.458" level="INFO">3 lines returned</msg>
<msg timestamp="20230616 07:00:01.458" level="INFO">@{lines} = [ Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines) | Datanode: 2afe77c9-b70d-4f60-853c-539dbe25ad50 (/default-rack/172.19.0.3/ozone_...</msg>
<status status="PASS" starttime="20230616 07:00:01.457" endtime="20230616 07:00:01.458"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230616 07:00:01.458" level="INFO">Length is 3</msg>
<msg timestamp="20230616 07:00:01.458" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230616 07:00:01.458" endtime="20230616 07:00:01.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:01.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:01.459" endtime="20230616 07:00:01.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:59:57.548" endtime="20230616 07:00:01.459"/>
</test>
<test id="s1-s2-s3-t4" name="Filter list by NodeState" line="48">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:01.465" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:01.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:01.469" level="INFO">${output} = 28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 07:00:01.463" endtime="20230616 07:00:01.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:01.470" level="INFO">28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 07:00:01.469" endtime="20230616 07:00:01.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:01.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:01.470" endtime="20230616 07:00:01.471"/>
</kw>
<status status="PASS" starttime="20230616 07:00:01.462" endtime="20230616 07:00:01.471"/>
</kw>
<msg timestamp="20230616 07:00:01.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:01.462" endtime="20230616 07:00:01.471"/>
</kw>
<msg timestamp="20230616 07:00:01.472" level="INFO">${uuid} = 28f28295-f9b6-4a85-ad72-14a73ae69d77</msg>
<status status="PASS" starttime="20230616 07:00:01.461" endtime="20230616 07:00:01.472"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Health State: HEALTHY' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:01.475" level="INFO">Running command 'grep -c 'Health State: HEALTHY' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:01.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:01.477" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230616 07:00:01.473" endtime="20230616 07:00:01.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:01.479" level="INFO">3</msg>
<status status="PASS" starttime="20230616 07:00:01.478" endtime="20230616 07:00:01.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:01.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:01.479" endtime="20230616 07:00:01.479"/>
</kw>
<status status="PASS" starttime="20230616 07:00:01.472" endtime="20230616 07:00:01.480"/>
</kw>
<msg timestamp="20230616 07:00:01.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:01.472" endtime="20230616 07:00:01.480"/>
</kw>
<msg timestamp="20230616 07:00:01.480" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230616 07:00:01.472" endtime="20230616 07:00:01.480"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:01.484" level="INFO">Running command 'ozone admin datanode list --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:05.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:05.524" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 07:00:01.482" endtime="20230616 07:00:05.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:05.525" level="INFO">Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a2-4a1e-ab43-1d6ea8daff6e/RATIS/ONE/RATIS/OPEN/Leader
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Leader
a68c0900-d76e-43d5-b2cf-f18d878a0458/STANDALONE/ONE/STAND_ALONE/OPEN/Follower

Datanode: 2afe77c9-b70d-4f60-853c-539dbe25ad50 (/default-rack/172.19.0.3/ozone_datanode_3.ozone_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Follower
0991da7b-5ae8-495b-8d74-442b6e284ff2/RATIS/ONE/RATIS/OPEN/Leader

Datanode: 55d42d4b-e26a-4462-832c-2eb2975f0613 (/default-rack/172.19.0.7/ozone_datanode_2.ozone_default/2 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
1fa4b221-6054-40b9-bd76-c869776ea9e9/RATIS/THREE/RATIS/OPEN/Follower
e986ce8a-de65-475c-800f-36120d4c2016/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20230616 07:00:05.524" endtime="20230616 07:00:05.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:05.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:05.525" endtime="20230616 07:00:05.526"/>
</kw>
<status status="PASS" starttime="20230616 07:00:01.481" endtime="20230616 07:00:05.526"/>
</kw>
<msg timestamp="20230616 07:00:05.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:01.481" endtime="20230616 07:00:05.526"/>
</kw>
<msg timestamp="20230616 07:00:05.527" level="INFO">${output} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
36f2c597-69a...</msg>
<status status="PASS" starttime="20230616 07:00:01.480" endtime="20230616 07:00:05.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:05.527" endtime="20230616 07:00:05.527"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230616 07:00:05.528" level="INFO">3 out of 21 lines matched</msg>
<msg timestamp="20230616 07:00:05.528" level="INFO">${datanodes} = Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines)
Datanode: 2afe77c9-b70d-4f60-853c-539dbe25ad50 (/default-rack/172.19.0.3/ozone_data...</msg>
<status status="PASS" starttime="20230616 07:00:05.528" endtime="20230616 07:00:05.528"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230616 07:00:05.529" level="INFO">3 lines returned</msg>
<msg timestamp="20230616 07:00:05.529" level="INFO">@{lines} = [ Datanode: 28f28295-f9b6-4a85-ad72-14a73ae69d77 (/default-rack/172.19.0.8/ozone_datanode_1.ozone_default/3 pipelines) | Datanode: 2afe77c9-b70d-4f60-853c-539dbe25ad50 (/default-rack/172.19.0.3/ozone_...</msg>
<status status="PASS" starttime="20230616 07:00:05.528" endtime="20230616 07:00:05.529"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230616 07:00:05.529" level="INFO">Length is 3</msg>
<msg timestamp="20230616 07:00:05.529" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230616 07:00:05.529" endtime="20230616 07:00:05.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:05.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:05.530" endtime="20230616 07:00:05.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:01.461" endtime="20230616 07:00:05.531"/>
</test>
<test id="s1-s2-s3-t5" name="Incomplete command" line="58">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:05.535" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:08.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 07:00:08.561" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230616 07:00:05.533" endtime="20230616 07:00:08.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:08.563" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20230616 07:00:08.562" endtime="20230616 07:00:08.563"/>
</kw>
<msg timestamp="20230616 07:00:08.563" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230616 07:00:05.532" endtime="20230616 07:00:08.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:08.563" endtime="20230616 07:00:08.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:08.564" endtime="20230616 07:00:08.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:05.532" endtime="20230616 07:00:08.565"/>
</test>
<test id="s1-s2-s3-t6" name="List datanodes as JSON" line="67">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --json | jq -r '.'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:08.570" level="INFO">Running command 'ozone admin datanode list --json | jq -r '.' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:12.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:12.590" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "uuidString": "28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230616 07:00:08.568" endtime="20230616 07:00:12.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:12.591" level="INFO">[
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "uuidString": "28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "ipAddress": "172.19.0.8",
      "hostName": "ozone_datanode_1.ozone_default",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": -330421358,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkFullPath": "/default-rack/28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "numOfLeaves": 1,
      "networkName": "28f28295-f9b6-4a85-ad72-14a73ae69d77"
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "2afe77c9-b70d-4f60-853c-539dbe25ad50",
      "uuidString": "2afe77c9-b70d-4f60-853c-539dbe25ad50",
      "ipAddress": "172.19.0.3",
      "hostName": "ozone_datanode_3.ozone_default",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1839923084,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkFullPath": "/default-rack/2afe77c9-b70d-4f60-853c-539dbe25ad50",
      "numOfLeaves": 1,
      "networkName": "2afe77c9-b70d-4f60-853c-539dbe25ad50"
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "55d42d4b-e26a-4462-832c-2eb2975f0613",
      "uuidString": "55d42d4b-e26a-4462-832c-2eb2975f0613",
      "ipAddress": "172.19.0.7",
      "hostName": "ozone_datanode_2.ozone_default",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1888292350,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkFullPath": "/default-rack/55d42d4b-e26a-4462-832c-2eb2975f0613",
      "numOfLeaves": 1,
      "networkName": "55d42d4b-e26a-4462-832c-2eb2975f0613"
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  }
]</msg>
<status status="PASS" starttime="20230616 07:00:12.591" endtime="20230616 07:00:12.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:12.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:12.592" endtime="20230616 07:00:12.592"/>
</kw>
<status status="PASS" starttime="20230616 07:00:08.567" endtime="20230616 07:00:12.593"/>
</kw>
<msg timestamp="20230616 07:00:12.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:08.567" endtime="20230616 07:00:12.593"/>
</kw>
<msg timestamp="20230616 07:00:12.593" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "uuidString": "28f28295-f9b6-4a85-ad72-14a73ae69d77",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230616 07:00:08.567" endtime="20230616 07:00:12.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanodeDetails</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:12.593" endtime="20230616 07:00:12.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>healthState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:12.594" endtime="20230616 07:00:12.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>opState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:12.594" endtime="20230616 07:00:12.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:08.566" endtime="20230616 07:00:12.595"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20230616 06:59:50.200" endtime="20230616 07:00:12.596"/>
</suite>
<suite id="s1-s2-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 07:00:12.604" endtime="20230616 07:00:12.605"/>
</kw>
<test id="s1-s2-s4-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:12.609" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:16.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:16.569" level="INFO">${output} = PipelineID=0c98862d-125d-4537-bb0b-c565c3d10bdc is created. Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ...</msg>
<status status="PASS" starttime="20230616 07:00:12.607" endtime="20230616 07:00:16.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:16.571" level="INFO">PipelineID=0c98862d-125d-4537-bb0b-c565c3d10bdc is created. Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]</msg>
<status status="PASS" starttime="20230616 07:00:16.570" endtime="20230616 07:00:16.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:16.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:16.571" endtime="20230616 07:00:16.572"/>
</kw>
<status status="PASS" starttime="20230616 07:00:12.606" endtime="20230616 07:00:16.572"/>
</kw>
<msg timestamp="20230616 07:00:16.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:12.606" endtime="20230616 07:00:16.572"/>
</kw>
<msg timestamp="20230616 07:00:16.572" level="INFO">${output} = PipelineID=0c98862d-125d-4537-bb0b-c565c3d10bdc is created. Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ...</msg>
<status status="PASS" starttime="20230616 07:00:12.606" endtime="20230616 07:00:16.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:16.573" endtime="20230616 07:00:16.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:16.573" endtime="20230616 07:00:16.573"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:16.577" level="INFO">Running command 'echo "PipelineID=0c98862d-125d-4537-bb0b-c565c3d10bdc is created. Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:16.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:16.582" level="INFO">${output} = 0c98862d-125d-4537-bb0b-c565c3d10bdc</msg>
<status status="PASS" starttime="20230616 07:00:16.575" endtime="20230616 07:00:16.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:16.583" level="INFO">0c98862d-125d-4537-bb0b-c565c3d10bdc</msg>
<status status="PASS" starttime="20230616 07:00:16.582" endtime="20230616 07:00:16.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:16.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:16.583" endtime="20230616 07:00:16.584"/>
</kw>
<status status="PASS" starttime="20230616 07:00:16.575" endtime="20230616 07:00:16.584"/>
</kw>
<msg timestamp="20230616 07:00:16.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:16.574" endtime="20230616 07:00:16.584"/>
</kw>
<msg timestamp="20230616 07:00:16.584" level="INFO">${pipeline} = 0c98862d-125d-4537-bb0b-c565c3d10bdc</msg>
<status status="PASS" starttime="20230616 07:00:16.574" endtime="20230616 07:00:16.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:00:16.585" level="INFO">${PIPELINE} = 0c98862d-125d-4537-bb0b-c565c3d10bdc</msg>
<status status="PASS" starttime="20230616 07:00:16.584" endtime="20230616 07:00:16.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:12.605" endtime="20230616 07:00:16.585"/>
</test>
<test id="s1-s2-s4-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:16.590" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:20.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:20.330" level="INFO">${output} = Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-...</msg>
<status status="PASS" starttime="20230616 07:00:16.588" endtime="20230616 07:00:20.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:20.331" level="INFO">Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-f9b6-4a85-ad72-14a73ae69d77, CreationTimestamp2023-06-16T06:32:27.840Z[UTC]]
Pipeline[ Id: 1fa4b221-6054-40b9-bd76-c869776ea9e9, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8)2afe77c9-b70d-4f60-853c-539dbe25ad50(ozone_datanode_3.ozone_default/172.19.0.3)55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:28f28295-f9b6-4a85-ad72-14a73ae69d77, CreationTimestamp2023-06-16T06:32:27.915Z[UTC]]
Pipeline[ Id: e986ce8a-de65-475c-800f-36120d4c2016, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:55d42d4b-e26a-4462-832c-2eb2975f0613, CreationTimestamp2023-06-16T06:32:27.906Z[UTC]]
Pipeline[ Id: a68c0900-d76e-43d5-b2cf-f18d878a0458, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T06:59:03.724Z[UTC]]
Pipeline[ Id: 0991da7b-5ae8-495b-8d74-442b6e284ff2, Nodes: 2afe77c9-b70d-4f60-853c-539dbe25ad50(ozone_datanode_3.ozone_default/172.19.0.3), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:2afe77c9-b70d-4f60-853c-539dbe25ad50, CreationTimestamp2023-06-16T06:32:27.132Z[UTC]]
Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]</msg>
<status status="PASS" starttime="20230616 07:00:20.330" endtime="20230616 07:00:20.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:20.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:20.331" endtime="20230616 07:00:20.332"/>
</kw>
<status status="PASS" starttime="20230616 07:00:16.587" endtime="20230616 07:00:20.332"/>
</kw>
<msg timestamp="20230616 07:00:20.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:16.587" endtime="20230616 07:00:20.333"/>
</kw>
<msg timestamp="20230616 07:00:20.333" level="INFO">${output} = Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-...</msg>
<status status="PASS" starttime="20230616 07:00:16.587" endtime="20230616 07:00:20.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:20.333" endtime="20230616 07:00:20.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:16.586" endtime="20230616 07:00:20.334"/>
</test>
<test id="s1-s2-s4-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:20.339" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:24.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:24.113" level="INFO">${output} = Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-...</msg>
<status status="PASS" starttime="20230616 07:00:20.337" endtime="20230616 07:00:24.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:24.114" level="INFO">Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-f9b6-4a85-ad72-14a73ae69d77, CreationTimestamp2023-06-16T06:32:27.840Z[UTC]]
Pipeline[ Id: 1fa4b221-6054-40b9-bd76-c869776ea9e9, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8)2afe77c9-b70d-4f60-853c-539dbe25ad50(ozone_datanode_3.ozone_default/172.19.0.3)55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:28f28295-f9b6-4a85-ad72-14a73ae69d77, CreationTimestamp2023-06-16T06:32:27.915Z[UTC]]
Pipeline[ Id: e986ce8a-de65-475c-800f-36120d4c2016, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:55d42d4b-e26a-4462-832c-2eb2975f0613, CreationTimestamp2023-06-16T06:32:27.906Z[UTC]]
Pipeline[ Id: a68c0900-d76e-43d5-b2cf-f18d878a0458, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T06:59:03.724Z[UTC]]
Pipeline[ Id: 0991da7b-5ae8-495b-8d74-442b6e284ff2, Nodes: 2afe77c9-b70d-4f60-853c-539dbe25ad50(ozone_datanode_3.ozone_default/172.19.0.3), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:2afe77c9-b70d-4f60-853c-539dbe25ad50, CreationTimestamp2023-06-16T06:32:27.132Z[UTC]]
Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]</msg>
<status status="PASS" starttime="20230616 07:00:24.114" endtime="20230616 07:00:24.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:24.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:24.115" endtime="20230616 07:00:24.115"/>
</kw>
<status status="PASS" starttime="20230616 07:00:20.336" endtime="20230616 07:00:24.115"/>
</kw>
<msg timestamp="20230616 07:00:24.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:20.336" endtime="20230616 07:00:24.116"/>
</kw>
<msg timestamp="20230616 07:00:24.116" level="INFO">${output} = Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-...</msg>
<status status="PASS" starttime="20230616 07:00:20.336" endtime="20230616 07:00:24.116"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:24.116" endtime="20230616 07:00:24.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:20.335" endtime="20230616 07:00:24.117"/>
</test>
<test id="s1-s2-s4-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:24.122" level="INFO">Running command 'ozone admin pipeline deactivate "0c98862d-125d-4537-bb0b-c565c3d10bdc" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:27.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:27.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:00:24.120" endtime="20230616 07:00:27.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:27.601" level="INFO"/>
<status status="PASS" starttime="20230616 07:00:27.600" endtime="20230616 07:00:27.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:27.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:27.601" endtime="20230616 07:00:27.602"/>
</kw>
<status status="PASS" starttime="20230616 07:00:24.119" endtime="20230616 07:00:27.602"/>
</kw>
<msg timestamp="20230616 07:00:27.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:24.119" endtime="20230616 07:00:27.602"/>
</kw>
<status status="PASS" starttime="20230616 07:00:24.118" endtime="20230616 07:00:27.603"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:27.607" level="INFO">Running command 'ozone admin pipeline list | grep "0c98862d-125d-4537-bb0b-c565c3d10bdc" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:31.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:31.432" level="INFO">${output} = Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:,...</msg>
<status status="PASS" starttime="20230616 07:00:27.604" endtime="20230616 07:00:31.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:31.433" level="INFO">Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]</msg>
<status status="PASS" starttime="20230616 07:00:31.433" endtime="20230616 07:00:31.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:31.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:31.434" endtime="20230616 07:00:31.434"/>
</kw>
<status status="PASS" starttime="20230616 07:00:27.604" endtime="20230616 07:00:31.434"/>
</kw>
<msg timestamp="20230616 07:00:31.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:27.604" endtime="20230616 07:00:31.435"/>
</kw>
<msg timestamp="20230616 07:00:31.435" level="INFO">${output} = Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:,...</msg>
<status status="PASS" starttime="20230616 07:00:27.603" endtime="20230616 07:00:31.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:31.435" endtime="20230616 07:00:31.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:24.118" endtime="20230616 07:00:31.436"/>
</test>
<test id="s1-s2-s4-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:31.441" level="INFO">Running command 'ozone admin pipeline activate "0c98862d-125d-4537-bb0b-c565c3d10bdc" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:35.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:35.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:00:31.439" endtime="20230616 07:00:35.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:35.109" level="INFO"/>
<status status="PASS" starttime="20230616 07:00:35.108" endtime="20230616 07:00:35.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:35.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:35.109" endtime="20230616 07:00:35.110"/>
</kw>
<status status="PASS" starttime="20230616 07:00:31.438" endtime="20230616 07:00:35.110"/>
</kw>
<msg timestamp="20230616 07:00:35.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:31.438" endtime="20230616 07:00:35.111"/>
</kw>
<status status="PASS" starttime="20230616 07:00:31.437" endtime="20230616 07:00:35.111"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:35.115" level="INFO">Running command 'ozone admin pipeline list | grep "0c98862d-125d-4537-bb0b-c565c3d10bdc" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:38.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:38.684" level="INFO">${output} = Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, Cr...</msg>
<status status="PASS" starttime="20230616 07:00:35.112" endtime="20230616 07:00:38.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:38.686" level="INFO">Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]</msg>
<status status="PASS" starttime="20230616 07:00:38.685" endtime="20230616 07:00:38.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:38.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:38.686" endtime="20230616 07:00:38.687"/>
</kw>
<status status="PASS" starttime="20230616 07:00:35.112" endtime="20230616 07:00:38.687"/>
</kw>
<msg timestamp="20230616 07:00:38.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:35.112" endtime="20230616 07:00:38.687"/>
</kw>
<msg timestamp="20230616 07:00:38.687" level="INFO">${output} = Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, Cr...</msg>
<status status="PASS" starttime="20230616 07:00:35.111" endtime="20230616 07:00:38.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:38.688" endtime="20230616 07:00:38.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:31.436" endtime="20230616 07:00:38.688"/>
</test>
<test id="s1-s2-s4-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:38.694" level="INFO">Running command 'ozone admin pipeline close "0c98862d-125d-4537-bb0b-c565c3d10bdc" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:42.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:42.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:00:38.691" endtime="20230616 07:00:42.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:42.560" level="INFO"/>
<status status="PASS" starttime="20230616 07:00:42.559" endtime="20230616 07:00:42.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:42.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:42.560" endtime="20230616 07:00:42.561"/>
</kw>
<status status="PASS" starttime="20230616 07:00:38.691" endtime="20230616 07:00:42.561"/>
</kw>
<msg timestamp="20230616 07:00:42.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:38.691" endtime="20230616 07:00:42.561"/>
</kw>
<status status="PASS" starttime="20230616 07:00:38.690" endtime="20230616 07:00:42.561"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:42.565" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:46.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:46.206" level="INFO">${output} = Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-...</msg>
<status status="PASS" starttime="20230616 07:00:42.563" endtime="20230616 07:00:46.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:46.207" level="INFO">Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-f9b6-4a85-ad72-14a73ae69d77, CreationTimestamp2023-06-16T06:32:27.840Z[UTC]]
Pipeline[ Id: 1fa4b221-6054-40b9-bd76-c869776ea9e9, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8)2afe77c9-b70d-4f60-853c-539dbe25ad50(ozone_datanode_3.ozone_default/172.19.0.3)55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:28f28295-f9b6-4a85-ad72-14a73ae69d77, CreationTimestamp2023-06-16T06:32:27.915Z[UTC]]
Pipeline[ Id: e986ce8a-de65-475c-800f-36120d4c2016, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:55d42d4b-e26a-4462-832c-2eb2975f0613, CreationTimestamp2023-06-16T06:32:27.906Z[UTC]]
Pipeline[ Id: a68c0900-d76e-43d5-b2cf-f18d878a0458, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-06-16T06:59:03.724Z[UTC]]
Pipeline[ Id: 0991da7b-5ae8-495b-8d74-442b6e284ff2, Nodes: 2afe77c9-b70d-4f60-853c-539dbe25ad50(ozone_datanode_3.ozone_default/172.19.0.3), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:2afe77c9-b70d-4f60-853c-539dbe25ad50, CreationTimestamp2023-06-16T06:32:27.132Z[UTC]]
Pipeline[ Id: 0c98862d-125d-4537-bb0b-c565c3d10bdc, Nodes: 55d42d4b-e26a-4462-832c-2eb2975f0613(ozone_datanode_2.ozone_default/172.19.0.7), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-06-16T07:00:16.072Z[UTC]]</msg>
<status status="PASS" starttime="20230616 07:00:46.206" endtime="20230616 07:00:46.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:46.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:46.207" endtime="20230616 07:00:46.208"/>
</kw>
<status status="PASS" starttime="20230616 07:00:42.562" endtime="20230616 07:00:46.208"/>
</kw>
<msg timestamp="20230616 07:00:46.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:42.562" endtime="20230616 07:00:46.208"/>
</kw>
<msg timestamp="20230616 07:00:46.208" level="INFO">${output} = Pipeline[ Id: 36f2c597-69a2-4a1e-ab43-1d6ea8daff6e, Nodes: 28f28295-f9b6-4a85-ad72-14a73ae69d77(ozone_datanode_1.ozone_default/172.19.0.8), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:28f28295-...</msg>
<status status="PASS" starttime="20230616 07:00:42.561" endtime="20230616 07:00:46.208"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230616 07:00:46.209" endtime="20230616 07:00:46.209"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 07:00:46.209" endtime="20230616 07:00:46.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:38.689" endtime="20230616 07:00:46.210"/>
</test>
<test id="s1-s2-s4-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:46.215" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:48.991" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 07:00:48.991" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230616 07:00:46.212" endtime="20230616 07:00:48.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:48.993" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230616 07:00:48.992" endtime="20230616 07:00:48.993"/>
</kw>
<msg timestamp="20230616 07:00:48.994" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230616 07:00:46.212" endtime="20230616 07:00:48.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:48.994" endtime="20230616 07:00:48.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:48.994" endtime="20230616 07:00:48.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:48.995" endtime="20230616 07:00:48.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:48.995" endtime="20230616 07:00:48.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:48.996" endtime="20230616 07:00:48.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:46.211" endtime="20230616 07:00:48.997"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230616 07:00:12.598" endtime="20230616 07:00:48.998"/>
</suite>
<suite id="s1-s2-s5" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 07:00:49.005" endtime="20230616 07:00:49.005"/>
</kw>
<test id="s1-s2-s5-t1" name="Check replicationmanager" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:49.010" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:52.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:52.468" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230616 07:00:49.007" endtime="20230616 07:00:52.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:52.469" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230616 07:00:52.468" endtime="20230616 07:00:52.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:52.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:52.469" endtime="20230616 07:00:52.470"/>
</kw>
<status status="PASS" starttime="20230616 07:00:49.007" endtime="20230616 07:00:52.470"/>
</kw>
<msg timestamp="20230616 07:00:52.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:49.007" endtime="20230616 07:00:52.470"/>
</kw>
<msg timestamp="20230616 07:00:52.470" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230616 07:00:49.006" endtime="20230616 07:00:52.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:52.471" endtime="20230616 07:00:52.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:52.471" endtime="20230616 07:00:52.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:49.006" endtime="20230616 07:00:52.472"/>
</test>
<test id="s1-s2-s5-t2" name="Check replicationmanager with explicit host" line="32">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:52.483" level="INFO">Running command 'ozone admin replicationmanager status --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:56.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:56.114" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230616 07:00:52.480" endtime="20230616 07:00:56.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:56.115" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230616 07:00:56.114" endtime="20230616 07:00:56.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:56.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:56.115" endtime="20230616 07:00:56.116"/>
</kw>
<status status="PASS" starttime="20230616 07:00:52.479" endtime="20230616 07:00:56.116"/>
</kw>
<msg timestamp="20230616 07:00:56.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:52.479" endtime="20230616 07:00:56.116"/>
</kw>
<msg timestamp="20230616 07:00:56.117" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230616 07:00:52.478" endtime="20230616 07:00:56.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:56.117" endtime="20230616 07:00:56.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:56.118" endtime="20230616 07:00:56.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:52.477" endtime="20230616 07:00:56.118"/>
</test>
<test id="s1-s2-s5-t3" name="Stop replicationmanager" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:56.123" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:00:59.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:00:59.654" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230616 07:00:56.121" endtime="20230616 07:00:59.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:00:59.655" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230616 07:00:59.654" endtime="20230616 07:00:59.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:00:59.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:00:59.656" endtime="20230616 07:00:59.656"/>
</kw>
<status status="PASS" starttime="20230616 07:00:56.121" endtime="20230616 07:00:59.656"/>
</kw>
<msg timestamp="20230616 07:00:59.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:56.120" endtime="20230616 07:00:59.657"/>
</kw>
<msg timestamp="20230616 07:00:59.657" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230616 07:00:56.120" endtime="20230616 07:00:59.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:00:59.657" endtime="20230616 07:00:59.657"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:00:59.662" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:03.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:03.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:00:59.659" endtime="20230616 07:01:03.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:03.208" level="INFO"/>
<status status="PASS" starttime="20230616 07:01:03.207" endtime="20230616 07:01:03.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:03.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:03.208" endtime="20230616 07:01:03.209"/>
</kw>
<status status="PASS" starttime="20230616 07:00:59.659" endtime="20230616 07:01:03.209"/>
</kw>
<msg timestamp="20230616 07:01:03.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:00:59.659" endtime="20230616 07:01:03.209"/>
</kw>
<status status="PASS" starttime="20230616 07:00:59.658" endtime="20230616 07:01:03.209"/>
</kw>
<status status="PASS" starttime="20230616 07:00:59.658" endtime="20230616 07:01:03.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:00:56.119" endtime="20230616 07:01:03.210"/>
</test>
<test id="s1-s2-s5-t4" name="Start replicationmanager" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:03.215" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:07.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:07.073" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230616 07:01:03.213" endtime="20230616 07:01:07.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:07.074" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230616 07:01:07.073" endtime="20230616 07:01:07.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:07.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:07.074" endtime="20230616 07:01:07.075"/>
</kw>
<status status="PASS" starttime="20230616 07:01:03.213" endtime="20230616 07:01:07.075"/>
</kw>
<msg timestamp="20230616 07:01:07.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:03.212" endtime="20230616 07:01:07.075"/>
</kw>
<msg timestamp="20230616 07:01:07.076" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230616 07:01:03.211" endtime="20230616 07:01:07.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:07.076" endtime="20230616 07:01:07.076"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:07.081" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:10.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:10.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:01:07.078" endtime="20230616 07:01:10.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:10.983" level="INFO"/>
<status status="PASS" starttime="20230616 07:01:10.982" endtime="20230616 07:01:10.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:10.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:10.983" endtime="20230616 07:01:10.984"/>
</kw>
<status status="PASS" starttime="20230616 07:01:07.078" endtime="20230616 07:01:10.984"/>
</kw>
<msg timestamp="20230616 07:01:10.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:07.077" endtime="20230616 07:01:10.984"/>
</kw>
<status status="PASS" starttime="20230616 07:01:07.077" endtime="20230616 07:01:10.985"/>
</kw>
<status status="PASS" starttime="20230616 07:01:07.076" endtime="20230616 07:01:10.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:03.211" endtime="20230616 07:01:10.985"/>
</test>
<test id="s1-s2-s5-t5" name="Incomplete command" line="47">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:10.990" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:14.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 07:01:14.089" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230616 07:01:10.987" endtime="20230616 07:01:14.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:14.090" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20230616 07:01:14.089" endtime="20230616 07:01:14.090"/>
</kw>
<msg timestamp="20230616 07:01:14.091" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230616 07:01:10.987" endtime="20230616 07:01:14.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:14.091" endtime="20230616 07:01:14.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:14.091" endtime="20230616 07:01:14.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:14.092" endtime="20230616 07:01:14.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:14.092" endtime="20230616 07:01:14.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:10.986" endtime="20230616 07:01:14.093"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20230616 07:00:49.000" endtime="20230616 07:01:14.094"/>
</suite>
<suite id="s1-s2-s6" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s2-s6-t1" name="Check safemode" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:14.107" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:17.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:17.974" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:14.104" endtime="20230616 07:01:17.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:17.975" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:17.974" endtime="20230616 07:01:17.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:17.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:17.976" endtime="20230616 07:01:17.976"/>
</kw>
<status status="PASS" starttime="20230616 07:01:14.104" endtime="20230616 07:01:17.976"/>
</kw>
<msg timestamp="20230616 07:01:17.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:14.104" endtime="20230616 07:01:17.977"/>
</kw>
<msg timestamp="20230616 07:01:17.977" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:14.103" endtime="20230616 07:01:17.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:17.977" endtime="20230616 07:01:17.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:14.103" endtime="20230616 07:01:17.978"/>
</test>
<test id="s1-s2-s6-t2" name="Check safemode with explicit host" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:17.983" level="INFO">Running command 'ozone admin safemode status --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:21.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:21.819" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:17.981" endtime="20230616 07:01:21.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:21.821" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:21.820" endtime="20230616 07:01:21.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:21.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:21.821" endtime="20230616 07:01:21.821"/>
</kw>
<status status="PASS" starttime="20230616 07:01:17.980" endtime="20230616 07:01:21.822"/>
</kw>
<msg timestamp="20230616 07:01:21.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:17.980" endtime="20230616 07:01:21.822"/>
</kw>
<msg timestamp="20230616 07:01:21.822" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:17.979" endtime="20230616 07:01:21.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:21.822" endtime="20230616 07:01:21.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:17.979" endtime="20230616 07:01:21.823"/>
</test>
<test id="s1-s2-s6-t3" name="Wait for safemode exit" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:21.828" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:25.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:25.458" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:21.826" endtime="20230616 07:01:25.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:25.459" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:25.458" endtime="20230616 07:01:25.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:25.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:25.459" endtime="20230616 07:01:25.460"/>
</kw>
<status status="PASS" starttime="20230616 07:01:21.825" endtime="20230616 07:01:25.460"/>
</kw>
<msg timestamp="20230616 07:01:25.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:21.825" endtime="20230616 07:01:25.460"/>
</kw>
<msg timestamp="20230616 07:01:25.460" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:21.824" endtime="20230616 07:01:25.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:25.461" endtime="20230616 07:01:25.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:21.824" endtime="20230616 07:01:25.461"/>
</test>
<test id="s1-s2-s6-t4" name="Incomplete command" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:25.466" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:28.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 07:01:28.561" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230616 07:01:25.463" endtime="20230616 07:01:28.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:28.563" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20230616 07:01:28.562" endtime="20230616 07:01:28.563"/>
</kw>
<msg timestamp="20230616 07:01:28.564" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230616 07:01:25.463" endtime="20230616 07:01:28.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:28.564" endtime="20230616 07:01:28.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:28.564" endtime="20230616 07:01:28.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:28.565" endtime="20230616 07:01:28.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:28.565" endtime="20230616 07:01:28.566"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:25.462" endtime="20230616 07:01:28.566"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20230616 07:01:14.096" endtime="20230616 07:01:28.567"/>
</suite>
<suite id="s1-s2-s7" name="Scmrole" source="/opt/hadoop/smoketest/admincli/scmrole.robot">
<test id="s1-s2-s7-t1" name="Run scm roles" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:28.580" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:32.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:32.385" level="INFO">${output} = 5a3c178d0797:9894:LEADER:68bbdaee-97bf-4585-939a-c2abe7c9dc19:172.19.0.6</msg>
<status status="PASS" starttime="20230616 07:01:28.577" endtime="20230616 07:01:32.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:32.386" level="INFO">5a3c178d0797:9894:LEADER:68bbdaee-97bf-4585-939a-c2abe7c9dc19:172.19.0.6</msg>
<status status="PASS" starttime="20230616 07:01:32.385" endtime="20230616 07:01:32.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:32.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:32.386" endtime="20230616 07:01:32.387"/>
</kw>
<status status="PASS" starttime="20230616 07:01:28.577" endtime="20230616 07:01:32.387"/>
</kw>
<msg timestamp="20230616 07:01:32.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:28.577" endtime="20230616 07:01:32.387"/>
</kw>
<msg timestamp="20230616 07:01:32.388" level="INFO">${output} = 5a3c178d0797:9894:LEADER:68bbdaee-97bf-4585-939a-c2abe7c9dc19:172.19.0.6</msg>
<status status="PASS" starttime="20230616 07:01:28.576" endtime="20230616 07:01:32.388"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 07:01:32.388" endtime="20230616 07:01:32.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:28.575" endtime="20230616 07:01:32.389"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230616 07:01:28.569" endtime="20230616 07:01:32.390"/>
</suite>
<status status="PASS" starttime="20230616 06:58:51.408" endtime="20230616 07:01:32.393"/>
</suite>
<suite id="s1-s3" name="Httpfs" source="/opt/hadoop/smoketest/httpfs">
<suite id="s1-s3-s1" name="Operations Tests" source="/opt/hadoop/smoketest/httpfs/operations_tests.robot">
<kw name="Generate volume" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 07:01:37.022" level="INFO">${random} = vttmn</msg>
<status status="PASS" starttime="20230616 07:01:37.021" endtime="20230616 07:01:37.022"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:01:37.022" level="INFO">${volume} = vttmn</msg>
<status status="PASS" starttime="20230616 07:01:37.022" endtime="20230616 07:01:37.022"/>
</kw>
<status status="PASS" starttime="20230616 07:01:37.020" endtime="20230616 07:01:37.023"/>
</kw>
<test id="s1-s3-s1-t1" name="Kinit admin user" line="38">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230616 07:01:37.024" level="INFO">Execution passed with message:
This is for secured environment</msg>
<status status="PASS" starttime="20230616 07:01:37.023" endtime="20230616 07:01:37.024"/>
</kw>
<kw name="Kinit admin">
<status status="NOT RUN" starttime="20230616 07:01:37.024" endtime="20230616 07:01:37.024"/>
</kw>
<status status="PASS" starttime="20230616 07:01:37.023" endtime="20230616 07:01:37.024">This is for secured environment</status>
</test>
<test id="s1-s3-s1-t2" name="Create volume" line="42">
<kw name="Execute curl command" library="operations">
<var>${vol}</var>
<arg>${volume}</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:37.027" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:37.025" endtime="20230616 07:01:37.027"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:37.028" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn?op=MKDIRS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:37.027" endtime="20230616 07:01:37.028"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:37.029" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:37.028" endtime="20230616 07:01:37.029"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:37.029" level="INFO">Starting process:
curl -X PUT  "http://httpfs:14000/webhdfs/v1/vttmn?op=MKDIRS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:37.032" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:38.368" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:38.368" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:37.029" endtime="20230616 07:01:38.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:38.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.369" endtime="20230616 07:01:38.371"/>
</kw>
<msg timestamp="20230616 07:01:38.371" level="INFO">${vol} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:37.025" endtime="20230616 07:01:38.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${vol.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:38.371" endtime="20230616 07:01:38.372"/>
</kw>
<status status="PASS" starttime="20230616 07:01:37.024" endtime="20230616 07:01:38.372"/>
</test>
<test id="s1-s3-s1-t3" name="Set owner of volume" line="46">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230616 07:01:38.374" level="INFO">Execution passed with message:
This is for secured environment</msg>
<status status="PASS" starttime="20230616 07:01:38.374" endtime="20230616 07:01:38.374"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>ozone sh volume update --user=testuser /${volume}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<status status="NOT RUN" starttime="20230616 07:01:38.374" endtime="20230616 07:01:38.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230616 07:01:38.374" endtime="20230616 07:01:38.374"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.373" endtime="20230616 07:01:38.375">This is for secured environment</status>
</test>
<test id="s1-s3-s1-t4" name="Kinit testuser" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230616 07:01:38.378" level="INFO">Execution passed with message:
This is for secured environment</msg>
<status status="PASS" starttime="20230616 07:01:38.377" endtime="20230616 07:01:38.378"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="NOT RUN" starttime="20230616 07:01:38.378" endtime="20230616 07:01:38.378"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.377" endtime="20230616 07:01:38.379">This is for secured environment</status>
</test>
<test id="s1-s3-s1-t5" name="Create first bucket" line="55">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck1</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:38.382" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.380" endtime="20230616 07:01:38.382"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:38.383" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1?op=MKDIRS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.382" endtime="20230616 07:01:38.383"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:38.384" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:38.383" endtime="20230616 07:01:38.384"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:38.385" level="INFO">Starting process:
curl -X PUT  "http://httpfs:14000/webhdfs/v1/vttmn/buck1?op=MKDIRS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:38.388" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:38.467" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:38.467" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.384" endtime="20230616 07:01:38.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:38.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.468" endtime="20230616 07:01:38.469"/>
</kw>
<msg timestamp="20230616 07:01:38.470" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.380" endtime="20230616 07:01:38.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:38.470" endtime="20230616 07:01:38.471"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.379" endtime="20230616 07:01:38.471"/>
</test>
<test id="s1-s3-s1-t6" name="Create second bucket" line="59">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck2</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:38.483" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.479" endtime="20230616 07:01:38.484"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:38.484" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck2?op=MKDIRS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.484" endtime="20230616 07:01:38.484"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:38.488" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:38.486" endtime="20230616 07:01:38.488"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:38.488" level="INFO">Starting process:
curl -X PUT  "http://httpfs:14000/webhdfs/v1/vttmn/buck2?op=MKDIRS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:38.494" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:38.523" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:38.524" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.488" endtime="20230616 07:01:38.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:38.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.524" endtime="20230616 07:01:38.526"/>
</kw>
<msg timestamp="20230616 07:01:38.526" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.479" endtime="20230616 07:01:38.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:38.527" endtime="20230616 07:01:38.528"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.472" endtime="20230616 07:01:38.528"/>
</test>
<test id="s1-s3-s1-t7" name="Create local testfile" line="63">
<kw name="Create file" library="operations">
<arg>testfile</arg>
<kw name="Run Process" library="Process">
<arg>touch ${file_name}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:38.531" level="INFO">Starting process:
touch testfile</msg>
<msg timestamp="20230616 07:01:38.534" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:38.536" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20230616 07:01:38.530" endtime="20230616 07:01:38.536"/>
</kw>
<kw name="Run Process" library="Process">
<arg>echo "Hello world!"&gt;${file_name}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:38.538" level="INFO">Starting process:
echo "Hello world!"&gt;testfile</msg>
<msg timestamp="20230616 07:01:38.540" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:38.541" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20230616 07:01:38.537" endtime="20230616 07:01:38.541"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.530" endtime="20230616 07:01:38.542"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.529" endtime="20230616 07:01:38.542"/>
</test>
<test id="s1-s3-s1-t8" name="Create testfile" line="66">
<kw name="Execute create file command" library="operations">
<var>${file}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>testfile</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:38.547" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.545" endtime="20230616 07:01:38.547"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:38.548" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:38.547" endtime="20230616 07:01:38.548"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=CREATE</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:38.549" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=CREATE&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.548" endtime="20230616 07:01:38.549"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl -X PUT ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:38.550" level="INFO">Starting process:
curl -X PUT  "http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=CREATE&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:38.552" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:38.566" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:38.567" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.549" endtime="20230616 07:01:38.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:38.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.567" endtime="20230616 07:01:38.569"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url2}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=CREATE&amp;data=true</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:38.570" level="INFO">${final_url2} = http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=CREATE&amp;data=true&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:38.569" endtime="20230616 07:01:38.570"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output2}</var>
<arg>curl -X PUT -T ${file_name} ${curl_extra_commands} "${final_url2}" -H"Content-Type: application/octet-stream"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:38.570" level="INFO">Starting process:
curl -X PUT -T testfile  "http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=CREATE&amp;data=true&amp;user.name=httpfs" -H"Content-Type: application/octet-stream"</msg>
<msg timestamp="20230616 07:01:38.573" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:39.950" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:39.951" level="INFO">${output2} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.570" endtime="20230616 07:01:39.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output2.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:39.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:39.951" endtime="20230616 07:01:39.954"/>
</kw>
<msg timestamp="20230616 07:01:39.954" level="INFO">${file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:38.544" endtime="20230616 07:01:39.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file.stdout}</arg>
<arg>http://httpfs:14000/webhdfs/v1/${volume}/buck1/testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:39.954" endtime="20230616 07:01:39.955"/>
</kw>
<status status="PASS" starttime="20230616 07:01:38.543" endtime="20230616 07:01:39.955"/>
</test>
<test id="s1-s3-s1-t9" name="Read file" line="70">
<kw name="Execute curl command" library="operations">
<var>${file}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>OPEN</arg>
<arg>-L</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:39.960" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:39.959" endtime="20230616 07:01:39.960"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:39.961" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=OPEN&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:39.961" endtime="20230616 07:01:39.961"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:39.962" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:39.961" endtime="20230616 07:01:39.963"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:39.963" level="INFO">Starting process:
curl -L  "http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=OPEN&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:39.967" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.168" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.168" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:39.963" endtime="20230616 07:01:40.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.169" endtime="20230616 07:01:40.171"/>
</kw>
<msg timestamp="20230616 07:01:40.171" level="INFO">${file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:39.958" endtime="20230616 07:01:40.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file.stdout}</arg>
<arg>Hello world!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.171" endtime="20230616 07:01:40.172"/>
</kw>
<status status="PASS" starttime="20230616 07:01:39.957" endtime="20230616 07:01:40.173"/>
</test>
<test id="s1-s3-s1-t10" name="Delete bucket" line="80">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck2</arg>
<arg>DELETE</arg>
<arg>-X DELETE</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.177" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.176" endtime="20230616 07:01:40.177"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.178" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck2?op=DELETE&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.177" endtime="20230616 07:01:40.178"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.179" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.178" endtime="20230616 07:01:40.179"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.180" level="INFO">Starting process:
curl -X DELETE  "http://httpfs:14000/webhdfs/v1/vttmn/buck2?op=DELETE&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.183" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.277" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.278" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.179" endtime="20230616 07:01:40.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.279" endtime="20230616 07:01:40.280"/>
</kw>
<msg timestamp="20230616 07:01:40.281" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.175" endtime="20230616 07:01:40.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.281" endtime="20230616 07:01:40.282"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.174" endtime="20230616 07:01:40.282"/>
</test>
<test id="s1-s3-s1-t11" name="Get status of bucket" line="84">
<kw name="Execute curl command" library="operations">
<var>${status}</var>
<arg>${volume}/buck1</arg>
<arg>GETFILESTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.287" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.285" endtime="20230616 07:01:40.287"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.288" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1?op=GETFILESTATUS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.287" endtime="20230616 07:01:40.288"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.289" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.288" endtime="20230616 07:01:40.289"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.290" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn/buck1?op=GETFILESTATUS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.293" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.314" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.315" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.289" endtime="20230616 07:01:40.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.315" endtime="20230616 07:01:40.317"/>
</kw>
<msg timestamp="20230616 07:01:40.317" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.284" endtime="20230616 07:01:40.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status.stdout}</arg>
<arg>FileStatus</arg>
<arg>DIRECTORY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.317" endtime="20230616 07:01:40.318"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.283" endtime="20230616 07:01:40.319"/>
</test>
<test id="s1-s3-s1-t12" name="Get status of file" line="88">
<kw name="Execute curl command" library="operations">
<var>${status}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>GETFILESTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.323" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.321" endtime="20230616 07:01:40.323"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.323" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=GETFILESTATUS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.323" endtime="20230616 07:01:40.323"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.324" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.323" endtime="20230616 07:01:40.324"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.325" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=GETFILESTATUS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.328" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.359" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.360" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.325" endtime="20230616 07:01:40.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.360" endtime="20230616 07:01:40.362"/>
</kw>
<msg timestamp="20230616 07:01:40.362" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.320" endtime="20230616 07:01:40.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status.stdout}</arg>
<arg>FileStatus</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.362" endtime="20230616 07:01:40.363"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.319" endtime="20230616 07:01:40.363"/>
</test>
<test id="s1-s3-s1-t13" name="List bucket" line="92">
<kw name="Execute curl command" library="operations">
<var>${list}</var>
<arg>${volume}/buck1</arg>
<arg>LISTSTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.367" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.366" endtime="20230616 07:01:40.367"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.368" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1?op=LISTSTATUS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.368" endtime="20230616 07:01:40.368"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.370" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.368" endtime="20230616 07:01:40.370"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.370" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn/buck1?op=LISTSTATUS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.373" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.399" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.400" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.370" endtime="20230616 07:01:40.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.400" endtime="20230616 07:01:40.402"/>
</kw>
<msg timestamp="20230616 07:01:40.402" level="INFO">${list} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.365" endtime="20230616 07:01:40.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list.stdout}</arg>
<arg>FileStatus</arg>
<arg>testfile</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.402" endtime="20230616 07:01:40.403"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.364" endtime="20230616 07:01:40.404"/>
</test>
<test id="s1-s3-s1-t14" name="List file" line="96">
<kw name="Execute curl command" library="operations">
<var>${list}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>LISTSTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.408" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.406" endtime="20230616 07:01:40.408"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.408" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=LISTSTATUS&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.408" endtime="20230616 07:01:40.408"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.409" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.408" endtime="20230616 07:01:40.409"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.410" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=LISTSTATUS&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.413" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.440" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.440" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.409" endtime="20230616 07:01:40.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.440" endtime="20230616 07:01:40.442"/>
</kw>
<msg timestamp="20230616 07:01:40.442" level="INFO">${list} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.405" endtime="20230616 07:01:40.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list.stdout}</arg>
<arg>FileStatus</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.442" endtime="20230616 07:01:40.443"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.404" endtime="20230616 07:01:40.443"/>
</test>
<test id="s1-s3-s1-t15" name="Get content summary of directory" line="100">
<kw name="Execute curl command" library="operations">
<var>${summary}</var>
<arg>${volume}</arg>
<arg>GETCONTENTSUMMARY</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.448" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.446" endtime="20230616 07:01:40.448"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.448" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn?op=GETCONTENTSUMMARY&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.448" endtime="20230616 07:01:40.449"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.450" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.449" endtime="20230616 07:01:40.450"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.450" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn?op=GETCONTENTSUMMARY&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.453" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.487" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.487" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.450" endtime="20230616 07:01:40.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.487" endtime="20230616 07:01:40.489"/>
</kw>
<msg timestamp="20230616 07:01:40.490" level="INFO">${summary} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.445" endtime="20230616 07:01:40.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${summary.stdout}</arg>
<arg>ContentSummary</arg>
<arg>"directoryCount":2</arg>
<arg>"fileCount":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.490" endtime="20230616 07:01:40.491"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.445" endtime="20230616 07:01:40.492"/>
</test>
<test id="s1-s3-s1-t16" name="Get quota usage of directory" line="104">
<kw name="Execute curl command" library="operations">
<var>${usage}</var>
<arg>${volume}</arg>
<arg>GETQUOTAUSAGE</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.496" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.495" endtime="20230616 07:01:40.496"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.497" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn?op=GETQUOTAUSAGE&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.497" endtime="20230616 07:01:40.497"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.498" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.497" endtime="20230616 07:01:40.498"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.499" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn?op=GETQUOTAUSAGE&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.502" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.537" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.537" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.499" endtime="20230616 07:01:40.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.538" endtime="20230616 07:01:40.540"/>
</kw>
<msg timestamp="20230616 07:01:40.540" level="INFO">${usage} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.494" endtime="20230616 07:01:40.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${usage.stdout}</arg>
<arg>QuotaUsage</arg>
<arg>"fileAndDirectoryCount":3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.541" endtime="20230616 07:01:40.542"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.493" endtime="20230616 07:01:40.542"/>
</test>
<test id="s1-s3-s1-t17" name="Get home directory" line="108">
<kw name="Execute curl command" library="operations">
<var>${home}</var>
<arg>${EMPTY}</arg>
<arg>GETHOMEDIRECTORY</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.551" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.548" endtime="20230616 07:01:40.551"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.551" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/?op=GETHOMEDIRECTORY&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.551" endtime="20230616 07:01:40.551"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.553" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.552" endtime="20230616 07:01:40.553"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.553" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/?op=GETHOMEDIRECTORY&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.556" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.572" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.573" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.553" endtime="20230616 07:01:40.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.573" endtime="20230616 07:01:40.575"/>
</kw>
<msg timestamp="20230616 07:01:40.575" level="INFO">${home} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.544" endtime="20230616 07:01:40.575"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${user}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>testuser</arg>
<arg>${USERNAME}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.576" level="INFO">${user} = httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.575" endtime="20230616 07:01:40.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${home.stdout}</arg>
<arg>"Path":"\\/user\\/${user}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.576" endtime="20230616 07:01:40.577"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.543" endtime="20230616 07:01:40.577"/>
</test>
<test id="s1-s3-s1-t18" name="Get trash root" line="113">
<kw name="Execute curl command" library="operations">
<var>${trash}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>GETTRASHROOT</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.582" level="INFO">${user.name} = &amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.580" endtime="20230616 07:01:40.582"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:01:40.583" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=GETTRASHROOT&amp;user.name=httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.582" endtime="20230616 07:01:40.583"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.584" level="INFO">${curl_extra_commands} = </msg>
<status status="PASS" starttime="20230616 07:01:40.583" endtime="20230616 07:01:40.584"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230616 07:01:40.585" level="INFO">Starting process:
curl   "http://httpfs:14000/webhdfs/v1/vttmn/buck1/testfile?op=GETTRASHROOT&amp;user.name=httpfs"</msg>
<msg timestamp="20230616 07:01:40.588" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230616 07:01:40.613" level="INFO">Process completed.</msg>
<msg timestamp="20230616 07:01:40.614" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.584" endtime="20230616 07:01:40.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:40.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.614" endtime="20230616 07:01:40.616"/>
</kw>
<msg timestamp="20230616 07:01:40.616" level="INFO">${trash} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230616 07:01:40.579" endtime="20230616 07:01:40.616"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${user}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>testuser</arg>
<arg>${USERNAME}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:01:40.617" level="INFO">${user} = httpfs</msg>
<status status="PASS" starttime="20230616 07:01:40.616" endtime="20230616 07:01:40.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${trash.stdout}</arg>
<arg>"Path":"\\/${volume}\\/buck1\\/.Trash\\/${user}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:01:40.617" endtime="20230616 07:01:40.618"/>
</kw>
<status status="PASS" starttime="20230616 07:01:40.578" endtime="20230616 07:01:40.618"/>
</test>
<doc>HttpFS gateway test with curl commands</doc>
<status status="PASS" starttime="20230616 07:01:36.989" endtime="20230616 07:01:40.619"/>
</suite>
<status status="PASS" starttime="20230616 07:01:36.965" endtime="20230616 07:01:40.621"/>
</suite>
<suite id="s1-s4" name="Ozone-Debug-Tests" source="/opt/hadoop/smoketest/debug/ozone-debug-tests.robot">
<kw name="Write keys" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${VOLUME} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:45.260" level="INFO">Running command 'ozone sh volume create o3://om/cli-debug-volume31094 --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:49.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:49.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:01:45.257" endtime="20230616 07:01:49.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:49.039" level="INFO"/>
<status status="PASS" starttime="20230616 07:01:49.038" endtime="20230616 07:01:49.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:49.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:49.039" endtime="20230616 07:01:49.040"/>
</kw>
<status status="PASS" starttime="20230616 07:01:45.256" endtime="20230616 07:01:49.040"/>
</kw>
<msg timestamp="20230616 07:01:49.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:45.256" endtime="20230616 07:01:49.040"/>
</kw>
<status status="PASS" starttime="20230616 07:01:45.256" endtime="20230616 07:01:49.041"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${VOLUME}/${BUCKET} --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:49.045" level="INFO">Running command 'ozone sh bucket create o3://om/cli-debug-volume31094/cli-debug-bucket --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:53.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:53.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:01:49.042" endtime="20230616 07:01:53.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:53.196" level="INFO"/>
<status status="PASS" starttime="20230616 07:01:53.195" endtime="20230616 07:01:53.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:53.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:53.196" endtime="20230616 07:01:53.196"/>
</kw>
<status status="PASS" starttime="20230616 07:01:49.042" endtime="20230616 07:01:53.197"/>
</kw>
<msg timestamp="20230616 07:01:53.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:49.041" endtime="20230616 07:01:53.197"/>
</kw>
<status status="PASS" starttime="20230616 07:01:49.041" endtime="20230616 07:01:53.197"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${TESTFILE} bs=100000 count=15</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:53.201" level="INFO">Running command 'dd if=/dev/urandom of=testfile bs=100000 count=15 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:53.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:53.210" level="INFO">${output} = 15+0 records in
15+0 records out
1500000 bytes (1.5 MB) copied, 0.00583168 s, 257 MB/s</msg>
<status status="PASS" starttime="20230616 07:01:53.198" endtime="20230616 07:01:53.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:53.213" level="INFO">15+0 records in
15+0 records out
1500000 bytes (1.5 MB) copied, 0.00583168 s, 257 MB/s</msg>
<status status="PASS" starttime="20230616 07:01:53.211" endtime="20230616 07:01:53.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:53.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:53.213" endtime="20230616 07:01:53.214"/>
</kw>
<status status="PASS" starttime="20230616 07:01:53.198" endtime="20230616 07:01:53.214"/>
</kw>
<msg timestamp="20230616 07:01:53.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:53.198" endtime="20230616 07:01:53.214"/>
</kw>
<status status="PASS" starttime="20230616 07:01:53.197" endtime="20230616 07:01:53.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put o3://om/${VOLUME}/${BUCKET}/${TESTFILE} ${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:53.217" level="INFO">Running command 'ozone sh key put o3://om/cli-debug-volume31094/cli-debug-bucket/testfile testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:01:59.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:01:59.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:01:53.215" endtime="20230616 07:01:59.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:01:59.276" level="INFO"/>
<status status="PASS" starttime="20230616 07:01:59.275" endtime="20230616 07:01:59.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:01:59.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:01:59.276" endtime="20230616 07:01:59.276"/>
</kw>
<status status="PASS" starttime="20230616 07:01:53.215" endtime="20230616 07:01:59.277"/>
</kw>
<msg timestamp="20230616 07:01:59.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:53.215" endtime="20230616 07:01:59.277"/>
</kw>
<status status="PASS" starttime="20230616 07:01:53.214" endtime="20230616 07:01:59.277"/>
</kw>
<status status="PASS" starttime="20230616 07:01:45.256" endtime="20230616 07:01:59.277"/>
</kw>
<test id="s1-s4-t1" name="Test ozone debug read-replicas" line="39">
<kw name="Execute read-replicas CLI tool" library="ozone-debug">
<var>${directory}</var>
<kw name="Execute" library="os">
<arg>ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:01:59.283" level="INFO">Running command 'ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/cli-debug-volume31094/cli-debug-bucket/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:05.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:05.743" level="INFO">${output} = Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203
Successfully created!
Writing : testfile_block1_ozone_datanode_1.ozone_default
Writing : testfile_block1_ozone_datan...</msg>
<status status="PASS" starttime="20230616 07:01:59.280" endtime="20230616 07:02:05.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:05.744" level="INFO">Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203
Successfully created!
Writing : testfile_block1_ozone_datanode_1.ozone_default
Writing : testfile_block1_ozone_datanode_2.ozone_default
Writing : testfile_block1_ozone_datanode_3.ozone_default
Writing : testfile_block2_ozone_datanode_1.ozone_default
Writing : testfile_block2_ozone_datanode_2.ozone_default
Writing : testfile_block2_ozone_datanode_3.ozone_default
Writing manifest file : testfile_manifest</msg>
<status status="PASS" starttime="20230616 07:02:05.743" endtime="20230616 07:02:05.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.744" endtime="20230616 07:02:05.745"/>
</kw>
<status status="PASS" starttime="20230616 07:01:59.280" endtime="20230616 07:02:05.746"/>
</kw>
<msg timestamp="20230616 07:02:05.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:01:59.279" endtime="20230616 07:02:05.746"/>
</kw>
<status status="PASS" starttime="20230616 07:01:59.279" endtime="20230616 07:02:05.746"/>
</kw>
<kw name="Execute" library="os">
<var>${directory}</var>
<arg>ls -d /opt/hadoop/${VOLUME}_${BUCKET}_${TESTFILE}_*/ | tail -n 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:05.750" level="INFO">Running command 'ls -d /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_*/ | tail -n 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:05.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:05.753" level="INFO">${output} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/</msg>
<status status="PASS" starttime="20230616 07:02:05.747" endtime="20230616 07:02:05.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:05.754" level="INFO">/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/</msg>
<status status="PASS" starttime="20230616 07:02:05.754" endtime="20230616 07:02:05.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.755" endtime="20230616 07:02:05.755"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.747" endtime="20230616 07:02:05.755"/>
</kw>
<msg timestamp="20230616 07:02:05.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:05.747" endtime="20230616 07:02:05.756"/>
</kw>
<msg timestamp="20230616 07:02:05.756" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/</msg>
<status status="PASS" starttime="20230616 07:02:05.746" endtime="20230616 07:02:05.756"/>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${directory}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20230616 07:02:05.756" level="INFO" html="true">Directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:02:05.756" endtime="20230616 07:02:05.756"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${directory}/${TESTFILE}_manifest</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230616 07:02:05.757" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/testfile_manifest&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:02:05.757" endtime="20230616 07:02:05.757"/>
</kw>
<msg timestamp="20230616 07:02:05.757" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/</msg>
<status status="PASS" starttime="20230616 07:01:59.278" endtime="20230616 07:02:05.757"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${DIR}</arg>
<arg>${directory}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230616 07:02:05.759" level="INFO">${DIR} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/</msg>
<status status="PASS" starttime="20230616 07:02:05.758" endtime="20230616 07:02:05.759"/>
</kw>
<kw name="Count Files In Directory" library="OperatingSystem">
<var>${count_files}</var>
<arg>${directory}</arg>
<doc>Wrapper for `Count Items In Directory` returning only file count.</doc>
<msg timestamp="20230616 07:02:05.760" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:02:05.760" level="INFO">7 files.</msg>
<msg timestamp="20230616 07:02:05.760" level="INFO">${count_files} = 7</msg>
<status status="PASS" starttime="20230616 07:02:05.759" endtime="20230616 07:02:05.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count_files}</arg>
<arg>7</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.760" endtime="20230616 07:02:05.761"/>
</kw>
<kw name="Read Replicas Manifest" library="ozone-debug">
<var>${json}</var>
<kw name="Get File" library="OperatingSystem">
<var>${manifest}</var>
<arg>${DIR}/${TESTFILE}_manifest</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230616 07:02:05.762" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203/testfile_manifest&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:02:05.762" level="INFO">${manifest} = {
  "filename": "cli-debug-volume31094/cli-debug-bucket/testfile",
  "datasize": 1500000,
  "blocks": [
    {
      "blockIndex": 1,
      "containerId": 4,
      "localId": 111677748019200255,
      ...</msg>
<status status="PASS" starttime="20230616 07:02:05.761" endtime="20230616 07:02:05.762"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${manifest}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.768" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:02:05.762" endtime="20230616 07:02:05.768"/>
</kw>
<kw name="Validate JSON" library="ozone-debug">
<arg>${json}</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[filename]</arg>
<arg>${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:05.768" endtime="20230616 07:02:05.769"/>
</kw>
<kw name="Get File Size" library="OperatingSystem">
<var>${file_size}</var>
<arg>${TESTFILE}</arg>
<doc>Returns and logs file size as an integer in bytes.</doc>
<msg timestamp="20230616 07:02:05.769" level="INFO" html="true">Size of file '&lt;a href="file:///opt/hadoop/testfile"&gt;/opt/hadoop/testfile&lt;/a&gt;' is 1500000 bytes.</msg>
<msg timestamp="20230616 07:02:05.770" level="INFO">${file_size} = 1500000</msg>
<status status="PASS" starttime="20230616 07:02:05.769" endtime="20230616 07:02:05.770"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[datasize]</arg>
<arg>${file_size}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:05.770" endtime="20230616 07:02:05.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][blockIndex]</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.770" endtime="20230616 07:02:05.771"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:05.771" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:05.771" endtime="20230616 07:02:05.772"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:05.772" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:05.772" endtime="20230616 07:02:05.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][length]</arg>
<arg>1048576</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.772" endtime="20230616 07:02:05.773"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:05.773" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:05.773" endtime="20230616 07:02:05.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][blockIndex]</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.773" endtime="20230616 07:02:05.774"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:05.774" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:05.774" endtime="20230616 07:02:05.774"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:05.775" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:05.774" endtime="20230616 07:02:05.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][length]</arg>
<arg>451424</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.775" endtime="20230616 07:02:05.775"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:05.776" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:05.775" endtime="20230616 07:02:05.776"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.768" endtime="20230616 07:02:05.776"/>
</kw>
<msg timestamp="20230616 07:02:05.776" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:02:05.761" endtime="20230616 07:02:05.776"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${TESTFILE} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:05.779" level="INFO">Running command 'md5sum testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:05.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:05.785" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.778" endtime="20230616 07:02:05.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:05.787" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.786" endtime="20230616 07:02:05.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.787" endtime="20230616 07:02:05.788"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.777" endtime="20230616 07:02:05.788"/>
</kw>
<msg timestamp="20230616 07:02:05.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:05.777" endtime="20230616 07:02:05.788"/>
</kw>
<msg timestamp="20230616 07:02:05.788" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.776" endtime="20230616 07:02:05.788"/>
</kw>
<for flavor="IN RANGE">
<var>${replica}</var>
<value>3</value>
<iter>
<var name="${replica}">0</var>
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:02:05.791" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:02:05.790" endtime="20230616 07:02:05.791"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:05.791" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:05.791" endtime="20230616 07:02:05.792"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.792" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:02:05.792" endtime="20230616 07:02:05.792"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:05.792" endtime="20230616 07:02:05.793"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.791" endtime="20230616 07:02:05.793"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:05.794" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:05.793" endtime="20230616 07:02:05.794"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.794" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:02:05.794" endtime="20230616 07:02:05.794"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:05.794" endtime="20230616 07:02:05.795"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.793" endtime="20230616 07:02:05.795"/>
</iter>
<status status="PASS" starttime="20230616 07:02:05.791" endtime="20230616 07:02:05.795"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:02:05.795" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_1.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//t...</msg>
<status status="PASS" starttime="20230616 07:02:05.795" endtime="20230616 07:02:05.795"/>
</kw>
<msg timestamp="20230616 07:02:05.796" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_1.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//t...</msg>
<status status="PASS" starttime="20230616 07:02:05.790" endtime="20230616 07:02:05.796"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:05.799" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_1.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block2_ozone_datanode_1.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:05.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:05.807" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.797" endtime="20230616 07:02:05.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:05.808" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.807" endtime="20230616 07:02:05.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.808" endtime="20230616 07:02:05.809"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.797" endtime="20230616 07:02:05.809"/>
</kw>
<msg timestamp="20230616 07:02:05.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:05.796" endtime="20230616 07:02:05.809"/>
</kw>
<msg timestamp="20230616 07:02:05.809" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.796" endtime="20230616 07:02:05.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:05.809" endtime="20230616 07:02:05.810"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.789" endtime="20230616 07:02:05.810"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.789" endtime="20230616 07:02:05.810"/>
</iter>
<iter>
<var name="${replica}">1</var>
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:02:05.812" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:02:05.812" endtime="20230616 07:02:05.812"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:05.813" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:05.812" endtime="20230616 07:02:05.813"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.814" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:02:05.813" endtime="20230616 07:02:05.814"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:05.814" endtime="20230616 07:02:05.814"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.812" endtime="20230616 07:02:05.814"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:05.815" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:05.815" endtime="20230616 07:02:05.815"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.816" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:02:05.815" endtime="20230616 07:02:05.816"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:05.816" endtime="20230616 07:02:05.816"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.815" endtime="20230616 07:02:05.816"/>
</iter>
<status status="PASS" starttime="20230616 07:02:05.812" endtime="20230616 07:02:05.816"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:02:05.817" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//t...</msg>
<status status="PASS" starttime="20230616 07:02:05.816" endtime="20230616 07:02:05.817"/>
</kw>
<msg timestamp="20230616 07:02:05.817" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//t...</msg>
<status status="PASS" starttime="20230616 07:02:05.811" endtime="20230616 07:02:05.817"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:05.820" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block2_ozone_datanode_2.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:05.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:05.827" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.818" endtime="20230616 07:02:05.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:05.829" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.828" endtime="20230616 07:02:05.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.829" endtime="20230616 07:02:05.829"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.818" endtime="20230616 07:02:05.830"/>
</kw>
<msg timestamp="20230616 07:02:05.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:05.818" endtime="20230616 07:02:05.830"/>
</kw>
<msg timestamp="20230616 07:02:05.830" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.817" endtime="20230616 07:02:05.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:05.830" endtime="20230616 07:02:05.831"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.810" endtime="20230616 07:02:05.831"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.810" endtime="20230616 07:02:05.831"/>
</iter>
<iter>
<var name="${replica}">2</var>
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:02:05.833" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:02:05.832" endtime="20230616 07:02:05.833"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:05.834" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:05.833" endtime="20230616 07:02:05.834"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.834" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:02:05.834" endtime="20230616 07:02:05.834"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:05.835" endtime="20230616 07:02:05.835"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.833" endtime="20230616 07:02:05.835"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:05.836" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:05.835" endtime="20230616 07:02:05.836"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:05.836" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:02:05.836" endtime="20230616 07:02:05.837"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:05.837" endtime="20230616 07:02:05.837"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.835" endtime="20230616 07:02:05.837"/>
</iter>
<status status="PASS" starttime="20230616 07:02:05.833" endtime="20230616 07:02:05.837"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:02:05.838" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//t...</msg>
<status status="PASS" starttime="20230616 07:02:05.837" endtime="20230616 07:02:05.838"/>
</kw>
<msg timestamp="20230616 07:02:05.838" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//t...</msg>
<status status="PASS" starttime="20230616 07:02:05.832" endtime="20230616 07:02:05.838"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:05.841" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070203//testfile_block2_ozone_datanode_3.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:05.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:05.848" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.839" endtime="20230616 07:02:05.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:05.849" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.848" endtime="20230616 07:02:05.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:05.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:05.849" endtime="20230616 07:02:05.850"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.839" endtime="20230616 07:02:05.850"/>
</kw>
<msg timestamp="20230616 07:02:05.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:05.838" endtime="20230616 07:02:05.850"/>
</kw>
<msg timestamp="20230616 07:02:05.851" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:05.838" endtime="20230616 07:02:05.851"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:05.851" endtime="20230616 07:02:05.851"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.831" endtime="20230616 07:02:05.851"/>
</kw>
<status status="PASS" starttime="20230616 07:02:05.831" endtime="20230616 07:02:05.851"/>
</iter>
<status status="PASS" starttime="20230616 07:02:05.788" endtime="20230616 07:02:05.852"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:01:59.278" endtime="20230616 07:02:05.852"/>
</test>
<doc>Test ozone Debug CLI</doc>
<status status="PASS" starttime="20230616 07:01:45.209" endtime="20230616 07:02:05.853"/>
</suite>
<suite id="s1-s5" name="Ozone-Debug-Corrupt-Block" source="/opt/hadoop/smoketest/debug/ozone-debug-corrupt-block.robot">
<test id="s1-s5-t1" name="Test ozone debug read-replicas with corrupt block replica" line="30">
<kw name="Execute read-replicas CLI tool" library="ozone-debug">
<var>${directory}</var>
<kw name="Execute" library="os">
<arg>ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:17.543" level="INFO">Running command 'ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/cli-debug-volume31094/cli-debug-bucket/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:24.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:24.096" level="INFO">${output} = Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221
Successfully created!
Writing : testfile_block1_ozone_datanode_1.ozone_default
Writing : testfile_block1_ozone_datan...</msg>
<status status="PASS" starttime="20230616 07:02:17.539" endtime="20230616 07:02:24.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:24.098" level="INFO">Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221
Successfully created!
Writing : testfile_block1_ozone_datanode_1.ozone_default
Writing : testfile_block1_ozone_datanode_2.ozone_default
Writing : testfile_block1_ozone_datanode_3.ozone_default
Writing : testfile_block2_ozone_datanode_1.ozone_default
Writing : testfile_block2_ozone_datanode_2.ozone_default
Writing : testfile_block2_ozone_datanode_3.ozone_default
Writing manifest file : testfile_manifest</msg>
<status status="PASS" starttime="20230616 07:02:24.097" endtime="20230616 07:02:24.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.098" endtime="20230616 07:02:24.099"/>
</kw>
<status status="PASS" starttime="20230616 07:02:17.539" endtime="20230616 07:02:24.099"/>
</kw>
<msg timestamp="20230616 07:02:24.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:17.538" endtime="20230616 07:02:24.099"/>
</kw>
<status status="PASS" starttime="20230616 07:02:17.538" endtime="20230616 07:02:24.099"/>
</kw>
<kw name="Execute" library="os">
<var>${directory}</var>
<arg>ls -d /opt/hadoop/${VOLUME}_${BUCKET}_${TESTFILE}_*/ | tail -n 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:24.103" level="INFO">Running command 'ls -d /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_*/ | tail -n 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:24.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:24.107" level="INFO">${output} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/</msg>
<status status="PASS" starttime="20230616 07:02:24.101" endtime="20230616 07:02:24.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:24.109" level="INFO">/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/</msg>
<status status="PASS" starttime="20230616 07:02:24.108" endtime="20230616 07:02:24.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.109" endtime="20230616 07:02:24.110"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.100" endtime="20230616 07:02:24.110"/>
</kw>
<msg timestamp="20230616 07:02:24.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:24.100" endtime="20230616 07:02:24.110"/>
</kw>
<msg timestamp="20230616 07:02:24.111" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/</msg>
<status status="PASS" starttime="20230616 07:02:24.099" endtime="20230616 07:02:24.111"/>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${directory}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20230616 07:02:24.111" level="INFO" html="true">Directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:02:24.111" endtime="20230616 07:02:24.111"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${directory}/${TESTFILE}_manifest</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230616 07:02:24.113" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/testfile_manifest&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:02:24.111" endtime="20230616 07:02:24.113"/>
</kw>
<msg timestamp="20230616 07:02:24.114" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/</msg>
<status status="PASS" starttime="20230616 07:02:17.538" endtime="20230616 07:02:24.114"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${DIR}</arg>
<arg>${directory}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230616 07:02:24.115" level="INFO">${DIR} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/</msg>
<status status="PASS" starttime="20230616 07:02:24.114" endtime="20230616 07:02:24.115"/>
</kw>
<kw name="Count Files In Directory" library="OperatingSystem">
<var>${count_files}</var>
<arg>${directory}</arg>
<doc>Wrapper for `Count Items In Directory` returning only file count.</doc>
<msg timestamp="20230616 07:02:24.116" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:02:24.116" level="INFO">7 files.</msg>
<msg timestamp="20230616 07:02:24.116" level="INFO">${count_files} = 7</msg>
<status status="PASS" starttime="20230616 07:02:24.116" endtime="20230616 07:02:24.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count_files}</arg>
<arg>7</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.116" endtime="20230616 07:02:24.117"/>
</kw>
<kw name="Read Replicas Manifest" library="ozone-debug">
<var>${json}</var>
<kw name="Get File" library="OperatingSystem">
<var>${manifest}</var>
<arg>${DIR}/${TESTFILE}_manifest</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230616 07:02:24.118" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221/testfile_manifest&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:02:24.118" level="INFO">${manifest} = {
  "filename": "cli-debug-volume31094/cli-debug-bucket/testfile",
  "datasize": 1500000,
  "blocks": [
    {
      "blockIndex": 1,
      "containerId": 4,
      "localId": 111677748019200255,
      ...</msg>
<status status="PASS" starttime="20230616 07:02:24.118" endtime="20230616 07:02:24.118"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${manifest}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.122" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:02:24.118" endtime="20230616 07:02:24.122"/>
</kw>
<kw name="Validate JSON" library="ozone-debug">
<arg>${json}</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[filename]</arg>
<arg>${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:24.123" endtime="20230616 07:02:24.123"/>
</kw>
<kw name="Get File Size" library="OperatingSystem">
<var>${file_size}</var>
<arg>${TESTFILE}</arg>
<doc>Returns and logs file size as an integer in bytes.</doc>
<msg timestamp="20230616 07:02:24.124" level="INFO" html="true">Size of file '&lt;a href="file:///opt/hadoop/testfile"&gt;/opt/hadoop/testfile&lt;/a&gt;' is 1500000 bytes.</msg>
<msg timestamp="20230616 07:02:24.124" level="INFO">${file_size} = 1500000</msg>
<status status="PASS" starttime="20230616 07:02:24.123" endtime="20230616 07:02:24.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[datasize]</arg>
<arg>${file_size}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:24.124" endtime="20230616 07:02:24.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][blockIndex]</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.124" endtime="20230616 07:02:24.125"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:24.126" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:24.125" endtime="20230616 07:02:24.126"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:24.126" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:24.126" endtime="20230616 07:02:24.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][length]</arg>
<arg>1048576</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.126" endtime="20230616 07:02:24.127"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:24.127" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:24.127" endtime="20230616 07:02:24.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][blockIndex]</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.128" endtime="20230616 07:02:24.128"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:24.128" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:24.128" endtime="20230616 07:02:24.129"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:24.129" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:24.129" endtime="20230616 07:02:24.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][length]</arg>
<arg>451424</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.129" endtime="20230616 07:02:24.130"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:02:24.130" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:02:24.130" endtime="20230616 07:02:24.130"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.122" endtime="20230616 07:02:24.130"/>
</kw>
<msg timestamp="20230616 07:02:24.131" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:02:24.117" endtime="20230616 07:02:24.131"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum testfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:24.134" level="INFO">Running command 'md5sum testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:24.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:24.141" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.132" endtime="20230616 07:02:24.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:24.142" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.141" endtime="20230616 07:02:24.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.143" endtime="20230616 07:02:24.143"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.131" endtime="20230616 07:02:24.143"/>
</kw>
<msg timestamp="20230616 07:02:24.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:24.131" endtime="20230616 07:02:24.144"/>
</kw>
<msg timestamp="20230616 07:02:24.144" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.131" endtime="20230616 07:02:24.144"/>
</kw>
<for flavor="IN RANGE">
<var>${replica}</var>
<value>3</value>
<iter>
<var name="${replica}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][0][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.145" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.144" endtime="20230616 07:02:24.145"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${CORRUPT_DATANODE}'">
<kw name="Verify Corrupt Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:02:24.147" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:02:24.147" endtime="20230616 07:02:24.147"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.148" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.148" endtime="20230616 07:02:24.148"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.149" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:02:24.148" endtime="20230616 07:02:24.149"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:24.149" endtime="20230616 07:02:24.150"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.147" endtime="20230616 07:02:24.150"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.150" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.150" endtime="20230616 07:02:24.150"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.151" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:02:24.150" endtime="20230616 07:02:24.151"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:24.151" endtime="20230616 07:02:24.152"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.150" endtime="20230616 07:02:24.152"/>
</iter>
<status status="PASS" starttime="20230616 07:02:24.147" endtime="20230616 07:02:24.152"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:02:24.152" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_1.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//t...</msg>
<status status="PASS" starttime="20230616 07:02:24.152" endtime="20230616 07:02:24.152"/>
</kw>
<msg timestamp="20230616 07:02:24.152" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_1.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//t...</msg>
<status status="PASS" starttime="20230616 07:02:24.146" endtime="20230616 07:02:24.153"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:24.157" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_1.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block2_ozone_datanode_1.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:24.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:24.161" level="INFO">${output} = f608073ebae8a667d723d48790887734</msg>
<status status="PASS" starttime="20230616 07:02:24.154" endtime="20230616 07:02:24.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:24.163" level="INFO">f608073ebae8a667d723d48790887734</msg>
<status status="PASS" starttime="20230616 07:02:24.162" endtime="20230616 07:02:24.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.163" endtime="20230616 07:02:24.164"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.153" endtime="20230616 07:02:24.164"/>
</kw>
<msg timestamp="20230616 07:02:24.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:24.153" endtime="20230616 07:02:24.164"/>
</kw>
<msg timestamp="20230616 07:02:24.164" level="INFO">${md5sum} = f608073ebae8a667d723d48790887734</msg>
<status status="PASS" starttime="20230616 07:02:24.153" endtime="20230616 07:02:24.164"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${valid_md5sum}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230616 07:02:24.165" endtime="20230616 07:02:24.165"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.146" endtime="20230616 07:02:24.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[blocks][0][replicas][${replica}][exception]</arg>
<arg>Checksum mismatch</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:02:24.165" endtime="20230616 07:02:24.166"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.145" endtime="20230616 07:02:24.166"/>
</branch>
<branch type="ELSE">
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<status status="NOT RUN" starttime="20230616 07:02:24.166" endtime="20230616 07:02:24.166"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:02:24.166" endtime="20230616 07:02:24.166"/>
</branch>
<status status="PASS" starttime="20230616 07:02:24.145" endtime="20230616 07:02:24.166"/>
</if>
<status status="PASS" starttime="20230616 07:02:24.144" endtime="20230616 07:02:24.166"/>
</iter>
<iter>
<var name="${replica}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][0][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.167" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.167" endtime="20230616 07:02:24.167"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${CORRUPT_DATANODE}'">
<kw name="Verify Corrupt Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<status status="NOT RUN" starttime="20230616 07:02:24.167" endtime="20230616 07:02:24.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[blocks][0][replicas][${replica}][exception]</arg>
<arg>Checksum mismatch</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 07:02:24.168" endtime="20230616 07:02:24.168"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:02:24.167" endtime="20230616 07:02:24.168"/>
</branch>
<branch type="ELSE">
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:02:24.169" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:02:24.169" endtime="20230616 07:02:24.169"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.170" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.170" endtime="20230616 07:02:24.170"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.171" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:02:24.170" endtime="20230616 07:02:24.171"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:24.171" endtime="20230616 07:02:24.171"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.170" endtime="20230616 07:02:24.171"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.172" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.172" endtime="20230616 07:02:24.172"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.173" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:02:24.172" endtime="20230616 07:02:24.173"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:24.173" endtime="20230616 07:02:24.173"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.172" endtime="20230616 07:02:24.173"/>
</iter>
<status status="PASS" starttime="20230616 07:02:24.169" endtime="20230616 07:02:24.173"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:02:24.174" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//t...</msg>
<status status="PASS" starttime="20230616 07:02:24.174" endtime="20230616 07:02:24.174"/>
</kw>
<msg timestamp="20230616 07:02:24.174" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//t...</msg>
<status status="PASS" starttime="20230616 07:02:24.168" endtime="20230616 07:02:24.174"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:24.178" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block2_ozone_datanode_2.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:24.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:24.185" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.176" endtime="20230616 07:02:24.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:24.186" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.185" endtime="20230616 07:02:24.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.186" endtime="20230616 07:02:24.186"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.175" endtime="20230616 07:02:24.187"/>
</kw>
<msg timestamp="20230616 07:02:24.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:24.175" endtime="20230616 07:02:24.187"/>
</kw>
<msg timestamp="20230616 07:02:24.187" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.174" endtime="20230616 07:02:24.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:24.187" endtime="20230616 07:02:24.188"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.168" endtime="20230616 07:02:24.188"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.168" endtime="20230616 07:02:24.188"/>
</branch>
<status status="PASS" starttime="20230616 07:02:24.167" endtime="20230616 07:02:24.188"/>
</if>
<status status="PASS" starttime="20230616 07:02:24.166" endtime="20230616 07:02:24.188"/>
</iter>
<iter>
<var name="${replica}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][0][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.189" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.188" endtime="20230616 07:02:24.189"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${CORRUPT_DATANODE}'">
<kw name="Verify Corrupt Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<status status="NOT RUN" starttime="20230616 07:02:24.189" endtime="20230616 07:02:24.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[blocks][0][replicas][${replica}][exception]</arg>
<arg>Checksum mismatch</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 07:02:24.190" endtime="20230616 07:02:24.190"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:02:24.189" endtime="20230616 07:02:24.190"/>
</branch>
<branch type="ELSE">
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:02:24.191" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:02:24.191" endtime="20230616 07:02:24.191"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.192" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.192" endtime="20230616 07:02:24.192"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.193" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:02:24.192" endtime="20230616 07:02:24.193"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:24.193" endtime="20230616 07:02:24.194"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.191" endtime="20230616 07:02:24.194"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:02:24.194" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:02:24.194" endtime="20230616 07:02:24.194"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:02:24.195" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:02:24.195" endtime="20230616 07:02:24.195"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:02:24.195" endtime="20230616 07:02:24.196"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.194" endtime="20230616 07:02:24.196"/>
</iter>
<status status="PASS" starttime="20230616 07:02:24.191" endtime="20230616 07:02:24.196"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:02:24.196" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//t...</msg>
<status status="PASS" starttime="20230616 07:02:24.196" endtime="20230616 07:02:24.196"/>
</kw>
<msg timestamp="20230616 07:02:24.196" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//t...</msg>
<status status="PASS" starttime="20230616 07:02:24.190" endtime="20230616 07:02:24.196"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:24.200" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070221//testfile_block2_ozone_datanode_3.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:02:24.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:02:24.207" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.198" endtime="20230616 07:02:24.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:02:24.208" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.207" endtime="20230616 07:02:24.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:02:24.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:02:24.208" endtime="20230616 07:02:24.209"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.197" endtime="20230616 07:02:24.209"/>
</kw>
<msg timestamp="20230616 07:02:24.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:24.197" endtime="20230616 07:02:24.209"/>
</kw>
<msg timestamp="20230616 07:02:24.209" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:02:24.196" endtime="20230616 07:02:24.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:02:24.210" endtime="20230616 07:02:24.210"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.190" endtime="20230616 07:02:24.210"/>
</kw>
<status status="PASS" starttime="20230616 07:02:24.190" endtime="20230616 07:02:24.210"/>
</branch>
<status status="PASS" starttime="20230616 07:02:24.189" endtime="20230616 07:02:24.210"/>
</if>
<status status="PASS" starttime="20230616 07:02:24.188" endtime="20230616 07:02:24.210"/>
</iter>
<status status="PASS" starttime="20230616 07:02:24.144" endtime="20230616 07:02:24.210"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:02:17.537" endtime="20230616 07:02:24.211"/>
</test>
<doc>Test read-replicas in case of a corrupt replica</doc>
<status status="PASS" starttime="20230616 07:02:17.489" endtime="20230616 07:02:24.212"/>
</suite>
<suite id="s1-s6" name="Ozone-Debug-Stale-Datanode" source="/opt/hadoop/smoketest/debug/ozone-debug-stale-datanode.robot">
<test id="s1-s6-t1" name="Test ozone debug read-replicas with one datanode STALE" line="30">
<kw name="Execute read-replicas CLI tool" library="ozone-debug">
<var>${directory}</var>
<kw name="Execute" library="os">
<arg>ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:02:59.372" level="INFO">Running command 'ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/cli-debug-volume31094/cli-debug-bucket/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:29.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:29.641" level="INFO">${output} = Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303
Successfully created!
Writing : testfile_block1_ozone_datanode_1.ozone_default
Writing : testfile_block1_ozone_datan...</msg>
<status status="PASS" starttime="20230616 07:02:59.368" endtime="20230616 07:03:29.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:29.642" level="INFO">Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303
Successfully created!
Writing : testfile_block1_ozone_datanode_1.ozone_default
Writing : testfile_block1_ozone_datanode_2.ozone_default
Writing : testfile_block1_ozone_datanode_3.ozone_default
Writing : testfile_block2_ozone_datanode_1.ozone_default
Writing : testfile_block2_ozone_datanode_2.ozone_default
Writing : testfile_block2_ozone_datanode_3.ozone_default
Writing manifest file : testfile_manifest</msg>
<status status="PASS" starttime="20230616 07:03:29.641" endtime="20230616 07:03:29.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.642" endtime="20230616 07:03:29.643"/>
</kw>
<status status="PASS" starttime="20230616 07:02:59.368" endtime="20230616 07:03:29.643"/>
</kw>
<msg timestamp="20230616 07:03:29.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:02:59.368" endtime="20230616 07:03:29.643"/>
</kw>
<status status="PASS" starttime="20230616 07:02:59.367" endtime="20230616 07:03:29.644"/>
</kw>
<kw name="Execute" library="os">
<var>${directory}</var>
<arg>ls -d /opt/hadoop/${VOLUME}_${BUCKET}_${TESTFILE}_*/ | tail -n 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:29.648" level="INFO">Running command 'ls -d /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_*/ | tail -n 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:29.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:29.651" level="INFO">${output} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/</msg>
<status status="PASS" starttime="20230616 07:03:29.645" endtime="20230616 07:03:29.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:29.653" level="INFO">/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/</msg>
<status status="PASS" starttime="20230616 07:03:29.652" endtime="20230616 07:03:29.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.653" endtime="20230616 07:03:29.654"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.645" endtime="20230616 07:03:29.654"/>
</kw>
<msg timestamp="20230616 07:03:29.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:29.644" endtime="20230616 07:03:29.655"/>
</kw>
<msg timestamp="20230616 07:03:29.655" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/</msg>
<status status="PASS" starttime="20230616 07:03:29.644" endtime="20230616 07:03:29.655"/>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${directory}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20230616 07:03:29.656" level="INFO" html="true">Directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:03:29.655" endtime="20230616 07:03:29.656"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${directory}/${TESTFILE}_manifest</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230616 07:03:29.658" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_manifest&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:03:29.656" endtime="20230616 07:03:29.658"/>
</kw>
<msg timestamp="20230616 07:03:29.658" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/</msg>
<status status="PASS" starttime="20230616 07:02:59.367" endtime="20230616 07:03:29.658"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${DIR}</arg>
<arg>${directory}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230616 07:03:29.660" level="INFO">${DIR} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/</msg>
<status status="PASS" starttime="20230616 07:03:29.658" endtime="20230616 07:03:29.660"/>
</kw>
<kw name="Count Files In Directory" library="OperatingSystem">
<var>${count_files}</var>
<arg>${directory}</arg>
<doc>Wrapper for `Count Items In Directory` returning only file count.</doc>
<msg timestamp="20230616 07:03:29.660" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:03:29.660" level="INFO">7 files.</msg>
<msg timestamp="20230616 07:03:29.661" level="INFO">${count_files} = 7</msg>
<status status="PASS" starttime="20230616 07:03:29.660" endtime="20230616 07:03:29.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count_files}</arg>
<arg>7</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.661" endtime="20230616 07:03:29.661"/>
</kw>
<kw name="Read Replicas Manifest" library="ozone-debug">
<var>${json}</var>
<kw name="Get File" library="OperatingSystem">
<var>${manifest}</var>
<arg>${DIR}/${TESTFILE}_manifest</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230616 07:03:29.663" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_manifest&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:03:29.663" level="INFO">${manifest} = {
  "filename": "cli-debug-volume31094/cli-debug-bucket/testfile",
  "datasize": 1500000,
  "blocks": [
    {
      "blockIndex": 1,
      "containerId": 4,
      "localId": 111677748019200255,
      ...</msg>
<status status="PASS" starttime="20230616 07:03:29.662" endtime="20230616 07:03:29.663"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${manifest}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.666" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:03:29.663" endtime="20230616 07:03:29.666"/>
</kw>
<kw name="Validate JSON" library="ozone-debug">
<arg>${json}</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[filename]</arg>
<arg>${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:29.667" endtime="20230616 07:03:29.668"/>
</kw>
<kw name="Get File Size" library="OperatingSystem">
<var>${file_size}</var>
<arg>${TESTFILE}</arg>
<doc>Returns and logs file size as an integer in bytes.</doc>
<msg timestamp="20230616 07:03:29.668" level="INFO" html="true">Size of file '&lt;a href="file:///opt/hadoop/testfile"&gt;/opt/hadoop/testfile&lt;/a&gt;' is 1500000 bytes.</msg>
<msg timestamp="20230616 07:03:29.668" level="INFO">${file_size} = 1500000</msg>
<status status="PASS" starttime="20230616 07:03:29.668" endtime="20230616 07:03:29.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[datasize]</arg>
<arg>${file_size}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:29.668" endtime="20230616 07:03:29.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][blockIndex]</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.669" endtime="20230616 07:03:29.670"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:29.670" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:29.670" endtime="20230616 07:03:29.670"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:29.670" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:29.670" endtime="20230616 07:03:29.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][length]</arg>
<arg>1048576</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.671" endtime="20230616 07:03:29.671"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:29.671" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:29.671" endtime="20230616 07:03:29.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][blockIndex]</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.672" endtime="20230616 07:03:29.672"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:29.673" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:29.672" endtime="20230616 07:03:29.673"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:29.673" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:29.673" endtime="20230616 07:03:29.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][length]</arg>
<arg>451424</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.673" endtime="20230616 07:03:29.674"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:29.674" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:29.674" endtime="20230616 07:03:29.674"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.667" endtime="20230616 07:03:29.674"/>
</kw>
<msg timestamp="20230616 07:03:29.675" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:03:29.661" endtime="20230616 07:03:29.675"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum testfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:29.678" level="INFO">Running command 'md5sum testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:29.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:29.684" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.676" endtime="20230616 07:03:29.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:29.685" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.685" endtime="20230616 07:03:29.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.686" endtime="20230616 07:03:29.686"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.675" endtime="20230616 07:03:29.686"/>
</kw>
<msg timestamp="20230616 07:03:29.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:29.675" endtime="20230616 07:03:29.686"/>
</kw>
<msg timestamp="20230616 07:03:29.687" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.675" endtime="20230616 07:03:29.687"/>
</kw>
<for flavor="IN RANGE">
<var>${replica}</var>
<value>3</value>
<iter>
<var name="${replica}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][0][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.688" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.687" endtime="20230616 07:03:29.688"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${STALE_DATANODE}'">
<kw name="Verify Stale Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.689" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:03:29.689" endtime="20230616 07:03:29.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.690" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.689" endtime="20230616 07:03:29.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${filename}</var>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.690" level="INFO">${filename} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.690" endtime="20230616 07:03:29.690"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${STALE_DATANODE}'">
<kw name="File Should Be Empty" library="OperatingSystem">
<arg>${filename}</arg>
<doc>Fails unless the specified file is empty.</doc>
<msg timestamp="20230616 07:03:29.691" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_block1_ozone_datanode_1.ozone_default"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_block1_ozone_datanode_1.ozone_default&lt;/a&gt;' is empty.</msg>
<status status="PASS" starttime="20230616 07:03:29.691" endtime="20230616 07:03:29.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[blocks][${block}][replicas][${replica}][exception]</arg>
<arg>UNAVAILABLE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:03:29.691" endtime="20230616 07:03:29.692"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.691" endtime="20230616 07:03:29.692"/>
</branch>
<branch type="ELSE">
<kw name="Get File Size" library="OperatingSystem">
<var>${filesize}</var>
<arg>${filename}</arg>
<doc>Returns and logs file size as an integer in bytes.</doc>
<status status="NOT RUN" starttime="20230616 07:03:29.692" endtime="20230616 07:03:29.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][${block}][length]</arg>
<arg>${filesize}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230616 07:03:29.692" endtime="20230616 07:03:29.692"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:03:29.692" endtime="20230616 07:03:29.692"/>
</branch>
<status status="PASS" starttime="20230616 07:03:29.690" endtime="20230616 07:03:29.692"/>
</if>
<status status="PASS" starttime="20230616 07:03:29.689" endtime="20230616 07:03:29.692"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.693" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:03:29.693" endtime="20230616 07:03:29.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.694" level="INFO">${datanode} = ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.693" endtime="20230616 07:03:29.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${filename}</var>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.694" level="INFO">${filename} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block2_ozone_datanode_1.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.694" endtime="20230616 07:03:29.694"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${STALE_DATANODE}'">
<kw name="File Should Be Empty" library="OperatingSystem">
<arg>${filename}</arg>
<doc>Fails unless the specified file is empty.</doc>
<msg timestamp="20230616 07:03:29.695" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_block2_ozone_datanode_1.ozone_default"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303/testfile_block2_ozone_datanode_1.ozone_default&lt;/a&gt;' is empty.</msg>
<status status="PASS" starttime="20230616 07:03:29.695" endtime="20230616 07:03:29.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[blocks][${block}][replicas][${replica}][exception]</arg>
<arg>UNAVAILABLE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:03:29.695" endtime="20230616 07:03:29.695"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.694" endtime="20230616 07:03:29.696"/>
</branch>
<branch type="ELSE">
<kw name="Get File Size" library="OperatingSystem">
<var>${filesize}</var>
<arg>${filename}</arg>
<doc>Returns and logs file size as an integer in bytes.</doc>
<status status="NOT RUN" starttime="20230616 07:03:29.696" endtime="20230616 07:03:29.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][${block}][length]</arg>
<arg>${filesize}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230616 07:03:29.696" endtime="20230616 07:03:29.696"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:03:29.696" endtime="20230616 07:03:29.696"/>
</branch>
<status status="PASS" starttime="20230616 07:03:29.694" endtime="20230616 07:03:29.696"/>
</if>
<status status="PASS" starttime="20230616 07:03:29.692" endtime="20230616 07:03:29.696"/>
</iter>
<status status="PASS" starttime="20230616 07:03:29.688" endtime="20230616 07:03:29.696"/>
</for>
<status status="PASS" starttime="20230616 07:03:29.688" endtime="20230616 07:03:29.696"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.688" endtime="20230616 07:03:29.696"/>
</branch>
<branch type="ELSE">
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<status status="NOT RUN" starttime="20230616 07:03:29.696" endtime="20230616 07:03:29.696"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:03:29.696" endtime="20230616 07:03:29.697"/>
</branch>
<status status="PASS" starttime="20230616 07:03:29.688" endtime="20230616 07:03:29.697"/>
</if>
<status status="PASS" starttime="20230616 07:03:29.687" endtime="20230616 07:03:29.697"/>
</iter>
<iter>
<var name="${replica}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][0][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.697" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.697" endtime="20230616 07:03:29.697"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${STALE_DATANODE}'">
<kw name="Verify Stale Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<status status="NOT RUN" starttime="20230616 07:03:29.698" endtime="20230616 07:03:29.698"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:03:29.697" endtime="20230616 07:03:29.698"/>
</branch>
<branch type="ELSE">
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:03:29.699" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:03:29.699" endtime="20230616 07:03:29.699"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.700" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.700" endtime="20230616 07:03:29.700"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.701" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:03:29.700" endtime="20230616 07:03:29.701"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:29.701" endtime="20230616 07:03:29.701"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.699" endtime="20230616 07:03:29.701"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.702" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.701" endtime="20230616 07:03:29.702"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.702" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:03:29.702" endtime="20230616 07:03:29.702"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:29.703" endtime="20230616 07:03:29.703"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.701" endtime="20230616 07:03:29.703"/>
</iter>
<status status="PASS" starttime="20230616 07:03:29.699" endtime="20230616 07:03:29.703"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:03:29.704" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//t...</msg>
<status status="PASS" starttime="20230616 07:03:29.703" endtime="20230616 07:03:29.704"/>
</kw>
<msg timestamp="20230616 07:03:29.704" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//t...</msg>
<status status="PASS" starttime="20230616 07:03:29.698" endtime="20230616 07:03:29.704"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:29.707" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block2_ozone_datanode_2.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:29.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:29.714" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.705" endtime="20230616 07:03:29.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:29.715" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.714" endtime="20230616 07:03:29.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.715" endtime="20230616 07:03:29.716"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.705" endtime="20230616 07:03:29.716"/>
</kw>
<msg timestamp="20230616 07:03:29.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:29.704" endtime="20230616 07:03:29.716"/>
</kw>
<msg timestamp="20230616 07:03:29.716" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.704" endtime="20230616 07:03:29.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:29.717" endtime="20230616 07:03:29.717"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.698" endtime="20230616 07:03:29.717"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.698" endtime="20230616 07:03:29.717"/>
</branch>
<status status="PASS" starttime="20230616 07:03:29.697" endtime="20230616 07:03:29.717"/>
</if>
<status status="PASS" starttime="20230616 07:03:29.697" endtime="20230616 07:03:29.717"/>
</iter>
<iter>
<var name="${replica}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][0][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.718" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.718" endtime="20230616 07:03:29.718"/>
</kw>
<if>
<branch type="IF" condition="'${datanode}' == '${STALE_DATANODE}'">
<kw name="Verify Stale Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<status status="NOT RUN" starttime="20230616 07:03:29.719" endtime="20230616 07:03:29.719"/>
</kw>
<status status="NOT RUN" starttime="20230616 07:03:29.718" endtime="20230616 07:03:29.719"/>
</branch>
<branch type="ELSE">
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:03:29.720" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:03:29.720" endtime="20230616 07:03:29.720"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.721" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.721" endtime="20230616 07:03:29.721"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.722" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:03:29.722" endtime="20230616 07:03:29.722"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:29.722" endtime="20230616 07:03:29.723"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.721" endtime="20230616 07:03:29.723"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:29.723" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:29.723" endtime="20230616 07:03:29.723"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:29.724" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:03:29.723" endtime="20230616 07:03:29.724"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:29.724" endtime="20230616 07:03:29.724"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.723" endtime="20230616 07:03:29.724"/>
</iter>
<status status="PASS" starttime="20230616 07:03:29.721" endtime="20230616 07:03:29.725"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:03:29.725" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//t...</msg>
<status status="PASS" starttime="20230616 07:03:29.725" endtime="20230616 07:03:29.725"/>
</kw>
<msg timestamp="20230616 07:03:29.725" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//t...</msg>
<status status="PASS" starttime="20230616 07:03:29.720" endtime="20230616 07:03:29.725"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:29.729" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070303//testfile_block2_ozone_datanode_3.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:29.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:29.735" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.727" endtime="20230616 07:03:29.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:29.736" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.735" endtime="20230616 07:03:29.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:29.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:29.736" endtime="20230616 07:03:29.737"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.726" endtime="20230616 07:03:29.737"/>
</kw>
<msg timestamp="20230616 07:03:29.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:29.726" endtime="20230616 07:03:29.737"/>
</kw>
<msg timestamp="20230616 07:03:29.737" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:29.725" endtime="20230616 07:03:29.737"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:29.738" endtime="20230616 07:03:29.738"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.719" endtime="20230616 07:03:29.738"/>
</kw>
<status status="PASS" starttime="20230616 07:03:29.719" endtime="20230616 07:03:29.738"/>
</branch>
<status status="PASS" starttime="20230616 07:03:29.718" endtime="20230616 07:03:29.738"/>
</if>
<status status="PASS" starttime="20230616 07:03:29.718" endtime="20230616 07:03:29.738"/>
</iter>
<status status="PASS" starttime="20230616 07:03:29.687" endtime="20230616 07:03:29.738"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:02:59.366" endtime="20230616 07:03:29.739"/>
</test>
<doc>Test read-replicas in case of one datanode is stale</doc>
<status status="PASS" starttime="20230616 07:02:59.318" endtime="20230616 07:03:29.740"/>
</suite>
<suite id="s1-s7" name="Ozone-Debug-Dead-Datanode" source="/opt/hadoop/smoketest/debug/ozone-debug-dead-datanode.robot">
<test id="s1-s7-t1" name="Test ozone debug read-replicas with one datanode DEAD" line="29">
<kw name="Execute read-replicas CLI tool" library="ozone-debug">
<var>${directory}</var>
<kw name="Execute" library="os">
<arg>ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:38.844" level="INFO">Running command 'ozone debug -Dozone.network.topology.aware.read=true read-replicas o3://om/cli-debug-volume31094/cli-debug-bucket/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:44.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:44.733" level="INFO">${output} = Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342
Successfully created!
Writing : testfile_block1_ozone_datanode_2.ozone_default
Writing : testfile_block1_ozone_datan...</msg>
<status status="PASS" starttime="20230616 07:03:38.840" endtime="20230616 07:03:44.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:44.734" level="INFO">Creating directory : cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342
Successfully created!
Writing : testfile_block1_ozone_datanode_2.ozone_default
Writing : testfile_block1_ozone_datanode_3.ozone_default
Writing : testfile_block2_ozone_datanode_2.ozone_default
Writing : testfile_block2_ozone_datanode_3.ozone_default
Writing manifest file : testfile_manifest</msg>
<status status="PASS" starttime="20230616 07:03:44.734" endtime="20230616 07:03:44.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.735" endtime="20230616 07:03:44.735"/>
</kw>
<status status="PASS" starttime="20230616 07:03:38.840" endtime="20230616 07:03:44.736"/>
</kw>
<msg timestamp="20230616 07:03:44.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:38.840" endtime="20230616 07:03:44.736"/>
</kw>
<status status="PASS" starttime="20230616 07:03:38.839" endtime="20230616 07:03:44.736"/>
</kw>
<kw name="Execute" library="os">
<var>${directory}</var>
<arg>ls -d /opt/hadoop/${VOLUME}_${BUCKET}_${TESTFILE}_*/ | tail -n 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:44.740" level="INFO">Running command 'ls -d /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_*/ | tail -n 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:44.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:44.743" level="INFO">${output} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/</msg>
<status status="PASS" starttime="20230616 07:03:44.737" endtime="20230616 07:03:44.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:44.744" level="INFO">/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/</msg>
<status status="PASS" starttime="20230616 07:03:44.744" endtime="20230616 07:03:44.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.745" endtime="20230616 07:03:44.745"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.737" endtime="20230616 07:03:44.746"/>
</kw>
<msg timestamp="20230616 07:03:44.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:44.737" endtime="20230616 07:03:44.746"/>
</kw>
<msg timestamp="20230616 07:03:44.746" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/</msg>
<status status="PASS" starttime="20230616 07:03:44.736" endtime="20230616 07:03:44.746"/>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${directory}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20230616 07:03:44.747" level="INFO" html="true">Directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:03:44.746" endtime="20230616 07:03:44.747"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${directory}/${TESTFILE}_manifest</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230616 07:03:44.749" level="INFO" html="true">File '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/testfile_manifest&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:03:44.747" endtime="20230616 07:03:44.749"/>
</kw>
<msg timestamp="20230616 07:03:44.749" level="INFO">${directory} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/</msg>
<status status="PASS" starttime="20230616 07:03:38.839" endtime="20230616 07:03:44.749"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${DIR}</arg>
<arg>${directory}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230616 07:03:44.750" level="INFO">${DIR} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/</msg>
<status status="PASS" starttime="20230616 07:03:44.749" endtime="20230616 07:03:44.751"/>
</kw>
<kw name="Count Files In Directory" library="OperatingSystem">
<var>${count_files}</var>
<arg>${directory}</arg>
<doc>Wrapper for `Count Items In Directory` returning only file count.</doc>
<msg timestamp="20230616 07:03:44.751" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:03:44.751" level="INFO">5 files.</msg>
<msg timestamp="20230616 07:03:44.751" level="INFO">${count_files} = 5</msg>
<status status="PASS" starttime="20230616 07:03:44.751" endtime="20230616 07:03:44.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count_files}</arg>
<arg>5</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.751" endtime="20230616 07:03:44.752"/>
</kw>
<kw name="Read Replicas Manifest" library="ozone-debug">
<var>${json}</var>
<kw name="Get File" library="OperatingSystem">
<var>${manifest}</var>
<arg>${DIR}/${TESTFILE}_manifest</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230616 07:03:44.753" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/testfile_manifest"&gt;/opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342/testfile_manifest&lt;/a&gt;'.</msg>
<msg timestamp="20230616 07:03:44.753" level="INFO">${manifest} = {
  "filename": "cli-debug-volume31094/cli-debug-bucket/testfile",
  "datasize": 1500000,
  "blocks": [
    {
      "blockIndex": 1,
      "containerId": 4,
      "localId": 111677748019200255,
      ...</msg>
<status status="PASS" starttime="20230616 07:03:44.752" endtime="20230616 07:03:44.753"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${manifest}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:44.757" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:03:44.753" endtime="20230616 07:03:44.757"/>
</kw>
<kw name="Validate JSON" library="ozone-debug">
<arg>${json}</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[filename]</arg>
<arg>${VOLUME}/${BUCKET}/${TESTFILE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:44.757" endtime="20230616 07:03:44.758"/>
</kw>
<kw name="Get File Size" library="OperatingSystem">
<var>${file_size}</var>
<arg>${TESTFILE}</arg>
<doc>Returns and logs file size as an integer in bytes.</doc>
<msg timestamp="20230616 07:03:44.758" level="INFO" html="true">Size of file '&lt;a href="file:///opt/hadoop/testfile"&gt;/opt/hadoop/testfile&lt;/a&gt;' is 1500000 bytes.</msg>
<msg timestamp="20230616 07:03:44.758" level="INFO">${file_size} = 1500000</msg>
<status status="PASS" starttime="20230616 07:03:44.758" endtime="20230616 07:03:44.758"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json}[datasize]</arg>
<arg>${file_size}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:44.758" endtime="20230616 07:03:44.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][blockIndex]</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.759" endtime="20230616 07:03:44.760"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:44.760" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:44.760" endtime="20230616 07:03:44.760"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:44.761" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:44.760" endtime="20230616 07:03:44.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][0][length]</arg>
<arg>1048576</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.761" endtime="20230616 07:03:44.761"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][0][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:44.762" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:44.761" endtime="20230616 07:03:44.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][blockIndex]</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.762" endtime="20230616 07:03:44.762"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][containerId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:44.763" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:44.762" endtime="20230616 07:03:44.763"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][localId]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:44.763" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:44.763" endtime="20230616 07:03:44.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json}[blocks][1][length]</arg>
<arg>451424</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.763" endtime="20230616 07:03:44.764"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>Convert To String</arg>
<arg>${json}[blocks][1][offset]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230616 07:03:44.764" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20230616 07:03:44.764" endtime="20230616 07:03:44.765"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.757" endtime="20230616 07:03:44.765"/>
</kw>
<msg timestamp="20230616 07:03:44.765" level="INFO">${json} = {'filename': 'cli-debug-volume31094/cli-debug-bucket/testfile', 'datasize': 1500000, 'blocks': [{'blockIndex': 1, 'containerId': 4, 'localId': 111677748019200255, 'length': 1048576, 'offset': 0, 'repl...</msg>
<status status="PASS" starttime="20230616 07:03:44.752" endtime="20230616 07:03:44.765"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum testfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:44.768" level="INFO">Running command 'md5sum testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:44.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:44.774" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.766" endtime="20230616 07:03:44.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:44.775" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.774" endtime="20230616 07:03:44.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.775" endtime="20230616 07:03:44.776"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.766" endtime="20230616 07:03:44.776"/>
</kw>
<msg timestamp="20230616 07:03:44.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:44.765" endtime="20230616 07:03:44.776"/>
</kw>
<msg timestamp="20230616 07:03:44.776" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.765" endtime="20230616 07:03:44.777"/>
</kw>
<for flavor="IN RANGE">
<var>${replica}</var>
<value>2</value>
<iter>
<var name="${replica}">0</var>
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:03:44.778" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:03:44.778" endtime="20230616 07:03:44.779"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:44.779" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:44.779" endtime="20230616 07:03:44.780"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:44.780" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:03:44.780" endtime="20230616 07:03:44.780"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:44.780" endtime="20230616 07:03:44.781"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.779" endtime="20230616 07:03:44.781"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:44.782" level="INFO">${datanode} = ozone_datanode_2.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:44.781" endtime="20230616 07:03:44.782"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:44.782" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:03:44.782" endtime="20230616 07:03:44.782"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:44.782" endtime="20230616 07:03:44.783"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.781" endtime="20230616 07:03:44.783"/>
</iter>
<status status="PASS" starttime="20230616 07:03:44.779" endtime="20230616 07:03:44.783"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:03:44.783" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//t...</msg>
<status status="PASS" starttime="20230616 07:03:44.783" endtime="20230616 07:03:44.783"/>
</kw>
<msg timestamp="20230616 07:03:44.784" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//t...</msg>
<status status="PASS" starttime="20230616 07:03:44.778" endtime="20230616 07:03:44.784"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:44.787" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block1_ozone_datanode_2.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block2_ozone_datanode_2.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:44.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:44.794" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.785" endtime="20230616 07:03:44.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:44.795" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.794" endtime="20230616 07:03:44.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.795" endtime="20230616 07:03:44.796"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.784" endtime="20230616 07:03:44.796"/>
</kw>
<msg timestamp="20230616 07:03:44.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:44.784" endtime="20230616 07:03:44.796"/>
</kw>
<msg timestamp="20230616 07:03:44.796" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.784" endtime="20230616 07:03:44.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:44.796" endtime="20230616 07:03:44.797"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.777" endtime="20230616 07:03:44.797"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.777" endtime="20230616 07:03:44.797"/>
</iter>
<iter>
<var name="${replica}">1</var>
<kw name="Verify Healthy Replica" library="ozone-debug">
<arg>${json}</arg>
<arg>${replica}</arg>
<arg>${md5sum}</arg>
<kw name="Get Replica Filenames" library="ozone-debug">
<var>${block_filenames}</var>
<arg>${json}</arg>
<arg>${replica}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230616 07:03:44.799" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230616 07:03:44.799" endtime="20230616 07:03:44.799"/>
</kw>
<for flavor="IN RANGE">
<var>${block}</var>
<value>2</value>
<iter>
<var name="${block}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:44.800" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:44.800" endtime="20230616 07:03:44.800"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:44.801" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20230616 07:03:44.800" endtime="20230616 07:03:44.801"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:44.801" endtime="20230616 07:03:44.801"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.799" endtime="20230616 07:03:44.801"/>
</iter>
<iter>
<var name="${block}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${datanode}</var>
<arg>${json}[blocks][${block}][replicas][${replica}][hostname]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 07:03:44.802" level="INFO">${datanode} = ozone_datanode_3.ozone_default</msg>
<status status="PASS" starttime="20230616 07:03:44.802" endtime="20230616 07:03:44.802"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${block} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:03:44.803" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230616 07:03:44.802" endtime="20230616 07:03:44.803"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${DIR}/${TESTFILE}_block${n}_${datanode}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230616 07:03:44.803" endtime="20230616 07:03:44.803"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.801" endtime="20230616 07:03:44.803"/>
</iter>
<status status="PASS" starttime="20230616 07:03:44.799" endtime="20230616 07:03:44.803"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${filenames}</var>
<arg>@{list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230616 07:03:44.804" level="INFO">${filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//t...</msg>
<status status="PASS" starttime="20230616 07:03:44.803" endtime="20230616 07:03:44.804"/>
</kw>
<msg timestamp="20230616 07:03:44.804" level="INFO">${block_filenames} = /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//t...</msg>
<status status="PASS" starttime="20230616 07:03:44.798" endtime="20230616 07:03:44.804"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>cat ${block_filenames} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:03:44.807" level="INFO">Running command 'cat /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block1_ozone_datanode_3.ozone_default /opt/hadoop/cli-debug-volume31094_cli-debug-bucket_testfile_20230616070342//testfile_block2_ozone_datanode_3.ozone_default | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:03:44.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:03:44.814" level="INFO">${output} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.805" endtime="20230616 07:03:44.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:03:44.815" level="INFO">0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.814" endtime="20230616 07:03:44.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:03:44.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:03:44.815" endtime="20230616 07:03:44.816"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.805" endtime="20230616 07:03:44.816"/>
</kw>
<msg timestamp="20230616 07:03:44.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:03:44.805" endtime="20230616 07:03:44.817"/>
</kw>
<msg timestamp="20230616 07:03:44.817" level="INFO">${md5sum} = 0926ab1a251ab749e97c319dd78aad11</msg>
<status status="PASS" starttime="20230616 07:03:44.804" endtime="20230616 07:03:44.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${expected_md5sum}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:03:44.817" endtime="20230616 07:03:44.817"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.797" endtime="20230616 07:03:44.818"/>
</kw>
<status status="PASS" starttime="20230616 07:03:44.797" endtime="20230616 07:03:44.818"/>
</iter>
<status status="PASS" starttime="20230616 07:03:44.777" endtime="20230616 07:03:44.818"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:03:38.838" endtime="20230616 07:03:44.818"/>
</test>
<doc>Test read-replicas in case of one datanode is dead</doc>
<status status="PASS" starttime="20230616 07:03:38.790" endtime="20230616 07:03:44.819"/>
</suite>
<suite id="s1-s8" name="ozonefs-o3fs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 07:04:09.814" level="INFO">${random} = 46413</msg>
<status status="PASS" starttime="20230616 07:04:09.814" endtime="20230616 07:04:09.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:04:09.815" level="INFO">${BUCKET} = 46413-bucket1-o3fs</msg>
<status status="PASS" starttime="20230616 07:04:09.814" endtime="20230616 07:04:09.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:04:09.816" level="INFO">${BUCKET2} = 46413-bucket2-o3fs</msg>
<status status="PASS" starttime="20230616 07:04:09.815" endtime="20230616 07:04:09.816"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:04:09.817" level="INFO">${BUCKET_IN_VOL2} = 46413-bucket3-o3fs</msg>
<status status="PASS" starttime="20230616 07:04:09.816" endtime="20230616 07:04:09.817"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 07:04:09.821" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 07:04:09.820" endtime="20230616 07:04:09.821"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:04:09.822" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 07:04:09.821" endtime="20230616 07:04:09.822"/>
</kw>
<status status="PASS" starttime="20230616 07:04:09.820" endtime="20230616 07:04:09.822"/>
</kw>
<msg timestamp="20230616 07:04:09.822" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 07:04:09.819" endtime="20230616 07:04:09.822"/>
</kw>
<status status="PASS" starttime="20230616 07:04:09.818" endtime="20230616 07:04:09.822"/>
</kw>
<msg timestamp="20230616 07:04:09.822" level="INFO">${url} = o3fs://46413-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230616 07:04:09.817" endtime="20230616 07:04:09.822"/>
</kw>
<msg timestamp="20230616 07:04:09.823" level="INFO">${BASE_URL} = o3fs://46413-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230616 07:04:09.817" endtime="20230616 07:04:09.823"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:04:09.823" level="INFO">${BASE_URL} = o3fs://46413-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230616 07:04:09.823" endtime="20230616 07:04:09.823"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 07:04:09.825" level="INFO">${DEEP_URL} = o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20230616 07:04:09.824" endtime="20230616 07:04:09.825"/>
</kw>
<status status="PASS" starttime="20230616 07:04:09.814" endtime="20230616 07:04:09.826"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:09.830" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:14.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:14.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:09.826" endtime="20230616 07:04:14.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:14.943" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:14.942" endtime="20230616 07:04:14.943"/>
</kw>
<status status="PASS" starttime="20230616 07:04:09.826" endtime="20230616 07:04:14.943"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:14.946" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:19.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:19.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:14.944" endtime="20230616 07:04:19.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:19.444" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:19.443" endtime="20230616 07:04:19.444"/>
</kw>
<status status="PASS" starttime="20230616 07:04:14.943" endtime="20230616 07:04:19.444"/>
</kw>
<status status="PASS" starttime="20230616 07:04:09.826" endtime="20230616 07:04:19.444"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:19.452" level="INFO">Running command 'ozone sh bucket create fstest1/46413-bucket1-o3fs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:23.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:23.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:19.450" endtime="20230616 07:04:23.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:23.235" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:23.235" endtime="20230616 07:04:23.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:23.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:23.235" endtime="20230616 07:04:23.236"/>
</kw>
<status status="PASS" starttime="20230616 07:04:19.449" endtime="20230616 07:04:23.236"/>
</kw>
<msg timestamp="20230616 07:04:23.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:19.449" endtime="20230616 07:04:23.236"/>
</kw>
<status status="PASS" starttime="20230616 07:04:19.449" endtime="20230616 07:04:23.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:23.240" level="INFO">Running command 'ozone sh bucket create fstest1/46413-bucket2-o3fs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:27.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:27.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:23.238" endtime="20230616 07:04:27.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:27.350" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:27.349" endtime="20230616 07:04:27.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:27.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:27.350" endtime="20230616 07:04:27.350"/>
</kw>
<status status="PASS" starttime="20230616 07:04:23.238" endtime="20230616 07:04:27.351"/>
</kw>
<msg timestamp="20230616 07:04:27.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:23.237" endtime="20230616 07:04:27.351"/>
</kw>
<status status="PASS" starttime="20230616 07:04:23.237" endtime="20230616 07:04:27.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2} --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:27.355" level="INFO">Running command 'ozone sh bucket create fstest2/46413-bucket3-o3fs --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:31.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:31.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:27.352" endtime="20230616 07:04:31.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:31.409" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:31.408" endtime="20230616 07:04:31.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:31.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:31.409" endtime="20230616 07:04:31.409"/>
</kw>
<status status="PASS" starttime="20230616 07:04:27.352" endtime="20230616 07:04:31.410"/>
</kw>
<msg timestamp="20230616 07:04:31.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:27.352" endtime="20230616 07:04:31.410"/>
</kw>
<status status="PASS" starttime="20230616 07:04:27.351" endtime="20230616 07:04:31.410"/>
</kw>
<status status="PASS" starttime="20230616 07:04:19.448" endtime="20230616 07:04:31.410"/>
</kw>
<status status="PASS" starttime="20230616 07:04:19.445" endtime="20230616 07:04:31.410"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:31.414" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:35.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:35.912" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "46353-acls",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:...</msg>
<status status="PASS" starttime="20230616 07:04:31.411" endtime="20230616 07:04:35.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:35.913" level="INFO">[ {
  "metadata" : { },
  "name" : "46353-acls",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:45:59.508Z",
  "modificationTime" : "2023-06-16T06:46:23.230Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2023-06-16T06:33:01.120Z",
  "modificationTime" : "2023-06-16T06:33:01.120Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "46353-with-del",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-06-16T06:51:13.662Z",
  "modificationTime" : "2023-06-16T06:51:13.662Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "voltest",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:57:24.241Z",
  "modificationTime" : "2023-06-16T06:57:24.241Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol-syrfd",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:55:37.926Z",
  "modificationTime" : "2023-06-16T06:55:37.926Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "cli-debug-volume31094",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T07:01:48.969Z",
  "modificationTime" : "2023-06-16T07:01:48.969Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-16T06:32:42.852Z",
  "modificationTime" : "2023-06-16T06:32:42.852Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T07:04:19.254Z",
  "modificationTime" : "2023-06-16T07:04:19.254Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-06-16T07:04:14.725Z",
  "modificationTime" : "2023-06-16T07:04:14.725Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "xpqqm",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2023-06-16T06:52:26.843Z",
  "modificationTime" : "2023-06-16T06:52:26.843Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "recon",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:54:41.669Z",
  "modificationTime" : "2023-06-16T06:54:41.669Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "74347-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2023-06-16T06:34:57.379Z",
  "modificationTime" : "2023-06-16T06:34:57.379Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "74347-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:34:53.071Z",
  "modificationTime" : "2023-06-16T06:34:53.071Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230616 07:04:35.912" endtime="20230616 07:04:35.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:35.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:35.913" endtime="20230616 07:04:35.914"/>
</kw>
<status status="PASS" starttime="20230616 07:04:31.411" endtime="20230616 07:04:35.914"/>
</kw>
<msg timestamp="20230616 07:04:35.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:31.411" endtime="20230616 07:04:35.914"/>
</kw>
<msg timestamp="20230616 07:04:35.915" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "46353-acls",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-06-16T06:...</msg>
<status status="PASS" starttime="20230616 07:04:31.411" endtime="20230616 07:04:35.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:04:35.915" endtime="20230616 07:04:35.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:04:35.915" endtime="20230616 07:04:35.915"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 07:04:35.916" endtime="20230616 07:04:35.916"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:35.920" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:40.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:40.016" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "46413-bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20230616 07:04:35.917" endtime="20230616 07:04:40.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:40.018" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "46413-bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-16T07:04:23.130Z",
  "modificationTime" : "2023-06-16T07:04:23.130Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "46413-bucket2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-16T07:04:27.278Z",
  "modificationTime" : "2023-06-16T07:04:27.278Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20230616 07:04:40.017" endtime="20230616 07:04:40.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:40.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:40.018" endtime="20230616 07:04:40.019"/>
</kw>
<status status="PASS" starttime="20230616 07:04:35.917" endtime="20230616 07:04:40.019"/>
</kw>
<msg timestamp="20230616 07:04:40.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:35.917" endtime="20230616 07:04:40.019"/>
</kw>
<msg timestamp="20230616 07:04:40.019" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "46413-bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20230616 07:04:35.916" endtime="20230616 07:04:40.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:04:40.019" endtime="20230616 07:04:40.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:04:40.020" endtime="20230616 07:04:40.021"/>
</kw>
<status status="PASS" starttime="20230616 07:04:31.410" endtime="20230616 07:04:40.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:40.021" level="INFO">Completed setup for o3fs tests with buckets in fstest1/46413-bucket1-o3fs using FS base URL: o3fs://46413-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20230616 07:04:40.021" endtime="20230616 07:04:40.021"/>
</kw>
<status status="PASS" starttime="20230616 07:04:09.812" endtime="20230616 07:04:40.022"/>
</kw>
<test id="s1-s8-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 07:04:40.027" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 07:04:40.027" endtime="20230616 07:04:40.027"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:04:40.028" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 07:04:40.027" endtime="20230616 07:04:40.028"/>
</kw>
<status status="PASS" starttime="20230616 07:04:40.026" endtime="20230616 07:04:40.028"/>
</kw>
<msg timestamp="20230616 07:04:40.028" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 07:04:40.025" endtime="20230616 07:04:40.028"/>
</kw>
<status status="PASS" starttime="20230616 07:04:40.024" endtime="20230616 07:04:40.028"/>
</kw>
<msg timestamp="20230616 07:04:40.028" level="INFO">${url} = o3fs://46413-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20230616 07:04:40.024" endtime="20230616 07:04:40.028"/>
</kw>
<msg timestamp="20230616 07:04:40.029" level="INFO">${root} = o3fs://46413-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20230616 07:04:40.023" endtime="20230616 07:04:40.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:40.032" level="INFO">Running command 'ozone fs -ls o3fs://46413-bucket1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:43.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:43.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:40.030" endtime="20230616 07:04:43.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:43.702" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:43.701" endtime="20230616 07:04:43.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:43.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:43.702" endtime="20230616 07:04:43.703"/>
</kw>
<status status="PASS" starttime="20230616 07:04:40.029" endtime="20230616 07:04:43.703"/>
</kw>
<msg timestamp="20230616 07:04:43.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:40.029" endtime="20230616 07:04:43.703"/>
</kw>
<status status="PASS" starttime="20230616 07:04:40.029" endtime="20230616 07:04:43.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:04:40.022" endtime="20230616 07:04:43.703"/>
</test>
<test id="s1-s8-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 07:04:43.709" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 07:04:43.709" endtime="20230616 07:04:43.709"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:04:43.710" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 07:04:43.710" endtime="20230616 07:04:43.710"/>
</kw>
<status status="PASS" starttime="20230616 07:04:43.709" endtime="20230616 07:04:43.710"/>
</kw>
<msg timestamp="20230616 07:04:43.710" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 07:04:43.708" endtime="20230616 07:04:43.710"/>
</kw>
<status status="PASS" starttime="20230616 07:04:43.707" endtime="20230616 07:04:43.711"/>
</kw>
<msg timestamp="20230616 07:04:43.711" level="INFO">${url} = o3fs://46413-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20230616 07:04:43.706" endtime="20230616 07:04:43.711"/>
</kw>
<msg timestamp="20230616 07:04:43.711" level="INFO">${url} = o3fs://46413-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20230616 07:04:43.705" endtime="20230616 07:04:43.711"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:43.714" level="INFO">Running command 'ozone fs -ls o3fs://46413-bucket1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:47.479" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 07:04:47.479" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230616 07:04:43.712" endtime="20230616 07:04:47.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:47.480" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230616 07:04:47.479" endtime="20230616 07:04:47.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:47.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:47.480" endtime="20230616 07:04:47.481"/>
</kw>
<msg timestamp="20230616 07:04:47.481" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230616 07:04:43.711" endtime="20230616 07:04:47.481"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 07:04:47.481" endtime="20230616 07:04:47.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:04:43.704" endtime="20230616 07:04:47.482"/>
</test>
<test id="s1-s8-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 07:04:47.489" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 07:04:47.488" endtime="20230616 07:04:47.489"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:04:47.489" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 07:04:47.489" endtime="20230616 07:04:47.489"/>
</kw>
<status status="PASS" starttime="20230616 07:04:47.488" endtime="20230616 07:04:47.490"/>
</kw>
<msg timestamp="20230616 07:04:47.490" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 07:04:47.487" endtime="20230616 07:04:47.490"/>
</kw>
<status status="PASS" starttime="20230616 07:04:47.486" endtime="20230616 07:04:47.490"/>
</kw>
<msg timestamp="20230616 07:04:47.490" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20230616 07:04:47.485" endtime="20230616 07:04:47.490"/>
</kw>
<msg timestamp="20230616 07:04:47.490" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20230616 07:04:47.484" endtime="20230616 07:04:47.490"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:47.493" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:50.927" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 07:04:50.927" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230616 07:04:47.491" endtime="20230616 07:04:50.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:50.928" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20230616 07:04:50.928" endtime="20230616 07:04:50.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:50.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:50.929" endtime="20230616 07:04:50.929"/>
</kw>
<msg timestamp="20230616 07:04:50.930" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230616 07:04:47.490" endtime="20230616 07:04:50.930"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 07:04:50.930" endtime="20230616 07:04:50.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:04:47.483" endtime="20230616 07:04:50.931"/>
</test>
<test id="s1-s8-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:50.936" level="INFO">Running command 'ozone fs -mkdir -p o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:54.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:54.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:50.934" endtime="20230616 07:04:54.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:54.282" level="INFO"/>
<status status="PASS" starttime="20230616 07:04:54.282" endtime="20230616 07:04:54.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:54.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:54.283" endtime="20230616 07:04:54.283"/>
</kw>
<status status="PASS" starttime="20230616 07:04:50.933" endtime="20230616 07:04:54.284"/>
</kw>
<msg timestamp="20230616 07:04:54.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:50.933" endtime="20230616 07:04:54.284"/>
</kw>
<status status="PASS" starttime="20230616 07:04:50.932" endtime="20230616 07:04:54.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:54.288" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:04:58.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:04:58.433" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230616 07:04:54.286" endtime="20230616 07:04:58.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:04:58.435" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230616 07:04:58.434" endtime="20230616 07:04:58.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:04:58.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:04:58.435" endtime="20230616 07:04:58.435"/>
</kw>
<status status="PASS" starttime="20230616 07:04:54.285" endtime="20230616 07:04:58.436"/>
</kw>
<msg timestamp="20230616 07:04:58.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:54.285" endtime="20230616 07:04:58.436"/>
</kw>
<msg timestamp="20230616 07:04:58.436" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230616 07:04:54.284" endtime="20230616 07:04:58.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:04:58.436" endtime="20230616 07:04:58.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:04:50.932" endtime="20230616 07:04:58.437"/>
</test>
<test id="s1-s8-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:04:58.442" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:04.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:04.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:04:58.440" endtime="20230616 07:05:04.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:04.340" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:04.340" endtime="20230616 07:05:04.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:04.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:04.341" endtime="20230616 07:05:04.342"/>
</kw>
<status status="PASS" starttime="20230616 07:04:58.439" endtime="20230616 07:05:04.342"/>
</kw>
<msg timestamp="20230616 07:05:04.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:04:58.439" endtime="20230616 07:05:04.342"/>
</kw>
<status status="PASS" starttime="20230616 07:04:58.438" endtime="20230616 07:05:04.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:04.346" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:08.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:08.892" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:05:04.344" endtime="20230616 07:05:08.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:08.894" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:05:08.893" endtime="20230616 07:05:08.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:08.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:08.894" endtime="20230616 07:05:08.894"/>
</kw>
<status status="PASS" starttime="20230616 07:05:04.343" endtime="20230616 07:05:08.895"/>
</kw>
<msg timestamp="20230616 07:05:08.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:04.343" endtime="20230616 07:05:08.895"/>
</kw>
<msg timestamp="20230616 07:05:08.895" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:05:04.342" endtime="20230616 07:05:08.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:08.895" endtime="20230616 07:05:08.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:08.900" level="INFO">Running command 'ozone sh key info fstest1/46413-bucket1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:13.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:13.468" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20230616 07:05:08.897" endtime="20230616 07:05:13.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:13.471" level="INFO">THREE</msg>
<status status="PASS" starttime="20230616 07:05:13.470" endtime="20230616 07:05:13.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:13.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:13.471" endtime="20230616 07:05:13.472"/>
</kw>
<status status="PASS" starttime="20230616 07:05:08.896" endtime="20230616 07:05:13.472"/>
</kw>
<msg timestamp="20230616 07:05:13.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:08.896" endtime="20230616 07:05:13.472"/>
</kw>
<msg timestamp="20230616 07:05:13.473" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20230616 07:05:08.896" endtime="20230616 07:05:13.473"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 07:05:13.473" endtime="20230616 07:05:13.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:04:58.438" endtime="20230616 07:05:13.473"/>
</test>
<test id="s1-s8-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:13.479" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:19.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:19.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:05:13.476" endtime="20230616 07:05:19.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:19.129" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:19.128" endtime="20230616 07:05:19.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:19.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:19.129" endtime="20230616 07:05:19.130"/>
</kw>
<status status="PASS" starttime="20230616 07:05:13.476" endtime="20230616 07:05:19.130"/>
</kw>
<msg timestamp="20230616 07:05:19.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:13.475" endtime="20230616 07:05:19.130"/>
</kw>
<msg timestamp="20230616 07:05:19.131" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 07:05:13.475" endtime="20230616 07:05:19.131"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 07:05:19.131" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 07:05:19.131" endtime="20230616 07:05:19.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:19.135" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:23.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:23.280" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230616 07:05:19.133" endtime="20230616 07:05:23.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:23.281" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230616 07:05:23.280" endtime="20230616 07:05:23.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:23.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:23.281" endtime="20230616 07:05:23.282"/>
</kw>
<status status="PASS" starttime="20230616 07:05:19.132" endtime="20230616 07:05:23.282"/>
</kw>
<msg timestamp="20230616 07:05:23.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:19.132" endtime="20230616 07:05:23.282"/>
</kw>
<msg timestamp="20230616 07:05:23.283" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230616 07:05:19.131" endtime="20230616 07:05:23.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:23.283" endtime="20230616 07:05:23.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:05:13.474" endtime="20230616 07:05:23.283"/>
</test>
<test id="s1-s8-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 07:05:23.286" level="INFO">${vol} = vggtiarp</msg>
<status status="PASS" starttime="20230616 07:05:23.285" endtime="20230616 07:05:23.286"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 07:05:23.286" level="INFO">${bucket} = wsrfmszg</msg>
<status status="PASS" starttime="20230616 07:05:23.286" endtime="20230616 07:05:23.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:23.290" level="INFO">Running command 'ozone sh volume create /vggtiarp 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:27.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:27.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:05:23.287" endtime="20230616 07:05:27.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:27.257" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:27.256" endtime="20230616 07:05:27.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:27.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:27.257" endtime="20230616 07:05:27.258"/>
</kw>
<status status="PASS" starttime="20230616 07:05:23.287" endtime="20230616 07:05:27.258"/>
</kw>
<msg timestamp="20230616 07:05:27.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:23.287" endtime="20230616 07:05:27.258"/>
</kw>
<status status="PASS" starttime="20230616 07:05:23.286" endtime="20230616 07:05:27.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:27.263" level="INFO">Running command 'ozone sh bucket create /vggtiarp/wsrfmszg --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:31.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:31.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:05:27.260" endtime="20230616 07:05:31.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:31.588" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:31.588" endtime="20230616 07:05:31.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:31.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:31.589" endtime="20230616 07:05:31.589"/>
</kw>
<status status="PASS" starttime="20230616 07:05:27.259" endtime="20230616 07:05:31.590"/>
</kw>
<msg timestamp="20230616 07:05:31.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:27.259" endtime="20230616 07:05:31.590"/>
</kw>
<status status="PASS" starttime="20230616 07:05:27.259" endtime="20230616 07:05:31.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:31.594" level="INFO">Running command 'ozone fs -put NOTICE.txt /vggtiarp/wsrfmszg/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:37.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:37.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:05:31.592" endtime="20230616 07:05:37.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:37.108" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:37.107" endtime="20230616 07:05:37.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:37.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:37.108" endtime="20230616 07:05:37.109"/>
</kw>
<status status="PASS" starttime="20230616 07:05:31.591" endtime="20230616 07:05:37.109"/>
</kw>
<msg timestamp="20230616 07:05:37.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:31.591" endtime="20230616 07:05:37.109"/>
</kw>
<status status="PASS" starttime="20230616 07:05:31.590" endtime="20230616 07:05:37.109"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:37.113" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:37.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:37.117" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20230616 07:05:37.111" endtime="20230616 07:05:37.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:37.118" level="INFO">17289</msg>
<status status="PASS" starttime="20230616 07:05:37.118" endtime="20230616 07:05:37.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:37.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:37.118" endtime="20230616 07:05:37.119"/>
</kw>
<status status="PASS" starttime="20230616 07:05:37.110" endtime="20230616 07:05:37.119"/>
</kw>
<msg timestamp="20230616 07:05:37.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:37.110" endtime="20230616 07:05:37.119"/>
</kw>
<msg timestamp="20230616 07:05:37.120" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20230616 07:05:37.109" endtime="20230616 07:05:37.120"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230616 07:05:37.121" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230616 07:05:37.120" endtime="20230616 07:05:37.121"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230616 07:05:37.121" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230616 07:05:37.121" endtime="20230616 07:05:37.121"/>
</kw>
<msg timestamp="20230616 07:05:37.122" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230616 07:05:37.120" endtime="20230616 07:05:37.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:37.125" level="INFO">Running command 'ozone fs -du /vggtiarp/wsrfmszg 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:40.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:40.628" level="INFO">${output} = 17289  51867  /vggtiarp/wsrfmszg/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230616 07:05:37.123" endtime="20230616 07:05:40.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:40.629" level="INFO">17289  51867  /vggtiarp/wsrfmszg/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230616 07:05:40.628" endtime="20230616 07:05:40.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:40.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:40.629" endtime="20230616 07:05:40.630"/>
</kw>
<status status="PASS" starttime="20230616 07:05:37.122" endtime="20230616 07:05:40.630"/>
</kw>
<msg timestamp="20230616 07:05:40.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:37.122" endtime="20230616 07:05:40.630"/>
</kw>
<msg timestamp="20230616 07:05:40.631" level="INFO">${result} = 17289  51867  /vggtiarp/wsrfmszg/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230616 07:05:37.122" endtime="20230616 07:05:40.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:40.631" endtime="20230616 07:05:40.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:40.631" endtime="20230616 07:05:40.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:40.632" endtime="20230616 07:05:40.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:05:23.284" endtime="20230616 07:05:40.632"/>
</test>
<test id="s1-s8-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:40.638" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:46.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:46.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:05:40.636" endtime="20230616 07:05:46.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:46.504" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:46.503" endtime="20230616 07:05:46.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:46.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:46.504" endtime="20230616 07:05:46.505"/>
</kw>
<status status="PASS" starttime="20230616 07:05:40.635" endtime="20230616 07:05:46.505"/>
</kw>
<msg timestamp="20230616 07:05:46.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:40.635" endtime="20230616 07:05:46.505"/>
</kw>
<msg timestamp="20230616 07:05:46.506" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 07:05:40.634" endtime="20230616 07:05:46.506"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 07:05:46.506" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 07:05:46.506" endtime="20230616 07:05:46.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:46.510" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:51.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:51.194" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:05:46.508" endtime="20230616 07:05:51.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:51.195" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:05:51.195" endtime="20230616 07:05:51.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:51.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:51.196" endtime="20230616 07:05:51.196"/>
</kw>
<status status="PASS" starttime="20230616 07:05:46.507" endtime="20230616 07:05:51.197"/>
</kw>
<msg timestamp="20230616 07:05:51.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:46.507" endtime="20230616 07:05:51.197"/>
</kw>
<msg timestamp="20230616 07:05:51.197" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:05:46.506" endtime="20230616 07:05:51.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:51.197" endtime="20230616 07:05:51.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:05:40.634" endtime="20230616 07:05:51.198"/>
</test>
<test id="s1-s8-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:51.205" level="INFO">Running command 'ozone fs -ls o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:54.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:54.866" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://464...</msg>
<status status="PASS" starttime="20230616 07:05:51.202" endtime="20230616 07:05:54.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:54.867" level="INFO">Found 3 items
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:05:54.867" endtime="20230616 07:05:54.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:54.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:54.868" endtime="20230616 07:05:54.868"/>
</kw>
<status status="PASS" starttime="20230616 07:05:51.201" endtime="20230616 07:05:54.869"/>
</kw>
<msg timestamp="20230616 07:05:54.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:51.201" endtime="20230616 07:05:54.869"/>
</kw>
<msg timestamp="20230616 07:05:54.869" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://464...</msg>
<status status="PASS" starttime="20230616 07:05:51.200" endtime="20230616 07:05:54.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:54.869" endtime="20230616 07:05:54.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:54.870" endtime="20230616 07:05:54.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:05:54.870" endtime="20230616 07:05:54.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:05:51.199" endtime="20230616 07:05:54.871"/>
</test>
<test id="s1-s8-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:54.876" level="INFO">Running command 'ozone fs -mv o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:05:58.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:05:58.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:05:54.874" endtime="20230616 07:05:58.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:05:58.479" level="INFO"/>
<status status="PASS" starttime="20230616 07:05:58.479" endtime="20230616 07:05:58.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:05:58.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:05:58.480" endtime="20230616 07:05:58.480"/>
</kw>
<status status="PASS" starttime="20230616 07:05:54.874" endtime="20230616 07:05:58.481"/>
</kw>
<msg timestamp="20230616 07:05:58.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:54.873" endtime="20230616 07:05:58.481"/>
</kw>
<status status="PASS" starttime="20230616 07:05:54.873" endtime="20230616 07:05:58.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:05:58.485" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:02.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:02.834" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:05:58.483" endtime="20230616 07:06:02.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:02.839" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:06:02.834" endtime="20230616 07:06:02.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:02.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:02.840" endtime="20230616 07:06:02.840"/>
</kw>
<status status="PASS" starttime="20230616 07:05:58.482" endtime="20230616 07:06:02.841"/>
</kw>
<msg timestamp="20230616 07:06:02.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:05:58.482" endtime="20230616 07:06:02.841"/>
</kw>
<msg timestamp="20230616 07:06:02.841" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:05:58.481" endtime="20230616 07:06:02.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:02.842" endtime="20230616 07:06:02.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:02.842" endtime="20230616 07:06:02.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:05:54.872" endtime="20230616 07:06:02.843"/>
</test>
<test id="s1-s8-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:02.851" level="INFO">Running command 'ozone fs -mkdir -p o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:06.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:06.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:06:02.848" endtime="20230616 07:06:06.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:06.244" level="INFO"/>
<status status="PASS" starttime="20230616 07:06:06.244" endtime="20230616 07:06:06.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:06.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:06.245" endtime="20230616 07:06:06.245"/>
</kw>
<status status="PASS" starttime="20230616 07:06:02.847" endtime="20230616 07:06:06.245"/>
</kw>
<msg timestamp="20230616 07:06:06.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:02.847" endtime="20230616 07:06:06.246"/>
</kw>
<status status="PASS" starttime="20230616 07:06:02.846" endtime="20230616 07:06:06.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:06.250" level="INFO">Running command 'ozone fs -cp o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:12.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:12.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:06:06.247" endtime="20230616 07:06:12.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:12.015" level="INFO"/>
<status status="PASS" starttime="20230616 07:06:12.014" endtime="20230616 07:06:12.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:12.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:12.015" endtime="20230616 07:06:12.016"/>
</kw>
<status status="PASS" starttime="20230616 07:06:06.247" endtime="20230616 07:06:12.016"/>
</kw>
<msg timestamp="20230616 07:06:12.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:06.246" endtime="20230616 07:06:12.016"/>
</kw>
<status status="PASS" starttime="20230616 07:06:06.246" endtime="20230616 07:06:12.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:12.020" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:16.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:16.306" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:12.018" endtime="20230616 07:06:16.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:16.307" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:16.307" endtime="20230616 07:06:16.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:16.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:16.308" endtime="20230616 07:06:16.308"/>
</kw>
<status status="PASS" starttime="20230616 07:06:12.017" endtime="20230616 07:06:16.309"/>
</kw>
<msg timestamp="20230616 07:06:16.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:12.017" endtime="20230616 07:06:16.309"/>
</kw>
<msg timestamp="20230616 07:06:16.309" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:12.016" endtime="20230616 07:06:16.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:16.309" endtime="20230616 07:06:16.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:16.314" level="INFO">Running command 'ozone fs -ls o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:19.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:19.858" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:16.311" endtime="20230616 07:06:19.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:19.859" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:19.858" endtime="20230616 07:06:19.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:19.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:19.860" endtime="20230616 07:06:19.860"/>
</kw>
<status status="PASS" starttime="20230616 07:06:16.311" endtime="20230616 07:06:19.861"/>
</kw>
<msg timestamp="20230616 07:06:19.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:16.311" endtime="20230616 07:06:19.861"/>
</kw>
<msg timestamp="20230616 07:06:19.861" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:16.310" endtime="20230616 07:06:19.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:19.862" endtime="20230616 07:06:19.862"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:19.862" endtime="20230616 07:06:19.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:06:02.845" endtime="20230616 07:06:19.863"/>
</test>
<test id="s1-s8-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:19.870" level="INFO">Running command 'ozone fs -cat o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:24.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:24.858" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20230616 07:06:19.866" endtime="20230616 07:06:24.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:24.859" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20230616 07:06:24.859" endtime="20230616 07:06:24.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:24.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:24.860" endtime="20230616 07:06:24.860"/>
</kw>
<status status="PASS" starttime="20230616 07:06:19.866" endtime="20230616 07:06:24.861"/>
</kw>
<msg timestamp="20230616 07:06:24.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:19.866" endtime="20230616 07:06:24.861"/>
</kw>
<status status="PASS" starttime="20230616 07:06:19.865" endtime="20230616 07:06:24.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:06:19.864" endtime="20230616 07:06:24.862"/>
</test>
<test id="s1-s8-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:24.868" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:28.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:28.300" level="INFO">${output} = Deleted o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:24.865" endtime="20230616 07:06:28.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:28.301" level="INFO">Deleted o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230616 07:06:28.301" endtime="20230616 07:06:28.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:28.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:28.302" endtime="20230616 07:06:28.302"/>
</kw>
<status status="PASS" starttime="20230616 07:06:24.865" endtime="20230616 07:06:28.303"/>
</kw>
<msg timestamp="20230616 07:06:28.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:24.864" endtime="20230616 07:06:28.303"/>
</kw>
<status status="PASS" starttime="20230616 07:06:24.864" endtime="20230616 07:06:28.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:28.307" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:32.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:32.704" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230616 07:06:28.305" endtime="20230616 07:06:32.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:32.706" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230616 07:06:32.705" endtime="20230616 07:06:32.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:32.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:32.706" endtime="20230616 07:06:32.706"/>
</kw>
<status status="PASS" starttime="20230616 07:06:28.304" endtime="20230616 07:06:32.706"/>
</kw>
<msg timestamp="20230616 07:06:32.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:28.304" endtime="20230616 07:06:32.707"/>
</kw>
<msg timestamp="20230616 07:06:32.707" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230616 07:06:28.303" endtime="20230616 07:06:32.707"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:32.707" endtime="20230616 07:06:32.708"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:06:24.863" endtime="20230616 07:06:32.708"/>
</test>
<test id="s1-s8-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:32.713" level="INFO">Running command 'ozone fs -rmdir o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:36.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:36.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:06:32.711" endtime="20230616 07:06:36.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:36.649" level="INFO"/>
<status status="PASS" starttime="20230616 07:06:36.649" endtime="20230616 07:06:36.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:36.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:36.650" endtime="20230616 07:06:36.650"/>
</kw>
<status status="PASS" starttime="20230616 07:06:32.711" endtime="20230616 07:06:36.651"/>
</kw>
<msg timestamp="20230616 07:06:36.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:32.710" endtime="20230616 07:06:36.651"/>
</kw>
<msg timestamp="20230616 07:06:36.651" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 07:06:32.710" endtime="20230616 07:06:36.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:36.656" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:40.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:40.946" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:06:36.653" endtime="20230616 07:06:40.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:40.947" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:06:40.946" endtime="20230616 07:06:40.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:40.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:40.947" endtime="20230616 07:06:40.948"/>
</kw>
<status status="PASS" starttime="20230616 07:06:36.652" endtime="20230616 07:06:40.948"/>
</kw>
<msg timestamp="20230616 07:06:40.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:36.652" endtime="20230616 07:06:40.948"/>
</kw>
<msg timestamp="20230616 07:06:40.949" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230616 07:06:36.651" endtime="20230616 07:06:40.949"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:40.949" endtime="20230616 07:06:40.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:06:32.709" endtime="20230616 07:06:40.950"/>
</test>
<test id="s1-s8-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:40.955" level="INFO">Running command 'ozone fs -touch o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:44.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:44.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:06:40.953" endtime="20230616 07:06:44.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:44.484" level="INFO"/>
<status status="PASS" starttime="20230616 07:06:44.483" endtime="20230616 07:06:44.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:44.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:44.484" endtime="20230616 07:06:44.485"/>
</kw>
<status status="PASS" starttime="20230616 07:06:40.952" endtime="20230616 07:06:44.485"/>
</kw>
<msg timestamp="20230616 07:06:44.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:40.952" endtime="20230616 07:06:44.485"/>
</kw>
<status status="PASS" starttime="20230616 07:06:40.951" endtime="20230616 07:06:44.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:44.489" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:48.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:48.989" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:06:44.487" endtime="20230616 07:06:48.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:48.990" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:06:48.989" endtime="20230616 07:06:48.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:48.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:48.990" endtime="20230616 07:06:48.991"/>
</kw>
<status status="PASS" starttime="20230616 07:06:44.486" endtime="20230616 07:06:48.991"/>
</kw>
<msg timestamp="20230616 07:06:48.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:44.486" endtime="20230616 07:06:48.991"/>
</kw>
<msg timestamp="20230616 07:06:48.992" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:06:44.485" endtime="20230616 07:06:48.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:06:48.992" endtime="20230616 07:06:48.992"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:06:40.951" endtime="20230616 07:06:48.992"/>
</test>
<test id="s1-s8-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:48.998" level="INFO">Running command 'ozone fs -touch o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:52.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:52.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:06:48.995" endtime="20230616 07:06:52.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:52.753" level="INFO"/>
<status status="PASS" starttime="20230616 07:06:52.752" endtime="20230616 07:06:52.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:52.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:52.753" endtime="20230616 07:06:52.754"/>
</kw>
<status status="PASS" starttime="20230616 07:06:48.995" endtime="20230616 07:06:52.754"/>
</kw>
<msg timestamp="20230616 07:06:52.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:48.995" endtime="20230616 07:06:52.754"/>
</kw>
<status status="PASS" starttime="20230616 07:06:48.994" endtime="20230616 07:06:52.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:52.759" level="INFO">Running command 'ozone fs -rm o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:06:56.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:06:56.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:06:52.756" endtime="20230616 07:06:56.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:06:56.717" level="INFO"/>
<status status="PASS" starttime="20230616 07:06:56.716" endtime="20230616 07:06:56.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:06:56.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:06:56.717" endtime="20230616 07:06:56.718"/>
</kw>
<status status="PASS" starttime="20230616 07:06:52.756" endtime="20230616 07:06:56.718"/>
</kw>
<msg timestamp="20230616 07:06:56.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:06:52.755" endtime="20230616 07:06:56.718"/>
</kw>
<status status="PASS" starttime="20230616 07:06:52.755" endtime="20230616 07:06:56.719"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:06:56.723" level="INFO">Running command 'ozone fs -ls -R o3fs://46413-bucket1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:00.408" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 07:07:00.408" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/.Tras...</msg>
<status status="PASS" starttime="20230616 07:06:56.720" endtime="20230616 07:07:00.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:00.409" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/.Trash/hadoop/Current
ls: Unable to get file status: volume: fstest1 bucket: 46413-bucket1-o3fs key: .Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:04 o3fs://46413-bucket1-o3fs.fstest1.om/test
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:04 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:05 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/STREAMING.txt
-rw-rw-rw-   3 hadoop hadoop          0 2023-06-16 07:06 o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:07:00.408" endtime="20230616 07:07:00.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:00.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230616 07:07:00.410" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230616 07:07:00.410" endtime="20230616 07:07:00.411"/>
</kw>
<status status="FAIL" starttime="20230616 07:06:56.720" endtime="20230616 07:07:00.411"/>
</kw>
<msg timestamp="20230616 07:07:00.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230616 07:06:56.720" endtime="20230616 07:07:00.411"/>
</kw>
<status status="FAIL" starttime="20230616 07:06:56.719" endtime="20230616 07:07:00.411"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 07:07:00.411" endtime="20230616 07:07:00.411"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="NOT RUN" starttime="20230616 07:07:00.412" endtime="20230616 07:07:00.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 07:07:00.412" endtime="20230616 07:07:00.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230616 07:06:48.993" endtime="20230616 07:07:00.412">1 != 0</status>
</test>
<test id="s1-s8-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:00.422" level="INFO">Running command 'ozone fs -mkdir -p o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:04.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:04.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:00.420" endtime="20230616 07:07:04.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:04.442" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:04.441" endtime="20230616 07:07:04.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:04.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:04.442" endtime="20230616 07:07:04.442"/>
</kw>
<status status="PASS" starttime="20230616 07:07:00.419" endtime="20230616 07:07:04.443"/>
</kw>
<msg timestamp="20230616 07:07:04.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:00.419" endtime="20230616 07:07:04.443"/>
</kw>
<status status="PASS" starttime="20230616 07:07:00.418" endtime="20230616 07:07:04.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:04.447" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://46413-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:08.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:08.130" level="INFO">${output} = Deleted o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230616 07:07:04.444" endtime="20230616 07:07:08.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:08.131" level="INFO">Deleted o3fs://46413-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230616 07:07:08.130" endtime="20230616 07:07:08.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:08.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:08.131" endtime="20230616 07:07:08.132"/>
</kw>
<status status="PASS" starttime="20230616 07:07:04.444" endtime="20230616 07:07:08.132"/>
</kw>
<msg timestamp="20230616 07:07:08.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:04.444" endtime="20230616 07:07:08.132"/>
</kw>
<status status="PASS" starttime="20230616 07:07:04.443" endtime="20230616 07:07:08.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:08.137" level="INFO">Running command 'ozone sh key list fstest1/46413-bucket1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:12.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:12.881" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/230616070700/
.Trash/hadoop/230616070700/test/
.Trash/hadoop/230616070700/test/o3fs/
.Trash/hadoop/230616070700/test/o3fs/dir/
.Trash/hadoop/230616070700/test/o3fs...</msg>
<status status="PASS" starttime="20230616 07:07:08.134" endtime="20230616 07:07:12.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:12.882" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/230616070700/
.Trash/hadoop/230616070700/test/
.Trash/hadoop/230616070700/test/o3fs/
.Trash/hadoop/230616070700/test/o3fs/dir/
.Trash/hadoop/230616070700/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:07:12.881" endtime="20230616 07:07:12.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:12.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:12.882" endtime="20230616 07:07:12.883"/>
</kw>
<status status="PASS" starttime="20230616 07:07:08.133" endtime="20230616 07:07:12.883"/>
</kw>
<msg timestamp="20230616 07:07:12.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:08.133" endtime="20230616 07:07:12.884"/>
</kw>
<msg timestamp="20230616 07:07:12.884" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/230616070700/
.Trash/hadoop/230616070700/test/
.Trash/hadoop/230616070700/test/o3fs/
.Trash/hadoop/230616070700/test/o3fs/dir/
.Trash/hadoop/230616070700/test/o3fs...</msg>
<status status="PASS" starttime="20230616 07:07:08.132" endtime="20230616 07:07:12.884"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:07:12.884" endtime="20230616 07:07:12.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:07:00.417" endtime="20230616 07:07:12.885"/>
</test>
<test id="s1-s8-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:12.891" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:12.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:12.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:12.888" endtime="20230616 07:07:12.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:12.895" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:12.894" endtime="20230616 07:07:12.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:12.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:12.895" endtime="20230616 07:07:12.896"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.888" endtime="20230616 07:07:12.896"/>
</kw>
<msg timestamp="20230616 07:07:12.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:12.888" endtime="20230616 07:07:12.896"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.887" endtime="20230616 07:07:12.896"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:12.900" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:12.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:12.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:12.898" endtime="20230616 07:07:12.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:12.904" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:12.903" endtime="20230616 07:07:12.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:12.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:12.904" endtime="20230616 07:07:12.905"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.897" endtime="20230616 07:07:12.905"/>
</kw>
<msg timestamp="20230616 07:07:12.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:12.897" endtime="20230616 07:07:12.905"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.897" endtime="20230616 07:07:12.906"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:12.909" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:12.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:12.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:12.907" endtime="20230616 07:07:12.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:12.913" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:12.913" endtime="20230616 07:07:12.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:12.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:12.913" endtime="20230616 07:07:12.914"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.906" endtime="20230616 07:07:12.914"/>
</kw>
<msg timestamp="20230616 07:07:12.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:12.906" endtime="20230616 07:07:12.914"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.906" endtime="20230616 07:07:12.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:12.918" level="INFO">Running command 'ozone fs -mkdir -p o3fs://46413-bucket1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:16.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:16.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:12.916" endtime="20230616 07:07:16.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:16.467" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:16.466" endtime="20230616 07:07:16.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:16.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:16.468" endtime="20230616 07:07:16.468"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.915" endtime="20230616 07:07:16.468"/>
</kw>
<msg timestamp="20230616 07:07:16.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:12.915" endtime="20230616 07:07:16.469"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.915" endtime="20230616 07:07:16.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:16.473" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://46413-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:22.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:22.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:16.470" endtime="20230616 07:07:22.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:22.378" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:22.378" endtime="20230616 07:07:22.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:22.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:22.379" endtime="20230616 07:07:22.379"/>
</kw>
<status status="PASS" starttime="20230616 07:07:16.470" endtime="20230616 07:07:22.379"/>
</kw>
<msg timestamp="20230616 07:07:22.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:16.470" endtime="20230616 07:07:22.379"/>
</kw>
<status status="PASS" starttime="20230616 07:07:16.469" endtime="20230616 07:07:22.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:22.383" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://46413-bucket1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:28.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:28.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:22.381" endtime="20230616 07:07:28.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:28.165" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:28.164" endtime="20230616 07:07:28.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:28.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:28.165" endtime="20230616 07:07:28.166"/>
</kw>
<status status="PASS" starttime="20230616 07:07:22.381" endtime="20230616 07:07:28.166"/>
</kw>
<msg timestamp="20230616 07:07:28.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:22.380" endtime="20230616 07:07:28.166"/>
</kw>
<status status="PASS" starttime="20230616 07:07:22.380" endtime="20230616 07:07:28.166"/>
</kw>
<status status="PASS" starttime="20230616 07:07:12.887" endtime="20230616 07:07:28.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:28.170" level="INFO">Running command 'ozone fs -ls -R o3fs://46413-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:31.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:31.780" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fst...</msg>
<status status="PASS" starttime="20230616 07:07:28.168" endtime="20230616 07:07:31.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:31.781" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20230616 07:07:31.780" endtime="20230616 07:07:31.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:31.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:31.781" endtime="20230616 07:07:31.782"/>
</kw>
<status status="PASS" starttime="20230616 07:07:28.167" endtime="20230616 07:07:31.782"/>
</kw>
<msg timestamp="20230616 07:07:31.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:28.167" endtime="20230616 07:07:31.782"/>
</kw>
<msg timestamp="20230616 07:07:31.783" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2023-06-16 07:07 o3fs://46413-bucket1-o3fs.fst...</msg>
<status status="PASS" starttime="20230616 07:07:28.167" endtime="20230616 07:07:31.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:07:31.783" endtime="20230616 07:07:31.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:07:31.783" endtime="20230616 07:07:31.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:07:12.886" endtime="20230616 07:07:31.784"/>
</test>
<test id="s1-s8-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 07:07:31.791" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 07:07:31.790" endtime="20230616 07:07:31.791"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:07:31.791" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 07:07:31.791" endtime="20230616 07:07:31.791"/>
</kw>
<status status="PASS" starttime="20230616 07:07:31.789" endtime="20230616 07:07:31.791"/>
</kw>
<msg timestamp="20230616 07:07:31.791" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 07:07:31.788" endtime="20230616 07:07:31.792"/>
</kw>
<status status="PASS" starttime="20230616 07:07:31.788" endtime="20230616 07:07:31.792"/>
</kw>
<msg timestamp="20230616 07:07:31.792" level="INFO">${url} = o3fs://46413-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20230616 07:07:31.787" endtime="20230616 07:07:31.792"/>
</kw>
<msg timestamp="20230616 07:07:31.792" level="INFO">${target} = o3fs://46413-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20230616 07:07:31.786" endtime="20230616 07:07:31.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:31.796" level="INFO">Running command 'ozone fs -mkdir -p o3fs://46413-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:35.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:35.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:31.794" endtime="20230616 07:07:35.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:35.455" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:35.455" endtime="20230616 07:07:35.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:35.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:35.456" endtime="20230616 07:07:35.456"/>
</kw>
<status status="PASS" starttime="20230616 07:07:31.793" endtime="20230616 07:07:35.457"/>
</kw>
<msg timestamp="20230616 07:07:35.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:31.793" endtime="20230616 07:07:35.457"/>
</kw>
<status status="PASS" starttime="20230616 07:07:31.792" endtime="20230616 07:07:35.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:35.461" level="INFO">Running command 'ozone fs -cp o3fs://46413-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://46413-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:41.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:41.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:35.459" endtime="20230616 07:07:41.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:41.350" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:41.349" endtime="20230616 07:07:41.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:41.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:41.350" endtime="20230616 07:07:41.351"/>
</kw>
<status status="PASS" starttime="20230616 07:07:35.458" endtime="20230616 07:07:41.351"/>
</kw>
<msg timestamp="20230616 07:07:41.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:35.458" endtime="20230616 07:07:41.351"/>
</kw>
<status status="PASS" starttime="20230616 07:07:35.457" endtime="20230616 07:07:41.351"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:41.356" level="INFO">Running command 'ozone fs -rm -r o3fs://46413-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:44.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:44.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:41.353" endtime="20230616 07:07:44.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:44.868" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:44.867" endtime="20230616 07:07:44.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:44.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:44.868" endtime="20230616 07:07:44.868"/>
</kw>
<status status="PASS" starttime="20230616 07:07:41.353" endtime="20230616 07:07:44.869"/>
</kw>
<msg timestamp="20230616 07:07:44.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:41.352" endtime="20230616 07:07:44.869"/>
</kw>
<status status="PASS" starttime="20230616 07:07:41.352" endtime="20230616 07:07:44.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:07:31.785" endtime="20230616 07:07:44.869"/>
</test>
<test id="s1-s8-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 07:07:44.876" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 07:07:44.875" endtime="20230616 07:07:44.876"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 07:07:44.876" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 07:07:44.876" endtime="20230616 07:07:44.876"/>
</kw>
<status status="PASS" starttime="20230616 07:07:44.874" endtime="20230616 07:07:44.876"/>
</kw>
<msg timestamp="20230616 07:07:44.876" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 07:07:44.873" endtime="20230616 07:07:44.877"/>
</kw>
<status status="PASS" starttime="20230616 07:07:44.873" endtime="20230616 07:07:44.877"/>
</kw>
<msg timestamp="20230616 07:07:44.877" level="INFO">${url} = o3fs://46413-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20230616 07:07:44.872" endtime="20230616 07:07:44.877"/>
</kw>
<msg timestamp="20230616 07:07:44.877" level="INFO">${target} = o3fs://46413-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20230616 07:07:44.871" endtime="20230616 07:07:44.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:44.881" level="INFO">Running command 'ozone fs -mkdir -p o3fs://46413-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:48.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:48.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:44.878" endtime="20230616 07:07:48.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:48.795" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:48.794" endtime="20230616 07:07:48.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:48.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:48.795" endtime="20230616 07:07:48.796"/>
</kw>
<status status="PASS" starttime="20230616 07:07:44.878" endtime="20230616 07:07:48.796"/>
</kw>
<msg timestamp="20230616 07:07:48.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:44.878" endtime="20230616 07:07:48.796"/>
</kw>
<status status="PASS" starttime="20230616 07:07:44.877" endtime="20230616 07:07:48.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:48.801" level="INFO">Running command 'ozone fs -cp o3fs://46413-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://46413-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:54.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:54.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:48.798" endtime="20230616 07:07:54.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:54.526" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:54.525" endtime="20230616 07:07:54.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:54.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:54.526" endtime="20230616 07:07:54.526"/>
</kw>
<status status="PASS" starttime="20230616 07:07:48.798" endtime="20230616 07:07:54.527"/>
</kw>
<msg timestamp="20230616 07:07:54.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:48.797" endtime="20230616 07:07:54.527"/>
</kw>
<status status="PASS" starttime="20230616 07:07:48.797" endtime="20230616 07:07:54.527"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:54.531" level="INFO">Running command 'ozone fs -rm -r o3fs://46413-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:07:58.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:07:58.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:54.529" endtime="20230616 07:07:58.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:07:58.002" level="INFO"/>
<status status="PASS" starttime="20230616 07:07:58.001" endtime="20230616 07:07:58.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:07:58.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:07:58.002" endtime="20230616 07:07:58.003"/>
</kw>
<status status="PASS" starttime="20230616 07:07:54.528" endtime="20230616 07:07:58.003"/>
</kw>
<msg timestamp="20230616 07:07:58.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:54.528" endtime="20230616 07:07:58.003"/>
</kw>
<status status="PASS" starttime="20230616 07:07:54.527" endtime="20230616 07:07:58.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:07:44.871" endtime="20230616 07:07:58.004"/>
</test>
<test id="s1-s8-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:07:58.009" level="INFO">Running command 'ozone sh key put fstest1/46413-bucket1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:08:04.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:08:04.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:07:58.007" endtime="20230616 07:08:04.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:08:04.351" level="INFO"/>
<status status="PASS" starttime="20230616 07:08:04.350" endtime="20230616 07:08:04.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:08:04.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:08:04.351" endtime="20230616 07:08:04.352"/>
</kw>
<status status="PASS" starttime="20230616 07:07:58.007" endtime="20230616 07:08:04.352"/>
</kw>
<msg timestamp="20230616 07:08:04.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:07:58.006" endtime="20230616 07:08:04.352"/>
</kw>
<status status="PASS" starttime="20230616 07:07:58.006" endtime="20230616 07:08:04.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:08:04.357" level="INFO">Running command 'ozone fs -ls o3fs://46413-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:08:07.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:08:07.598" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:08 o3fs://46413-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:08:04.354" endtime="20230616 07:08:07.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:08:07.599" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:08 o3fs://46413-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:08:07.598" endtime="20230616 07:08:07.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:08:07.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:08:07.600" endtime="20230616 07:08:07.600"/>
</kw>
<status status="PASS" starttime="20230616 07:08:04.354" endtime="20230616 07:08:07.600"/>
</kw>
<msg timestamp="20230616 07:08:07.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:08:04.353" endtime="20230616 07:08:07.601"/>
</kw>
<msg timestamp="20230616 07:08:07.601" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17289 2023-06-16 07:08 o3fs://46413-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20230616 07:08:04.353" endtime="20230616 07:08:07.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:08:07.601" endtime="20230616 07:08:07.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:07:58.005" endtime="20230616 07:08:07.602"/>
</test>
<test id="s1-s8-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:08:07.607" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://46413-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:08:11.622" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 07:08:11.623" level="INFO">${output} = copyFromLocal: `o3fs://46413-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230616 07:08:07.604" endtime="20230616 07:08:11.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:08:11.624" level="INFO">copyFromLocal: `o3fs://46413-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230616 07:08:11.623" endtime="20230616 07:08:11.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:08:11.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:08:11.624" endtime="20230616 07:08:11.625"/>
</kw>
<msg timestamp="20230616 07:08:11.625" level="INFO">${result} = copyFromLocal: `o3fs://46413-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230616 07:08:07.604" endtime="20230616 07:08:11.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 07:08:11.626" endtime="20230616 07:08:11.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:08:07.603" endtime="20230616 07:08:11.626"/>
</test>
<test id="s1-s8-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:08:11.632" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:08:11.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:08:11.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:08:11.629" endtime="20230616 07:08:11.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:08:11.636" level="INFO"/>
<status status="PASS" starttime="20230616 07:08:11.635" endtime="20230616 07:08:11.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:08:11.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:08:11.636" endtime="20230616 07:08:11.636"/>
</kw>
<status status="PASS" starttime="20230616 07:08:11.628" endtime="20230616 07:08:11.637"/>
</kw>
<msg timestamp="20230616 07:08:11.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:08:11.628" endtime="20230616 07:08:11.637"/>
</kw>
<status status="PASS" starttime="20230616 07:08:11.628" endtime="20230616 07:08:11.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 07:08:11.641" level="INFO">Running command 'ozone fs -get o3fs://46413-bucket1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 07:08:17.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 07:08:17.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 07:08:11.639" endtime="20230616 07:08:17.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 07:08:17.103" level="INFO"/>
<status status="PASS" starttime="20230616 07:08:17.103" endtime="20230616 07:08:17.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 07:08:17.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 07:08:17.103" endtime="20230616 07:08:17.104"/>
</kw>
<status status="PASS" starttime="20230616 07:08:11.638" endtime="20230616 07:08:17.104"/>
</kw>
<msg timestamp="20230616 07:08:17.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 07:08:11.638" endtime="20230616 07:08:17.104"/>
</kw>
<status status="PASS" starttime="20230616 07:08:11.637" endtime="20230616 07:08:17.105"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230616 07:08:17.105" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230616 07:08:17.105" endtime="20230616 07:08:17.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 07:08:11.627" endtime="20230616 07:08:17.105"/>
</test>
<doc>Ozone FS tests</doc>
<status status="FAIL" starttime="20230616 07:04:09.748" endtime="20230616 07:08:17.108"/>
</suite>
<suite id="s1-s9" name="Auditparser" source="/opt/hadoop/smoketest/auditparser">
<suite id="s1-s9-s1" name="Auditparser" source="/opt/hadoop/smoketest/auditparser/auditparser.robot">
<test id="s1-s9-s1-t1" name="Testing audit parser" line="40">
<kw name="Create data" type="SETUP">
<kw name="Freon OMBG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=${buckets}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:52.419" level="INFO">Running command 'ozone freon ombg  -t 1 -n5 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:33:57.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:33:57.276" level="INFO">${output} = 2023-06-16 06:33:54,769 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:33:54,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:33:52.415" endtime="20230616 06:33:57.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:33:57.277" level="INFO">2023-06-16 06:33:54,769 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:33:54,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:33:54,918 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:33:54,993 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2023-06-16 06:33:55,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2023-06-16 06:33:56,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2023-06-16 06:33:57,050 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (5 out of 5)
2023-06-16 06:33:57,223 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=5, min=5.644182, max=34.251295, mean=13.1072694, stddev=10.792454909116454, median=7.879014, p75=11.75837, p95=34.251295, p98=34.251295, p99=34.251295, p999=34.251295, mean_rate=4.780938739941542, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:33:57,223 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:33:57,230 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:33:57,230 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 5</msg>
<status status="PASS" starttime="20230616 06:33:57.277" endtime="20230616 06:33:57.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:33:57.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:33:57.278" endtime="20230616 06:33:57.278"/>
</kw>
<status status="PASS" starttime="20230616 06:33:52.414" endtime="20230616 06:33:57.278"/>
</kw>
<msg timestamp="20230616 06:33:57.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:52.414" endtime="20230616 06:33:57.279"/>
</kw>
<msg timestamp="20230616 06:33:57.279" level="INFO">${result} = 2023-06-16 06:33:54,769 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:33:54,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:33:52.414" endtime="20230616 06:33:57.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:33:57.279" endtime="20230616 06:33:57.280"/>
</kw>
<status status="PASS" starttime="20230616 06:33:52.412" endtime="20230616 06:33:57.280"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:33:57.286" level="INFO">Running command 'ozone freon ockg  -t 1 -n100 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:12.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:12.516" level="INFO">${output} = 2023-06-16 06:33:59,691 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:33:59,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:33:57.284" endtime="20230616 06:34:12.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:12.518" level="INFO">2023-06-16 06:33:59,691 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:33:59,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:33:59,868 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:33:59,947 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2023-06-16 06:34:00,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:34:01,049 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:34:01,290 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-06-16 06:34:01,940 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:34:02,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:34:02,286 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:34:03,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:34:04,052 [Thread-5] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-06-16 06:34:05,052 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2023-06-16 06:34:06,053 [Thread-5] INFO freon.ProgressBar: Progress: 31.00 % (31 out of 100)
2023-06-16 06:34:07,053 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2023-06-16 06:34:08,054 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2023-06-16 06:34:09,055 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2023-06-16 06:34:10,059 [Thread-5] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2023-06-16 06:34:11,060 [Thread-5] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-06-16 06:34:12,060 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-06-16 06:34:12,150 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=55.682405, max=1739.967558, mean=97.08207519222783, stddev=161.09276222184886, median=77.745124, p75=89.9646, p95=115.995977, p98=122.41517, p99=125.525615, p999=1739.967558, mean_rate=9.2395717167278, m1=7.479733512224059, m5=7.099171277070295, m15=7.033240911970619, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:34:12,152 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2023-06-16 06:34:12,152 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:34:12,153 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230616 06:34:12.517" endtime="20230616 06:34:12.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:12.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:12.518" endtime="20230616 06:34:12.519"/>
</kw>
<status status="PASS" starttime="20230616 06:33:57.283" endtime="20230616 06:34:12.519"/>
</kw>
<msg timestamp="20230616 06:34:12.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:33:57.283" endtime="20230616 06:34:12.519"/>
</kw>
<msg timestamp="20230616 06:34:12.519" level="INFO">${result} = 2023-06-16 06:33:59,691 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:33:59,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:33:57.281" endtime="20230616 06:34:12.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:12.520" endtime="20230616 06:34:12.520"/>
</kw>
<status status="PASS" starttime="20230616 06:33:57.280" endtime="20230616 06:34:12.520"/>
</kw>
<status status="PASS" starttime="20230616 06:33:52.412" endtime="20230616 06:34:12.520"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${logdir}</var>
<arg>OZONE_LOG_DIR</arg>
<arg>/var/log/ozone</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20230616 06:34:12.521" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" starttime="20230616 06:34:12.520" endtime="20230616 06:34:12.521"/>
</kw>
<kw name="Execute" library="os">
<var>${logfile}</var>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:12.525" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:12.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:12.529" level="INFO">${output} = om-audit-48d630b6d7f3.log</msg>
<status status="PASS" starttime="20230616 06:34:12.522" endtime="20230616 06:34:12.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:12.530" level="INFO">om-audit-48d630b6d7f3.log</msg>
<status status="PASS" starttime="20230616 06:34:12.529" endtime="20230616 06:34:12.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:12.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:12.530" endtime="20230616 06:34:12.531"/>
</kw>
<status status="PASS" starttime="20230616 06:34:12.522" endtime="20230616 06:34:12.531"/>
</kw>
<msg timestamp="20230616 06:34:12.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:12.521" endtime="20230616 06:34:12.531"/>
</kw>
<msg timestamp="20230616 06:34:12.531" level="INFO">${logfile} = om-audit-48d630b6d7f3.log</msg>
<status status="PASS" starttime="20230616 06:34:12.521" endtime="20230616 06:34:12.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:12.535" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" load "/var/log/hadoop/om-audit-48d630b6d7f3.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:14.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:14.249" level="INFO">${output} = /var/log/hadoop/om-audit-48d630b6d7f3.log has been loaded successfully</msg>
<status status="PASS" starttime="20230616 06:34:12.533" endtime="20230616 06:34:14.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:14.251" level="INFO">/var/log/hadoop/om-audit-48d630b6d7f3.log has been loaded successfully</msg>
<status status="PASS" starttime="20230616 06:34:14.250" endtime="20230616 06:34:14.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:14.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:14.251" endtime="20230616 06:34:14.252"/>
</kw>
<status status="PASS" starttime="20230616 06:34:12.532" endtime="20230616 06:34:14.252"/>
</kw>
<msg timestamp="20230616 06:34:14.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:12.532" endtime="20230616 06:34:14.252"/>
</kw>
<status status="PASS" starttime="20230616 06:34:12.532" endtime="20230616 06:34:14.252"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:14.256" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:15.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:15.499" level="INFO">${output} = READ_BUCKET	109	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	12	
READ_VOLUME	12	
</msg>
<status status="PASS" starttime="20230616 06:34:14.254" endtime="20230616 06:34:15.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:15.500" level="INFO">READ_BUCKET	109	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	12	
READ_VOLUME	12	
</msg>
<status status="PASS" starttime="20230616 06:34:15.499" endtime="20230616 06:34:15.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:15.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:15.500" endtime="20230616 06:34:15.501"/>
</kw>
<status status="PASS" starttime="20230616 06:34:14.253" endtime="20230616 06:34:15.501"/>
</kw>
<msg timestamp="20230616 06:34:15.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:14.253" endtime="20230616 06:34:15.502"/>
</kw>
<msg timestamp="20230616 06:34:15.502" level="INFO">${result} = READ_BUCKET	109	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	12	
READ_VOLUME	12	
</msg>
<status status="PASS" starttime="20230616 06:34:14.252" endtime="20230616 06:34:15.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:15.502" endtime="20230616 06:34:15.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:15.507" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:16.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:16.776" level="INFO">${output} = hadoop	346	
</msg>
<status status="PASS" starttime="20230616 06:34:15.504" endtime="20230616 06:34:16.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:16.778" level="INFO">hadoop	346	
</msg>
<status status="PASS" starttime="20230616 06:34:16.777" endtime="20230616 06:34:16.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:16.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:16.778" endtime="20230616 06:34:16.779"/>
</kw>
<status status="PASS" starttime="20230616 06:34:15.504" endtime="20230616 06:34:16.779"/>
</kw>
<msg timestamp="20230616 06:34:16.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:15.503" endtime="20230616 06:34:16.779"/>
</kw>
<msg timestamp="20230616 06:34:16.779" level="INFO">${result} = hadoop	346	
</msg>
<status status="PASS" starttime="20230616 06:34:15.503" endtime="20230616 06:34:16.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:34:16.779" endtime="20230616 06:34:16.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${user}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:16.780" endtime="20230616 06:34:16.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:16.784" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:18.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:18.065" level="INFO">${output} = 1	
</msg>
<status status="PASS" starttime="20230616 06:34:16.782" endtime="20230616 06:34:18.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:18.067" level="INFO">1	
</msg>
<status status="PASS" starttime="20230616 06:34:18.066" endtime="20230616 06:34:18.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:18.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:18.067" endtime="20230616 06:34:18.068"/>
</kw>
<status status="PASS" starttime="20230616 06:34:16.781" endtime="20230616 06:34:18.068"/>
</kw>
<msg timestamp="20230616 06:34:18.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:16.781" endtime="20230616 06:34:18.068"/>
</kw>
<msg timestamp="20230616 06:34:18.068" level="INFO">${result} = 1	
</msg>
<status status="PASS" starttime="20230616 06:34:16.780" endtime="20230616 06:34:18.068"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230616 06:34:18.069" level="INFO">${result} = 1.0</msg>
<status status="PASS" starttime="20230616 06:34:18.069" endtime="20230616 06:34:18.069"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230616 06:34:18.069" endtime="20230616 06:34:18.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:18.073" level="INFO">Running command 'ozone auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:19.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:19.522" level="INFO">${output} = 7	
</msg>
<status status="PASS" starttime="20230616 06:34:18.071" endtime="20230616 06:34:19.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:19.523" level="INFO">7	
</msg>
<status status="PASS" starttime="20230616 06:34:19.522" endtime="20230616 06:34:19.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:19.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:19.523" endtime="20230616 06:34:19.524"/>
</kw>
<status status="PASS" starttime="20230616 06:34:18.071" endtime="20230616 06:34:19.524"/>
</kw>
<msg timestamp="20230616 06:34:19.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:18.070" endtime="20230616 06:34:19.525"/>
</kw>
<msg timestamp="20230616 06:34:19.525" level="INFO">${result} = 7	
</msg>
<status status="PASS" starttime="20230616 06:34:18.070" endtime="20230616 06:34:19.525"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230616 06:34:19.526" level="INFO">${result} = 7.0</msg>
<status status="PASS" starttime="20230616 06:34:19.525" endtime="20230616 06:34:19.526"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=${buckets}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230616 06:34:19.526" endtime="20230616 06:34:19.526"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:33:52.411" endtime="20230616 06:34:19.527"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230616 06:33:52.382" endtime="20230616 06:34:19.528"/>
</suite>
<status status="PASS" starttime="20230616 06:33:52.359" endtime="20230616 06:34:19.530"/>
</suite>
<suite id="s1-s10" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s10-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s10-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:34:24.296" endtime="20230616 06:34:24.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:24.301" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:24.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:24.389" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 16 Jun 2023 06:34:24 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 16 Jun 2023 06:02:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230616 06:34:24.298" endtime="20230616 06:34:24.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:24.390" level="INFO">HTTP/1.1 200 OK
Date: Fri, 16 Jun 2023 06:34:24 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 16 Jun 2023 06:02:10 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230616 06:34:24.389" endtime="20230616 06:34:24.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:24.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:24.390" endtime="20230616 06:34:24.391"/>
</kw>
<status status="PASS" starttime="20230616 06:34:24.297" endtime="20230616 06:34:24.391"/>
</kw>
<msg timestamp="20230616 06:34:24.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:24.297" endtime="20230616 06:34:24.391"/>
</kw>
<msg timestamp="20230616 06:34:24.391" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 16 Jun 2023 06:34:24 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 16 Jun 2023 06:02:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230616 06:34:24.297" endtime="20230616 06:34:24.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:24.392" endtime="20230616 06:34:24.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:34:24.295" endtime="20230616 06:34:24.392"/>
</test>
<test id="s1-s10-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:34:24.393" endtime="20230616 06:34:24.394"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:34:24.394" level="INFO">${random} = QNleS8XUtY</msg>
<status status="PASS" starttime="20230616 06:34:24.394" endtime="20230616 06:34:24.394"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:24.404" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p QNleS8XUtY  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:30.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:30.894" level="INFO">${output} = 2023-06-16 06:34:26,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:34:26,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:34:24.401" endtime="20230616 06:34:30.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:30.896" level="INFO">2023-06-16 06:34:26,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:34:26,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:34:26,976 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:34:27,072 [main] INFO freon.BaseFreonGenerator: Executing test with prefix QNleS8XUtY and number-of-tests 1
2023-06-16 06:34:27,128 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:34:28,132 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:34:28,874 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:34:29,146 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:34:29,211 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:34:30,147 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:34:30,397 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1599.534807, max=1599.534807, mean=1599.534807, stddev=0.0, median=1599.534807, p75=1599.534807, p95=1599.534807, p98=1599.534807, p99=1599.534807, p999=1599.534807, mean_rate=0.4843077679643146, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:34:30,398 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-06-16 06:34:30,398 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:34:30,398 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:34:30.895" endtime="20230616 06:34:30.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:30.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:30.896" endtime="20230616 06:34:30.897"/>
</kw>
<status status="PASS" starttime="20230616 06:34:24.400" endtime="20230616 06:34:30.897"/>
</kw>
<msg timestamp="20230616 06:34:30.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:24.400" endtime="20230616 06:34:30.897"/>
</kw>
<msg timestamp="20230616 06:34:30.897" level="INFO">${result} = 2023-06-16 06:34:26,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:34:26,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:34:24.398" endtime="20230616 06:34:30.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:30.898" endtime="20230616 06:34:30.898"/>
</kw>
<status status="PASS" starttime="20230616 06:34:24.396" endtime="20230616 06:34:30.898"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:30.903" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p QNleS8XUtY  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:37.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:37.830" level="INFO">${output} = 2023-06-16 06:34:33,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:34:33,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:34:30.901" endtime="20230616 06:34:37.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:37.831" level="INFO">2023-06-16 06:34:33,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:34:33,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:34:33,540 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:34:33,633 [main] INFO freon.BaseFreonGenerator: Executing test with prefix QNleS8XUtY and number-of-tests 1
2023-06-16 06:34:33,694 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:34:34,695 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:34:35,392 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:34:35,696 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:34:36,696 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:34:37,381 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=48.006594, max=48.006594, mean=48.006594, stddev=0.0, median=48.006594, p75=48.006594, p95=48.006594, p98=48.006594, p99=48.006594, p999=48.006594, mean_rate=0.9448112274064764, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:34:37,382 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:34:37,382 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:34:37,382 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:34:37.830" endtime="20230616 06:34:37.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:37.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:37.831" endtime="20230616 06:34:37.832"/>
</kw>
<status status="PASS" starttime="20230616 06:34:30.900" endtime="20230616 06:34:37.832"/>
</kw>
<msg timestamp="20230616 06:34:37.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:30.900" endtime="20230616 06:34:37.832"/>
</kw>
<msg timestamp="20230616 06:34:37.832" level="INFO">${result} = 2023-06-16 06:34:33,373 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:34:33,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:34:30.899" endtime="20230616 06:34:37.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:37.832" endtime="20230616 06:34:37.833"/>
</kw>
<status status="PASS" starttime="20230616 06:34:30.898" endtime="20230616 06:34:37.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:34:24.393" endtime="20230616 06:34:37.833"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230616 06:34:24.266" endtime="20230616 06:34:37.834"/>
</suite>
<suite id="s1-s10-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s10-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:37.843" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:39.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:39.239" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230616 06:34:37.841" endtime="20230616 06:34:39.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:39.240" level="INFO">om</msg>
<status status="PASS" starttime="20230616 06:34:39.239" endtime="20230616 06:34:39.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:39.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:39.241" endtime="20230616 06:34:39.243"/>
</kw>
<status status="PASS" starttime="20230616 06:34:37.840" endtime="20230616 06:34:39.243"/>
</kw>
<msg timestamp="20230616 06:34:39.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:37.840" endtime="20230616 06:34:39.243"/>
</kw>
<msg timestamp="20230616 06:34:39.244" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230616 06:34:37.840" endtime="20230616 06:34:39.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:39.244" endtime="20230616 06:34:39.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:39.248" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:40.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:40.702" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230616 06:34:39.246" endtime="20230616 06:34:40.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:40.704" level="INFO">om</msg>
<status status="PASS" starttime="20230616 06:34:40.703" endtime="20230616 06:34:40.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:40.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:40.704" endtime="20230616 06:34:40.704"/>
</kw>
<status status="PASS" starttime="20230616 06:34:39.245" endtime="20230616 06:34:40.705"/>
</kw>
<msg timestamp="20230616 06:34:40.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:39.245" endtime="20230616 06:34:40.705"/>
</kw>
<msg timestamp="20230616 06:34:40.705" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230616 06:34:39.244" endtime="20230616 06:34:40.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:40.706" endtime="20230616 06:34:40.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:34:37.839" endtime="20230616 06:34:40.706"/>
</test>
<test id="s1-s10-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:40.712" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:42.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:42.200" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230616 06:34:40.709" endtime="20230616 06:34:42.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:42.201" level="INFO">scm</msg>
<status status="PASS" starttime="20230616 06:34:42.200" endtime="20230616 06:34:42.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:42.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:42.201" endtime="20230616 06:34:42.202"/>
</kw>
<status status="PASS" starttime="20230616 06:34:40.709" endtime="20230616 06:34:42.202"/>
</kw>
<msg timestamp="20230616 06:34:42.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:40.709" endtime="20230616 06:34:42.202"/>
</kw>
<msg timestamp="20230616 06:34:42.203" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230616 06:34:40.708" endtime="20230616 06:34:42.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:42.203" endtime="20230616 06:34:42.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:42.207" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:43.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:43.703" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230616 06:34:42.205" endtime="20230616 06:34:43.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:43.704" level="INFO">scm</msg>
<status status="PASS" starttime="20230616 06:34:43.703" endtime="20230616 06:34:43.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:43.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:43.704" endtime="20230616 06:34:43.704"/>
</kw>
<status status="PASS" starttime="20230616 06:34:42.204" endtime="20230616 06:34:43.705"/>
</kw>
<msg timestamp="20230616 06:34:43.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:42.204" endtime="20230616 06:34:43.705"/>
</kw>
<msg timestamp="20230616 06:34:43.705" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20230616 06:34:42.203" endtime="20230616 06:34:43.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:43.705" endtime="20230616 06:34:43.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:34:40.707" endtime="20230616 06:34:43.706"/>
</test>
<test id="s1-s10-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:43.712" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:44.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:44.997" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230616 06:34:43.709" endtime="20230616 06:34:44.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:44.999" level="INFO">om</msg>
<status status="PASS" starttime="20230616 06:34:44.998" endtime="20230616 06:34:44.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:44.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:44.999" endtime="20230616 06:34:44.999"/>
</kw>
<status status="PASS" starttime="20230616 06:34:43.709" endtime="20230616 06:34:45.000"/>
</kw>
<msg timestamp="20230616 06:34:45.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:43.708" endtime="20230616 06:34:45.000"/>
</kw>
<msg timestamp="20230616 06:34:45.000" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230616 06:34:43.708" endtime="20230616 06:34:45.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:45.000" endtime="20230616 06:34:45.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:45.001" endtime="20230616 06:34:45.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:45.005" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:46.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:46.528" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20230616 06:34:45.003" endtime="20230616 06:34:46.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:46.529" level="INFO">om</msg>
<status status="PASS" starttime="20230616 06:34:46.529" endtime="20230616 06:34:46.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:46.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:46.530" endtime="20230616 06:34:46.530"/>
</kw>
<status status="PASS" starttime="20230616 06:34:45.002" endtime="20230616 06:34:46.530"/>
</kw>
<msg timestamp="20230616 06:34:46.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:45.002" endtime="20230616 06:34:46.531"/>
</kw>
<msg timestamp="20230616 06:34:46.531" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20230616 06:34:45.001" endtime="20230616 06:34:46.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:46.531" endtime="20230616 06:34:46.531"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:46.531" endtime="20230616 06:34:46.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:34:43.707" endtime="20230616 06:34:46.532"/>
</test>
<test id="s1-s10-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:46.537" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:47.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:34:47.883" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230616 06:34:46.534" endtime="20230616 06:34:47.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:47.884" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230616 06:34:47.883" endtime="20230616 06:34:47.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:47.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:47.884" endtime="20230616 06:34:47.885"/>
</kw>
<msg timestamp="20230616 06:34:47.885" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230616 06:34:46.534" endtime="20230616 06:34:47.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:47.885" endtime="20230616 06:34:47.886"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:47.889" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:49.192" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:34:49.192" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230616 06:34:47.886" endtime="20230616 06:34:49.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:49.194" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230616 06:34:49.193" endtime="20230616 06:34:49.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:49.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:49.194" endtime="20230616 06:34:49.194"/>
</kw>
<msg timestamp="20230616 06:34:49.195" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20230616 06:34:47.886" endtime="20230616 06:34:49.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:34:49.195" endtime="20230616 06:34:49.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:34:46.533" endtime="20230616 06:34:49.196"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20230616 06:34:37.836" endtime="20230616 06:34:49.197"/>
</suite>
<suite id="s1-s10-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:34:49.212" level="INFO">${random} = 74347</msg>
<status status="PASS" starttime="20230616 06:34:49.212" endtime="20230616 06:34:49.213"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:34:49.214" level="INFO">${source} = 74347-source</msg>
<status status="PASS" starttime="20230616 06:34:49.213" endtime="20230616 06:34:49.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:34:49.215" level="INFO">${target} = 74347-target</msg>
<status status="PASS" starttime="20230616 06:34:49.214" endtime="20230616 06:34:49.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:49.219" level="INFO">Running command 'ozone sh volume create 74347-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:53.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:53.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:34:49.216" endtime="20230616 06:34:53.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:53.301" level="INFO"/>
<status status="PASS" starttime="20230616 06:34:53.300" endtime="20230616 06:34:53.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:53.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:53.301" endtime="20230616 06:34:53.302"/>
</kw>
<status status="PASS" starttime="20230616 06:34:49.216" endtime="20230616 06:34:53.302"/>
</kw>
<msg timestamp="20230616 06:34:53.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:49.216" endtime="20230616 06:34:53.302"/>
</kw>
<status status="PASS" starttime="20230616 06:34:49.215" endtime="20230616 06:34:53.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:53.306" level="INFO">Running command 'ozone sh volume create 74347-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:34:57.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:34:57.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:34:53.303" endtime="20230616 06:34:57.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:34:57.448" level="INFO"/>
<status status="PASS" starttime="20230616 06:34:57.447" endtime="20230616 06:34:57.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:34:57.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:34:57.448" endtime="20230616 06:34:57.448"/>
</kw>
<status status="PASS" starttime="20230616 06:34:53.303" endtime="20230616 06:34:57.449"/>
</kw>
<msg timestamp="20230616 06:34:57.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:53.303" endtime="20230616 06:34:57.449"/>
</kw>
<status status="PASS" starttime="20230616 06:34:53.302" endtime="20230616 06:34:57.449"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:34:57.449" endtime="20230616 06:34:57.450"/>
</kw>
<status status="PASS" starttime="20230616 06:34:49.212" endtime="20230616 06:34:57.450"/>
</kw>
<test id="s1-s10-s3-t1" name="Link to non-existent bucket" line="94">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:34:57.451" endtime="20230616 06:34:57.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:34:57.456" level="INFO">Running command 'ozone sh bucket link 74347-source/no-such-bucket 74347-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:01.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:01.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:34:57.453" endtime="20230616 06:35:01.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:01.848" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:01.847" endtime="20230616 06:35:01.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:01.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:01.848" endtime="20230616 06:35:01.849"/>
</kw>
<status status="PASS" starttime="20230616 06:34:57.452" endtime="20230616 06:35:01.849"/>
</kw>
<msg timestamp="20230616 06:35:01.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:34:57.452" endtime="20230616 06:35:01.849"/>
</kw>
<status status="PASS" starttime="20230616 06:34:57.452" endtime="20230616 06:35:01.850"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:01.853" level="INFO">Running command 'ozone sh key list 74347-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:05.684" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:35:05.684" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230616 06:35:01.850" endtime="20230616 06:35:05.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:05.685" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230616 06:35:05.684" endtime="20230616 06:35:05.685"/>
</kw>
<msg timestamp="20230616 06:35:05.686" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230616 06:35:01.850" endtime="20230616 06:35:05.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:35:05.686" endtime="20230616 06:35:05.686"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:34:57.450" endtime="20230616 06:35:05.686"/>
</test>
<test id="s1-s10-s3-t2" name="Key create passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:35:05.688" endtime="20230616 06:35:05.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:05.692" level="INFO">Running command 'ozone sh bucket link 74347-source/bucket1 74347-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:10.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:10.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:05.690" endtime="20230616 06:35:10.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:10.049" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:10.048" endtime="20230616 06:35:10.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:10.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:10.049" endtime="20230616 06:35:10.050"/>
</kw>
<status status="PASS" starttime="20230616 06:35:05.690" endtime="20230616 06:35:10.050"/>
</kw>
<msg timestamp="20230616 06:35:10.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:05.689" endtime="20230616 06:35:10.050"/>
</kw>
<status status="PASS" starttime="20230616 06:35:05.689" endtime="20230616 06:35:10.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:10.054" level="INFO">Running command 'ozone sh bucket create 74347-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:14.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:14.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:10.052" endtime="20230616 06:35:14.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:14.048" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:14.047" endtime="20230616 06:35:14.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:14.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:14.048" endtime="20230616 06:35:14.048"/>
</kw>
<status status="PASS" starttime="20230616 06:35:10.051" endtime="20230616 06:35:14.049"/>
</kw>
<msg timestamp="20230616 06:35:14.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:10.051" endtime="20230616 06:35:14.049"/>
</kw>
<status status="PASS" starttime="20230616 06:35:10.051" endtime="20230616 06:35:14.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:14.053" level="INFO">Running command 'ozone sh key put 74347-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:20.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:20.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:14.050" endtime="20230616 06:35:20.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:20.062" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:20.061" endtime="20230616 06:35:20.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:20.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:20.062" endtime="20230616 06:35:20.062"/>
</kw>
<status status="PASS" starttime="20230616 06:35:14.050" endtime="20230616 06:35:20.062"/>
</kw>
<msg timestamp="20230616 06:35:20.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:14.050" endtime="20230616 06:35:20.063"/>
</kw>
<status status="PASS" starttime="20230616 06:35:14.049" endtime="20230616 06:35:20.063"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:35:20.065" level="INFO">${postfix} = 65567</msg>
<status status="PASS" starttime="20230616 06:35:20.064" endtime="20230616 06:35:20.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:35:20.066" level="INFO">${tmpfile} = /tmp/tempkey-65567</msg>
<status status="PASS" starttime="20230616 06:35:20.065" endtime="20230616 06:35:20.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:20.070" level="INFO">Running command 'ozone sh key get 74347-target/link1/key1 /tmp/tempkey-65567 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:26.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:26.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:20.067" endtime="20230616 06:35:26.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:26.133" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:26.133" endtime="20230616 06:35:26.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:26.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:26.134" endtime="20230616 06:35:26.134"/>
</kw>
<status status="PASS" starttime="20230616 06:35:20.067" endtime="20230616 06:35:26.134"/>
</kw>
<msg timestamp="20230616 06:35:26.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:20.066" endtime="20230616 06:35:26.134"/>
</kw>
<status status="PASS" starttime="20230616 06:35:20.066" endtime="20230616 06:35:26.135"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230616 06:35:26.137" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-65567 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:26.140" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230616 06:35:26.135" endtime="20230616 06:35:26.140"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:26.144" level="INFO">Running command 'rm -f /tmp/tempkey-65567 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:26.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:26.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:26.142" endtime="20230616 06:35:26.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:26.148" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:26.147" endtime="20230616 06:35:26.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:26.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:26.148" endtime="20230616 06:35:26.149"/>
</kw>
<status status="PASS" starttime="20230616 06:35:26.142" endtime="20230616 06:35:26.149"/>
</kw>
<msg timestamp="20230616 06:35:26.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:26.141" endtime="20230616 06:35:26.149"/>
</kw>
<status status="PASS" starttime="20230616 06:35:26.140" endtime="20230616 06:35:26.150"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:35:26.150" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230616 06:35:26.150" endtime="20230616 06:35:26.150"/>
</kw>
<msg timestamp="20230616 06:35:26.151" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230616 06:35:20.064" endtime="20230616 06:35:26.151"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230616 06:35:26.151" endtime="20230616 06:35:26.151"/>
</kw>
<status status="PASS" starttime="20230616 06:35:20.063" endtime="20230616 06:35:26.151"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:35:05.687" endtime="20230616 06:35:26.152"/>
</test>
<test id="s1-s10-s3-t3" name="Key read passthrough" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:35:26.153" endtime="20230616 06:35:26.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:26.157" level="INFO">Running command 'ozone sh key put 74347-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:32.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:32.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:26.155" endtime="20230616 06:35:32.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:32.596" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:32.596" endtime="20230616 06:35:32.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:32.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:32.597" endtime="20230616 06:35:32.597"/>
</kw>
<status status="PASS" starttime="20230616 06:35:26.154" endtime="20230616 06:35:32.598"/>
</kw>
<msg timestamp="20230616 06:35:32.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:26.154" endtime="20230616 06:35:32.598"/>
</kw>
<status status="PASS" starttime="20230616 06:35:26.154" endtime="20230616 06:35:32.598"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:35:32.599" level="INFO">${postfix} = 74407</msg>
<status status="PASS" starttime="20230616 06:35:32.599" endtime="20230616 06:35:32.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:35:32.600" level="INFO">${tmpfile} = /tmp/tempkey-74407</msg>
<status status="PASS" starttime="20230616 06:35:32.600" endtime="20230616 06:35:32.600"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:32.605" level="INFO">Running command 'ozone sh key get 74347-source/bucket1/key2 /tmp/tempkey-74407 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:39.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:39.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:32.602" endtime="20230616 06:35:39.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:39.116" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:39.115" endtime="20230616 06:35:39.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:39.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:39.116" endtime="20230616 06:35:39.117"/>
</kw>
<status status="PASS" starttime="20230616 06:35:32.602" endtime="20230616 06:35:39.117"/>
</kw>
<msg timestamp="20230616 06:35:39.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:32.602" endtime="20230616 06:35:39.117"/>
</kw>
<status status="PASS" starttime="20230616 06:35:32.600" endtime="20230616 06:35:39.118"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230616 06:35:39.120" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-74407 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:39.123" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230616 06:35:39.118" endtime="20230616 06:35:39.123"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:39.127" level="INFO">Running command 'rm -f /tmp/tempkey-74407 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:39.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:39.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:39.125" endtime="20230616 06:35:39.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:39.131" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:39.130" endtime="20230616 06:35:39.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:39.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:39.131" endtime="20230616 06:35:39.131"/>
</kw>
<status status="PASS" starttime="20230616 06:35:39.124" endtime="20230616 06:35:39.132"/>
</kw>
<msg timestamp="20230616 06:35:39.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:39.124" endtime="20230616 06:35:39.132"/>
</kw>
<status status="PASS" starttime="20230616 06:35:39.123" endtime="20230616 06:35:39.132"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:35:39.132" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230616 06:35:39.132" endtime="20230616 06:35:39.132"/>
</kw>
<msg timestamp="20230616 06:35:39.133" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230616 06:35:32.599" endtime="20230616 06:35:39.133"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230616 06:35:39.133" endtime="20230616 06:35:39.133"/>
</kw>
<status status="PASS" starttime="20230616 06:35:32.598" endtime="20230616 06:35:39.133"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:35:26.152" endtime="20230616 06:35:39.134"/>
</test>
<test id="s1-s10-s3-t4" name="Key list passthrough" line="109">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:35:39.135" endtime="20230616 06:35:39.136"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:39.139" level="INFO">Running command 'ozone sh key list 74347-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:43.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:43.413" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230616 06:35:39.137" endtime="20230616 06:35:43.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:43.414" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230616 06:35:43.413" endtime="20230616 06:35:43.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:43.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:43.414" endtime="20230616 06:35:43.415"/>
</kw>
<status status="PASS" starttime="20230616 06:35:39.136" endtime="20230616 06:35:43.415"/>
</kw>
<msg timestamp="20230616 06:35:43.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:39.136" endtime="20230616 06:35:43.415"/>
</kw>
<msg timestamp="20230616 06:35:43.416" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230616 06:35:39.136" endtime="20230616 06:35:43.416"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:43.419" level="INFO">Running command 'ozone sh key list 74347-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:47.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:47.927" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230616 06:35:43.417" endtime="20230616 06:35:47.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:47.929" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230616 06:35:47.928" endtime="20230616 06:35:47.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:47.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:47.929" endtime="20230616 06:35:47.929"/>
</kw>
<status status="PASS" starttime="20230616 06:35:43.417" endtime="20230616 06:35:47.930"/>
</kw>
<msg timestamp="20230616 06:35:47.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:43.416" endtime="20230616 06:35:47.930"/>
</kw>
<msg timestamp="20230616 06:35:47.930" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230616 06:35:43.416" endtime="20230616 06:35:47.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:35:47.930" endtime="20230616 06:35:47.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:35:47.931" endtime="20230616 06:35:47.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:35:47.932" endtime="20230616 06:35:47.932"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:35:39.135" endtime="20230616 06:35:47.932"/>
</test>
<test id="s1-s10-s3-t5" name="Key delete passthrough" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:35:47.934" endtime="20230616 06:35:47.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:47.939" level="INFO">Running command 'ozone sh key delete --skipTrash 74347-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:52.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:52.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:35:47.936" endtime="20230616 06:35:52.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:52.104" level="INFO"/>
<status status="PASS" starttime="20230616 06:35:52.103" endtime="20230616 06:35:52.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:52.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:52.104" endtime="20230616 06:35:52.105"/>
</kw>
<status status="PASS" starttime="20230616 06:35:47.936" endtime="20230616 06:35:52.105"/>
</kw>
<msg timestamp="20230616 06:35:52.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:47.936" endtime="20230616 06:35:52.106"/>
</kw>
<status status="PASS" starttime="20230616 06:35:47.935" endtime="20230616 06:35:52.106"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:52.110" level="INFO">Running command 'ozone sh key list 74347-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:35:56.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:35:56.810" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230616 06:35:52.107" endtime="20230616 06:35:56.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:35:56.811" level="INFO">key1</msg>
<status status="PASS" starttime="20230616 06:35:56.811" endtime="20230616 06:35:56.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:35:56.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:35:56.812" endtime="20230616 06:35:56.812"/>
</kw>
<status status="PASS" starttime="20230616 06:35:52.107" endtime="20230616 06:35:56.812"/>
</kw>
<msg timestamp="20230616 06:35:56.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:52.107" endtime="20230616 06:35:56.812"/>
</kw>
<msg timestamp="20230616 06:35:56.813" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230616 06:35:52.106" endtime="20230616 06:35:56.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:35:56.813" endtime="20230616 06:35:56.813"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:35:47.933" endtime="20230616 06:35:56.814"/>
</test>
<test id="s1-s10-s3-t6" name="Bucket list contains links" line="121">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:35:56.815" endtime="20230616 06:35:56.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:35:56.819" level="INFO">Running command 'ozone sh bucket list 74347-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:00.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:00.839" level="INFO">${output} = [ {
  "volumeName" : "74347-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-06-16T06:35:01.749Z",
  "modific...</msg>
<status status="PASS" starttime="20230616 06:35:56.817" endtime="20230616 06:36:00.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:00.841" level="INFO">[ {
  "volumeName" : "74347-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-06-16T06:35:01.749Z",
  "modificationTime" : "2023-06-16T06:35:01.749Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "74347-target",
  "bucketName" : "link1",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:35:09.805Z",
  "modificationTime" : "2023-06-16T06:35:09.805Z",
  "owner" : "hadoop"
} ]</msg>
<status status="PASS" starttime="20230616 06:36:00.840" endtime="20230616 06:36:00.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:00.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:00.841" endtime="20230616 06:36:00.841"/>
</kw>
<status status="PASS" starttime="20230616 06:35:56.817" endtime="20230616 06:36:00.842"/>
</kw>
<msg timestamp="20230616 06:36:00.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:35:56.816" endtime="20230616 06:36:00.842"/>
</kw>
<msg timestamp="20230616 06:36:00.842" level="INFO">${result} = [ {
  "volumeName" : "74347-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-06-16T06:35:01.749Z",
  "modific...</msg>
<status status="PASS" starttime="20230616 06:35:56.816" endtime="20230616 06:36:00.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:00.842" endtime="20230616 06:36:00.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:00.843" endtime="20230616 06:36:00.843"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:35:56.815" endtime="20230616 06:36:00.843"/>
</test>
<test id="s1-s10-s3-t7" name="Bucket info shows source" line="126">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:36:00.845" endtime="20230616 06:36:00.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:00.849" level="INFO">Running command 'ozone sh bucket info 74347-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:05.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:05.026" level="INFO">${output} = {
  "volumeName" : "74347-target",
  "bucketName" : "link1",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:35:09.805Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230616 06:36:00.847" endtime="20230616 06:36:05.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:05.028" level="INFO">{
  "volumeName" : "74347-target",
  "bucketName" : "link1",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:35:09.805Z",
  "modificationTime" : "2023-06-16T06:35:09.805Z",
  "owner" : "hadoop"
}</msg>
<status status="PASS" starttime="20230616 06:36:05.027" endtime="20230616 06:36:05.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:05.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:05.028" endtime="20230616 06:36:05.029"/>
</kw>
<status status="PASS" starttime="20230616 06:36:00.847" endtime="20230616 06:36:05.029"/>
</kw>
<msg timestamp="20230616 06:36:05.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:00.846" endtime="20230616 06:36:05.029"/>
</kw>
<msg timestamp="20230616 06:36:05.030" level="INFO">${result} = {
  "volumeName" : "74347-target",
  "bucketName" : "link1",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:35:09.805Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230616 06:36:00.846" endtime="20230616 06:36:05.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.030" endtime="20230616 06:36:05.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.031" endtime="20230616 06:36:05.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.032" endtime="20230616 06:36:05.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.032" endtime="20230616 06:36:05.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.033" endtime="20230616 06:36:05.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.033" endtime="20230616 06:36:05.033"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:36:05.034" endtime="20230616 06:36:05.034"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:36:00.845" endtime="20230616 06:36:05.034"/>
</test>
<test id="s1-s10-s3-t8" name="Source and target bucket have different ACLs" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:36:05.036" endtime="20230616 06:36:05.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:05.040" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 74347-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:09.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:09.002" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:36:05.038" endtime="20230616 06:36:09.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:09.004" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:36:09.003" endtime="20230616 06:36:09.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:09.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:09.004" endtime="20230616 06:36:09.004"/>
</kw>
<status status="PASS" starttime="20230616 06:36:05.037" endtime="20230616 06:36:09.005"/>
</kw>
<msg timestamp="20230616 06:36:09.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:05.037" endtime="20230616 06:36:09.005"/>
</kw>
<status status="PASS" starttime="20230616 06:36:05.036" endtime="20230616 06:36:09.005"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:09.010" level="INFO">Running command 'ozone sh bucket getacl 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:12.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:12.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:36:09.008" endtime="20230616 06:36:12.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:12.994" level="INFO"/>
<status status="PASS" starttime="20230616 06:36:12.994" endtime="20230616 06:36:12.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:12.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:12.995" endtime="20230616 06:36:12.995"/>
</kw>
<status status="PASS" starttime="20230616 06:36:09.008" endtime="20230616 06:36:12.995"/>
</kw>
<msg timestamp="20230616 06:36:12.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:09.007" endtime="20230616 06:36:12.996"/>
</kw>
<msg timestamp="20230616 06:36:12.996" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230616 06:36:09.007" endtime="20230616 06:36:12.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:12.996" endtime="20230616 06:36:12.996"/>
</kw>
<status status="PASS" starttime="20230616 06:36:09.005" endtime="20230616 06:36:12.997"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:13.002" level="INFO">Running command 'ozone sh bucket getacl --source=false 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:16.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:16.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:36:13.000" endtime="20230616 06:36:16.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:16.999" level="INFO"/>
<status status="PASS" starttime="20230616 06:36:16.999" endtime="20230616 06:36:16.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:17.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:17.000" endtime="20230616 06:36:17.000"/>
</kw>
<status status="PASS" starttime="20230616 06:36:12.999" endtime="20230616 06:36:17.001"/>
</kw>
<msg timestamp="20230616 06:36:17.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:12.999" endtime="20230616 06:36:17.001"/>
</kw>
<msg timestamp="20230616 06:36:17.001" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230616 06:36:12.998" endtime="20230616 06:36:17.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:17.001" endtime="20230616 06:36:17.002"/>
</kw>
<status status="PASS" starttime="20230616 06:36:12.997" endtime="20230616 06:36:17.002"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:17.006" level="INFO">Running command 'ozone sh bucket getacl --source 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:21.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:21.177" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:36:17.004" endtime="20230616 06:36:21.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:21.178" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:36:21.177" endtime="20230616 06:36:21.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:21.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:21.178" endtime="20230616 06:36:21.179"/>
</kw>
<status status="PASS" starttime="20230616 06:36:17.004" endtime="20230616 06:36:21.179"/>
</kw>
<msg timestamp="20230616 06:36:21.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:17.004" endtime="20230616 06:36:21.179"/>
</kw>
<msg timestamp="20230616 06:36:21.180" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:36:17.003" endtime="20230616 06:36:21.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:21.181" endtime="20230616 06:36:21.182"/>
</kw>
<status status="PASS" starttime="20230616 06:36:17.002" endtime="20230616 06:36:21.182"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:21.190" level="INFO">Running command 'ozone sh bucket getacl 74347-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:25.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:25.661" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:36:21.184" endtime="20230616 06:36:25.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:25.662" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:36:25.661" endtime="20230616 06:36:25.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:25.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:25.662" endtime="20230616 06:36:25.663"/>
</kw>
<status status="PASS" starttime="20230616 06:36:21.184" endtime="20230616 06:36:25.663"/>
</kw>
<msg timestamp="20230616 06:36:25.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:21.183" endtime="20230616 06:36:25.663"/>
</kw>
<msg timestamp="20230616 06:36:25.663" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:36:21.183" endtime="20230616 06:36:25.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:25.664" endtime="20230616 06:36:25.664"/>
</kw>
<status status="PASS" starttime="20230616 06:36:21.182" endtime="20230616 06:36:25.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:25.669" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 74347-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:29.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:29.985" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:36:25.666" endtime="20230616 06:36:29.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:29.986" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:36:29.986" endtime="20230616 06:36:29.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:29.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:29.987" endtime="20230616 06:36:29.987"/>
</kw>
<status status="PASS" starttime="20230616 06:36:25.665" endtime="20230616 06:36:29.987"/>
</kw>
<msg timestamp="20230616 06:36:29.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:25.665" endtime="20230616 06:36:29.988"/>
</kw>
<status status="PASS" starttime="20230616 06:36:25.664" endtime="20230616 06:36:29.988"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:29.993" level="INFO">Running command 'ozone sh bucket getacl 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:34.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:34.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:36:29.990" endtime="20230616 06:36:34.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:34.201" level="INFO"/>
<status status="PASS" starttime="20230616 06:36:34.200" endtime="20230616 06:36:34.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:34.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:34.201" endtime="20230616 06:36:34.202"/>
</kw>
<status status="PASS" starttime="20230616 06:36:29.990" endtime="20230616 06:36:34.202"/>
</kw>
<msg timestamp="20230616 06:36:34.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:29.990" endtime="20230616 06:36:34.203"/>
</kw>
<msg timestamp="20230616 06:36:34.203" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230616 06:36:29.989" endtime="20230616 06:36:34.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:34.203" endtime="20230616 06:36:34.204"/>
</kw>
<status status="PASS" starttime="20230616 06:36:29.988" endtime="20230616 06:36:34.204"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:34.208" level="INFO">Running command 'ozone sh bucket getacl --source 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:38.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:38.354" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:36:34.206" endtime="20230616 06:36:38.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:38.356" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:36:38.355" endtime="20230616 06:36:38.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:38.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:38.356" endtime="20230616 06:36:38.356"/>
</kw>
<status status="PASS" starttime="20230616 06:36:34.206" endtime="20230616 06:36:38.357"/>
</kw>
<msg timestamp="20230616 06:36:38.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:34.205" endtime="20230616 06:36:38.357"/>
</kw>
<msg timestamp="20230616 06:36:38.357" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:36:34.205" endtime="20230616 06:36:38.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:38.357" endtime="20230616 06:36:38.358"/>
</kw>
<status status="PASS" starttime="20230616 06:36:34.204" endtime="20230616 06:36:38.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:38.362" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 74347-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:42.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:42.223" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:36:38.359" endtime="20230616 06:36:42.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:42.225" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:36:42.224" endtime="20230616 06:36:42.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:42.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:42.225" endtime="20230616 06:36:42.226"/>
</kw>
<status status="PASS" starttime="20230616 06:36:38.359" endtime="20230616 06:36:42.226"/>
</kw>
<msg timestamp="20230616 06:36:42.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:38.359" endtime="20230616 06:36:42.226"/>
</kw>
<status status="PASS" starttime="20230616 06:36:38.358" endtime="20230616 06:36:42.226"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:42.232" level="INFO">Running command 'ozone sh bucket getacl 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:46.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:46.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:36:42.230" endtime="20230616 06:36:46.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:46.470" level="INFO"/>
<status status="PASS" starttime="20230616 06:36:46.469" endtime="20230616 06:36:46.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:46.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:46.470" endtime="20230616 06:36:46.470"/>
</kw>
<status status="PASS" starttime="20230616 06:36:42.229" endtime="20230616 06:36:46.471"/>
</kw>
<msg timestamp="20230616 06:36:46.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:42.229" endtime="20230616 06:36:46.471"/>
</kw>
<msg timestamp="20230616 06:36:46.471" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230616 06:36:42.228" endtime="20230616 06:36:46.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:46.471" endtime="20230616 06:36:46.472"/>
</kw>
<status status="PASS" starttime="20230616 06:36:42.227" endtime="20230616 06:36:46.472"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:46.477" level="INFO">Running command 'ozone sh bucket getacl --source 74347-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:50.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:50.788" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230616 06:36:46.475" endtime="20230616 06:36:50.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:50.789" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230616 06:36:50.789" endtime="20230616 06:36:50.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:50.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:50.790" endtime="20230616 06:36:50.790"/>
</kw>
<status status="PASS" starttime="20230616 06:36:46.474" endtime="20230616 06:36:50.790"/>
</kw>
<msg timestamp="20230616 06:36:50.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:46.474" endtime="20230616 06:36:50.791"/>
</kw>
<msg timestamp="20230616 06:36:50.791" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230616 06:36:46.473" endtime="20230616 06:36:50.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:50.791" endtime="20230616 06:36:50.791"/>
</kw>
<status status="PASS" starttime="20230616 06:36:46.472" endtime="20230616 06:36:50.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:50.795" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 74347-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:54.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:54.634" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:36:50.793" endtime="20230616 06:36:54.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:54.635" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:36:54.634" endtime="20230616 06:36:54.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:54.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:54.635" endtime="20230616 06:36:54.636"/>
</kw>
<status status="PASS" starttime="20230616 06:36:50.793" endtime="20230616 06:36:54.636"/>
</kw>
<msg timestamp="20230616 06:36:54.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:50.792" endtime="20230616 06:36:54.636"/>
</kw>
<status status="PASS" starttime="20230616 06:36:50.792" endtime="20230616 06:36:54.636"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:54.642" level="INFO">Running command 'ozone sh bucket getacl 74347-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:36:58.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:36:58.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:36:54.640" endtime="20230616 06:36:58.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:36:58.590" level="INFO"/>
<status status="PASS" starttime="20230616 06:36:58.590" endtime="20230616 06:36:58.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:36:58.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:36:58.591" endtime="20230616 06:36:58.591"/>
</kw>
<status status="PASS" starttime="20230616 06:36:54.639" endtime="20230616 06:36:58.592"/>
</kw>
<msg timestamp="20230616 06:36:58.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:54.639" endtime="20230616 06:36:58.592"/>
</kw>
<msg timestamp="20230616 06:36:58.592" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230616 06:36:54.638" endtime="20230616 06:36:58.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:36:58.592" endtime="20230616 06:36:58.593"/>
</kw>
<status status="PASS" starttime="20230616 06:36:54.637" endtime="20230616 06:36:58.593"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:36:58.598" level="INFO">Running command 'ozone sh bucket getacl --source 74347-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:02.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:02.769" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230616 06:36:58.595" endtime="20230616 06:37:02.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:02.770" level="INFO">READ</msg>
<status status="PASS" starttime="20230616 06:37:02.769" endtime="20230616 06:37:02.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:02.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:02.770" endtime="20230616 06:37:02.771"/>
</kw>
<status status="PASS" starttime="20230616 06:36:58.595" endtime="20230616 06:37:02.771"/>
</kw>
<msg timestamp="20230616 06:37:02.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:36:58.595" endtime="20230616 06:37:02.771"/>
</kw>
<msg timestamp="20230616 06:37:02.772" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230616 06:36:58.594" endtime="20230616 06:37:02.772"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:02.772" endtime="20230616 06:37:02.772"/>
</kw>
<status status="PASS" starttime="20230616 06:36:58.593" endtime="20230616 06:37:02.772"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:36:05.035" endtime="20230616 06:37:02.773"/>
</test>
<test id="s1-s10-s3-t9" name="Source and target key have same ACLs" line="155">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:37:02.774" endtime="20230616 06:37:02.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:02.779" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 74347-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:06.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:06.876" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:37:02.776" endtime="20230616 06:37:06.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:06.877" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:37:06.876" endtime="20230616 06:37:06.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:06.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:06.877" endtime="20230616 06:37:06.878"/>
</kw>
<status status="PASS" starttime="20230616 06:37:02.776" endtime="20230616 06:37:06.878"/>
</kw>
<msg timestamp="20230616 06:37:06.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:02.775" endtime="20230616 06:37:06.879"/>
</kw>
<status status="PASS" starttime="20230616 06:37:02.775" endtime="20230616 06:37:06.879"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:06.883" level="INFO">Running command 'ozone sh key getacl 74347-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:10.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:10.827" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:37:06.881" endtime="20230616 06:37:10.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:10.829" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:37:10.828" endtime="20230616 06:37:10.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:10.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:10.829" endtime="20230616 06:37:10.829"/>
</kw>
<status status="PASS" starttime="20230616 06:37:06.880" endtime="20230616 06:37:10.830"/>
</kw>
<msg timestamp="20230616 06:37:10.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:06.880" endtime="20230616 06:37:10.830"/>
</kw>
<msg timestamp="20230616 06:37:10.830" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:37:06.879" endtime="20230616 06:37:10.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:10.830" endtime="20230616 06:37:10.831"/>
</kw>
<status status="PASS" starttime="20230616 06:37:06.879" endtime="20230616 06:37:10.831"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:10.835" level="INFO">Running command 'ozone sh key getacl 74347-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:14.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:14.804" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:37:10.833" endtime="20230616 06:37:14.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:14.806" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:37:14.805" endtime="20230616 06:37:14.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:14.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:14.806" endtime="20230616 06:37:14.806"/>
</kw>
<status status="PASS" starttime="20230616 06:37:10.833" endtime="20230616 06:37:14.807"/>
</kw>
<msg timestamp="20230616 06:37:14.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:10.832" endtime="20230616 06:37:14.807"/>
</kw>
<msg timestamp="20230616 06:37:14.807" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230616 06:37:10.832" endtime="20230616 06:37:14.807"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:14.807" endtime="20230616 06:37:14.808"/>
</kw>
<status status="PASS" starttime="20230616 06:37:10.831" endtime="20230616 06:37:14.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:14.812" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 74347-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:18.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:18.900" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:37:14.809" endtime="20230616 06:37:18.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:18.902" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:37:18.901" endtime="20230616 06:37:18.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:18.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:18.902" endtime="20230616 06:37:18.903"/>
</kw>
<status status="PASS" starttime="20230616 06:37:14.809" endtime="20230616 06:37:18.903"/>
</kw>
<msg timestamp="20230616 06:37:18.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:14.809" endtime="20230616 06:37:18.903"/>
</kw>
<status status="PASS" starttime="20230616 06:37:14.808" endtime="20230616 06:37:18.903"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:18.908" level="INFO">Running command 'ozone sh key getacl 74347-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:23.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:23.366" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:37:18.906" endtime="20230616 06:37:23.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:23.368" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:37:23.367" endtime="20230616 06:37:23.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:23.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:23.368" endtime="20230616 06:37:23.369"/>
</kw>
<status status="PASS" starttime="20230616 06:37:18.906" endtime="20230616 06:37:23.369"/>
</kw>
<msg timestamp="20230616 06:37:23.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:18.905" endtime="20230616 06:37:23.369"/>
</kw>
<msg timestamp="20230616 06:37:23.369" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:37:18.904" endtime="20230616 06:37:23.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:23.370" endtime="20230616 06:37:23.370"/>
</kw>
<status status="PASS" starttime="20230616 06:37:18.904" endtime="20230616 06:37:23.370"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:23.375" level="INFO">Running command 'ozone sh key getacl 74347-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:27.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:27.396" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:37:23.372" endtime="20230616 06:37:27.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:27.397" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:37:27.396" endtime="20230616 06:37:27.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:27.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:27.397" endtime="20230616 06:37:27.398"/>
</kw>
<status status="PASS" starttime="20230616 06:37:23.372" endtime="20230616 06:37:27.398"/>
</kw>
<msg timestamp="20230616 06:37:27.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:23.372" endtime="20230616 06:37:27.398"/>
</kw>
<msg timestamp="20230616 06:37:27.398" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230616 06:37:23.371" endtime="20230616 06:37:27.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:27.398" endtime="20230616 06:37:27.399"/>
</kw>
<status status="PASS" starttime="20230616 06:37:23.370" endtime="20230616 06:37:27.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:27.403" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 74347-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:31.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:31.343" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:37:27.401" endtime="20230616 06:37:31.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:31.344" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:37:31.343" endtime="20230616 06:37:31.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:31.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:31.344" endtime="20230616 06:37:31.345"/>
</kw>
<status status="PASS" starttime="20230616 06:37:27.400" endtime="20230616 06:37:31.345"/>
</kw>
<msg timestamp="20230616 06:37:31.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:27.400" endtime="20230616 06:37:31.345"/>
</kw>
<status status="PASS" starttime="20230616 06:37:27.399" endtime="20230616 06:37:31.345"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:31.350" level="INFO">Running command 'ozone sh key getacl 74347-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:35.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:35.003" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230616 06:37:31.348" endtime="20230616 06:37:35.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:35.005" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230616 06:37:35.004" endtime="20230616 06:37:35.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:35.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:35.005" endtime="20230616 06:37:35.006"/>
</kw>
<status status="PASS" starttime="20230616 06:37:31.347" endtime="20230616 06:37:35.006"/>
</kw>
<msg timestamp="20230616 06:37:35.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:31.347" endtime="20230616 06:37:35.006"/>
</kw>
<msg timestamp="20230616 06:37:35.006" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230616 06:37:31.346" endtime="20230616 06:37:35.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:35.006" endtime="20230616 06:37:35.007"/>
</kw>
<status status="PASS" starttime="20230616 06:37:31.345" endtime="20230616 06:37:35.007"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:35.012" level="INFO">Running command 'ozone sh key getacl 74347-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:39.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:39.205" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230616 06:37:35.010" endtime="20230616 06:37:39.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:39.207" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230616 06:37:39.206" endtime="20230616 06:37:39.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:39.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:39.207" endtime="20230616 06:37:39.208"/>
</kw>
<status status="PASS" starttime="20230616 06:37:35.010" endtime="20230616 06:37:39.208"/>
</kw>
<msg timestamp="20230616 06:37:39.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:35.009" endtime="20230616 06:37:39.208"/>
</kw>
<msg timestamp="20230616 06:37:39.208" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230616 06:37:35.008" endtime="20230616 06:37:39.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:39.209" endtime="20230616 06:37:39.209"/>
</kw>
<status status="PASS" starttime="20230616 06:37:35.007" endtime="20230616 06:37:39.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:39.213" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 74347-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:43.092" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:37:39.211" endtime="20230616 06:37:43.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:43.093" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:37:43.092" endtime="20230616 06:37:43.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:43.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:43.093" endtime="20230616 06:37:43.094"/>
</kw>
<status status="PASS" starttime="20230616 06:37:39.210" endtime="20230616 06:37:43.094"/>
</kw>
<msg timestamp="20230616 06:37:43.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:39.210" endtime="20230616 06:37:43.094"/>
</kw>
<status status="PASS" starttime="20230616 06:37:39.209" endtime="20230616 06:37:43.094"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:43.099" level="INFO">Running command 'ozone sh key getacl 74347-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:47.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:47.184" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230616 06:37:43.097" endtime="20230616 06:37:47.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:47.185" level="INFO">READ</msg>
<status status="PASS" starttime="20230616 06:37:47.184" endtime="20230616 06:37:47.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:47.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:47.185" endtime="20230616 06:37:47.186"/>
</kw>
<status status="PASS" starttime="20230616 06:37:43.096" endtime="20230616 06:37:47.186"/>
</kw>
<msg timestamp="20230616 06:37:47.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:43.096" endtime="20230616 06:37:47.186"/>
</kw>
<msg timestamp="20230616 06:37:47.187" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230616 06:37:43.095" endtime="20230616 06:37:47.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:47.187" endtime="20230616 06:37:47.187"/>
</kw>
<status status="PASS" starttime="20230616 06:37:43.095" endtime="20230616 06:37:47.187"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:47.193" level="INFO">Running command 'ozone sh key getacl 74347-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:51.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:51.589" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230616 06:37:47.190" endtime="20230616 06:37:51.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:51.590" level="INFO">READ</msg>
<status status="PASS" starttime="20230616 06:37:51.589" endtime="20230616 06:37:51.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:51.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:51.591" endtime="20230616 06:37:51.591"/>
</kw>
<status status="PASS" starttime="20230616 06:37:47.189" endtime="20230616 06:37:51.591"/>
</kw>
<msg timestamp="20230616 06:37:51.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:47.189" endtime="20230616 06:37:51.592"/>
</kw>
<msg timestamp="20230616 06:37:51.592" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230616 06:37:47.188" endtime="20230616 06:37:51.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:37:51.592" endtime="20230616 06:37:51.593"/>
</kw>
<status status="PASS" starttime="20230616 06:37:47.188" endtime="20230616 06:37:51.593"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:37:02.774" endtime="20230616 06:37:51.593"/>
</test>
<test id="s1-s10-s3-t10" name="Buckets and links share namespace" line="170">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:37:51.595" endtime="20230616 06:37:51.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:51.599" level="INFO">Running command 'ozone sh bucket link 74347-source/bucket2 74347-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:55.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:37:55.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:37:51.597" endtime="20230616 06:37:55.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:55.723" level="INFO"/>
<status status="PASS" starttime="20230616 06:37:55.722" endtime="20230616 06:37:55.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:37:55.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:37:55.723" endtime="20230616 06:37:55.724"/>
</kw>
<status status="PASS" starttime="20230616 06:37:51.596" endtime="20230616 06:37:55.724"/>
</kw>
<msg timestamp="20230616 06:37:55.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:51.596" endtime="20230616 06:37:55.724"/>
</kw>
<status status="PASS" starttime="20230616 06:37:51.595" endtime="20230616 06:37:55.724"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:55.727" level="INFO">Running command 'ozone sh bucket create 74347-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:37:59.543" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:37:59.543" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230616 06:37:55.725" endtime="20230616 06:37:59.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:37:59.544" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230616 06:37:59.543" endtime="20230616 06:37:59.544"/>
</kw>
<msg timestamp="20230616 06:37:59.545" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230616 06:37:55.724" endtime="20230616 06:37:59.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:37:59.545" endtime="20230616 06:37:59.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:37:59.549" level="INFO">Running command 'ozone sh bucket create 74347-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:03.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:03.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:37:59.547" endtime="20230616 06:38:03.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:03.470" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:03.469" endtime="20230616 06:38:03.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:03.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:03.470" endtime="20230616 06:38:03.471"/>
</kw>
<status status="PASS" starttime="20230616 06:37:59.546" endtime="20230616 06:38:03.471"/>
</kw>
<msg timestamp="20230616 06:38:03.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:37:59.546" endtime="20230616 06:38:03.471"/>
</kw>
<status status="PASS" starttime="20230616 06:37:59.545" endtime="20230616 06:38:03.471"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:03.474" level="INFO">Running command 'ozone sh bucket link 74347-source/bucket1 74347-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:07.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:38:07.283" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230616 06:38:03.472" endtime="20230616 06:38:07.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:07.285" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230616 06:38:07.284" endtime="20230616 06:38:07.285"/>
</kw>
<msg timestamp="20230616 06:38:07.285" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230616 06:38:03.471" endtime="20230616 06:38:07.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:38:07.285" endtime="20230616 06:38:07.286"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:37:51.594" endtime="20230616 06:38:07.286"/>
</test>
<test id="s1-s10-s3-t11" name="Can follow link with read access" line="179">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.288" endtime="20230616 06:38:07.288"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.288" endtime="20230616 06:38:07.288"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:38:07.287" endtime="20230616 06:38:07.289"/>
</test>
<test id="s1-s10-s3-t12" name="Cannot follow link without read access" line="182">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.290" endtime="20230616 06:38:07.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.290" endtime="20230616 06:38:07.291"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:38:07.289" endtime="20230616 06:38:07.291"/>
</test>
<test id="s1-s10-s3-t13" name="ACL verified on source and target bucket" line="185">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.292" endtime="20230616 06:38:07.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.292" endtime="20230616 06:38:07.293"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:38:07.291" endtime="20230616 06:38:07.293"/>
</test>
<test id="s1-s10-s3-t14" name="Loop in link chain is detected" line="188">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:07.294" endtime="20230616 06:38:07.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:07.299" level="INFO">Running command 'ozone sh bucket link 74347-target/loop1 74347-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:11.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:11.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:07.296" endtime="20230616 06:38:11.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:11.474" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:11.474" endtime="20230616 06:38:11.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:11.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:11.475" endtime="20230616 06:38:11.475"/>
</kw>
<status status="PASS" starttime="20230616 06:38:07.296" endtime="20230616 06:38:11.475"/>
</kw>
<msg timestamp="20230616 06:38:11.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:07.296" endtime="20230616 06:38:11.476"/>
</kw>
<status status="PASS" starttime="20230616 06:38:07.295" endtime="20230616 06:38:11.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:11.480" level="INFO">Running command 'ozone sh bucket link 74347-target/loop2 74347-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:15.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:15.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:11.477" endtime="20230616 06:38:15.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:15.295" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:15.294" endtime="20230616 06:38:15.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:15.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:15.295" endtime="20230616 06:38:15.296"/>
</kw>
<status status="PASS" starttime="20230616 06:38:11.477" endtime="20230616 06:38:15.296"/>
</kw>
<msg timestamp="20230616 06:38:15.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:11.476" endtime="20230616 06:38:15.296"/>
</kw>
<status status="PASS" starttime="20230616 06:38:11.476" endtime="20230616 06:38:15.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:15.300" level="INFO">Running command 'ozone sh bucket link 74347-target/loop3 74347-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:19.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:19.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:15.298" endtime="20230616 06:38:19.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:19.119" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:19.118" endtime="20230616 06:38:19.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:19.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:19.119" endtime="20230616 06:38:19.119"/>
</kw>
<status status="PASS" starttime="20230616 06:38:15.297" endtime="20230616 06:38:19.120"/>
</kw>
<msg timestamp="20230616 06:38:19.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:15.297" endtime="20230616 06:38:19.120"/>
</kw>
<status status="PASS" starttime="20230616 06:38:15.296" endtime="20230616 06:38:19.120"/>
</kw>
<status status="PASS" starttime="20230616 06:38:07.294" endtime="20230616 06:38:19.120"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:19.123" level="INFO">Running command 'ozone sh key list 74347-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:23.376" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:38:23.377" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 74347-target</msg>
<status status="PASS" starttime="20230616 06:38:19.121" endtime="20230616 06:38:23.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:23.378" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 74347-target</msg>
<status status="PASS" starttime="20230616 06:38:23.377" endtime="20230616 06:38:23.378"/>
</kw>
<msg timestamp="20230616 06:38:23.378" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 74347-target</msg>
<status status="PASS" starttime="20230616 06:38:19.120" endtime="20230616 06:38:23.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:38:23.379" endtime="20230616 06:38:23.379"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:23.384" level="INFO">Running command 'ozone sh bucket delete 74347-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:27.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:27.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:23.381" endtime="20230616 06:38:27.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:27.469" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:27.468" endtime="20230616 06:38:27.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:27.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:27.469" endtime="20230616 06:38:27.470"/>
</kw>
<status status="PASS" starttime="20230616 06:38:23.381" endtime="20230616 06:38:27.470"/>
</kw>
<msg timestamp="20230616 06:38:27.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:23.381" endtime="20230616 06:38:27.470"/>
</kw>
<status status="PASS" starttime="20230616 06:38:23.380" endtime="20230616 06:38:27.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:27.474" level="INFO">Running command 'ozone sh bucket delete 74347-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:31.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:31.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:27.472" endtime="20230616 06:38:31.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:31.484" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:31.483" endtime="20230616 06:38:31.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:31.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:31.484" endtime="20230616 06:38:31.484"/>
</kw>
<status status="PASS" starttime="20230616 06:38:27.471" endtime="20230616 06:38:31.485"/>
</kw>
<msg timestamp="20230616 06:38:31.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:27.471" endtime="20230616 06:38:31.485"/>
</kw>
<status status="PASS" starttime="20230616 06:38:27.470" endtime="20230616 06:38:31.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:31.489" level="INFO">Running command 'ozone sh bucket delete 74347-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:35.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:35.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:31.487" endtime="20230616 06:38:35.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:35.675" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:35.675" endtime="20230616 06:38:35.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:35.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:35.676" endtime="20230616 06:38:35.676"/>
</kw>
<status status="PASS" starttime="20230616 06:38:31.486" endtime="20230616 06:38:35.676"/>
</kw>
<msg timestamp="20230616 06:38:35.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:31.486" endtime="20230616 06:38:35.677"/>
</kw>
<status status="PASS" starttime="20230616 06:38:31.485" endtime="20230616 06:38:35.677"/>
</kw>
<status status="PASS" starttime="20230616 06:38:23.379" endtime="20230616 06:38:35.677"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:38:07.294" endtime="20230616 06:38:35.677"/>
</test>
<test id="s1-s10-s3-t15" name="Multiple links to same bucket are allowed" line="194">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:35.679" endtime="20230616 06:38:35.680"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:35.684" level="INFO">Running command 'ozone sh bucket link 74347-source/bucket1 74347-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:39.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:39.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:35.681" endtime="20230616 06:38:39.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:39.518" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:39.517" endtime="20230616 06:38:39.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:39.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:39.518" endtime="20230616 06:38:39.518"/>
</kw>
<status status="PASS" starttime="20230616 06:38:35.681" endtime="20230616 06:38:39.519"/>
</kw>
<msg timestamp="20230616 06:38:39.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:35.680" endtime="20230616 06:38:39.519"/>
</kw>
<status status="PASS" starttime="20230616 06:38:35.680" endtime="20230616 06:38:39.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:39.523" level="INFO">Running command 'ozone sh key put 74347-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:45.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:45.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:39.521" endtime="20230616 06:38:45.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:45.911" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:45.910" endtime="20230616 06:38:45.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:45.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:45.911" endtime="20230616 06:38:45.911"/>
</kw>
<status status="PASS" starttime="20230616 06:38:39.520" endtime="20230616 06:38:45.912"/>
</kw>
<msg timestamp="20230616 06:38:45.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:39.520" endtime="20230616 06:38:45.912"/>
</kw>
<status status="PASS" starttime="20230616 06:38:39.519" endtime="20230616 06:38:45.912"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:38:45.915" level="INFO">${postfix} = 11554</msg>
<status status="PASS" starttime="20230616 06:38:45.914" endtime="20230616 06:38:45.915"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:38:45.915" level="INFO">${tmpfile} = /tmp/tempkey-11554</msg>
<status status="PASS" starttime="20230616 06:38:45.915" endtime="20230616 06:38:45.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:45.919" level="INFO">Running command 'ozone sh key get 74347-target/link1/key3 /tmp/tempkey-11554 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:52.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:52.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:45.916" endtime="20230616 06:38:52.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:52.032" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:52.031" endtime="20230616 06:38:52.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:52.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:52.032" endtime="20230616 06:38:52.033"/>
</kw>
<status status="PASS" starttime="20230616 06:38:45.916" endtime="20230616 06:38:52.033"/>
</kw>
<msg timestamp="20230616 06:38:52.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:45.916" endtime="20230616 06:38:52.033"/>
</kw>
<status status="PASS" starttime="20230616 06:38:45.915" endtime="20230616 06:38:52.033"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230616 06:38:52.036" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-11554 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:52.039" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230616 06:38:52.033" endtime="20230616 06:38:52.039"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:52.043" level="INFO">Running command 'rm -f /tmp/tempkey-11554 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:52.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:52.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:52.041" endtime="20230616 06:38:52.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:52.046" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:52.046" endtime="20230616 06:38:52.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:52.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:52.047" endtime="20230616 06:38:52.047"/>
</kw>
<status status="PASS" starttime="20230616 06:38:52.040" endtime="20230616 06:38:52.047"/>
</kw>
<msg timestamp="20230616 06:38:52.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:52.040" endtime="20230616 06:38:52.048"/>
</kw>
<status status="PASS" starttime="20230616 06:38:52.039" endtime="20230616 06:38:52.048"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:38:52.048" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230616 06:38:52.048" endtime="20230616 06:38:52.048"/>
</kw>
<msg timestamp="20230616 06:38:52.049" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230616 06:38:45.913" endtime="20230616 06:38:52.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230616 06:38:52.049" endtime="20230616 06:38:52.049"/>
</kw>
<status status="PASS" starttime="20230616 06:38:45.912" endtime="20230616 06:38:52.049"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:38:35.678" endtime="20230616 06:38:52.050"/>
</test>
<test id="s1-s10-s3-t16" name="Source bucket not affected by deleting link" line="199">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:38:52.051" endtime="20230616 06:38:52.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:52.058" level="INFO">Running command 'ozone sh bucket delete 74347-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:38:56.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:38:56.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:38:52.056" endtime="20230616 06:38:56.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:38:56.044" level="INFO"/>
<status status="PASS" starttime="20230616 06:38:56.043" endtime="20230616 06:38:56.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:38:56.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:38:56.044" endtime="20230616 06:38:56.045"/>
</kw>
<status status="PASS" starttime="20230616 06:38:52.053" endtime="20230616 06:38:56.045"/>
</kw>
<msg timestamp="20230616 06:38:56.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:52.052" endtime="20230616 06:38:56.045"/>
</kw>
<status status="PASS" starttime="20230616 06:38:52.051" endtime="20230616 06:38:56.045"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:38:56.049" level="INFO">Running command 'ozone sh bucket list 74347-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:00.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:00.510" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "74347-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-1...</msg>
<status status="PASS" starttime="20230616 06:38:56.047" endtime="20230616 06:39:00.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:00.511" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "74347-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-16T06:38:03.394Z",
  "modificationTime" : "2023-06-16T06:38:03.394Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}, {
  "volumeName" : "74347-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-06-16T06:35:01.749Z",
  "modificationTime" : "2023-06-16T06:35:01.749Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "74347-target",
  "bucketName" : "link2",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-06-16T06:37:55.499Z",
  "modificationTime" : "2023-06-16T06:37:55.499Z",
  "owner" : "hadoop"
}, {
  "volumeName" : "74347-target",
  "bucketName" : "link3",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:38:39.283Z",
  "modificationTime" : "2023-06-16T06:38:39.283Z",
  "owner" : "hadoop"
} ]</msg>
<status status="PASS" starttime="20230616 06:39:00.510" endtime="20230616 06:39:00.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:00.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:00.511" endtime="20230616 06:39:00.512"/>
</kw>
<status status="PASS" starttime="20230616 06:38:56.046" endtime="20230616 06:39:00.512"/>
</kw>
<msg timestamp="20230616 06:39:00.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:38:56.046" endtime="20230616 06:39:00.512"/>
</kw>
<msg timestamp="20230616 06:39:00.513" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "74347-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-06-1...</msg>
<status status="PASS" starttime="20230616 06:38:56.045" endtime="20230616 06:39:00.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:39:00.513" endtime="20230616 06:39:00.513"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:00.517" level="INFO">Running command 'ozone sh key list 74347-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:04.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:04.869" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230616 06:39:00.515" endtime="20230616 06:39:04.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:04.870" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230616 06:39:04.869" endtime="20230616 06:39:04.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:04.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:04.870" endtime="20230616 06:39:04.871"/>
</kw>
<status status="PASS" starttime="20230616 06:39:00.514" endtime="20230616 06:39:04.871"/>
</kw>
<msg timestamp="20230616 06:39:04.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:00.514" endtime="20230616 06:39:04.871"/>
</kw>
<msg timestamp="20230616 06:39:04.871" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230616 06:39:00.513" endtime="20230616 06:39:04.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:39:04.872" endtime="20230616 06:39:04.872"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:38:52.050" endtime="20230616 06:39:04.872"/>
</test>
<test id="s1-s10-s3-t17" name="Setting bucket property on link not allowed" line="206">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:39:04.874" endtime="20230616 06:39:04.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:04.878" level="INFO">Running command 'ozone sh bucket link 74347-source/bucket1 74347-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:08.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:08.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:04.876" endtime="20230616 06:39:08.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:08.898" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:08.897" endtime="20230616 06:39:08.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:08.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:08.898" endtime="20230616 06:39:08.898"/>
</kw>
<status status="PASS" starttime="20230616 06:39:04.875" endtime="20230616 06:39:08.899"/>
</kw>
<msg timestamp="20230616 06:39:08.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:04.875" endtime="20230616 06:39:08.899"/>
</kw>
<status status="PASS" starttime="20230616 06:39:04.875" endtime="20230616 06:39:08.899"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:08.902" level="INFO">Running command 'ozone sh bucket setquota 74347-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:13.634" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:39:13.634" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230616 06:39:08.900" endtime="20230616 06:39:13.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:13.635" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230616 06:39:13.634" endtime="20230616 06:39:13.635"/>
</kw>
<msg timestamp="20230616 06:39:13.636" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230616 06:39:08.899" endtime="20230616 06:39:13.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:39:13.636" endtime="20230616 06:39:13.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:13.640" level="INFO">Running command 'ozone sh bucket info 74347-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:17.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:17.617" level="INFO">${output} = {
  "volumeName" : "74347-target",
  "bucketName" : "link4",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:39:08.735Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230616 06:39:13.638" endtime="20230616 06:39:17.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:17.619" level="INFO">{
  "volumeName" : "74347-target",
  "bucketName" : "link4",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:39:08.735Z",
  "modificationTime" : "2023-06-16T06:39:08.735Z",
  "owner" : "hadoop"
}</msg>
<status status="PASS" starttime="20230616 06:39:17.618" endtime="20230616 06:39:17.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:17.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:17.619" endtime="20230616 06:39:17.619"/>
</kw>
<status status="PASS" starttime="20230616 06:39:13.637" endtime="20230616 06:39:17.620"/>
</kw>
<msg timestamp="20230616 06:39:17.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:13.637" endtime="20230616 06:39:17.620"/>
</kw>
<msg timestamp="20230616 06:39:17.620" level="INFO">${result} = {
  "volumeName" : "74347-target",
  "bucketName" : "link4",
  "sourceVolume" : "74347-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-06-16T06:39:08.735Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230616 06:39:13.637" endtime="20230616 06:39:17.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:39:17.620" endtime="20230616 06:39:17.621"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230616 06:39:04.873" endtime="20230616 06:39:17.621"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230616 06:34:49.198" endtime="20230616 06:39:17.623"/>
</suite>
<suite id="s1-s10-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:39:17.650" level="INFO">${random} = 53142</msg>
<status status="PASS" starttime="20230616 06:39:17.650" endtime="20230616 06:39:17.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:39:17.651" level="INFO">${prefix} = 53142</msg>
<status status="PASS" starttime="20230616 06:39:17.650" endtime="20230616 06:39:17.651"/>
</kw>
<status status="PASS" starttime="20230616 06:39:17.650" endtime="20230616 06:39:17.651"/>
</kw>
<test id="s1-s10-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:17.656" level="INFO">Running command 'ozone sh volume info /53142-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:21.743" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:39:21.743" level="INFO">${output} = VOLUME_NOT_FOUND Volume 53142-without-scheme is not found</msg>
<status status="PASS" starttime="20230616 06:39:17.654" endtime="20230616 06:39:21.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:21.745" level="INFO">VOLUME_NOT_FOUND Volume 53142-without-scheme is not found</msg>
<status status="PASS" starttime="20230616 06:39:21.744" endtime="20230616 06:39:21.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:21.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:21.745" endtime="20230616 06:39:21.745"/>
</kw>
<msg timestamp="20230616 06:39:21.746" level="INFO">${result} = VOLUME_NOT_FOUND Volume 53142-without-scheme is not found</msg>
<status status="PASS" starttime="20230616 06:39:17.653" endtime="20230616 06:39:21.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:39:21.746" endtime="20230616 06:39:21.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:21.751" level="INFO">Running command 'ozone sh volume create /53142-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:25.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:25.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:21.748" endtime="20230616 06:39:25.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:25.772" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:25.772" endtime="20230616 06:39:25.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:25.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:25.773" endtime="20230616 06:39:25.773"/>
</kw>
<status status="PASS" starttime="20230616 06:39:21.748" endtime="20230616 06:39:25.774"/>
</kw>
<msg timestamp="20230616 06:39:25.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:21.747" endtime="20230616 06:39:25.774"/>
</kw>
<msg timestamp="20230616 06:39:25.774" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:39:21.747" endtime="20230616 06:39:25.774"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 06:39:25.774" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 06:39:25.774" endtime="20230616 06:39:25.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:25.779" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="53142-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:29.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:29.510" level="INFO">${output} = {
  "metadata": {},
  "name": "53142-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20230616 06:39:25.776" endtime="20230616 06:39:29.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:29.512" level="INFO">{
  "metadata": {},
  "name": "53142-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-06-16T06:39:25.709Z",
  "modificationTime": "2023-06-16T06:39:25.709Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230616 06:39:29.511" endtime="20230616 06:39:29.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:29.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:29.512" endtime="20230616 06:39:29.513"/>
</kw>
<status status="PASS" starttime="20230616 06:39:25.776" endtime="20230616 06:39:29.513"/>
</kw>
<msg timestamp="20230616 06:39:29.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:25.775" endtime="20230616 06:39:29.514"/>
</kw>
<msg timestamp="20230616 06:39:29.514" level="INFO">${result} = {
  "metadata": {},
  "name": "53142-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20230616 06:39:25.775" endtime="20230616 06:39:29.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:39:29.514" endtime="20230616 06:39:29.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:29.518" level="INFO">Running command 'ozone sh volume setquota /53142-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:33.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:33.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:29.516" endtime="20230616 06:39:33.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:33.538" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:33.538" endtime="20230616 06:39:33.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:33.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:33.539" endtime="20230616 06:39:33.539"/>
</kw>
<status status="PASS" starttime="20230616 06:39:29.516" endtime="20230616 06:39:33.540"/>
</kw>
<msg timestamp="20230616 06:39:33.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:29.515" endtime="20230616 06:39:33.540"/>
</kw>
<status status="PASS" starttime="20230616 06:39:29.515" endtime="20230616 06:39:33.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:33.544" level="INFO">Running command 'ozone sh volume info /53142-without-scheme | jq -r '. | select(.name=="53142-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:37.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:37.649" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:39:33.542" endtime="20230616 06:39:37.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:37.650" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230616 06:39:37.649" endtime="20230616 06:39:37.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:37.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:37.650" endtime="20230616 06:39:37.651"/>
</kw>
<status status="PASS" starttime="20230616 06:39:33.541" endtime="20230616 06:39:37.651"/>
</kw>
<msg timestamp="20230616 06:39:37.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:33.541" endtime="20230616 06:39:37.651"/>
</kw>
<msg timestamp="20230616 06:39:37.652" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:39:33.540" endtime="20230616 06:39:37.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:37.652" endtime="20230616 06:39:37.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:37.656" level="INFO">Running command 'ozone sh bucket create /53142-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:41.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:41.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:37.654" endtime="20230616 06:39:41.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:41.211" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:41.210" endtime="20230616 06:39:41.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:41.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:41.211" endtime="20230616 06:39:41.212"/>
</kw>
<status status="PASS" starttime="20230616 06:39:37.653" endtime="20230616 06:39:41.212"/>
</kw>
<msg timestamp="20230616 06:39:41.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:37.653" endtime="20230616 06:39:41.212"/>
</kw>
<msg timestamp="20230616 06:39:41.212" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:39:37.652" endtime="20230616 06:39:41.213"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 06:39:41.213" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 06:39:41.213" endtime="20230616 06:39:41.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:41.217" level="INFO">Running command 'ozone sh bucket info /53142-without-scheme/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:39:45.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:45.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:41.215" endtime="20230616 06:39:45.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:45.261" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:45.260" endtime="20230616 06:39:45.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:45.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:45.262" endtime="20230616 06:39:45.262"/>
</kw>
<status status="PASS" starttime="20230616 06:39:41.214" endtime="20230616 06:39:45.262"/>
</kw>
<msg timestamp="20230616 06:39:45.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:41.214" endtime="20230616 06:39:45.263"/>
</kw>
<status status="PASS" starttime="20230616 06:39:41.213" endtime="20230616 06:39:45.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:45.267" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:45.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:45.304" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230616 06:39:45.265" endtime="20230616 06:39:45.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:45.305" level="INFO">DISK</msg>
<status status="PASS" starttime="20230616 06:39:45.304" endtime="20230616 06:39:45.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:45.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:45.305" endtime="20230616 06:39:45.306"/>
</kw>
<status status="PASS" starttime="20230616 06:39:45.264" endtime="20230616 06:39:45.306"/>
</kw>
<msg timestamp="20230616 06:39:45.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:45.263" endtime="20230616 06:39:45.306"/>
</kw>
<msg timestamp="20230616 06:39:45.306" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230616 06:39:45.263" endtime="20230616 06:39:45.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:45.306" endtime="20230616 06:39:45.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:45.310" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:45.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:45.346" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:39:45.308" endtime="20230616 06:39:45.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:45.347" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230616 06:39:45.347" endtime="20230616 06:39:45.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:45.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:45.348" endtime="20230616 06:39:45.348"/>
</kw>
<status status="PASS" starttime="20230616 06:39:45.308" endtime="20230616 06:39:45.348"/>
</kw>
<msg timestamp="20230616 06:39:45.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:45.307" endtime="20230616 06:39:45.348"/>
</kw>
<msg timestamp="20230616 06:39:45.349" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:39:45.307" endtime="20230616 06:39:45.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:45.349" endtime="20230616 06:39:45.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:45.353" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:45.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:45.389" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230616 06:39:45.351" endtime="20230616 06:39:45.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:45.390" level="INFO">100</msg>
<status status="PASS" starttime="20230616 06:39:45.390" endtime="20230616 06:39:45.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:45.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:45.391" endtime="20230616 06:39:45.391"/>
</kw>
<status status="PASS" starttime="20230616 06:39:45.350" endtime="20230616 06:39:45.391"/>
</kw>
<msg timestamp="20230616 06:39:45.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:45.350" endtime="20230616 06:39:45.392"/>
</kw>
<msg timestamp="20230616 06:39:45.392" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230616 06:39:45.349" endtime="20230616 06:39:45.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:45.392" endtime="20230616 06:39:45.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:45.396" level="INFO">Running command 'ozone sh bucket setquota /53142-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:48.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:48.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:45.394" endtime="20230616 06:39:48.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:48.892" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:48.891" endtime="20230616 06:39:48.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:48.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:48.892" endtime="20230616 06:39:48.892"/>
</kw>
<status status="PASS" starttime="20230616 06:39:45.393" endtime="20230616 06:39:48.893"/>
</kw>
<msg timestamp="20230616 06:39:48.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:45.393" endtime="20230616 06:39:48.893"/>
</kw>
<status status="PASS" starttime="20230616 06:39:45.392" endtime="20230616 06:39:48.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:48.897" level="INFO">Running command 'ozone sh bucket info /53142-without-scheme/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:39:53.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:53.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:48.894" endtime="20230616 06:39:53.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:53.186" level="INFO"/>
<status status="PASS" starttime="20230616 06:39:53.185" endtime="20230616 06:39:53.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:53.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:53.186" endtime="20230616 06:39:53.187"/>
</kw>
<status status="PASS" starttime="20230616 06:39:48.894" endtime="20230616 06:39:53.187"/>
</kw>
<msg timestamp="20230616 06:39:53.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:48.894" endtime="20230616 06:39:53.187"/>
</kw>
<status status="PASS" starttime="20230616 06:39:48.893" endtime="20230616 06:39:53.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:53.191" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:53.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:53.231" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230616 06:39:53.188" endtime="20230616 06:39:53.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:53.232" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230616 06:39:53.231" endtime="20230616 06:39:53.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:53.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:53.232" endtime="20230616 06:39:53.232"/>
</kw>
<status status="PASS" starttime="20230616 06:39:53.188" endtime="20230616 06:39:53.233"/>
</kw>
<msg timestamp="20230616 06:39:53.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:53.188" endtime="20230616 06:39:53.233"/>
</kw>
<msg timestamp="20230616 06:39:53.233" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230616 06:39:53.187" endtime="20230616 06:39:53.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:53.233" endtime="20230616 06:39:53.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:53.237" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:53.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:53.273" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230616 06:39:53.235" endtime="20230616 06:39:53.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:53.274" level="INFO">1000</msg>
<status status="PASS" starttime="20230616 06:39:53.274" endtime="20230616 06:39:53.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:53.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:53.275" endtime="20230616 06:39:53.275"/>
</kw>
<status status="PASS" starttime="20230616 06:39:53.234" endtime="20230616 06:39:53.275"/>
</kw>
<msg timestamp="20230616 06:39:53.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:53.234" endtime="20230616 06:39:53.276"/>
</kw>
<msg timestamp="20230616 06:39:53.276" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230616 06:39:53.234" endtime="20230616 06:39:53.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:53.276" endtime="20230616 06:39:53.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:53.280" level="INFO">Running command 'ozone sh bucket list /53142-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:39:57.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:39:57.227" level="INFO">${output} = 53142-without-scheme</msg>
<status status="PASS" starttime="20230616 06:39:53.278" endtime="20230616 06:39:57.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:39:57.228" level="INFO">53142-without-scheme</msg>
<status status="PASS" starttime="20230616 06:39:57.227" endtime="20230616 06:39:57.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:39:57.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:39:57.229" endtime="20230616 06:39:57.229"/>
</kw>
<status status="PASS" starttime="20230616 06:39:53.278" endtime="20230616 06:39:57.229"/>
</kw>
<msg timestamp="20230616 06:39:57.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:53.277" endtime="20230616 06:39:57.230"/>
</kw>
<msg timestamp="20230616 06:39:57.230" level="INFO">${result} = 53142-without-scheme</msg>
<status status="PASS" starttime="20230616 06:39:53.277" endtime="20230616 06:39:57.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:39:57.230" endtime="20230616 06:39:57.231"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:39:57.236" level="INFO">Running command 'ozone sh key put /53142-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:03.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:03.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:39:57.233" endtime="20230616 06:40:03.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:03.476" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:03.475" endtime="20230616 06:40:03.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:03.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:03.476" endtime="20230616 06:40:03.477"/>
</kw>
<status status="PASS" starttime="20230616 06:39:57.233" endtime="20230616 06:40:03.477"/>
</kw>
<msg timestamp="20230616 06:40:03.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:39:57.232" endtime="20230616 06:40:03.477"/>
</kw>
<status status="PASS" starttime="20230616 06:39:57.232" endtime="20230616 06:40:03.477"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:03.481" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:03.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:03.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:03.479" endtime="20230616 06:40:03.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:03.485" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:03.484" endtime="20230616 06:40:03.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:03.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:03.485" endtime="20230616 06:40:03.486"/>
</kw>
<status status="PASS" starttime="20230616 06:40:03.478" endtime="20230616 06:40:03.486"/>
</kw>
<msg timestamp="20230616 06:40:03.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:03.478" endtime="20230616 06:40:03.486"/>
</kw>
<status status="PASS" starttime="20230616 06:40:03.477" endtime="20230616 06:40:03.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:03.490" level="INFO">Running command 'ozone sh key get /53142-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:09.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:09.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:03.488" endtime="20230616 06:40:09.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:09.449" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:09.448" endtime="20230616 06:40:09.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:09.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:09.449" endtime="20230616 06:40:09.450"/>
</kw>
<status status="PASS" starttime="20230616 06:40:03.487" endtime="20230616 06:40:09.450"/>
</kw>
<msg timestamp="20230616 06:40:09.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:03.487" endtime="20230616 06:40:09.450"/>
</kw>
<status status="PASS" starttime="20230616 06:40:03.486" endtime="20230616 06:40:09.451"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:09.454" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:09.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:09.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:09.452" endtime="20230616 06:40:09.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:09.458" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:09.458" endtime="20230616 06:40:09.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:09.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:09.459" endtime="20230616 06:40:09.459"/>
</kw>
<status status="PASS" starttime="20230616 06:40:09.452" endtime="20230616 06:40:09.459"/>
</kw>
<msg timestamp="20230616 06:40:09.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:09.451" endtime="20230616 06:40:09.459"/>
</kw>
<status status="PASS" starttime="20230616 06:40:09.451" endtime="20230616 06:40:09.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:09.463" level="INFO">Running command 'ozone sh key put -t RATIS /53142-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:15.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:15.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:09.461" endtime="20230616 06:40:15.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:15.867" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:15.866" endtime="20230616 06:40:15.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:15.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:15.867" endtime="20230616 06:40:15.868"/>
</kw>
<status status="PASS" starttime="20230616 06:40:09.461" endtime="20230616 06:40:15.868"/>
</kw>
<msg timestamp="20230616 06:40:15.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:09.460" endtime="20230616 06:40:15.868"/>
</kw>
<status status="PASS" starttime="20230616 06:40:09.460" endtime="20230616 06:40:15.869"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:15.873" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:15.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:15.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:15.871" endtime="20230616 06:40:15.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:15.877" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:15.876" endtime="20230616 06:40:15.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:15.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:15.877" endtime="20230616 06:40:15.878"/>
</kw>
<status status="PASS" starttime="20230616 06:40:15.870" endtime="20230616 06:40:15.878"/>
</kw>
<msg timestamp="20230616 06:40:15.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:15.869" endtime="20230616 06:40:15.878"/>
</kw>
<status status="PASS" starttime="20230616 06:40:15.869" endtime="20230616 06:40:15.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:15.882" level="INFO">Running command 'ozone sh key get /53142-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:22.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:22.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:15.880" endtime="20230616 06:40:22.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:22.084" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:22.083" endtime="20230616 06:40:22.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:22.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:22.085" endtime="20230616 06:40:22.085"/>
</kw>
<status status="PASS" starttime="20230616 06:40:15.879" endtime="20230616 06:40:22.085"/>
</kw>
<msg timestamp="20230616 06:40:22.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:15.879" endtime="20230616 06:40:22.086"/>
</kw>
<status status="PASS" starttime="20230616 06:40:15.878" endtime="20230616 06:40:22.086"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:22.090" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:22.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:22.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:22.087" endtime="20230616 06:40:22.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:22.093" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:22.093" endtime="20230616 06:40:22.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:22.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:22.094" endtime="20230616 06:40:22.094"/>
</kw>
<status status="PASS" starttime="20230616 06:40:22.087" endtime="20230616 06:40:22.094"/>
</kw>
<msg timestamp="20230616 06:40:22.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:22.086" endtime="20230616 06:40:22.095"/>
</kw>
<status status="PASS" starttime="20230616 06:40:22.086" endtime="20230616 06:40:22.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:22.099" level="INFO">Running command 'ozone sh key info /53142-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:26.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:26.537" level="INFO">${output} = {
  "volumeName": "53142-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:40:13.416Z",
  "modificationTime": "2023-06-16T06:40:15.4...</msg>
<status status="PASS" starttime="20230616 06:40:22.097" endtime="20230616 06:40:26.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:26.539" level="INFO">{
  "volumeName": "53142-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:40:13.416Z",
  "modificationTime": "2023-06-16T06:40:15.418Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230616 06:40:26.538" endtime="20230616 06:40:26.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:26.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:26.539" endtime="20230616 06:40:26.540"/>
</kw>
<status status="PASS" starttime="20230616 06:40:22.096" endtime="20230616 06:40:26.540"/>
</kw>
<msg timestamp="20230616 06:40:26.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:22.096" endtime="20230616 06:40:26.540"/>
</kw>
<msg timestamp="20230616 06:40:26.540" level="INFO">${result} = {
  "volumeName": "53142-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:40:13.416Z",
  "modificationTime": "2023-06-16T06:40:15.4...</msg>
<status status="PASS" starttime="20230616 06:40:22.095" endtime="20230616 06:40:26.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:40:26.540" endtime="20230616 06:40:26.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:26.545" level="INFO">Running command 'ozone sh key delete --skipTrash /53142-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:30.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:30.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:26.543" endtime="20230616 06:40:30.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:30.110" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:30.109" endtime="20230616 06:40:30.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:30.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:30.110" endtime="20230616 06:40:30.110"/>
</kw>
<status status="PASS" starttime="20230616 06:40:26.542" endtime="20230616 06:40:30.111"/>
</kw>
<msg timestamp="20230616 06:40:30.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:26.542" endtime="20230616 06:40:30.111"/>
</kw>
<status status="PASS" starttime="20230616 06:40:26.541" endtime="20230616 06:40:30.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:30.116" level="INFO">Running command 'ozone sh key cp /53142-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:36.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:36.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:30.114" endtime="20230616 06:40:36.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:36.705" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:36.704" endtime="20230616 06:40:36.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:36.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:36.705" endtime="20230616 06:40:36.706"/>
</kw>
<status status="PASS" starttime="20230616 06:40:30.112" endtime="20230616 06:40:36.706"/>
</kw>
<msg timestamp="20230616 06:40:36.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:30.112" endtime="20230616 06:40:36.706"/>
</kw>
<status status="PASS" starttime="20230616 06:40:30.111" endtime="20230616 06:40:36.707"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:36.710" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:36.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:36.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:36.708" endtime="20230616 06:40:36.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:36.714" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:36.713" endtime="20230616 06:40:36.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:36.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:36.714" endtime="20230616 06:40:36.715"/>
</kw>
<status status="PASS" starttime="20230616 06:40:36.707" endtime="20230616 06:40:36.715"/>
</kw>
<msg timestamp="20230616 06:40:36.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:36.707" endtime="20230616 06:40:36.715"/>
</kw>
<status status="PASS" starttime="20230616 06:40:36.707" endtime="20230616 06:40:36.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:36.719" level="INFO">Running command 'ozone sh key get /53142-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:42.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:42.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:36.717" endtime="20230616 06:40:42.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:42.647" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:42.647" endtime="20230616 06:40:42.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:42.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:42.648" endtime="20230616 06:40:42.648"/>
</kw>
<status status="PASS" starttime="20230616 06:40:36.716" endtime="20230616 06:40:42.649"/>
</kw>
<msg timestamp="20230616 06:40:42.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:36.716" endtime="20230616 06:40:42.649"/>
</kw>
<status status="PASS" starttime="20230616 06:40:36.715" endtime="20230616 06:40:42.649"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:42.653" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:42.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:42.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:42.650" endtime="20230616 06:40:42.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:42.657" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:42.656" endtime="20230616 06:40:42.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:42.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:42.657" endtime="20230616 06:40:42.658"/>
</kw>
<status status="PASS" starttime="20230616 06:40:42.650" endtime="20230616 06:40:42.658"/>
</kw>
<msg timestamp="20230616 06:40:42.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:42.650" endtime="20230616 06:40:42.658"/>
</kw>
<status status="PASS" starttime="20230616 06:40:42.649" endtime="20230616 06:40:42.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:42.662" level="INFO">Running command 'ozone sh key delete --skipTrash /53142-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:46.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:46.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:42.660" endtime="20230616 06:40:46.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:46.670" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:46.670" endtime="20230616 06:40:46.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:46.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:46.671" endtime="20230616 06:40:46.671"/>
</kw>
<status status="PASS" starttime="20230616 06:40:42.660" endtime="20230616 06:40:46.671"/>
</kw>
<msg timestamp="20230616 06:40:46.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:42.659" endtime="20230616 06:40:46.672"/>
</kw>
<status status="PASS" starttime="20230616 06:40:42.659" endtime="20230616 06:40:46.672"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:46.687" level="INFO">Running command 'ozone sh key get /53142-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:50.857" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:40:50.857" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:40:46.673" endtime="20230616 06:40:50.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:50.858" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:40:50.858" endtime="20230616 06:40:50.858"/>
</kw>
<msg timestamp="20230616 06:40:50.859" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:40:46.672" endtime="20230616 06:40:50.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:40:50.859" endtime="20230616 06:40:50.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:50.864" level="INFO">Running command 'ozone sh key get --force /53142-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:40:56.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:40:56.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:40:50.861" endtime="20230616 06:40:56.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:40:56.982" level="INFO"/>
<status status="PASS" starttime="20230616 06:40:56.982" endtime="20230616 06:40:56.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:40:56.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:40:56.983" endtime="20230616 06:40:56.983"/>
</kw>
<status status="PASS" starttime="20230616 06:40:50.861" endtime="20230616 06:40:56.984"/>
</kw>
<msg timestamp="20230616 06:40:56.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:50.860" endtime="20230616 06:40:56.984"/>
</kw>
<msg timestamp="20230616 06:40:56.984" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:40:50.860" endtime="20230616 06:40:56.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:40:56.984" endtime="20230616 06:40:56.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:40:56.989" level="INFO">Running command 'ozone sh key info /53142-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:01.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:01.292" level="INFO">${output} = {
  "volumeName": "53142-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:40:01.053Z",
  "modificationTime": "2023-06-16T06:40:03.071Z",
...</msg>
<status status="PASS" starttime="20230616 06:40:56.987" endtime="20230616 06:41:01.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:01.294" level="INFO">{
  "volumeName": "53142-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:40:01.053Z",
  "modificationTime": "2023-06-16T06:40:03.071Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230616 06:41:01.293" endtime="20230616 06:41:01.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:01.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:01.294" endtime="20230616 06:41:01.295"/>
</kw>
<status status="PASS" starttime="20230616 06:40:56.986" endtime="20230616 06:41:01.295"/>
</kw>
<msg timestamp="20230616 06:41:01.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:40:56.986" endtime="20230616 06:41:01.295"/>
</kw>
<msg timestamp="20230616 06:41:01.295" level="INFO">${result} = {
  "volumeName": "53142-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:40:01.053Z",
  "modificationTime": "2023-06-16T06:40:03.071Z",
...</msg>
<status status="PASS" starttime="20230616 06:40:56.985" endtime="20230616 06:41:01.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:41:01.295" endtime="20230616 06:41:01.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:01.300" level="INFO">Running command 'ozone sh key list /53142-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:05.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:05.482" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230616 06:41:01.298" endtime="20230616 06:41:05.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:05.483" level="INFO">key1</msg>
<status status="PASS" starttime="20230616 06:41:05.482" endtime="20230616 06:41:05.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:05.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:05.484" endtime="20230616 06:41:05.484"/>
</kw>
<status status="PASS" starttime="20230616 06:41:01.297" endtime="20230616 06:41:05.484"/>
</kw>
<msg timestamp="20230616 06:41:05.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:01.297" endtime="20230616 06:41:05.485"/>
</kw>
<msg timestamp="20230616 06:41:05.485" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230616 06:41:01.296" endtime="20230616 06:41:05.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:41:05.485" endtime="20230616 06:41:05.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:05.489" level="INFO">Running command 'ozone sh key rename /53142-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:09.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:09.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:05.487" endtime="20230616 06:41:09.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:09.392" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:09.391" endtime="20230616 06:41:09.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:09.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:09.392" endtime="20230616 06:41:09.393"/>
</kw>
<status status="PASS" starttime="20230616 06:41:05.487" endtime="20230616 06:41:09.393"/>
</kw>
<msg timestamp="20230616 06:41:09.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:05.486" endtime="20230616 06:41:09.393"/>
</kw>
<status status="PASS" starttime="20230616 06:41:05.486" endtime="20230616 06:41:09.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:09.398" level="INFO">Running command 'ozone sh key list /53142-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:13.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:13.737" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230616 06:41:09.395" endtime="20230616 06:41:13.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:13.739" level="INFO">key2</msg>
<status status="PASS" starttime="20230616 06:41:13.738" endtime="20230616 06:41:13.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:13.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:13.739" endtime="20230616 06:41:13.740"/>
</kw>
<status status="PASS" starttime="20230616 06:41:09.395" endtime="20230616 06:41:13.740"/>
</kw>
<msg timestamp="20230616 06:41:13.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:09.394" endtime="20230616 06:41:13.740"/>
</kw>
<msg timestamp="20230616 06:41:13.740" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230616 06:41:09.394" endtime="20230616 06:41:13.740"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:41:13.741" endtime="20230616 06:41:13.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:13.745" level="INFO">Running command 'ozone sh key delete --skipTrash /53142-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:17.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:17.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:13.743" endtime="20230616 06:41:17.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:17.373" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:17.372" endtime="20230616 06:41:17.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:17.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:17.373" endtime="20230616 06:41:17.374"/>
</kw>
<status status="PASS" starttime="20230616 06:41:13.742" endtime="20230616 06:41:17.374"/>
</kw>
<msg timestamp="20230616 06:41:17.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:13.742" endtime="20230616 06:41:17.374"/>
</kw>
<status status="PASS" starttime="20230616 06:41:13.741" endtime="20230616 06:41:17.374"/>
</kw>
<status status="PASS" starttime="20230616 06:39:57.231" endtime="20230616 06:41:17.374"/>
</kw>
<status status="PASS" starttime="20230616 06:39:57.231" endtime="20230616 06:41:17.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:17.378" level="INFO">Running command 'ozone sh volume clrquota --space-quota /53142-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:21.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:21.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:17.376" endtime="20230616 06:41:21.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:21.470" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:21.469" endtime="20230616 06:41:21.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:21.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:21.470" endtime="20230616 06:41:21.470"/>
</kw>
<status status="PASS" starttime="20230616 06:41:17.376" endtime="20230616 06:41:21.471"/>
</kw>
<msg timestamp="20230616 06:41:21.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:17.375" endtime="20230616 06:41:21.471"/>
</kw>
<status status="PASS" starttime="20230616 06:41:17.375" endtime="20230616 06:41:21.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:21.475" level="INFO">Running command 'ozone sh volume info /53142-without-scheme | jq -r '. | select(.name=="53142-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:25.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:25.670" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:41:21.473" endtime="20230616 06:41:25.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:25.672" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:41:25.671" endtime="20230616 06:41:25.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:25.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:25.672" endtime="20230616 06:41:25.673"/>
</kw>
<status status="PASS" starttime="20230616 06:41:21.473" endtime="20230616 06:41:25.673"/>
</kw>
<msg timestamp="20230616 06:41:25.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:21.472" endtime="20230616 06:41:25.673"/>
</kw>
<msg timestamp="20230616 06:41:25.674" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:41:21.471" endtime="20230616 06:41:25.674"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:41:25.674" endtime="20230616 06:41:25.674"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:25.679" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /53142-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:29.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:29.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:25.676" endtime="20230616 06:41:29.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:29.974" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:29.973" endtime="20230616 06:41:29.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:29.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:29.974" endtime="20230616 06:41:29.975"/>
</kw>
<status status="PASS" starttime="20230616 06:41:25.676" endtime="20230616 06:41:29.975"/>
</kw>
<msg timestamp="20230616 06:41:29.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:25.675" endtime="20230616 06:41:29.976"/>
</kw>
<status status="PASS" starttime="20230616 06:41:25.674" endtime="20230616 06:41:29.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:29.980" level="INFO">Running command 'ozone sh volume info /53142-without-scheme | jq -r '. | select(.name=="53142-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:34.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:34.642" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:41:29.978" endtime="20230616 06:41:34.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:34.644" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:41:34.643" endtime="20230616 06:41:34.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:34.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:34.644" endtime="20230616 06:41:34.644"/>
</kw>
<status status="PASS" starttime="20230616 06:41:29.977" endtime="20230616 06:41:34.645"/>
</kw>
<msg timestamp="20230616 06:41:34.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:29.977" endtime="20230616 06:41:34.645"/>
</kw>
<msg timestamp="20230616 06:41:34.645" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:41:29.976" endtime="20230616 06:41:34.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:41:34.645" endtime="20230616 06:41:34.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:34.650" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /53142-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:38.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:38.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:34.647" endtime="20230616 06:41:38.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:38.853" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:38.852" endtime="20230616 06:41:38.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:38.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:38.853" endtime="20230616 06:41:38.854"/>
</kw>
<status status="PASS" starttime="20230616 06:41:34.647" endtime="20230616 06:41:38.854"/>
</kw>
<msg timestamp="20230616 06:41:38.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:34.647" endtime="20230616 06:41:38.854"/>
</kw>
<status status="PASS" starttime="20230616 06:41:34.646" endtime="20230616 06:41:38.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:38.859" level="INFO">Running command 'ozone sh bucket info /53142-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:43.013" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:41:38.856" endtime="20230616 06:41:43.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:43.014" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:41:43.014" endtime="20230616 06:41:43.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:43.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:43.015" endtime="20230616 06:41:43.015"/>
</kw>
<status status="PASS" starttime="20230616 06:41:38.856" endtime="20230616 06:41:43.016"/>
</kw>
<msg timestamp="20230616 06:41:43.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:38.855" endtime="20230616 06:41:43.016"/>
</kw>
<msg timestamp="20230616 06:41:43.016" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:41:38.855" endtime="20230616 06:41:43.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:41:43.016" endtime="20230616 06:41:43.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:43.020" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /53142-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:47.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:47.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:43.018" endtime="20230616 06:41:47.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:47.024" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:47.023" endtime="20230616 06:41:47.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:47.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:47.024" endtime="20230616 06:41:47.025"/>
</kw>
<status status="PASS" starttime="20230616 06:41:43.017" endtime="20230616 06:41:47.025"/>
</kw>
<msg timestamp="20230616 06:41:47.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:43.017" endtime="20230616 06:41:47.025"/>
</kw>
<status status="PASS" starttime="20230616 06:41:43.017" endtime="20230616 06:41:47.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:47.029" level="INFO">Running command 'ozone sh bucket info /53142-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:51.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:51.089" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:41:47.027" endtime="20230616 06:41:51.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:51.090" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:41:51.089" endtime="20230616 06:41:51.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:51.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:51.090" endtime="20230616 06:41:51.091"/>
</kw>
<status status="PASS" starttime="20230616 06:41:47.027" endtime="20230616 06:41:51.091"/>
</kw>
<msg timestamp="20230616 06:41:51.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:47.026" endtime="20230616 06:41:51.091"/>
</kw>
<msg timestamp="20230616 06:41:51.092" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:41:47.025" endtime="20230616 06:41:51.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:41:51.092" endtime="20230616 06:41:51.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:51.096" level="INFO">Running command 'ozone sh bucket delete /53142-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:54.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:54.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:51.094" endtime="20230616 06:41:54.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:54.550" level="INFO"/>
<status status="PASS" starttime="20230616 06:41:54.549" endtime="20230616 06:41:54.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:54.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:54.550" endtime="20230616 06:41:54.550"/>
</kw>
<status status="PASS" starttime="20230616 06:41:51.093" endtime="20230616 06:41:54.551"/>
</kw>
<msg timestamp="20230616 06:41:54.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:51.093" endtime="20230616 06:41:54.551"/>
</kw>
<status status="PASS" starttime="20230616 06:41:51.092" endtime="20230616 06:41:54.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:54.555" level="INFO">Running command 'ozone sh volume delete /53142-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:41:58.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:41:58.172" level="INFO">${output} = Volume 53142-without-scheme is deleted</msg>
<status status="PASS" starttime="20230616 06:41:54.553" endtime="20230616 06:41:58.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:41:58.173" level="INFO">Volume 53142-without-scheme is deleted</msg>
<status status="PASS" starttime="20230616 06:41:58.173" endtime="20230616 06:41:58.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:41:58.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:41:58.174" endtime="20230616 06:41:58.174"/>
</kw>
<status status="PASS" starttime="20230616 06:41:54.552" endtime="20230616 06:41:58.175"/>
</kw>
<msg timestamp="20230616 06:41:58.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:54.552" endtime="20230616 06:41:58.175"/>
</kw>
<status status="PASS" starttime="20230616 06:41:54.551" endtime="20230616 06:41:58.175"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:41:58.180" level="INFO">Running command 'ozone sh volume create /53142-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:02.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:02.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:41:58.177" endtime="20230616 06:42:02.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:02.049" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:02.049" endtime="20230616 06:42:02.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:02.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:02.050" endtime="20230616 06:42:02.050"/>
</kw>
<status status="PASS" starttime="20230616 06:41:58.177" endtime="20230616 06:42:02.050"/>
</kw>
<msg timestamp="20230616 06:42:02.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:41:58.176" endtime="20230616 06:42:02.051"/>
</kw>
<status status="PASS" starttime="20230616 06:41:58.175" endtime="20230616 06:42:02.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:02.055" level="INFO">Running command 'ozone sh volume info /53142-without-scheme &gt; volume.json'.</msg>
<msg timestamp="20230616 06:42:05.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:05.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:02.052" endtime="20230616 06:42:05.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:05.890" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:05.889" endtime="20230616 06:42:05.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:05.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:05.890" endtime="20230616 06:42:05.890"/>
</kw>
<status status="PASS" starttime="20230616 06:42:02.052" endtime="20230616 06:42:05.891"/>
</kw>
<msg timestamp="20230616 06:42:05.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:02.052" endtime="20230616 06:42:05.891"/>
</kw>
<status status="PASS" starttime="20230616 06:42:02.051" endtime="20230616 06:42:05.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:05.895" level="INFO">Running command 'jq -r '. | select(.name=="53142-without-scheme") | .quotaInBytes' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:05.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:05.936" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:42:05.892" endtime="20230616 06:42:05.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:05.937" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:42:05.936" endtime="20230616 06:42:05.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:05.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:05.938" endtime="20230616 06:42:05.938"/>
</kw>
<status status="PASS" starttime="20230616 06:42:05.892" endtime="20230616 06:42:05.939"/>
</kw>
<msg timestamp="20230616 06:42:05.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:05.892" endtime="20230616 06:42:05.939"/>
</kw>
<msg timestamp="20230616 06:42:05.939" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:42:05.891" endtime="20230616 06:42:05.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:05.939" endtime="20230616 06:42:05.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:05.943" level="INFO">Running command 'jq -r '. | select(.name=="53142-without-scheme") | .quotaInNamespace' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:05.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:05.982" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:42:05.941" endtime="20230616 06:42:05.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:05.983" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:42:05.982" endtime="20230616 06:42:05.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:05.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:05.983" endtime="20230616 06:42:05.983"/>
</kw>
<status status="PASS" starttime="20230616 06:42:05.941" endtime="20230616 06:42:05.984"/>
</kw>
<msg timestamp="20230616 06:42:05.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:05.941" endtime="20230616 06:42:05.984"/>
</kw>
<msg timestamp="20230616 06:42:05.984" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:42:05.940" endtime="20230616 06:42:05.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:05.984" endtime="20230616 06:42:05.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:05.989" level="INFO">Running command 'ozone sh bucket create /53142-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:10.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:10.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:05.986" endtime="20230616 06:42:10.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:10.033" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:10.032" endtime="20230616 06:42:10.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:10.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:10.033" endtime="20230616 06:42:10.034"/>
</kw>
<status status="PASS" starttime="20230616 06:42:05.986" endtime="20230616 06:42:10.034"/>
</kw>
<msg timestamp="20230616 06:42:10.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:05.986" endtime="20230616 06:42:10.034"/>
</kw>
<status status="PASS" starttime="20230616 06:42:05.985" endtime="20230616 06:42:10.034"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:10.038" level="INFO">Running command 'ozone sh bucket info /53142-without-scheme/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:42:13.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:13.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:10.036" endtime="20230616 06:42:13.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:13.785" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:13.784" endtime="20230616 06:42:13.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:13.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:13.785" endtime="20230616 06:42:13.786"/>
</kw>
<status status="PASS" starttime="20230616 06:42:10.035" endtime="20230616 06:42:13.786"/>
</kw>
<msg timestamp="20230616 06:42:13.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:10.035" endtime="20230616 06:42:13.786"/>
</kw>
<status status="PASS" starttime="20230616 06:42:10.034" endtime="20230616 06:42:13.787"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:13.791" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:13.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:13.827" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:42:13.788" endtime="20230616 06:42:13.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:13.828" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:42:13.828" endtime="20230616 06:42:13.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:13.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:13.828" endtime="20230616 06:42:13.829"/>
</kw>
<status status="PASS" starttime="20230616 06:42:13.788" endtime="20230616 06:42:13.829"/>
</kw>
<msg timestamp="20230616 06:42:13.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:13.787" endtime="20230616 06:42:13.829"/>
</kw>
<msg timestamp="20230616 06:42:13.830" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:42:13.787" endtime="20230616 06:42:13.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:13.830" endtime="20230616 06:42:13.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:13.834" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:13.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:13.870" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:42:13.832" endtime="20230616 06:42:13.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:13.871" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:42:13.871" endtime="20230616 06:42:13.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:13.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:13.871" endtime="20230616 06:42:13.872"/>
</kw>
<status status="PASS" starttime="20230616 06:42:13.831" endtime="20230616 06:42:13.872"/>
</kw>
<msg timestamp="20230616 06:42:13.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:13.831" endtime="20230616 06:42:13.872"/>
</kw>
<msg timestamp="20230616 06:42:13.873" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:42:13.830" endtime="20230616 06:42:13.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:13.873" endtime="20230616 06:42:13.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:13.877" level="INFO">Running command 'ozone sh bucket delete /53142-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:17.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:17.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:13.875" endtime="20230616 06:42:17.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:17.475" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:17.474" endtime="20230616 06:42:17.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:17.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:17.475" endtime="20230616 06:42:17.475"/>
</kw>
<status status="PASS" starttime="20230616 06:42:13.874" endtime="20230616 06:42:17.476"/>
</kw>
<msg timestamp="20230616 06:42:17.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:13.874" endtime="20230616 06:42:17.476"/>
</kw>
<status status="PASS" starttime="20230616 06:42:13.873" endtime="20230616 06:42:17.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:17.480" level="INFO">Running command 'ozone sh volume delete /53142-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:21.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:21.473" level="INFO">${output} = Volume 53142-without-scheme is deleted</msg>
<status status="PASS" starttime="20230616 06:42:17.478" endtime="20230616 06:42:21.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:21.474" level="INFO">Volume 53142-without-scheme is deleted</msg>
<status status="PASS" starttime="20230616 06:42:21.474" endtime="20230616 06:42:21.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:21.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:21.475" endtime="20230616 06:42:21.475"/>
</kw>
<status status="PASS" starttime="20230616 06:42:17.478" endtime="20230616 06:42:21.475"/>
</kw>
<msg timestamp="20230616 06:42:21.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:17.477" endtime="20230616 06:42:21.476"/>
</kw>
<status status="PASS" starttime="20230616 06:42:17.476" endtime="20230616 06:42:21.476"/>
</kw>
<status status="PASS" starttime="20230616 06:39:17.652" endtime="20230616 06:42:21.476"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:39:17.651" endtime="20230616 06:42:21.476"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230616 06:39:17.627" endtime="20230616 06:42:21.478"/>
</suite>
<suite id="s1-s10-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:42:21.487" level="INFO">${random} = 46353</msg>
<status status="PASS" starttime="20230616 06:42:21.486" endtime="20230616 06:42:21.487"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:42:21.487" level="INFO">${prefix} = 46353</msg>
<status status="PASS" starttime="20230616 06:42:21.487" endtime="20230616 06:42:21.487"/>
</kw>
<status status="PASS" starttime="20230616 06:42:21.486" endtime="20230616 06:42:21.488"/>
</kw>
<test id="s1-s10-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:42:21.488" endtime="20230616 06:42:21.489"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:21.492" level="INFO">Running command 'ozone sh volume info o3://om:9862/46353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:25.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:42:25.253" level="INFO">${output} = VOLUME_NOT_FOUND Volume 46353-with-host is not found</msg>
<status status="PASS" starttime="20230616 06:42:21.490" endtime="20230616 06:42:25.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:25.254" level="INFO">VOLUME_NOT_FOUND Volume 46353-with-host is not found</msg>
<status status="PASS" starttime="20230616 06:42:25.253" endtime="20230616 06:42:25.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:25.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:25.254" endtime="20230616 06:42:25.255"/>
</kw>
<msg timestamp="20230616 06:42:25.255" level="INFO">${result} = VOLUME_NOT_FOUND Volume 46353-with-host is not found</msg>
<status status="PASS" starttime="20230616 06:42:21.489" endtime="20230616 06:42:25.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:42:25.256" endtime="20230616 06:42:25.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:25.260" level="INFO">Running command 'ozone sh volume create o3://om:9862/46353-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:29.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:29.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:25.258" endtime="20230616 06:42:29.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:29.476" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:29.475" endtime="20230616 06:42:29.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:29.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:29.476" endtime="20230616 06:42:29.476"/>
</kw>
<status status="PASS" starttime="20230616 06:42:25.257" endtime="20230616 06:42:29.476"/>
</kw>
<msg timestamp="20230616 06:42:29.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:25.257" endtime="20230616 06:42:29.477"/>
</kw>
<msg timestamp="20230616 06:42:29.477" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:42:25.256" endtime="20230616 06:42:29.477"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 06:42:29.477" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 06:42:29.477" endtime="20230616 06:42:29.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:29.481" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="46353-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:33.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:33.785" level="INFO">${output} = {
  "metadata": {},
  "name": "46353-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-0...</msg>
<status status="PASS" starttime="20230616 06:42:29.479" endtime="20230616 06:42:33.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:33.787" level="INFO">{
  "metadata": {},
  "name": "46353-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-06-16T06:42:29.267Z",
  "modificationTime": "2023-06-16T06:42:29.267Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230616 06:42:33.786" endtime="20230616 06:42:33.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:33.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:33.787" endtime="20230616 06:42:33.787"/>
</kw>
<status status="PASS" starttime="20230616 06:42:29.479" endtime="20230616 06:42:33.788"/>
</kw>
<msg timestamp="20230616 06:42:33.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:29.478" endtime="20230616 06:42:33.788"/>
</kw>
<msg timestamp="20230616 06:42:33.788" level="INFO">${result} = {
  "metadata": {},
  "name": "46353-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-0...</msg>
<status status="PASS" starttime="20230616 06:42:29.478" endtime="20230616 06:42:33.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:42:33.788" endtime="20230616 06:42:33.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:33.793" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/46353-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:37.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:37.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:33.790" endtime="20230616 06:42:37.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:37.679" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:37.678" endtime="20230616 06:42:37.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:37.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:37.679" endtime="20230616 06:42:37.681"/>
</kw>
<status status="PASS" starttime="20230616 06:42:33.790" endtime="20230616 06:42:37.681"/>
</kw>
<msg timestamp="20230616 06:42:37.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:33.790" endtime="20230616 06:42:37.681"/>
</kw>
<status status="PASS" starttime="20230616 06:42:33.789" endtime="20230616 06:42:37.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:37.686" level="INFO">Running command 'ozone sh volume info o3://om:9862/46353-with-host | jq -r '. | select(.name=="46353-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:41.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:41.775" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:42:37.683" endtime="20230616 06:42:41.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:41.777" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230616 06:42:41.776" endtime="20230616 06:42:41.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:41.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:41.777" endtime="20230616 06:42:41.778"/>
</kw>
<status status="PASS" starttime="20230616 06:42:37.683" endtime="20230616 06:42:41.778"/>
</kw>
<msg timestamp="20230616 06:42:41.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:37.682" endtime="20230616 06:42:41.778"/>
</kw>
<msg timestamp="20230616 06:42:41.778" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:42:37.681" endtime="20230616 06:42:41.779"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:41.779" endtime="20230616 06:42:41.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:41.783" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:45.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:45.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:41.781" endtime="20230616 06:42:45.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:45.351" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:45.351" endtime="20230616 06:42:45.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:45.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:45.352" endtime="20230616 06:42:45.352"/>
</kw>
<status status="PASS" starttime="20230616 06:42:41.780" endtime="20230616 06:42:45.352"/>
</kw>
<msg timestamp="20230616 06:42:45.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:41.780" endtime="20230616 06:42:45.353"/>
</kw>
<msg timestamp="20230616 06:42:45.353" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:42:41.779" endtime="20230616 06:42:45.353"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 06:42:45.353" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 06:42:45.353" endtime="20230616 06:42:45.354"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:45.358" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46353-with-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:42:49.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:49.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:45.355" endtime="20230616 06:42:49.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:49.466" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:49.465" endtime="20230616 06:42:49.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:49.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:49.466" endtime="20230616 06:42:49.466"/>
</kw>
<status status="PASS" starttime="20230616 06:42:45.355" endtime="20230616 06:42:49.467"/>
</kw>
<msg timestamp="20230616 06:42:49.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:45.354" endtime="20230616 06:42:49.467"/>
</kw>
<status status="PASS" starttime="20230616 06:42:45.354" endtime="20230616 06:42:49.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:49.471" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:49.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:49.509" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230616 06:42:49.469" endtime="20230616 06:42:49.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:49.510" level="INFO">DISK</msg>
<status status="PASS" starttime="20230616 06:42:49.510" endtime="20230616 06:42:49.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:49.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:49.510" endtime="20230616 06:42:49.511"/>
</kw>
<status status="PASS" starttime="20230616 06:42:49.468" endtime="20230616 06:42:49.511"/>
</kw>
<msg timestamp="20230616 06:42:49.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:49.468" endtime="20230616 06:42:49.511"/>
</kw>
<msg timestamp="20230616 06:42:49.512" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230616 06:42:49.467" endtime="20230616 06:42:49.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:49.512" endtime="20230616 06:42:49.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:49.516" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:49.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:49.552" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:42:49.514" endtime="20230616 06:42:49.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:49.553" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230616 06:42:49.552" endtime="20230616 06:42:49.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:49.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:49.553" endtime="20230616 06:42:49.553"/>
</kw>
<status status="PASS" starttime="20230616 06:42:49.513" endtime="20230616 06:42:49.554"/>
</kw>
<msg timestamp="20230616 06:42:49.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:49.513" endtime="20230616 06:42:49.554"/>
</kw>
<msg timestamp="20230616 06:42:49.554" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:42:49.512" endtime="20230616 06:42:49.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:49.554" endtime="20230616 06:42:49.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:49.558" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:49.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:49.596" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230616 06:42:49.556" endtime="20230616 06:42:49.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:49.597" level="INFO">100</msg>
<status status="PASS" starttime="20230616 06:42:49.596" endtime="20230616 06:42:49.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:49.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:49.597" endtime="20230616 06:42:49.598"/>
</kw>
<status status="PASS" starttime="20230616 06:42:49.555" endtime="20230616 06:42:49.598"/>
</kw>
<msg timestamp="20230616 06:42:49.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:49.555" endtime="20230616 06:42:49.598"/>
</kw>
<msg timestamp="20230616 06:42:49.598" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230616 06:42:49.555" endtime="20230616 06:42:49.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:49.598" endtime="20230616 06:42:49.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:49.602" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/46353-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:53.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:53.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:49.600" endtime="20230616 06:42:53.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:53.642" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:53.641" endtime="20230616 06:42:53.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:53.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:53.642" endtime="20230616 06:42:53.643"/>
</kw>
<status status="PASS" starttime="20230616 06:42:49.600" endtime="20230616 06:42:53.643"/>
</kw>
<msg timestamp="20230616 06:42:53.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:49.600" endtime="20230616 06:42:53.643"/>
</kw>
<status status="PASS" starttime="20230616 06:42:49.599" endtime="20230616 06:42:53.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:53.648" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46353-with-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:42:58.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:58.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:42:53.645" endtime="20230616 06:42:58.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:58.203" level="INFO"/>
<status status="PASS" starttime="20230616 06:42:58.203" endtime="20230616 06:42:58.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:58.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:58.204" endtime="20230616 06:42:58.204"/>
</kw>
<status status="PASS" starttime="20230616 06:42:53.645" endtime="20230616 06:42:58.204"/>
</kw>
<msg timestamp="20230616 06:42:58.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:53.644" endtime="20230616 06:42:58.205"/>
</kw>
<status status="PASS" starttime="20230616 06:42:53.644" endtime="20230616 06:42:58.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:58.209" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:58.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:58.245" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230616 06:42:58.207" endtime="20230616 06:42:58.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:58.246" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230616 06:42:58.246" endtime="20230616 06:42:58.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:58.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:58.247" endtime="20230616 06:42:58.247"/>
</kw>
<status status="PASS" starttime="20230616 06:42:58.206" endtime="20230616 06:42:58.247"/>
</kw>
<msg timestamp="20230616 06:42:58.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:58.206" endtime="20230616 06:42:58.248"/>
</kw>
<msg timestamp="20230616 06:42:58.248" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230616 06:42:58.205" endtime="20230616 06:42:58.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:58.248" endtime="20230616 06:42:58.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:58.252" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:42:58.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:42:58.288" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230616 06:42:58.250" endtime="20230616 06:42:58.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:42:58.289" level="INFO">1000</msg>
<status status="PASS" starttime="20230616 06:42:58.289" endtime="20230616 06:42:58.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:42:58.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:42:58.290" endtime="20230616 06:42:58.290"/>
</kw>
<status status="PASS" starttime="20230616 06:42:58.249" endtime="20230616 06:42:58.290"/>
</kw>
<msg timestamp="20230616 06:42:58.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:58.249" endtime="20230616 06:42:58.290"/>
</kw>
<msg timestamp="20230616 06:42:58.291" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230616 06:42:58.248" endtime="20230616 06:42:58.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:42:58.291" endtime="20230616 06:42:58.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:42:58.295" level="INFO">Running command 'ozone sh bucket list o3://om:9862/46353-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:02.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:02.136" level="INFO">${output} = 46353-with-host</msg>
<status status="PASS" starttime="20230616 06:42:58.293" endtime="20230616 06:43:02.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:02.137" level="INFO">46353-with-host</msg>
<status status="PASS" starttime="20230616 06:43:02.136" endtime="20230616 06:43:02.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:02.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:02.137" endtime="20230616 06:43:02.138"/>
</kw>
<status status="PASS" starttime="20230616 06:42:58.292" endtime="20230616 06:43:02.138"/>
</kw>
<msg timestamp="20230616 06:43:02.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:42:58.292" endtime="20230616 06:43:02.139"/>
</kw>
<msg timestamp="20230616 06:43:02.139" level="INFO">${result} = 46353-with-host</msg>
<status status="PASS" starttime="20230616 06:42:58.291" endtime="20230616 06:43:02.139"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:43:02.139" endtime="20230616 06:43:02.139"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:02.144" level="INFO">Running command 'ozone sh key put o3://om:9862/46353-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:07.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:07.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:02.142" endtime="20230616 06:43:07.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:07.823" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:07.823" endtime="20230616 06:43:07.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:07.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:07.823" endtime="20230616 06:43:07.824"/>
</kw>
<status status="PASS" starttime="20230616 06:43:02.141" endtime="20230616 06:43:07.824"/>
</kw>
<msg timestamp="20230616 06:43:07.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:02.141" endtime="20230616 06:43:07.824"/>
</kw>
<status status="PASS" starttime="20230616 06:43:02.140" endtime="20230616 06:43:07.825"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:07.829" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:07.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:07.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:07.826" endtime="20230616 06:43:07.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:07.833" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:07.832" endtime="20230616 06:43:07.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:07.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:07.833" endtime="20230616 06:43:07.833"/>
</kw>
<status status="PASS" starttime="20230616 06:43:07.826" endtime="20230616 06:43:07.834"/>
</kw>
<msg timestamp="20230616 06:43:07.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:07.825" endtime="20230616 06:43:07.834"/>
</kw>
<status status="PASS" starttime="20230616 06:43:07.825" endtime="20230616 06:43:07.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:07.837" level="INFO">Running command 'ozone sh key get o3://om:9862/46353-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:13.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:13.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:07.835" endtime="20230616 06:43:13.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:13.902" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:13.901" endtime="20230616 06:43:13.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:13.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:13.902" endtime="20230616 06:43:13.903"/>
</kw>
<status status="PASS" starttime="20230616 06:43:07.835" endtime="20230616 06:43:13.903"/>
</kw>
<msg timestamp="20230616 06:43:13.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:07.835" endtime="20230616 06:43:13.903"/>
</kw>
<status status="PASS" starttime="20230616 06:43:07.834" endtime="20230616 06:43:13.904"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:13.907" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:13.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:13.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:13.905" endtime="20230616 06:43:13.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:13.911" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:13.911" endtime="20230616 06:43:13.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:13.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:13.912" endtime="20230616 06:43:13.912"/>
</kw>
<status status="PASS" starttime="20230616 06:43:13.904" endtime="20230616 06:43:13.912"/>
</kw>
<msg timestamp="20230616 06:43:13.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:13.904" endtime="20230616 06:43:13.913"/>
</kw>
<status status="PASS" starttime="20230616 06:43:13.904" endtime="20230616 06:43:13.913"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:13.917" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/46353-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:19.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:19.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:13.914" endtime="20230616 06:43:19.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:19.908" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:19.907" endtime="20230616 06:43:19.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:19.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:19.908" endtime="20230616 06:43:19.909"/>
</kw>
<status status="PASS" starttime="20230616 06:43:13.914" endtime="20230616 06:43:19.909"/>
</kw>
<msg timestamp="20230616 06:43:19.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:13.914" endtime="20230616 06:43:19.909"/>
</kw>
<status status="PASS" starttime="20230616 06:43:13.913" endtime="20230616 06:43:19.910"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:19.913" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:19.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:19.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:19.911" endtime="20230616 06:43:19.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:19.917" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:19.916" endtime="20230616 06:43:19.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:19.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:19.917" endtime="20230616 06:43:19.919"/>
</kw>
<status status="PASS" starttime="20230616 06:43:19.910" endtime="20230616 06:43:19.919"/>
</kw>
<msg timestamp="20230616 06:43:19.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:19.910" endtime="20230616 06:43:19.919"/>
</kw>
<status status="PASS" starttime="20230616 06:43:19.910" endtime="20230616 06:43:19.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:19.923" level="INFO">Running command 'ozone sh key get o3://om:9862/46353-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:25.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:25.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:19.921" endtime="20230616 06:43:25.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:25.651" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:25.650" endtime="20230616 06:43:25.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:25.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:25.651" endtime="20230616 06:43:25.652"/>
</kw>
<status status="PASS" starttime="20230616 06:43:19.921" endtime="20230616 06:43:25.652"/>
</kw>
<msg timestamp="20230616 06:43:25.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:19.920" endtime="20230616 06:43:25.652"/>
</kw>
<status status="PASS" starttime="20230616 06:43:19.920" endtime="20230616 06:43:25.652"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:25.657" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:25.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:25.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:25.654" endtime="20230616 06:43:25.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:25.660" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:25.660" endtime="20230616 06:43:25.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:25.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:25.661" endtime="20230616 06:43:25.661"/>
</kw>
<status status="PASS" starttime="20230616 06:43:25.653" endtime="20230616 06:43:25.661"/>
</kw>
<msg timestamp="20230616 06:43:25.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:25.653" endtime="20230616 06:43:25.662"/>
</kw>
<status status="PASS" starttime="20230616 06:43:25.653" endtime="20230616 06:43:25.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:25.665" level="INFO">Running command 'ozone sh key info o3://om:9862/46353-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:29.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:29.554" level="INFO">${output} = {
  "volumeName": "46353-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:43:17.460Z",
  "modificationTime": "2023-06-16T06:43:19.326Z",...</msg>
<status status="PASS" starttime="20230616 06:43:25.663" endtime="20230616 06:43:29.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:29.556" level="INFO">{
  "volumeName": "46353-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:43:17.460Z",
  "modificationTime": "2023-06-16T06:43:19.326Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230616 06:43:29.555" endtime="20230616 06:43:29.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:29.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:29.556" endtime="20230616 06:43:29.557"/>
</kw>
<status status="PASS" starttime="20230616 06:43:25.663" endtime="20230616 06:43:29.557"/>
</kw>
<msg timestamp="20230616 06:43:29.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:25.663" endtime="20230616 06:43:29.557"/>
</kw>
<msg timestamp="20230616 06:43:29.557" level="INFO">${result} = {
  "volumeName": "46353-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:43:17.460Z",
  "modificationTime": "2023-06-16T06:43:19.326Z",...</msg>
<status status="PASS" starttime="20230616 06:43:25.662" endtime="20230616 06:43:29.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:43:29.558" endtime="20230616 06:43:29.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:29.562" level="INFO">Running command 'ozone sh key delete --skipTrash o3://om:9862/46353-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:33.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:33.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:29.560" endtime="20230616 06:43:33.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:33.499" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:33.499" endtime="20230616 06:43:33.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:33.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:33.500" endtime="20230616 06:43:33.500"/>
</kw>
<status status="PASS" starttime="20230616 06:43:29.559" endtime="20230616 06:43:33.500"/>
</kw>
<msg timestamp="20230616 06:43:33.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:29.559" endtime="20230616 06:43:33.501"/>
</kw>
<status status="PASS" starttime="20230616 06:43:29.558" endtime="20230616 06:43:33.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:33.505" level="INFO">Running command 'ozone sh key cp o3://om:9862/46353-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:39.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:39.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:33.503" endtime="20230616 06:43:39.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:39.746" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:39.745" endtime="20230616 06:43:39.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:39.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:39.746" endtime="20230616 06:43:39.746"/>
</kw>
<status status="PASS" starttime="20230616 06:43:33.502" endtime="20230616 06:43:39.747"/>
</kw>
<msg timestamp="20230616 06:43:39.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:33.502" endtime="20230616 06:43:39.747"/>
</kw>
<status status="PASS" starttime="20230616 06:43:33.501" endtime="20230616 06:43:39.747"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:39.751" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:39.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:39.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:39.749" endtime="20230616 06:43:39.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:39.755" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:39.754" endtime="20230616 06:43:39.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:39.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:39.755" endtime="20230616 06:43:39.756"/>
</kw>
<status status="PASS" starttime="20230616 06:43:39.748" endtime="20230616 06:43:39.756"/>
</kw>
<msg timestamp="20230616 06:43:39.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:39.748" endtime="20230616 06:43:39.756"/>
</kw>
<status status="PASS" starttime="20230616 06:43:39.747" endtime="20230616 06:43:39.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:39.760" level="INFO">Running command 'ozone sh key get o3://om:9862/46353-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:45.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:45.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:39.758" endtime="20230616 06:43:45.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:45.427" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:45.426" endtime="20230616 06:43:45.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:45.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:45.427" endtime="20230616 06:43:45.428"/>
</kw>
<status status="PASS" starttime="20230616 06:43:39.757" endtime="20230616 06:43:45.428"/>
</kw>
<msg timestamp="20230616 06:43:45.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:39.757" endtime="20230616 06:43:45.428"/>
</kw>
<status status="PASS" starttime="20230616 06:43:39.757" endtime="20230616 06:43:45.428"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:45.432" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:45.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:45.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:45.430" endtime="20230616 06:43:45.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:45.436" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:45.436" endtime="20230616 06:43:45.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:45.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:45.436" endtime="20230616 06:43:45.437"/>
</kw>
<status status="PASS" starttime="20230616 06:43:45.429" endtime="20230616 06:43:45.437"/>
</kw>
<msg timestamp="20230616 06:43:45.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:45.429" endtime="20230616 06:43:45.437"/>
</kw>
<status status="PASS" starttime="20230616 06:43:45.428" endtime="20230616 06:43:45.438"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:45.441" level="INFO">Running command 'ozone sh key delete --skipTrash o3://om:9862/46353-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:49.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:49.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:45.439" endtime="20230616 06:43:49.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:49.489" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:49.488" endtime="20230616 06:43:49.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:49.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:49.489" endtime="20230616 06:43:49.490"/>
</kw>
<status status="PASS" starttime="20230616 06:43:45.439" endtime="20230616 06:43:49.490"/>
</kw>
<msg timestamp="20230616 06:43:49.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:45.438" endtime="20230616 06:43:49.490"/>
</kw>
<status status="PASS" starttime="20230616 06:43:45.438" endtime="20230616 06:43:49.491"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:49.494" level="INFO">Running command 'ozone sh key get o3://om:9862/46353-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:53.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:43:53.275" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:43:49.492" endtime="20230616 06:43:53.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:53.277" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:43:53.276" endtime="20230616 06:43:53.277"/>
</kw>
<msg timestamp="20230616 06:43:53.278" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:43:49.491" endtime="20230616 06:43:53.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:43:53.278" endtime="20230616 06:43:53.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:53.282" level="INFO">Running command 'ozone sh key get --force o3://om:9862/46353-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:43:59.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:43:59.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:43:53.280" endtime="20230616 06:43:59.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:43:59.241" level="INFO"/>
<status status="PASS" starttime="20230616 06:43:59.241" endtime="20230616 06:43:59.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:43:59.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:43:59.242" endtime="20230616 06:43:59.242"/>
</kw>
<status status="PASS" starttime="20230616 06:43:53.279" endtime="20230616 06:43:59.242"/>
</kw>
<msg timestamp="20230616 06:43:59.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:53.279" endtime="20230616 06:43:59.243"/>
</kw>
<msg timestamp="20230616 06:43:59.243" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:43:53.279" endtime="20230616 06:43:59.243"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:43:59.243" endtime="20230616 06:43:59.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:43:59.247" level="INFO">Running command 'ozone sh key info o3://om:9862/46353-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:03.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:03.500" level="INFO">${output} = {
  "volumeName": "46353-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:43:05.572Z",
  "modificationTime": "2023-06-16T06:43:07.391Z",
  "re...</msg>
<status status="PASS" starttime="20230616 06:43:59.245" endtime="20230616 06:44:03.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:03.501" level="INFO">{
  "volumeName": "46353-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:43:05.572Z",
  "modificationTime": "2023-06-16T06:43:07.391Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230616 06:44:03.501" endtime="20230616 06:44:03.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:03.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:03.502" endtime="20230616 06:44:03.502"/>
</kw>
<status status="PASS" starttime="20230616 06:43:59.245" endtime="20230616 06:44:03.502"/>
</kw>
<msg timestamp="20230616 06:44:03.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:43:59.244" endtime="20230616 06:44:03.503"/>
</kw>
<msg timestamp="20230616 06:44:03.503" level="INFO">${result} = {
  "volumeName": "46353-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:43:05.572Z",
  "modificationTime": "2023-06-16T06:43:07.391Z",
  "re...</msg>
<status status="PASS" starttime="20230616 06:43:59.243" endtime="20230616 06:44:03.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:44:03.503" endtime="20230616 06:44:03.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:03.507" level="INFO">Running command 'ozone sh key list o3://om:9862/46353-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:07.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:07.551" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230616 06:44:03.505" endtime="20230616 06:44:07.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:07.553" level="INFO">key1</msg>
<status status="PASS" starttime="20230616 06:44:07.552" endtime="20230616 06:44:07.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:07.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:07.553" endtime="20230616 06:44:07.554"/>
</kw>
<status status="PASS" starttime="20230616 06:44:03.505" endtime="20230616 06:44:07.554"/>
</kw>
<msg timestamp="20230616 06:44:07.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:03.504" endtime="20230616 06:44:07.554"/>
</kw>
<msg timestamp="20230616 06:44:07.554" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230616 06:44:03.503" endtime="20230616 06:44:07.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:44:07.554" endtime="20230616 06:44:07.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:07.559" level="INFO">Running command 'ozone sh key rename o3://om:9862/46353-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:11.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:11.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:07.556" endtime="20230616 06:44:11.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:11.172" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:11.171" endtime="20230616 06:44:11.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:11.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:11.172" endtime="20230616 06:44:11.173"/>
</kw>
<status status="PASS" starttime="20230616 06:44:07.556" endtime="20230616 06:44:11.173"/>
</kw>
<msg timestamp="20230616 06:44:11.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:07.556" endtime="20230616 06:44:11.173"/>
</kw>
<status status="PASS" starttime="20230616 06:44:07.555" endtime="20230616 06:44:11.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:11.178" level="INFO">Running command 'ozone sh key list o3://om:9862/46353-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:15.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:15.674" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230616 06:44:11.175" endtime="20230616 06:44:15.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:15.676" level="INFO">key2</msg>
<status status="PASS" starttime="20230616 06:44:15.675" endtime="20230616 06:44:15.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:15.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:15.676" endtime="20230616 06:44:15.677"/>
</kw>
<status status="PASS" starttime="20230616 06:44:11.175" endtime="20230616 06:44:15.677"/>
</kw>
<msg timestamp="20230616 06:44:15.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:11.174" endtime="20230616 06:44:15.677"/>
</kw>
<msg timestamp="20230616 06:44:15.678" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230616 06:44:11.174" endtime="20230616 06:44:15.678"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:44:15.678" endtime="20230616 06:44:15.678"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:15.683" level="INFO">Running command 'ozone sh key delete --skipTrash o3://om:9862/46353-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:19.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:19.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:15.680" endtime="20230616 06:44:19.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:19.609" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:19.608" endtime="20230616 06:44:19.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:19.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:19.609" endtime="20230616 06:44:19.609"/>
</kw>
<status status="PASS" starttime="20230616 06:44:15.680" endtime="20230616 06:44:19.610"/>
</kw>
<msg timestamp="20230616 06:44:19.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:15.679" endtime="20230616 06:44:19.610"/>
</kw>
<status status="PASS" starttime="20230616 06:44:15.678" endtime="20230616 06:44:19.610"/>
</kw>
<status status="PASS" starttime="20230616 06:43:02.140" endtime="20230616 06:44:19.610"/>
</kw>
<status status="PASS" starttime="20230616 06:43:02.140" endtime="20230616 06:44:19.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:19.615" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/46353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:23.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:23.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:19.612" endtime="20230616 06:44:23.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:23.525" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:23.524" endtime="20230616 06:44:23.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:23.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:23.525" endtime="20230616 06:44:23.526"/>
</kw>
<status status="PASS" starttime="20230616 06:44:19.611" endtime="20230616 06:44:23.526"/>
</kw>
<msg timestamp="20230616 06:44:23.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:19.611" endtime="20230616 06:44:23.526"/>
</kw>
<status status="PASS" starttime="20230616 06:44:19.610" endtime="20230616 06:44:23.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:23.531" level="INFO">Running command 'ozone sh volume info o3://om:9862/46353-with-host | jq -r '. | select(.name=="46353-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:27.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:27.465" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:44:23.528" endtime="20230616 06:44:27.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:27.466" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:44:27.465" endtime="20230616 06:44:27.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:27.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:27.466" endtime="20230616 06:44:27.467"/>
</kw>
<status status="PASS" starttime="20230616 06:44:23.528" endtime="20230616 06:44:27.467"/>
</kw>
<msg timestamp="20230616 06:44:27.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:23.528" endtime="20230616 06:44:27.467"/>
</kw>
<msg timestamp="20230616 06:44:27.468" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:44:23.527" endtime="20230616 06:44:27.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:44:27.468" endtime="20230616 06:44:27.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:27.472" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/46353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:31.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:31.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:27.470" endtime="20230616 06:44:31.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:31.220" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:31.211" endtime="20230616 06:44:31.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:31.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:31.220" endtime="20230616 06:44:31.221"/>
</kw>
<status status="PASS" starttime="20230616 06:44:27.469" endtime="20230616 06:44:31.221"/>
</kw>
<msg timestamp="20230616 06:44:31.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:27.469" endtime="20230616 06:44:31.221"/>
</kw>
<status status="PASS" starttime="20230616 06:44:27.468" endtime="20230616 06:44:31.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:31.226" level="INFO">Running command 'ozone sh volume info o3://om:9862/46353-with-host | jq -r '. | select(.name=="46353-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:35.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:35.007" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:44:31.223" endtime="20230616 06:44:35.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:35.008" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:44:35.007" endtime="20230616 06:44:35.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:35.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:35.008" endtime="20230616 06:44:35.009"/>
</kw>
<status status="PASS" starttime="20230616 06:44:31.223" endtime="20230616 06:44:35.009"/>
</kw>
<msg timestamp="20230616 06:44:35.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:31.222" endtime="20230616 06:44:35.010"/>
</kw>
<msg timestamp="20230616 06:44:35.010" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:44:31.222" endtime="20230616 06:44:35.010"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:44:35.010" endtime="20230616 06:44:35.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:35.015" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/46353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:39.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:39.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:35.012" endtime="20230616 06:44:39.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:39.002" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:39.001" endtime="20230616 06:44:39.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:39.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:39.002" endtime="20230616 06:44:39.003"/>
</kw>
<status status="PASS" starttime="20230616 06:44:35.011" endtime="20230616 06:44:39.003"/>
</kw>
<msg timestamp="20230616 06:44:39.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:35.011" endtime="20230616 06:44:39.003"/>
</kw>
<status status="PASS" starttime="20230616 06:44:35.011" endtime="20230616 06:44:39.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:39.007" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46353-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:43.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:43.197" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:44:39.005" endtime="20230616 06:44:43.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:43.198" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:44:43.197" endtime="20230616 06:44:43.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:43.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:43.198" endtime="20230616 06:44:43.199"/>
</kw>
<status status="PASS" starttime="20230616 06:44:39.004" endtime="20230616 06:44:43.199"/>
</kw>
<msg timestamp="20230616 06:44:43.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:39.004" endtime="20230616 06:44:43.199"/>
</kw>
<msg timestamp="20230616 06:44:43.200" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:44:39.003" endtime="20230616 06:44:43.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:44:43.200" endtime="20230616 06:44:43.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:43.204" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/46353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:47.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:47.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:43.202" endtime="20230616 06:44:47.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:47.280" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:47.279" endtime="20230616 06:44:47.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:47.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:47.280" endtime="20230616 06:44:47.280"/>
</kw>
<status status="PASS" starttime="20230616 06:44:43.201" endtime="20230616 06:44:47.281"/>
</kw>
<msg timestamp="20230616 06:44:47.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:43.201" endtime="20230616 06:44:47.281"/>
</kw>
<status status="PASS" starttime="20230616 06:44:43.200" endtime="20230616 06:44:47.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:47.286" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46353-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:51.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:51.238" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:44:47.283" endtime="20230616 06:44:51.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:51.239" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:44:51.238" endtime="20230616 06:44:51.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:51.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:51.240" endtime="20230616 06:44:51.240"/>
</kw>
<status status="PASS" starttime="20230616 06:44:47.283" endtime="20230616 06:44:51.241"/>
</kw>
<msg timestamp="20230616 06:44:51.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:47.282" endtime="20230616 06:44:51.241"/>
</kw>
<msg timestamp="20230616 06:44:51.241" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:44:47.281" endtime="20230616 06:44:51.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:44:51.241" endtime="20230616 06:44:51.242"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:51.246" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/46353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:55.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:55.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:51.243" endtime="20230616 06:44:55.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:55.107" level="INFO"/>
<status status="PASS" starttime="20230616 06:44:55.107" endtime="20230616 06:44:55.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:55.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:55.108" endtime="20230616 06:44:55.108"/>
</kw>
<status status="PASS" starttime="20230616 06:44:51.243" endtime="20230616 06:44:55.109"/>
</kw>
<msg timestamp="20230616 06:44:55.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:51.243" endtime="20230616 06:44:55.109"/>
</kw>
<status status="PASS" starttime="20230616 06:44:51.242" endtime="20230616 06:44:55.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:55.113" level="INFO">Running command 'ozone sh volume delete o3://om:9862/46353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:44:59.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:44:59.034" level="INFO">${output} = Volume 46353-with-host is deleted</msg>
<status status="PASS" starttime="20230616 06:44:55.111" endtime="20230616 06:44:59.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:44:59.035" level="INFO">Volume 46353-with-host is deleted</msg>
<status status="PASS" starttime="20230616 06:44:59.035" endtime="20230616 06:44:59.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:44:59.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:44:59.036" endtime="20230616 06:44:59.036"/>
</kw>
<status status="PASS" starttime="20230616 06:44:55.110" endtime="20230616 06:44:59.036"/>
</kw>
<msg timestamp="20230616 06:44:59.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:55.110" endtime="20230616 06:44:59.037"/>
</kw>
<status status="PASS" starttime="20230616 06:44:55.109" endtime="20230616 06:44:59.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:44:59.041" level="INFO">Running command 'ozone sh volume create o3://om:9862/46353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:02.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:02.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:44:59.039" endtime="20230616 06:45:02.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:02.810" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:02.809" endtime="20230616 06:45:02.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:02.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:02.810" endtime="20230616 06:45:02.811"/>
</kw>
<status status="PASS" starttime="20230616 06:44:59.038" endtime="20230616 06:45:02.811"/>
</kw>
<msg timestamp="20230616 06:45:02.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:44:59.038" endtime="20230616 06:45:02.811"/>
</kw>
<status status="PASS" starttime="20230616 06:44:59.037" endtime="20230616 06:45:02.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:02.815" level="INFO">Running command 'ozone sh volume info o3://om:9862/46353-with-host &gt; volume.json'.</msg>
<msg timestamp="20230616 06:45:07.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:07.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:02.813" endtime="20230616 06:45:07.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:07.145" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:07.144" endtime="20230616 06:45:07.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:07.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:07.145" endtime="20230616 06:45:07.145"/>
</kw>
<status status="PASS" starttime="20230616 06:45:02.813" endtime="20230616 06:45:07.146"/>
</kw>
<msg timestamp="20230616 06:45:07.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:02.812" endtime="20230616 06:45:07.146"/>
</kw>
<status status="PASS" starttime="20230616 06:45:02.812" endtime="20230616 06:45:07.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:07.151" level="INFO">Running command 'jq -r '. | select(.name=="46353-with-host") | .quotaInBytes' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:07.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:07.188" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:45:07.148" endtime="20230616 06:45:07.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:07.189" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:45:07.189" endtime="20230616 06:45:07.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:07.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:07.189" endtime="20230616 06:45:07.190"/>
</kw>
<status status="PASS" starttime="20230616 06:45:07.148" endtime="20230616 06:45:07.190"/>
</kw>
<msg timestamp="20230616 06:45:07.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:07.147" endtime="20230616 06:45:07.190"/>
</kw>
<msg timestamp="20230616 06:45:07.190" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:45:07.146" endtime="20230616 06:45:07.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:45:07.191" endtime="20230616 06:45:07.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:07.194" level="INFO">Running command 'jq -r '. | select(.name=="46353-with-host") | .quotaInNamespace' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:07.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:07.232" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:45:07.192" endtime="20230616 06:45:07.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:07.233" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:45:07.232" endtime="20230616 06:45:07.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:07.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:07.233" endtime="20230616 06:45:07.234"/>
</kw>
<status status="PASS" starttime="20230616 06:45:07.192" endtime="20230616 06:45:07.234"/>
</kw>
<msg timestamp="20230616 06:45:07.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:07.192" endtime="20230616 06:45:07.234"/>
</kw>
<msg timestamp="20230616 06:45:07.234" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:45:07.191" endtime="20230616 06:45:07.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:45:07.234" endtime="20230616 06:45:07.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:07.238" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:11.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:11.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:07.236" endtime="20230616 06:45:11.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:11.031" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:11.031" endtime="20230616 06:45:11.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:11.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:11.032" endtime="20230616 06:45:11.032"/>
</kw>
<status status="PASS" starttime="20230616 06:45:07.236" endtime="20230616 06:45:11.033"/>
</kw>
<msg timestamp="20230616 06:45:11.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:07.235" endtime="20230616 06:45:11.033"/>
</kw>
<status status="PASS" starttime="20230616 06:45:07.235" endtime="20230616 06:45:11.033"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:11.037" level="INFO">Running command 'ozone sh bucket info o3://om:9862/46353-with-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:45:14.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:14.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:11.035" endtime="20230616 06:45:14.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:14.883" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:14.882" endtime="20230616 06:45:14.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:14.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:14.883" endtime="20230616 06:45:14.884"/>
</kw>
<status status="PASS" starttime="20230616 06:45:11.034" endtime="20230616 06:45:14.884"/>
</kw>
<msg timestamp="20230616 06:45:14.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:11.034" endtime="20230616 06:45:14.884"/>
</kw>
<status status="PASS" starttime="20230616 06:45:11.033" endtime="20230616 06:45:14.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:14.889" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:14.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:14.926" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:45:14.886" endtime="20230616 06:45:14.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:14.927" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:45:14.926" endtime="20230616 06:45:14.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:14.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:14.927" endtime="20230616 06:45:14.928"/>
</kw>
<status status="PASS" starttime="20230616 06:45:14.886" endtime="20230616 06:45:14.928"/>
</kw>
<msg timestamp="20230616 06:45:14.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:14.885" endtime="20230616 06:45:14.929"/>
</kw>
<msg timestamp="20230616 06:45:14.929" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:45:14.885" endtime="20230616 06:45:14.929"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:45:14.929" endtime="20230616 06:45:14.929"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:14.933" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:14.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:14.970" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:45:14.931" endtime="20230616 06:45:14.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:14.971" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:45:14.971" endtime="20230616 06:45:14.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:14.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:14.971" endtime="20230616 06:45:14.972"/>
</kw>
<status status="PASS" starttime="20230616 06:45:14.930" endtime="20230616 06:45:14.972"/>
</kw>
<msg timestamp="20230616 06:45:14.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:14.930" endtime="20230616 06:45:14.972"/>
</kw>
<msg timestamp="20230616 06:45:14.973" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:45:14.930" endtime="20230616 06:45:14.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:45:14.973" endtime="20230616 06:45:14.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:14.976" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/46353-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:18.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:18.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:14.975" endtime="20230616 06:45:18.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:18.831" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:18.830" endtime="20230616 06:45:18.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:18.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:18.831" endtime="20230616 06:45:18.832"/>
</kw>
<status status="PASS" starttime="20230616 06:45:14.974" endtime="20230616 06:45:18.832"/>
</kw>
<msg timestamp="20230616 06:45:18.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:14.974" endtime="20230616 06:45:18.832"/>
</kw>
<status status="PASS" starttime="20230616 06:45:14.973" endtime="20230616 06:45:18.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:18.836" level="INFO">Running command 'ozone sh volume delete o3://om:9862/46353-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:22.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:22.789" level="INFO">${output} = Volume 46353-with-host is deleted</msg>
<status status="PASS" starttime="20230616 06:45:18.834" endtime="20230616 06:45:22.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:22.791" level="INFO">Volume 46353-with-host is deleted</msg>
<status status="PASS" starttime="20230616 06:45:22.790" endtime="20230616 06:45:22.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:22.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:22.791" endtime="20230616 06:45:22.791"/>
</kw>
<status status="PASS" starttime="20230616 06:45:18.834" endtime="20230616 06:45:22.792"/>
</kw>
<msg timestamp="20230616 06:45:22.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:18.833" endtime="20230616 06:45:22.792"/>
</kw>
<status status="PASS" starttime="20230616 06:45:18.833" endtime="20230616 06:45:22.792"/>
</kw>
<status status="PASS" starttime="20230616 06:42:21.489" endtime="20230616 06:45:22.792"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:42:21.488" endtime="20230616 06:45:22.792"/>
</test>
<test id="s1-s10-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:45:22.794" endtime="20230616 06:45:22.795"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:22.798" level="INFO">Running command 'ozone sh volume create o3://om:9862/46353-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:26.833" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:45:26.833" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB with positive long values). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230616 06:45:22.796" endtime="20230616 06:45:26.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:26.834" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB with positive long values). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230616 06:45:26.833" endtime="20230616 06:45:26.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:26.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:26.834" endtime="20230616 06:45:26.835"/>
</kw>
<msg timestamp="20230616 06:45:26.835" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB with positive long values). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20230616 06:45:22.795" endtime="20230616 06:45:26.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:45:26.835" endtime="20230616 06:45:26.836"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:26.839" level="INFO">Running command 'ozone sh volume create o3://om:9862/46353-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:30.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:30.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:26.836" endtime="20230616 06:45:30.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:30.827" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:30.826" endtime="20230616 06:45:30.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:30.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:30.827" endtime="20230616 06:45:30.828"/>
</kw>
<status status="PASS" starttime="20230616 06:45:26.836" endtime="20230616 06:45:30.828"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:30.831" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:34.899" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:45:34.899" level="INFO">${output} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20230616 06:45:30.829" endtime="20230616 06:45:34.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:34.901" level="INFO">INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20230616 06:45:34.900" endtime="20230616 06:45:34.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:34.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:34.901" endtime="20230616 06:45:34.902"/>
</kw>
<msg timestamp="20230616 06:45:34.902" level="INFO">${result} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20230616 06:45:30.828" endtime="20230616 06:45:34.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:45:34.902" endtime="20230616 06:45:34.902"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:34.906" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:37.790" level="INFO">${rc} = 2</msg>
<msg timestamp="20230616 06:45:37.790" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230616 06:45:34.903" endtime="20230616 06:45:37.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:37.792" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20230616 06:45:37.791" endtime="20230616 06:45:37.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:37.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:37.792" endtime="20230616 06:45:37.793"/>
</kw>
<msg timestamp="20230616 06:45:37.793" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20230616 06:45:34.903" endtime="20230616 06:45:37.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:45:37.793" endtime="20230616 06:45:37.793"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:37.797" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:41.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:41.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:37.794" endtime="20230616 06:45:41.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:41.782" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:41.781" endtime="20230616 06:45:41.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:41.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:41.782" endtime="20230616 06:45:41.783"/>
</kw>
<status status="PASS" starttime="20230616 06:45:37.794" endtime="20230616 06:45:41.783"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:41.787" level="INFO">Running command 'ozone sh key info o3://om:9862/46353-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:45.749" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:45:45.749" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230616 06:45:41.784" endtime="20230616 06:45:45.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:45.751" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230616 06:45:45.750" endtime="20230616 06:45:45.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:45.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:45.751" endtime="20230616 06:45:45.751"/>
</kw>
<msg timestamp="20230616 06:45:45.752" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20230616 06:45:41.784" endtime="20230616 06:45:45.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:45:45.752" endtime="20230616 06:45:45.752"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:45.756" level="INFO">Running command 'ozone sh key put o3://om:9862/46353-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:48.041" level="INFO">${rc} = 2</msg>
<msg timestamp="20230616 06:45:48.042" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230616 06:45:45.753" endtime="20230616 06:45:48.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:48.043" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20230616 06:45:48.042" endtime="20230616 06:45:48.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:48.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:48.043" endtime="20230616 06:45:48.044"/>
</kw>
<msg timestamp="20230616 06:45:48.044" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20230616 06:45:45.752" endtime="20230616 06:45:48.044"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:48.048" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/46353-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:51.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:51.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:48.045" endtime="20230616 06:45:51.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:51.912" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:51.912" endtime="20230616 06:45:51.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:51.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:51.913" endtime="20230616 06:45:51.913"/>
</kw>
<status status="PASS" starttime="20230616 06:45:48.044" endtime="20230616 06:45:51.914"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:51.917" level="INFO">Running command 'ozone sh volume delete o3://om:9862/46353-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:55.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:55.542" level="INFO">${output} = Volume 46353-with-errors is deleted</msg>
<status status="PASS" starttime="20230616 06:45:51.914" endtime="20230616 06:45:55.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:55.543" level="INFO">Volume 46353-with-errors is deleted</msg>
<status status="PASS" starttime="20230616 06:45:55.543" endtime="20230616 06:45:55.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:55.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:55.544" endtime="20230616 06:45:55.544"/>
</kw>
<status status="PASS" starttime="20230616 06:45:51.914" endtime="20230616 06:45:55.544"/>
</kw>
<status status="PASS" starttime="20230616 06:45:22.795" endtime="20230616 06:45:55.545"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:45:22.793" endtime="20230616 06:45:55.545"/>
</test>
<test id="s1-s10-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:45:55.546" endtime="20230616 06:45:55.547"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:55.551" level="INFO">Running command 'ozone sh volume create o3://om:9862/46353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:45:59.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:45:59.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:45:55.549" endtime="20230616 06:45:59.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:45:59.583" level="INFO"/>
<status status="PASS" starttime="20230616 06:45:59.582" endtime="20230616 06:45:59.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:45:59.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:45:59.583" endtime="20230616 06:45:59.584"/>
</kw>
<status status="PASS" starttime="20230616 06:45:55.548" endtime="20230616 06:45:59.584"/>
</kw>
<msg timestamp="20230616 06:45:59.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:55.548" endtime="20230616 06:45:59.584"/>
</kw>
<status status="PASS" starttime="20230616 06:45:55.547" endtime="20230616 06:45:59.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:45:59.589" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:03.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:03.784" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:45:59.586" endtime="20230616 06:46:03.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:03.785" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:03.784" endtime="20230616 06:46:03.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:03.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:03.786" endtime="20230616 06:46:03.786"/>
</kw>
<status status="PASS" starttime="20230616 06:45:59.586" endtime="20230616 06:46:03.786"/>
</kw>
<msg timestamp="20230616 06:46:03.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:45:59.585" endtime="20230616 06:46:03.787"/>
</kw>
<msg timestamp="20230616 06:46:03.787" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:45:59.585" endtime="20230616 06:46:03.787"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:03.787" endtime="20230616 06:46:03.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:03.792" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/46353-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:07.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:07.713" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230616 06:46:03.789" endtime="20230616 06:46:07.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:07.714" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230616 06:46:07.713" endtime="20230616 06:46:07.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:07.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:07.714" endtime="20230616 06:46:07.715"/>
</kw>
<status status="PASS" starttime="20230616 06:46:03.789" endtime="20230616 06:46:07.715"/>
</kw>
<msg timestamp="20230616 06:46:07.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:03.789" endtime="20230616 06:46:07.715"/>
</kw>
<msg timestamp="20230616 06:46:07.716" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230616 06:46:03.788" endtime="20230616 06:46:07.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:07.720" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:11.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:11.567" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:07.717" endtime="20230616 06:46:11.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:11.569" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:11.568" endtime="20230616 06:46:11.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:11.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:11.569" endtime="20230616 06:46:11.570"/>
</kw>
<status status="PASS" starttime="20230616 06:46:07.717" endtime="20230616 06:46:11.570"/>
</kw>
<msg timestamp="20230616 06:46:11.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:07.716" endtime="20230616 06:46:11.570"/>
</kw>
<msg timestamp="20230616 06:46:11.570" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:07.716" endtime="20230616 06:46:11.570"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:11.570" endtime="20230616 06:46:11.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:11.576" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/46353-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:15.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:15.615" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:46:11.573" endtime="20230616 06:46:15.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:15.616" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:46:15.615" endtime="20230616 06:46:15.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:15.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:15.616" endtime="20230616 06:46:15.617"/>
</kw>
<status status="PASS" starttime="20230616 06:46:11.573" endtime="20230616 06:46:15.617"/>
</kw>
<msg timestamp="20230616 06:46:15.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:11.572" endtime="20230616 06:46:15.617"/>
</kw>
<msg timestamp="20230616 06:46:15.617" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:46:11.572" endtime="20230616 06:46:15.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:15.622" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:19.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:19.744" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:15.619" endtime="20230616 06:46:19.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:19.746" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:19.745" endtime="20230616 06:46:19.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:19.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:19.746" endtime="20230616 06:46:19.747"/>
</kw>
<status status="PASS" starttime="20230616 06:46:15.618" endtime="20230616 06:46:19.747"/>
</kw>
<msg timestamp="20230616 06:46:19.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:15.618" endtime="20230616 06:46:19.747"/>
</kw>
<msg timestamp="20230616 06:46:19.747" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:15.618" endtime="20230616 06:46:19.748"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:19.748" endtime="20230616 06:46:19.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:19.752" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/46353-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:23.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:23.402" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:46:19.750" endtime="20230616 06:46:23.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:23.404" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:46:23.403" endtime="20230616 06:46:23.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:23.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:23.404" endtime="20230616 06:46:23.404"/>
</kw>
<status status="PASS" starttime="20230616 06:46:19.750" endtime="20230616 06:46:23.405"/>
</kw>
<msg timestamp="20230616 06:46:23.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:19.749" endtime="20230616 06:46:23.405"/>
</kw>
<msg timestamp="20230616 06:46:23.405" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:46:19.749" endtime="20230616 06:46:23.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:23.409" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/46353-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:27.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:27.467" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230616 06:46:23.407" endtime="20230616 06:46:27.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:27.468" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:27.467" endtime="20230616 06:46:27.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:27.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:27.469" endtime="20230616 06:46:27.469"/>
</kw>
<status status="PASS" starttime="20230616 06:46:23.406" endtime="20230616 06:46:27.469"/>
</kw>
<msg timestamp="20230616 06:46:27.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:23.406" endtime="20230616 06:46:27.470"/>
</kw>
<msg timestamp="20230616 06:46:27.470" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230616 06:46:23.405" endtime="20230616 06:46:27.470"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:27.470" endtime="20230616 06:46:27.470"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:27.471" endtime="20230616 06:46:27.471"/>
</kw>
<status status="PASS" starttime="20230616 06:45:55.547" endtime="20230616 06:46:27.472"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:45:55.546" endtime="20230616 06:46:27.472"/>
</test>
<test id="s1-s10-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:46:27.474" endtime="20230616 06:46:27.474"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:27.478" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:31.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:31.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:46:27.476" endtime="20230616 06:46:31.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:31.499" level="INFO"/>
<status status="PASS" starttime="20230616 06:46:31.498" endtime="20230616 06:46:31.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:31.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:31.499" endtime="20230616 06:46:31.500"/>
</kw>
<status status="PASS" starttime="20230616 06:46:27.475" endtime="20230616 06:46:31.500"/>
</kw>
<msg timestamp="20230616 06:46:31.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:27.475" endtime="20230616 06:46:31.500"/>
</kw>
<status status="PASS" starttime="20230616 06:46:27.475" endtime="20230616 06:46:31.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:31.505" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:35.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:35.837" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:31.502" endtime="20230616 06:46:35.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:35.838" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:35.837" endtime="20230616 06:46:35.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:35.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:35.838" endtime="20230616 06:46:35.839"/>
</kw>
<status status="PASS" starttime="20230616 06:46:31.502" endtime="20230616 06:46:35.839"/>
</kw>
<msg timestamp="20230616 06:46:35.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:31.501" endtime="20230616 06:46:35.839"/>
</kw>
<msg timestamp="20230616 06:46:35.839" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:31.501" endtime="20230616 06:46:35.839"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:35.840" endtime="20230616 06:46:35.840"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:35.844" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/46353-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:39.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:39.621" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230616 06:46:35.842" endtime="20230616 06:46:39.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:39.623" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230616 06:46:39.622" endtime="20230616 06:46:39.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:39.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:39.623" endtime="20230616 06:46:39.623"/>
</kw>
<status status="PASS" starttime="20230616 06:46:35.841" endtime="20230616 06:46:39.623"/>
</kw>
<msg timestamp="20230616 06:46:39.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:35.841" endtime="20230616 06:46:39.624"/>
</kw>
<msg timestamp="20230616 06:46:39.624" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20230616 06:46:35.840" endtime="20230616 06:46:39.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:39.628" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:43.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:43.512" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:39.626" endtime="20230616 06:46:43.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:43.514" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:43.513" endtime="20230616 06:46:43.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:43.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:43.514" endtime="20230616 06:46:43.515"/>
</kw>
<status status="PASS" starttime="20230616 06:46:39.625" endtime="20230616 06:46:43.515"/>
</kw>
<msg timestamp="20230616 06:46:43.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:39.625" endtime="20230616 06:46:43.515"/>
</kw>
<msg timestamp="20230616 06:46:43.515" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:39.624" endtime="20230616 06:46:43.515"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:43.516" endtime="20230616 06:46:43.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:43.521" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/46353-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:47.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:47.090" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:46:43.518" endtime="20230616 06:46:47.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:47.091" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:46:47.091" endtime="20230616 06:46:47.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:47.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:47.092" endtime="20230616 06:46:47.092"/>
</kw>
<status status="PASS" starttime="20230616 06:46:43.518" endtime="20230616 06:46:47.092"/>
</kw>
<msg timestamp="20230616 06:46:47.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:43.517" endtime="20230616 06:46:47.093"/>
</kw>
<msg timestamp="20230616 06:46:47.093" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:46:43.517" endtime="20230616 06:46:47.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:47.097" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:50.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:50.962" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:47.094" endtime="20230616 06:46:50.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:50.964" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:50.963" endtime="20230616 06:46:50.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:50.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:50.964" endtime="20230616 06:46:50.965"/>
</kw>
<status status="PASS" starttime="20230616 06:46:47.094" endtime="20230616 06:46:50.965"/>
</kw>
<msg timestamp="20230616 06:46:50.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:47.094" endtime="20230616 06:46:50.965"/>
</kw>
<msg timestamp="20230616 06:46:50.965" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:46:47.093" endtime="20230616 06:46:50.965"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:50.966" endtime="20230616 06:46:50.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:50.971" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/46353-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:54.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:54.778" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:46:50.968" endtime="20230616 06:46:54.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:54.779" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:46:54.778" endtime="20230616 06:46:54.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:54.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:54.779" endtime="20230616 06:46:54.780"/>
</kw>
<status status="PASS" starttime="20230616 06:46:50.968" endtime="20230616 06:46:54.780"/>
</kw>
<msg timestamp="20230616 06:46:54.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:50.967" endtime="20230616 06:46:54.780"/>
</kw>
<msg timestamp="20230616 06:46:54.780" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:46:50.967" endtime="20230616 06:46:54.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:54.784" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/46353-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:46:58.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:46:58.785" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230616 06:46:54.782" endtime="20230616 06:46:58.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:46:58.786" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:46:58.785" endtime="20230616 06:46:58.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:46:58.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:46:58.786" endtime="20230616 06:46:58.787"/>
</kw>
<status status="PASS" starttime="20230616 06:46:54.782" endtime="20230616 06:46:58.787"/>
</kw>
<msg timestamp="20230616 06:46:58.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:54.781" endtime="20230616 06:46:58.787"/>
</kw>
<msg timestamp="20230616 06:46:58.787" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230616 06:46:54.781" endtime="20230616 06:46:58.787"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:58.788" endtime="20230616 06:46:58.788"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:46:58.788" endtime="20230616 06:46:58.789"/>
</kw>
<status status="PASS" starttime="20230616 06:46:27.474" endtime="20230616 06:46:58.789"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:46:27.473" endtime="20230616 06:46:58.789"/>
</test>
<test id="s1-s10-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:46:58.791" endtime="20230616 06:46:58.791"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:46:58.795" level="INFO">Running command 'ozone sh key put o3://om:9862/46353-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:04.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:04.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:46:58.793" endtime="20230616 06:47:04.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:04.727" level="INFO"/>
<status status="PASS" starttime="20230616 06:47:04.726" endtime="20230616 06:47:04.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:04.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:04.727" endtime="20230616 06:47:04.728"/>
</kw>
<status status="PASS" starttime="20230616 06:46:58.792" endtime="20230616 06:47:04.728"/>
</kw>
<msg timestamp="20230616 06:47:04.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:46:58.792" endtime="20230616 06:47:04.728"/>
</kw>
<status status="PASS" starttime="20230616 06:46:58.792" endtime="20230616 06:47:04.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:04.732" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:08.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:08.691" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:47:04.730" endtime="20230616 06:47:08.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:08.692" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:08.692" endtime="20230616 06:47:08.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:08.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:08.693" endtime="20230616 06:47:08.693"/>
</kw>
<status status="PASS" starttime="20230616 06:47:04.729" endtime="20230616 06:47:08.694"/>
</kw>
<msg timestamp="20230616 06:47:08.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:04.729" endtime="20230616 06:47:08.694"/>
</kw>
<msg timestamp="20230616 06:47:08.694" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:47:04.728" endtime="20230616 06:47:08.694"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:08.694" endtime="20230616 06:47:08.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:08.699" level="INFO">Running command 'ozone sh key addacl o3://om:9862/46353-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:12.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:12.346" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:47:08.696" endtime="20230616 06:47:12.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:12.348" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:47:12.347" endtime="20230616 06:47:12.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:12.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:12.348" endtime="20230616 06:47:12.349"/>
</kw>
<status status="PASS" starttime="20230616 06:47:08.696" endtime="20230616 06:47:12.349"/>
</kw>
<msg timestamp="20230616 06:47:12.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:08.695" endtime="20230616 06:47:12.349"/>
</kw>
<msg timestamp="20230616 06:47:12.349" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230616 06:47:08.695" endtime="20230616 06:47:12.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:12.354" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:16.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:16.210" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:47:12.351" endtime="20230616 06:47:16.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:16.211" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:16.210" endtime="20230616 06:47:16.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:16.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:16.212" endtime="20230616 06:47:16.212"/>
</kw>
<status status="PASS" starttime="20230616 06:47:12.351" endtime="20230616 06:47:16.213"/>
</kw>
<msg timestamp="20230616 06:47:16.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:12.350" endtime="20230616 06:47:16.213"/>
</kw>
<msg timestamp="20230616 06:47:16.213" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:47:12.350" endtime="20230616 06:47:16.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:16.213" endtime="20230616 06:47:16.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:16.218" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/46353-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:19.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:19.980" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:47:16.216" endtime="20230616 06:47:19.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:19.981" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:47:19.980" endtime="20230616 06:47:19.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:19.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:19.982" endtime="20230616 06:47:19.982"/>
</kw>
<status status="PASS" starttime="20230616 06:47:16.215" endtime="20230616 06:47:19.982"/>
</kw>
<msg timestamp="20230616 06:47:19.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:16.215" endtime="20230616 06:47:19.983"/>
</kw>
<msg timestamp="20230616 06:47:19.983" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230616 06:47:16.214" endtime="20230616 06:47:19.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:19.987" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:24.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:24.095" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:47:19.985" endtime="20230616 06:47:24.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:24.097" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:24.096" endtime="20230616 06:47:24.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:24.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:24.097" endtime="20230616 06:47:24.098"/>
</kw>
<status status="PASS" starttime="20230616 06:47:19.984" endtime="20230616 06:47:24.098"/>
</kw>
<msg timestamp="20230616 06:47:24.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:19.984" endtime="20230616 06:47:24.098"/>
</kw>
<msg timestamp="20230616 06:47:24.098" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:47:19.983" endtime="20230616 06:47:24.098"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:24.099" endtime="20230616 06:47:24.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:24.103" level="INFO">Running command 'ozone sh key setacl o3://om:9862/46353-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:27.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:27.873" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:47:24.101" endtime="20230616 06:47:27.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:27.875" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:47:27.874" endtime="20230616 06:47:27.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:27.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:27.875" endtime="20230616 06:47:27.876"/>
</kw>
<status status="PASS" starttime="20230616 06:47:24.100" endtime="20230616 06:47:27.876"/>
</kw>
<msg timestamp="20230616 06:47:27.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:24.100" endtime="20230616 06:47:27.876"/>
</kw>
<msg timestamp="20230616 06:47:27.877" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:47:24.099" endtime="20230616 06:47:27.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:27.881" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46353-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:31.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:31.979" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230616 06:47:27.878" endtime="20230616 06:47:31.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:31.980" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:31.979" endtime="20230616 06:47:31.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:31.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:31.981" endtime="20230616 06:47:31.981"/>
</kw>
<status status="PASS" starttime="20230616 06:47:27.878" endtime="20230616 06:47:31.981"/>
</kw>
<msg timestamp="20230616 06:47:31.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:27.878" endtime="20230616 06:47:31.982"/>
</kw>
<msg timestamp="20230616 06:47:31.982" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20230616 06:47:27.877" endtime="20230616 06:47:31.982"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:31.982" endtime="20230616 06:47:31.983"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:31.983" endtime="20230616 06:47:31.984"/>
</kw>
<status status="PASS" starttime="20230616 06:46:58.791" endtime="20230616 06:47:31.984"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:46:58.790" endtime="20230616 06:47:31.984"/>
</test>
<test id="s1-s10-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:47:31.986" endtime="20230616 06:47:31.986"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:31.991" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/46353-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:36.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:36.043" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230616 06:47:31.988" endtime="20230616 06:47:36.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:36.044" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230616 06:47:36.044" endtime="20230616 06:47:36.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:36.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:36.045" endtime="20230616 06:47:36.045"/>
</kw>
<status status="PASS" starttime="20230616 06:47:31.988" endtime="20230616 06:47:36.046"/>
</kw>
<msg timestamp="20230616 06:47:36.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:31.988" endtime="20230616 06:47:36.046"/>
</kw>
<status status="PASS" starttime="20230616 06:47:31.987" endtime="20230616 06:47:36.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:36.051" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/46353-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:39.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:39.984" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230616 06:47:36.048" endtime="20230616 06:47:39.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:39.985" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:39.984" endtime="20230616 06:47:39.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:39.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:39.985" endtime="20230616 06:47:39.986"/>
</kw>
<status status="PASS" starttime="20230616 06:47:36.047" endtime="20230616 06:47:39.986"/>
</kw>
<msg timestamp="20230616 06:47:39.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:36.047" endtime="20230616 06:47:39.986"/>
</kw>
<msg timestamp="20230616 06:47:39.987" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230616 06:47:36.046" endtime="20230616 06:47:39.987"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:39.987" endtime="20230616 06:47:39.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:39.992" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/46353-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:43.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:43.795" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230616 06:47:39.990" endtime="20230616 06:47:43.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:43.797" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230616 06:47:43.796" endtime="20230616 06:47:43.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:43.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:43.797" endtime="20230616 06:47:43.798"/>
</kw>
<status status="PASS" starttime="20230616 06:47:39.989" endtime="20230616 06:47:43.798"/>
</kw>
<msg timestamp="20230616 06:47:43.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:39.989" endtime="20230616 06:47:43.798"/>
</kw>
<msg timestamp="20230616 06:47:43.798" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20230616 06:47:39.988" endtime="20230616 06:47:43.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:43.802" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/46353-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:47.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:47.825" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230616 06:47:43.800" endtime="20230616 06:47:47.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:47.826" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:47.826" endtime="20230616 06:47:47.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:47.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:47.826" endtime="20230616 06:47:47.827"/>
</kw>
<status status="PASS" starttime="20230616 06:47:43.800" endtime="20230616 06:47:47.827"/>
</kw>
<msg timestamp="20230616 06:47:47.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:43.799" endtime="20230616 06:47:47.827"/>
</kw>
<msg timestamp="20230616 06:47:47.828" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20230616 06:47:43.798" endtime="20230616 06:47:47.828"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:47.828" endtime="20230616 06:47:47.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:47.833" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/46353-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:51.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:51.785" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:47:47.830" endtime="20230616 06:47:51.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:51.786" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:47:51.785" endtime="20230616 06:47:51.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:51.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:51.787" endtime="20230616 06:47:51.787"/>
</kw>
<status status="PASS" starttime="20230616 06:47:47.830" endtime="20230616 06:47:51.787"/>
</kw>
<msg timestamp="20230616 06:47:51.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:47.830" endtime="20230616 06:47:51.788"/>
</kw>
<msg timestamp="20230616 06:47:51.788" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230616 06:47:47.829" endtime="20230616 06:47:51.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:51.792" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/46353-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:47:55.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:47:55.728" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230616 06:47:51.790" endtime="20230616 06:47:55.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:47:55.729" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:47:55.728" endtime="20230616 06:47:55.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:47:55.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:47:55.729" endtime="20230616 06:47:55.730"/>
</kw>
<status status="PASS" starttime="20230616 06:47:51.789" endtime="20230616 06:47:55.731"/>
</kw>
<msg timestamp="20230616 06:47:55.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:51.789" endtime="20230616 06:47:55.731"/>
</kw>
<msg timestamp="20230616 06:47:55.731" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20230616 06:47:51.788" endtime="20230616 06:47:55.731"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:55.731" endtime="20230616 06:47:55.732"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:47:55.732" endtime="20230616 06:47:55.732"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:47:55.736" level="INFO">Running command 'ozone sh key put o3://om:9862/46353-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:01.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:01.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:47:55.734" endtime="20230616 06:48:01.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:01.839" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:01.838" endtime="20230616 06:48:01.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:01.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:01.839" endtime="20230616 06:48:01.840"/>
</kw>
<status status="PASS" starttime="20230616 06:47:55.733" endtime="20230616 06:48:01.840"/>
</kw>
<msg timestamp="20230616 06:48:01.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:47:55.733" endtime="20230616 06:48:01.840"/>
</kw>
<status status="PASS" starttime="20230616 06:47:55.732" endtime="20230616 06:48:01.840"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:01.845" level="INFO">Running command 'ozone sh key getacl o3://om:9862/46353-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:06.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:06.045" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:48:01.842" endtime="20230616 06:48:06.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:06.046" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20230616 06:48:06.046" endtime="20230616 06:48:06.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:06.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:06.047" endtime="20230616 06:48:06.047"/>
</kw>
<status status="PASS" starttime="20230616 06:48:01.842" endtime="20230616 06:48:06.048"/>
</kw>
<msg timestamp="20230616 06:48:06.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:01.841" endtime="20230616 06:48:06.048"/>
</kw>
<msg timestamp="20230616 06:48:06.048" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type...</msg>
<status status="PASS" starttime="20230616 06:48:01.841" endtime="20230616 06:48:06.048"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:48:06.048" endtime="20230616 06:48:06.049"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230616 06:48:06.049" endtime="20230616 06:48:06.049"/>
</kw>
<status status="PASS" starttime="20230616 06:47:31.987" endtime="20230616 06:48:06.049"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:47:31.985" endtime="20230616 06:48:06.049"/>
</test>
<test id="s1-s10-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:48:06.051" endtime="20230616 06:48:06.052"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:06.056" level="INFO">Running command 'ozone sh volume info o3:///46353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:09.814" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:48:09.815" level="INFO">${output} = VOLUME_NOT_FOUND Volume 46353-without-host is not found</msg>
<status status="PASS" starttime="20230616 06:48:06.054" endtime="20230616 06:48:09.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:09.816" level="INFO">VOLUME_NOT_FOUND Volume 46353-without-host is not found</msg>
<status status="PASS" starttime="20230616 06:48:09.815" endtime="20230616 06:48:09.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:09.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:09.816" endtime="20230616 06:48:09.817"/>
</kw>
<msg timestamp="20230616 06:48:09.817" level="INFO">${result} = VOLUME_NOT_FOUND Volume 46353-without-host is not found</msg>
<status status="PASS" starttime="20230616 06:48:06.053" endtime="20230616 06:48:09.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:48:09.817" endtime="20230616 06:48:09.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:09.822" level="INFO">Running command 'ozone sh volume create o3:///46353-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:13.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:13.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:09.819" endtime="20230616 06:48:13.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:13.909" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:13.908" endtime="20230616 06:48:13.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:13.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:13.909" endtime="20230616 06:48:13.910"/>
</kw>
<status status="PASS" starttime="20230616 06:48:09.819" endtime="20230616 06:48:13.911"/>
</kw>
<msg timestamp="20230616 06:48:13.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:09.819" endtime="20230616 06:48:13.911"/>
</kw>
<msg timestamp="20230616 06:48:13.911" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:48:09.818" endtime="20230616 06:48:13.911"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 06:48:13.912" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 06:48:13.911" endtime="20230616 06:48:13.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:13.916" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="46353-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:18.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:18.078" level="INFO">${output} = {
  "metadata": {},
  "name": "46353-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20230616 06:48:13.913" endtime="20230616 06:48:18.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:18.079" level="INFO">{
  "metadata": {},
  "name": "46353-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2023-06-16T06:48:13.838Z",
  "modificationTime": "2023-06-16T06:48:13.838Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20230616 06:48:18.078" endtime="20230616 06:48:18.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:18.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:18.079" endtime="20230616 06:48:18.080"/>
</kw>
<status status="PASS" starttime="20230616 06:48:13.913" endtime="20230616 06:48:18.080"/>
</kw>
<msg timestamp="20230616 06:48:18.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:13.913" endtime="20230616 06:48:18.080"/>
</kw>
<msg timestamp="20230616 06:48:18.080" level="INFO">${result} = {
  "metadata": {},
  "name": "46353-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20230616 06:48:13.912" endtime="20230616 06:48:18.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:48:18.081" endtime="20230616 06:48:18.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:18.085" level="INFO">Running command 'ozone sh volume setquota o3:///46353-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:21.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:21.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:18.083" endtime="20230616 06:48:21.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:21.991" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:21.990" endtime="20230616 06:48:21.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:21.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:21.991" endtime="20230616 06:48:21.992"/>
</kw>
<status status="PASS" starttime="20230616 06:48:18.082" endtime="20230616 06:48:21.992"/>
</kw>
<msg timestamp="20230616 06:48:21.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:18.082" endtime="20230616 06:48:21.992"/>
</kw>
<status status="PASS" starttime="20230616 06:48:18.081" endtime="20230616 06:48:21.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:21.997" level="INFO">Running command 'ozone sh volume info o3:///46353-without-host | jq -r '. | select(.name=="46353-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:26.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:26.099" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:48:21.994" endtime="20230616 06:48:26.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:26.100" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230616 06:48:26.100" endtime="20230616 06:48:26.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:26.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:26.101" endtime="20230616 06:48:26.102"/>
</kw>
<status status="PASS" starttime="20230616 06:48:21.994" endtime="20230616 06:48:26.102"/>
</kw>
<msg timestamp="20230616 06:48:26.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:21.993" endtime="20230616 06:48:26.102"/>
</kw>
<msg timestamp="20230616 06:48:26.102" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:48:21.993" endtime="20230616 06:48:26.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:26.103" endtime="20230616 06:48:26.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:26.107" level="INFO">Running command 'ozone sh bucket create o3:///46353-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:29.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:29.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:26.105" endtime="20230616 06:48:29.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:29.880" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:29.880" endtime="20230616 06:48:29.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:29.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:29.881" endtime="20230616 06:48:29.881"/>
</kw>
<status status="PASS" starttime="20230616 06:48:26.104" endtime="20230616 06:48:29.882"/>
</kw>
<msg timestamp="20230616 06:48:29.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:26.104" endtime="20230616 06:48:29.882"/>
</kw>
<msg timestamp="20230616 06:48:29.882" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:48:26.103" endtime="20230616 06:48:29.882"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230616 06:48:29.883" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230616 06:48:29.882" endtime="20230616 06:48:29.883"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:29.887" level="INFO">Running command 'ozone sh bucket info o3:///46353-without-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:48:34.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:34.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:29.885" endtime="20230616 06:48:34.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:34.119" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:34.118" endtime="20230616 06:48:34.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:34.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:34.119" endtime="20230616 06:48:34.120"/>
</kw>
<status status="PASS" starttime="20230616 06:48:29.884" endtime="20230616 06:48:34.120"/>
</kw>
<msg timestamp="20230616 06:48:34.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:29.883" endtime="20230616 06:48:34.120"/>
</kw>
<status status="PASS" starttime="20230616 06:48:29.883" endtime="20230616 06:48:34.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:34.124" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:34.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:34.161" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20230616 06:48:34.122" endtime="20230616 06:48:34.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:34.162" level="INFO">DISK</msg>
<status status="PASS" starttime="20230616 06:48:34.161" endtime="20230616 06:48:34.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:34.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:34.162" endtime="20230616 06:48:34.162"/>
</kw>
<status status="PASS" starttime="20230616 06:48:34.121" endtime="20230616 06:48:34.163"/>
</kw>
<msg timestamp="20230616 06:48:34.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:34.121" endtime="20230616 06:48:34.163"/>
</kw>
<msg timestamp="20230616 06:48:34.163" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20230616 06:48:34.120" endtime="20230616 06:48:34.163"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:34.163" endtime="20230616 06:48:34.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:34.167" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:34.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:34.203" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:48:34.165" endtime="20230616 06:48:34.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:34.204" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20230616 06:48:34.204" endtime="20230616 06:48:34.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:34.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:34.205" endtime="20230616 06:48:34.205"/>
</kw>
<status status="PASS" starttime="20230616 06:48:34.164" endtime="20230616 06:48:34.205"/>
</kw>
<msg timestamp="20230616 06:48:34.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:34.164" endtime="20230616 06:48:34.205"/>
</kw>
<msg timestamp="20230616 06:48:34.206" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20230616 06:48:34.164" endtime="20230616 06:48:34.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:34.206" endtime="20230616 06:48:34.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:34.210" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:34.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:34.245" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20230616 06:48:34.207" endtime="20230616 06:48:34.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:34.246" level="INFO">100</msg>
<status status="PASS" starttime="20230616 06:48:34.246" endtime="20230616 06:48:34.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:34.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:34.246" endtime="20230616 06:48:34.247"/>
</kw>
<status status="PASS" starttime="20230616 06:48:34.207" endtime="20230616 06:48:34.247"/>
</kw>
<msg timestamp="20230616 06:48:34.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:34.207" endtime="20230616 06:48:34.247"/>
</kw>
<msg timestamp="20230616 06:48:34.247" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20230616 06:48:34.206" endtime="20230616 06:48:34.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:34.248" endtime="20230616 06:48:34.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:34.252" level="INFO">Running command 'ozone sh bucket setquota o3:///46353-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:37.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:37.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:34.250" endtime="20230616 06:48:37.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:37.755" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:37.754" endtime="20230616 06:48:37.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:37.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:37.755" endtime="20230616 06:48:37.756"/>
</kw>
<status status="PASS" starttime="20230616 06:48:34.249" endtime="20230616 06:48:37.756"/>
</kw>
<msg timestamp="20230616 06:48:37.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:34.249" endtime="20230616 06:48:37.756"/>
</kw>
<status status="PASS" starttime="20230616 06:48:34.248" endtime="20230616 06:48:37.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:37.761" level="INFO">Running command 'ozone sh bucket info o3:///46353-without-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:48:41.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:41.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:37.758" endtime="20230616 06:48:41.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:41.485" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:41.484" endtime="20230616 06:48:41.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:41.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:41.485" endtime="20230616 06:48:41.486"/>
</kw>
<status status="PASS" starttime="20230616 06:48:37.758" endtime="20230616 06:48:41.486"/>
</kw>
<msg timestamp="20230616 06:48:41.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:37.757" endtime="20230616 06:48:41.486"/>
</kw>
<status status="PASS" starttime="20230616 06:48:37.757" endtime="20230616 06:48:41.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:41.491" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:41.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:41.529" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20230616 06:48:41.488" endtime="20230616 06:48:41.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:41.530" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20230616 06:48:41.529" endtime="20230616 06:48:41.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:41.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:41.530" endtime="20230616 06:48:41.530"/>
</kw>
<status status="PASS" starttime="20230616 06:48:41.488" endtime="20230616 06:48:41.531"/>
</kw>
<msg timestamp="20230616 06:48:41.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:41.488" endtime="20230616 06:48:41.531"/>
</kw>
<msg timestamp="20230616 06:48:41.531" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20230616 06:48:41.487" endtime="20230616 06:48:41.531"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:41.531" endtime="20230616 06:48:41.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:41.535" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:41.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:41.573" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20230616 06:48:41.533" endtime="20230616 06:48:41.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:41.574" level="INFO">1000</msg>
<status status="PASS" starttime="20230616 06:48:41.573" endtime="20230616 06:48:41.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:41.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:41.574" endtime="20230616 06:48:41.574"/>
</kw>
<status status="PASS" starttime="20230616 06:48:41.532" endtime="20230616 06:48:41.575"/>
</kw>
<msg timestamp="20230616 06:48:41.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:41.532" endtime="20230616 06:48:41.575"/>
</kw>
<msg timestamp="20230616 06:48:41.575" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20230616 06:48:41.532" endtime="20230616 06:48:41.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:41.575" endtime="20230616 06:48:41.576"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:41.579" level="INFO">Running command 'ozone sh bucket list o3:///46353-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:45.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:45.683" level="INFO">${output} = 46353-without-host</msg>
<status status="PASS" starttime="20230616 06:48:41.577" endtime="20230616 06:48:45.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:45.685" level="INFO">46353-without-host</msg>
<status status="PASS" starttime="20230616 06:48:45.684" endtime="20230616 06:48:45.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:45.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:45.685" endtime="20230616 06:48:45.686"/>
</kw>
<status status="PASS" starttime="20230616 06:48:41.577" endtime="20230616 06:48:45.686"/>
</kw>
<msg timestamp="20230616 06:48:45.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:41.576" endtime="20230616 06:48:45.686"/>
</kw>
<msg timestamp="20230616 06:48:45.686" level="INFO">${result} = 46353-without-host</msg>
<status status="PASS" starttime="20230616 06:48:41.576" endtime="20230616 06:48:45.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:48:45.687" endtime="20230616 06:48:45.687"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:45.692" level="INFO">Running command 'ozone sh key put o3:///46353-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:52.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:52.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:45.690" endtime="20230616 06:48:52.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:52.067" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:52.067" endtime="20230616 06:48:52.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:52.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:52.068" endtime="20230616 06:48:52.068"/>
</kw>
<status status="PASS" starttime="20230616 06:48:45.690" endtime="20230616 06:48:52.069"/>
</kw>
<msg timestamp="20230616 06:48:52.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:45.689" endtime="20230616 06:48:52.069"/>
</kw>
<status status="PASS" starttime="20230616 06:48:45.689" endtime="20230616 06:48:52.069"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:52.073" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:52.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:52.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:52.070" endtime="20230616 06:48:52.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:52.078" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:52.077" endtime="20230616 06:48:52.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:52.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:52.078" endtime="20230616 06:48:52.079"/>
</kw>
<status status="PASS" starttime="20230616 06:48:52.070" endtime="20230616 06:48:52.079"/>
</kw>
<msg timestamp="20230616 06:48:52.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:52.070" endtime="20230616 06:48:52.079"/>
</kw>
<status status="PASS" starttime="20230616 06:48:52.069" endtime="20230616 06:48:52.080"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:52.083" level="INFO">Running command 'ozone sh key get o3:///46353-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:58.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:58.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:52.081" endtime="20230616 06:48:58.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:58.154" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:58.154" endtime="20230616 06:48:58.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:58.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:58.155" endtime="20230616 06:48:58.155"/>
</kw>
<status status="PASS" starttime="20230616 06:48:52.081" endtime="20230616 06:48:58.155"/>
</kw>
<msg timestamp="20230616 06:48:58.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:52.080" endtime="20230616 06:48:58.156"/>
</kw>
<status status="PASS" starttime="20230616 06:48:52.080" endtime="20230616 06:48:58.156"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:58.159" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:48:58.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:48:58.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:58.157" endtime="20230616 06:48:58.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:48:58.163" level="INFO"/>
<status status="PASS" starttime="20230616 06:48:58.163" endtime="20230616 06:48:58.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:48:58.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:48:58.164" endtime="20230616 06:48:58.164"/>
</kw>
<status status="PASS" starttime="20230616 06:48:58.157" endtime="20230616 06:48:58.164"/>
</kw>
<msg timestamp="20230616 06:48:58.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:58.156" endtime="20230616 06:48:58.165"/>
</kw>
<status status="PASS" starttime="20230616 06:48:58.156" endtime="20230616 06:48:58.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:48:58.169" level="INFO">Running command 'ozone sh key put -t RATIS o3:///46353-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:04.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:04.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:48:58.167" endtime="20230616 06:49:04.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:04.463" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:04.462" endtime="20230616 06:49:04.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:04.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:04.463" endtime="20230616 06:49:04.463"/>
</kw>
<status status="PASS" starttime="20230616 06:48:58.166" endtime="20230616 06:49:04.464"/>
</kw>
<msg timestamp="20230616 06:49:04.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:48:58.166" endtime="20230616 06:49:04.464"/>
</kw>
<status status="PASS" starttime="20230616 06:48:58.165" endtime="20230616 06:49:04.464"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:04.468" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:04.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:04.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:04.465" endtime="20230616 06:49:04.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:04.472" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:04.471" endtime="20230616 06:49:04.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:04.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:04.472" endtime="20230616 06:49:04.473"/>
</kw>
<status status="PASS" starttime="20230616 06:49:04.465" endtime="20230616 06:49:04.473"/>
</kw>
<msg timestamp="20230616 06:49:04.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:04.464" endtime="20230616 06:49:04.473"/>
</kw>
<status status="PASS" starttime="20230616 06:49:04.464" endtime="20230616 06:49:04.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:04.477" level="INFO">Running command 'ozone sh key get o3:///46353-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:10.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:10.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:04.475" endtime="20230616 06:49:10.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:10.438" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:10.437" endtime="20230616 06:49:10.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:10.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:10.439" endtime="20230616 06:49:10.439"/>
</kw>
<status status="PASS" starttime="20230616 06:49:04.474" endtime="20230616 06:49:10.439"/>
</kw>
<msg timestamp="20230616 06:49:10.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:04.474" endtime="20230616 06:49:10.440"/>
</kw>
<status status="PASS" starttime="20230616 06:49:04.473" endtime="20230616 06:49:10.440"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:10.444" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:10.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:10.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:10.441" endtime="20230616 06:49:10.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:10.447" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:10.447" endtime="20230616 06:49:10.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:10.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:10.448" endtime="20230616 06:49:10.448"/>
</kw>
<status status="PASS" starttime="20230616 06:49:10.441" endtime="20230616 06:49:10.448"/>
</kw>
<msg timestamp="20230616 06:49:10.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:10.440" endtime="20230616 06:49:10.449"/>
</kw>
<status status="PASS" starttime="20230616 06:49:10.440" endtime="20230616 06:49:10.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:10.452" level="INFO">Running command 'ozone sh key info o3:///46353-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:14.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:14.831" level="INFO">${output} = {
  "volumeName": "46353-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:49:02.050Z",
  "modificationTime": "2023-06-16T06:49:03.840...</msg>
<status status="PASS" starttime="20230616 06:49:10.451" endtime="20230616 06:49:14.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:14.832" level="INFO">{
  "volumeName": "46353-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:49:02.050Z",
  "modificationTime": "2023-06-16T06:49:03.840Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230616 06:49:14.831" endtime="20230616 06:49:14.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:14.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:14.832" endtime="20230616 06:49:14.833"/>
</kw>
<status status="PASS" starttime="20230616 06:49:10.450" endtime="20230616 06:49:14.833"/>
</kw>
<msg timestamp="20230616 06:49:14.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:10.450" endtime="20230616 06:49:14.833"/>
</kw>
<msg timestamp="20230616 06:49:14.833" level="INFO">${result} = {
  "volumeName": "46353-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:49:02.050Z",
  "modificationTime": "2023-06-16T06:49:03.840...</msg>
<status status="PASS" starttime="20230616 06:49:10.449" endtime="20230616 06:49:14.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:49:14.834" endtime="20230616 06:49:14.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:14.838" level="INFO">Running command 'ozone sh key delete --skipTrash o3:///46353-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:19.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:19.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:14.836" endtime="20230616 06:49:19.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:19.154" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:19.153" endtime="20230616 06:49:19.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:19.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:19.154" endtime="20230616 06:49:19.155"/>
</kw>
<status status="PASS" starttime="20230616 06:49:14.835" endtime="20230616 06:49:19.155"/>
</kw>
<msg timestamp="20230616 06:49:19.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:14.835" endtime="20230616 06:49:19.155"/>
</kw>
<status status="PASS" starttime="20230616 06:49:14.834" endtime="20230616 06:49:19.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:19.159" level="INFO">Running command 'ozone sh key cp o3:///46353-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:25.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:25.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:19.157" endtime="20230616 06:49:25.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:25.215" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:25.214" endtime="20230616 06:49:25.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:25.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:25.215" endtime="20230616 06:49:25.215"/>
</kw>
<status status="PASS" starttime="20230616 06:49:19.156" endtime="20230616 06:49:25.216"/>
</kw>
<msg timestamp="20230616 06:49:25.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:19.156" endtime="20230616 06:49:25.216"/>
</kw>
<status status="PASS" starttime="20230616 06:49:19.155" endtime="20230616 06:49:25.216"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:25.220" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:25.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:25.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:25.218" endtime="20230616 06:49:25.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:25.224" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:25.224" endtime="20230616 06:49:25.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:25.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:25.224" endtime="20230616 06:49:25.225"/>
</kw>
<status status="PASS" starttime="20230616 06:49:25.217" endtime="20230616 06:49:25.225"/>
</kw>
<msg timestamp="20230616 06:49:25.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:25.217" endtime="20230616 06:49:25.226"/>
</kw>
<status status="PASS" starttime="20230616 06:49:25.216" endtime="20230616 06:49:25.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:25.229" level="INFO">Running command 'ozone sh key get o3:///46353-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:31.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:31.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:25.227" endtime="20230616 06:49:31.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:31.538" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:31.537" endtime="20230616 06:49:31.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:31.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:31.538" endtime="20230616 06:49:31.538"/>
</kw>
<status status="PASS" starttime="20230616 06:49:25.227" endtime="20230616 06:49:31.539"/>
</kw>
<msg timestamp="20230616 06:49:31.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:25.227" endtime="20230616 06:49:31.539"/>
</kw>
<status status="PASS" starttime="20230616 06:49:25.226" endtime="20230616 06:49:31.539"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:31.543" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:31.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:31.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:31.540" endtime="20230616 06:49:31.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:31.547" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:31.546" endtime="20230616 06:49:31.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:31.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:31.547" endtime="20230616 06:49:31.548"/>
</kw>
<status status="PASS" starttime="20230616 06:49:31.540" endtime="20230616 06:49:31.548"/>
</kw>
<msg timestamp="20230616 06:49:31.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:31.540" endtime="20230616 06:49:31.548"/>
</kw>
<status status="PASS" starttime="20230616 06:49:31.539" endtime="20230616 06:49:31.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:31.553" level="INFO">Running command 'ozone sh key delete --skipTrash o3:///46353-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:35.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:35.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:31.551" endtime="20230616 06:49:35.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:35.295" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:35.295" endtime="20230616 06:49:35.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:35.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:35.296" endtime="20230616 06:49:35.296"/>
</kw>
<status status="PASS" starttime="20230616 06:49:31.550" endtime="20230616 06:49:35.296"/>
</kw>
<msg timestamp="20230616 06:49:35.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:31.550" endtime="20230616 06:49:35.296"/>
</kw>
<status status="PASS" starttime="20230616 06:49:31.549" endtime="20230616 06:49:35.297"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:35.300" level="INFO">Running command 'ozone sh key get o3:///46353-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:39.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20230616 06:49:39.148" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:49:35.297" endtime="20230616 06:49:39.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:39.149" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:49:39.148" endtime="20230616 06:49:39.149"/>
</kw>
<msg timestamp="20230616 06:49:39.149" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20230616 06:49:35.297" endtime="20230616 06:49:39.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:49:39.149" endtime="20230616 06:49:39.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:39.154" level="INFO">Running command 'ozone sh key get --force o3:///46353-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:44.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:44.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:39.152" endtime="20230616 06:49:44.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:44.886" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:44.886" endtime="20230616 06:49:44.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:44.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:44.887" endtime="20230616 06:49:44.887"/>
</kw>
<status status="PASS" starttime="20230616 06:49:39.151" endtime="20230616 06:49:44.887"/>
</kw>
<msg timestamp="20230616 06:49:44.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:39.151" endtime="20230616 06:49:44.888"/>
</kw>
<msg timestamp="20230616 06:49:44.888" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:49:39.150" endtime="20230616 06:49:44.888"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:49:44.888" endtime="20230616 06:49:44.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:44.892" level="INFO">Running command 'ozone sh key info o3:///46353-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:49.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:49.174" level="INFO">${output} = {
  "volumeName": "46353-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:48:49.674Z",
  "modificationTime": "2023-06-16T06:48:51.432Z",
  ...</msg>
<status status="PASS" starttime="20230616 06:49:44.890" endtime="20230616 06:49:49.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:49.175" level="INFO">{
  "volumeName": "46353-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:48:49.674Z",
  "modificationTime": "2023-06-16T06:48:51.432Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 111677748019200110,
      "length": 17289,
      "offset": 0,
      "keyOffset": 0
    }
  ]
}</msg>
<status status="PASS" starttime="20230616 06:49:49.174" endtime="20230616 06:49:49.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:49.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:49.175" endtime="20230616 06:49:49.176"/>
</kw>
<status status="PASS" starttime="20230616 06:49:44.890" endtime="20230616 06:49:49.176"/>
</kw>
<msg timestamp="20230616 06:49:49.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:44.889" endtime="20230616 06:49:49.176"/>
</kw>
<msg timestamp="20230616 06:49:49.176" level="INFO">${result} = {
  "volumeName": "46353-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17289,
  "creationTime": "2023-06-16T06:48:49.674Z",
  "modificationTime": "2023-06-16T06:48:51.432Z",
  ...</msg>
<status status="PASS" starttime="20230616 06:49:44.889" endtime="20230616 06:49:49.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:49:49.176" endtime="20230616 06:49:49.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:49.182" level="INFO">Running command 'ozone sh key list o3:///46353-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:53.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:53.355" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230616 06:49:49.178" endtime="20230616 06:49:53.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:53.356" level="INFO">key1</msg>
<status status="PASS" starttime="20230616 06:49:53.355" endtime="20230616 06:49:53.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:53.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:53.356" endtime="20230616 06:49:53.357"/>
</kw>
<status status="PASS" starttime="20230616 06:49:49.178" endtime="20230616 06:49:53.357"/>
</kw>
<msg timestamp="20230616 06:49:53.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:49.178" endtime="20230616 06:49:53.357"/>
</kw>
<msg timestamp="20230616 06:49:53.358" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20230616 06:49:49.177" endtime="20230616 06:49:53.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:49:53.358" endtime="20230616 06:49:53.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:53.362" level="INFO">Running command 'ozone sh key rename o3:///46353-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:49:57.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:49:57.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:49:53.360" endtime="20230616 06:49:57.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:49:57.189" level="INFO"/>
<status status="PASS" starttime="20230616 06:49:57.188" endtime="20230616 06:49:57.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:49:57.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:49:57.189" endtime="20230616 06:49:57.190"/>
</kw>
<status status="PASS" starttime="20230616 06:49:53.359" endtime="20230616 06:49:57.190"/>
</kw>
<msg timestamp="20230616 06:49:57.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:53.359" endtime="20230616 06:49:57.190"/>
</kw>
<status status="PASS" starttime="20230616 06:49:53.358" endtime="20230616 06:49:57.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:49:57.195" level="INFO">Running command 'ozone sh key list o3:///46353-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:01.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:01.079" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20230616 06:49:57.192" endtime="20230616 06:50:01.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:01.081" level="INFO">key2</msg>
<status status="PASS" starttime="20230616 06:50:01.080" endtime="20230616 06:50:01.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:01.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:01.081" endtime="20230616 06:50:01.082"/>
</kw>
<status status="PASS" starttime="20230616 06:49:57.192" endtime="20230616 06:50:01.082"/>
</kw>
<msg timestamp="20230616 06:50:01.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:49:57.191" endtime="20230616 06:50:01.082"/>
</kw>
<msg timestamp="20230616 06:50:01.082" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20230616 06:49:57.191" endtime="20230616 06:50:01.082"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:01.083" endtime="20230616 06:50:01.083"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:01.087" level="INFO">Running command 'ozone sh key delete --skipTrash o3:///46353-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:05.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:05.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:01.085" endtime="20230616 06:50:05.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:05.391" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:05.390" endtime="20230616 06:50:05.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:05.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:05.391" endtime="20230616 06:50:05.392"/>
</kw>
<status status="PASS" starttime="20230616 06:50:01.084" endtime="20230616 06:50:05.392"/>
</kw>
<msg timestamp="20230616 06:50:05.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:01.084" endtime="20230616 06:50:05.392"/>
</kw>
<status status="PASS" starttime="20230616 06:50:01.083" endtime="20230616 06:50:05.392"/>
</kw>
<status status="PASS" starttime="20230616 06:48:45.688" endtime="20230616 06:50:05.392"/>
</kw>
<status status="PASS" starttime="20230616 06:48:45.687" endtime="20230616 06:50:05.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:05.397" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///46353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:09.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:09.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:05.394" endtime="20230616 06:50:09.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:09.444" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:09.443" endtime="20230616 06:50:09.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:09.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:09.444" endtime="20230616 06:50:09.445"/>
</kw>
<status status="PASS" starttime="20230616 06:50:05.394" endtime="20230616 06:50:09.445"/>
</kw>
<msg timestamp="20230616 06:50:09.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:05.393" endtime="20230616 06:50:09.446"/>
</kw>
<status status="PASS" starttime="20230616 06:50:05.393" endtime="20230616 06:50:09.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:09.450" level="INFO">Running command 'ozone sh volume info o3:///46353-without-host | jq -r '. | select(.name=="46353-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:13.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:13.964" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:50:09.448" endtime="20230616 06:50:13.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:13.965" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:50:13.964" endtime="20230616 06:50:13.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:13.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:13.965" endtime="20230616 06:50:13.966"/>
</kw>
<status status="PASS" starttime="20230616 06:50:09.447" endtime="20230616 06:50:13.966"/>
</kw>
<msg timestamp="20230616 06:50:13.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:09.447" endtime="20230616 06:50:13.966"/>
</kw>
<msg timestamp="20230616 06:50:13.967" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:50:09.446" endtime="20230616 06:50:13.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:13.967" endtime="20230616 06:50:13.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:13.971" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///46353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:17.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:17.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:13.969" endtime="20230616 06:50:17.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:17.729" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:17.729" endtime="20230616 06:50:17.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:17.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:17.730" endtime="20230616 06:50:17.730"/>
</kw>
<status status="PASS" starttime="20230616 06:50:13.968" endtime="20230616 06:50:17.731"/>
</kw>
<msg timestamp="20230616 06:50:17.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:13.968" endtime="20230616 06:50:17.731"/>
</kw>
<status status="PASS" starttime="20230616 06:50:13.967" endtime="20230616 06:50:17.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:17.735" level="INFO">Running command 'ozone sh volume info o3:///46353-without-host | jq -r '. | select(.name=="46353-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:21.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:21.772" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:50:17.733" endtime="20230616 06:50:21.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:21.773" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:50:21.772" endtime="20230616 06:50:21.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:21.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:21.773" endtime="20230616 06:50:21.774"/>
</kw>
<status status="PASS" starttime="20230616 06:50:17.732" endtime="20230616 06:50:21.774"/>
</kw>
<msg timestamp="20230616 06:50:21.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:17.732" endtime="20230616 06:50:21.774"/>
</kw>
<msg timestamp="20230616 06:50:21.775" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:50:17.731" endtime="20230616 06:50:21.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:21.775" endtime="20230616 06:50:21.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:21.779" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///46353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:25.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:25.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:21.777" endtime="20230616 06:50:25.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:25.749" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:25.749" endtime="20230616 06:50:25.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:25.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:25.750" endtime="20230616 06:50:25.750"/>
</kw>
<status status="PASS" starttime="20230616 06:50:21.776" endtime="20230616 06:50:25.751"/>
</kw>
<msg timestamp="20230616 06:50:25.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:21.776" endtime="20230616 06:50:25.751"/>
</kw>
<status status="PASS" starttime="20230616 06:50:21.775" endtime="20230616 06:50:25.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:25.755" level="INFO">Running command 'ozone sh bucket info o3:///46353-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:29.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:29.797" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:50:25.753" endtime="20230616 06:50:29.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:29.799" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:50:29.798" endtime="20230616 06:50:29.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:29.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:29.799" endtime="20230616 06:50:29.800"/>
</kw>
<status status="PASS" starttime="20230616 06:50:25.752" endtime="20230616 06:50:29.800"/>
</kw>
<msg timestamp="20230616 06:50:29.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:25.752" endtime="20230616 06:50:29.800"/>
</kw>
<msg timestamp="20230616 06:50:29.800" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:50:25.751" endtime="20230616 06:50:29.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:29.801" endtime="20230616 06:50:29.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:29.805" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///46353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:33.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:33.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:29.803" endtime="20230616 06:50:33.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:33.808" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:33.807" endtime="20230616 06:50:33.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:33.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:33.808" endtime="20230616 06:50:33.808"/>
</kw>
<status status="PASS" starttime="20230616 06:50:29.803" endtime="20230616 06:50:33.809"/>
</kw>
<msg timestamp="20230616 06:50:33.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:29.802" endtime="20230616 06:50:33.809"/>
</kw>
<status status="PASS" starttime="20230616 06:50:29.801" endtime="20230616 06:50:33.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:33.813" level="INFO">Running command 'ozone sh bucket info o3:///46353-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:37.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:37.938" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:50:33.811" endtime="20230616 06:50:37.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:37.939" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:50:37.939" endtime="20230616 06:50:37.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:37.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:37.940" endtime="20230616 06:50:37.940"/>
</kw>
<status status="PASS" starttime="20230616 06:50:33.810" endtime="20230616 06:50:37.940"/>
</kw>
<msg timestamp="20230616 06:50:37.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:33.810" endtime="20230616 06:50:37.941"/>
</kw>
<msg timestamp="20230616 06:50:37.941" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:50:33.809" endtime="20230616 06:50:37.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:37.941" endtime="20230616 06:50:37.941"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:37.945" level="INFO">Running command 'ozone sh bucket delete o3:///46353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:41.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:41.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:37.943" endtime="20230616 06:50:41.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:41.406" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:41.405" endtime="20230616 06:50:41.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:41.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:41.406" endtime="20230616 06:50:41.407"/>
</kw>
<status status="PASS" starttime="20230616 06:50:37.943" endtime="20230616 06:50:41.407"/>
</kw>
<msg timestamp="20230616 06:50:41.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:37.942" endtime="20230616 06:50:41.407"/>
</kw>
<status status="PASS" starttime="20230616 06:50:37.942" endtime="20230616 06:50:41.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:41.411" level="INFO">Running command 'ozone sh volume delete o3:///46353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:45.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:45.211" level="INFO">${output} = Volume 46353-without-host is deleted</msg>
<status status="PASS" starttime="20230616 06:50:41.409" endtime="20230616 06:50:45.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:45.212" level="INFO">Volume 46353-without-host is deleted</msg>
<status status="PASS" starttime="20230616 06:50:45.211" endtime="20230616 06:50:45.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:45.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:45.212" endtime="20230616 06:50:45.213"/>
</kw>
<status status="PASS" starttime="20230616 06:50:41.408" endtime="20230616 06:50:45.213"/>
</kw>
<msg timestamp="20230616 06:50:45.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:41.408" endtime="20230616 06:50:45.213"/>
</kw>
<status status="PASS" starttime="20230616 06:50:41.407" endtime="20230616 06:50:45.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:45.218" level="INFO">Running command 'ozone sh volume create o3:///46353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:49.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:49.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:45.215" endtime="20230616 06:50:49.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:49.481" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:49.480" endtime="20230616 06:50:49.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:49.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:49.481" endtime="20230616 06:50:49.482"/>
</kw>
<status status="PASS" starttime="20230616 06:50:45.215" endtime="20230616 06:50:49.482"/>
</kw>
<msg timestamp="20230616 06:50:49.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:45.214" endtime="20230616 06:50:49.483"/>
</kw>
<status status="PASS" starttime="20230616 06:50:45.214" endtime="20230616 06:50:49.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:49.487" level="INFO">Running command 'ozone sh volume info o3:///46353-without-host &gt; volume.json'.</msg>
<msg timestamp="20230616 06:50:53.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:53.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:49.484" endtime="20230616 06:50:53.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:53.719" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:53.718" endtime="20230616 06:50:53.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:53.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:53.719" endtime="20230616 06:50:53.720"/>
</kw>
<status status="PASS" starttime="20230616 06:50:49.484" endtime="20230616 06:50:53.720"/>
</kw>
<msg timestamp="20230616 06:50:53.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:49.483" endtime="20230616 06:50:53.720"/>
</kw>
<status status="PASS" starttime="20230616 06:50:49.483" endtime="20230616 06:50:53.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:53.725" level="INFO">Running command 'jq -r '. | select(.name=="46353-without-host") | .quotaInBytes' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:53.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:53.761" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:50:53.722" endtime="20230616 06:50:53.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:53.762" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:50:53.761" endtime="20230616 06:50:53.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:53.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:53.762" endtime="20230616 06:50:53.763"/>
</kw>
<status status="PASS" starttime="20230616 06:50:53.722" endtime="20230616 06:50:53.763"/>
</kw>
<msg timestamp="20230616 06:50:53.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:53.721" endtime="20230616 06:50:53.763"/>
</kw>
<msg timestamp="20230616 06:50:53.763" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:50:53.721" endtime="20230616 06:50:53.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:53.763" endtime="20230616 06:50:53.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' volume.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:53.767" level="INFO">Running command 'jq -r '. | select(.name=="46353-without-host") | .quotaInNamespace' volume.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:53.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:53.803" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:50:53.765" endtime="20230616 06:50:53.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:53.804" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:50:53.804" endtime="20230616 06:50:53.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:53.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:53.804" endtime="20230616 06:50:53.805"/>
</kw>
<status status="PASS" starttime="20230616 06:50:53.765" endtime="20230616 06:50:53.805"/>
</kw>
<msg timestamp="20230616 06:50:53.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:53.764" endtime="20230616 06:50:53.805"/>
</kw>
<msg timestamp="20230616 06:50:53.805" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:50:53.764" endtime="20230616 06:50:53.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:50:53.806" endtime="20230616 06:50:53.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:53.809" level="INFO">Running command 'ozone sh bucket create o3:///46353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:50:57.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:50:57.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:53.807" endtime="20230616 06:50:57.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:50:57.766" level="INFO"/>
<status status="PASS" starttime="20230616 06:50:57.765" endtime="20230616 06:50:57.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:50:57.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:50:57.766" endtime="20230616 06:50:57.767"/>
</kw>
<status status="PASS" starttime="20230616 06:50:53.807" endtime="20230616 06:50:57.767"/>
</kw>
<msg timestamp="20230616 06:50:57.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:53.807" endtime="20230616 06:50:57.767"/>
</kw>
<status status="PASS" starttime="20230616 06:50:53.806" endtime="20230616 06:50:57.768"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:50:57.772" level="INFO">Running command 'ozone sh bucket info o3:///46353-without-host/bb1 &gt; bb1.json'.</msg>
<msg timestamp="20230616 06:51:01.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:01.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:50:57.770" endtime="20230616 06:51:01.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:01.911" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:01.910" endtime="20230616 06:51:01.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:01.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:01.911" endtime="20230616 06:51:01.912"/>
</kw>
<status status="PASS" starttime="20230616 06:50:57.769" endtime="20230616 06:51:01.912"/>
</kw>
<msg timestamp="20230616 06:51:01.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:50:57.768" endtime="20230616 06:51:01.912"/>
</kw>
<status status="PASS" starttime="20230616 06:50:57.768" endtime="20230616 06:51:01.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:01.917" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:01.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:01.956" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:51:01.914" endtime="20230616 06:51:01.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:01.957" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:51:01.956" endtime="20230616 06:51:01.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:01.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:01.957" endtime="20230616 06:51:01.957"/>
</kw>
<status status="PASS" starttime="20230616 06:51:01.914" endtime="20230616 06:51:01.958"/>
</kw>
<msg timestamp="20230616 06:51:01.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:01.913" endtime="20230616 06:51:01.958"/>
</kw>
<msg timestamp="20230616 06:51:01.958" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:51:01.913" endtime="20230616 06:51:01.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:51:01.958" endtime="20230616 06:51:01.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:01.962" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:02.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:02.001" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20230616 06:51:01.960" endtime="20230616 06:51:02.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:02.002" level="INFO">-1</msg>
<status status="PASS" starttime="20230616 06:51:02.001" endtime="20230616 06:51:02.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:02.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:02.002" endtime="20230616 06:51:02.002"/>
</kw>
<status status="PASS" starttime="20230616 06:51:01.959" endtime="20230616 06:51:02.002"/>
</kw>
<msg timestamp="20230616 06:51:02.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:01.959" endtime="20230616 06:51:02.003"/>
</kw>
<msg timestamp="20230616 06:51:02.003" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20230616 06:51:01.959" endtime="20230616 06:51:02.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:51:02.003" endtime="20230616 06:51:02.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:02.007" level="INFO">Running command 'ozone sh bucket delete o3:///46353-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:05.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:05.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:02.005" endtime="20230616 06:51:05.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:05.840" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:05.839" endtime="20230616 06:51:05.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:05.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:05.840" endtime="20230616 06:51:05.840"/>
</kw>
<status status="PASS" starttime="20230616 06:51:02.004" endtime="20230616 06:51:05.841"/>
</kw>
<msg timestamp="20230616 06:51:05.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:02.004" endtime="20230616 06:51:05.841"/>
</kw>
<status status="PASS" starttime="20230616 06:51:02.004" endtime="20230616 06:51:05.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:05.845" level="INFO">Running command 'ozone sh volume delete o3:///46353-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:09.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:09.785" level="INFO">${output} = Volume 46353-without-host is deleted</msg>
<status status="PASS" starttime="20230616 06:51:05.843" endtime="20230616 06:51:09.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:09.787" level="INFO">Volume 46353-without-host is deleted</msg>
<status status="PASS" starttime="20230616 06:51:09.786" endtime="20230616 06:51:09.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:09.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:09.787" endtime="20230616 06:51:09.788"/>
</kw>
<status status="PASS" starttime="20230616 06:51:05.842" endtime="20230616 06:51:09.789"/>
</kw>
<msg timestamp="20230616 06:51:09.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:05.842" endtime="20230616 06:51:09.789"/>
</kw>
<status status="PASS" starttime="20230616 06:51:05.841" endtime="20230616 06:51:09.789"/>
</kw>
<status status="PASS" starttime="20230616 06:48:06.052" endtime="20230616 06:51:09.789"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:48:06.050" endtime="20230616 06:51:09.789"/>
</test>
<test id="s1-s10-s5-t8" name="RpcClient Delete key" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:51:09.791" endtime="20230616 06:51:09.792"/>
</kw>
<kw name="Test Delete key with and without Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:09.796" level="INFO">Running command 'ozone sh volume create o3://om:9862/46353-with-del 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:13.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:13.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:09.794" endtime="20230616 06:51:13.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:13.842" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:13.841" endtime="20230616 06:51:13.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:13.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:13.842" endtime="20230616 06:51:13.843"/>
</kw>
<status status="PASS" starttime="20230616 06:51:09.793" endtime="20230616 06:51:13.843"/>
</kw>
<msg timestamp="20230616 06:51:13.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:09.793" endtime="20230616 06:51:13.843"/>
</kw>
<status status="PASS" starttime="20230616 06:51:09.792" endtime="20230616 06:51:13.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:13.848" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:17.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:17.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:13.845" endtime="20230616 06:51:17.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:17.748" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:17.747" endtime="20230616 06:51:17.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:17.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:17.748" endtime="20230616 06:51:17.749"/>
</kw>
<status status="PASS" starttime="20230616 06:51:13.845" endtime="20230616 06:51:17.749"/>
</kw>
<msg timestamp="20230616 06:51:17.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:13.844" endtime="20230616 06:51:17.749"/>
</kw>
<status status="PASS" starttime="20230616 06:51:13.844" endtime="20230616 06:51:17.749"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bfso/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:17.753" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/46353-with-del/bfso/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:24.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:24.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:17.751" endtime="20230616 06:51:24.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:24.043" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:24.042" endtime="20230616 06:51:24.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:24.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:24.043" endtime="20230616 06:51:24.043"/>
</kw>
<status status="PASS" starttime="20230616 06:51:17.751" endtime="20230616 06:51:24.044"/>
</kw>
<msg timestamp="20230616 06:51:24.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:17.750" endtime="20230616 06:51:24.044"/>
</kw>
<status status="PASS" starttime="20230616 06:51:17.750" endtime="20230616 06:51:24.044"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${protocol}${server}/${volume}/bfso/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:24.048" level="INFO">Running command 'ozone sh key delete --skipTrash o3://om:9862/46353-with-del/bfso/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:28.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:28.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:24.046" endtime="20230616 06:51:28.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:28.211" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:28.210" endtime="20230616 06:51:28.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:28.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:28.212" endtime="20230616 06:51:28.212"/>
</kw>
<status status="PASS" starttime="20230616 06:51:24.045" endtime="20230616 06:51:28.213"/>
</kw>
<msg timestamp="20230616 06:51:28.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:24.045" endtime="20230616 06:51:28.213"/>
</kw>
<status status="PASS" starttime="20230616 06:51:24.044" endtime="20230616 06:51:28.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:28.217" level="INFO">Running command 'ozone sh key list o3://om:9862/46353-with-del/bfso 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:32.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:32.406" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230616 06:51:28.214" endtime="20230616 06:51:32.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:32.407" level="INFO">[ ]</msg>
<status status="PASS" starttime="20230616 06:51:32.406" endtime="20230616 06:51:32.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:32.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:32.407" endtime="20230616 06:51:32.408"/>
</kw>
<status status="PASS" starttime="20230616 06:51:28.214" endtime="20230616 06:51:32.408"/>
</kw>
<msg timestamp="20230616 06:51:32.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:28.214" endtime="20230616 06:51:32.408"/>
</kw>
<msg timestamp="20230616 06:51:32.408" level="INFO">${result} = [ ]</msg>
<status status="PASS" starttime="20230616 06:51:28.213" endtime="20230616 06:51:32.408"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:51:32.408" endtime="20230616 06:51:32.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:32.413" level="INFO">Running command 'ozone sh bucket create o3://om:9862/46353-with-del/obsbkt --layout OBJECT_STORE 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:36.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:36.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:32.411" endtime="20230616 06:51:36.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:36.410" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:36.409" endtime="20230616 06:51:36.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:36.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:36.410" endtime="20230616 06:51:36.411"/>
</kw>
<status status="PASS" starttime="20230616 06:51:32.410" endtime="20230616 06:51:36.411"/>
</kw>
<msg timestamp="20230616 06:51:36.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:32.410" endtime="20230616 06:51:36.412"/>
</kw>
<status status="PASS" starttime="20230616 06:51:32.409" endtime="20230616 06:51:36.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:36.416" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/46353-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:42.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:42.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:36.413" endtime="20230616 06:51:42.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:42.383" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:42.383" endtime="20230616 06:51:42.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:42.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:42.384" endtime="20230616 06:51:42.384"/>
</kw>
<status status="PASS" starttime="20230616 06:51:36.413" endtime="20230616 06:51:42.384"/>
</kw>
<msg timestamp="20230616 06:51:42.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:36.413" endtime="20230616 06:51:42.385"/>
</kw>
<status status="PASS" starttime="20230616 06:51:36.412" endtime="20230616 06:51:42.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:42.389" level="INFO">Running command 'ozone sh key delete o3://om:9862/46353-with-del/obsbkt/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:45.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:45.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:42.387" endtime="20230616 06:51:45.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:45.994" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:45.994" endtime="20230616 06:51:45.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:45.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:45.995" endtime="20230616 06:51:45.995"/>
</kw>
<status status="PASS" starttime="20230616 06:51:42.386" endtime="20230616 06:51:45.995"/>
</kw>
<msg timestamp="20230616 06:51:45.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:42.386" endtime="20230616 06:51:45.996"/>
</kw>
<status status="PASS" starttime="20230616 06:51:42.385" endtime="20230616 06:51:45.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:46.000" level="INFO">Running command 'ozone sh key list o3://om:9862/46353-with-del/obsbkt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:49.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:49.962" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20230616 06:51:45.998" endtime="20230616 06:51:49.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:49.964" level="INFO">[ ]</msg>
<status status="PASS" starttime="20230616 06:51:49.963" endtime="20230616 06:51:49.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:49.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:49.964" endtime="20230616 06:51:49.964"/>
</kw>
<status status="PASS" starttime="20230616 06:51:45.997" endtime="20230616 06:51:49.964"/>
</kw>
<msg timestamp="20230616 06:51:49.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:45.997" endtime="20230616 06:51:49.965"/>
</kw>
<msg timestamp="20230616 06:51:49.965" level="INFO">${result} = [ ]</msg>
<status status="PASS" starttime="20230616 06:51:45.996" endtime="20230616 06:51:49.965"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:51:49.965" endtime="20230616 06:51:49.965"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:49.969" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/46353-with-del/bfso/key3 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:51:56.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:51:56.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:51:49.967" endtime="20230616 06:51:56.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:51:56.186" level="INFO"/>
<status status="PASS" starttime="20230616 06:51:56.185" endtime="20230616 06:51:56.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:51:56.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:51:56.186" endtime="20230616 06:51:56.187"/>
</kw>
<status status="PASS" starttime="20230616 06:51:49.966" endtime="20230616 06:51:56.187"/>
</kw>
<msg timestamp="20230616 06:51:56.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:49.966" endtime="20230616 06:51:56.187"/>
</kw>
<status status="PASS" starttime="20230616 06:51:49.966" endtime="20230616 06:51:56.187"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:51:56.191" level="INFO">Running command 'ozone sh key delete o3://om:9862/46353-with-del/bfso/key3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:00.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:00.156" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/key3 </msg>
<status status="PASS" starttime="20230616 06:51:56.189" endtime="20230616 06:52:00.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:00.158" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/key3 </msg>
<status status="PASS" starttime="20230616 06:52:00.157" endtime="20230616 06:52:00.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:00.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:00.158" endtime="20230616 06:52:00.159"/>
</kw>
<status status="PASS" starttime="20230616 06:51:56.188" endtime="20230616 06:52:00.159"/>
</kw>
<msg timestamp="20230616 06:52:00.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:51:56.188" endtime="20230616 06:52:00.159"/>
</kw>
<status status="PASS" starttime="20230616 06:51:56.187" endtime="20230616 06:52:00.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:00.163" level="INFO">Running command 'ozone sh key list o3://om:9862/46353-with-del/bfso 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:04.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:04.511" level="INFO">${output} = [ {
  "volumeName" : "46353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-06-16T06:51:59.754Z",
  "modificationTime" : "2023-06-16T06:51:59.754Z"...</msg>
<status status="PASS" starttime="20230616 06:52:00.161" endtime="20230616 06:52:04.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:04.513" level="INFO">[ {
  "volumeName" : "46353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-06-16T06:51:59.754Z",
  "modificationTime" : "2023-06-16T06:51:59.754Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
}, {
  "volumeName" : "46353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/",
  "dataSize" : 0,
  "creationTime" : "2023-06-16T06:51:59.754Z",
  "modificationTime" : "2023-06-16T06:52:00.030Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
}, {
  "volumeName" : "46353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/230616065200/",
  "dataSize" : 0,
  "creationTime" : "2023-06-16T06:51:59.754Z",
  "modificationTime" : "2023-06-16T06:51:59.766Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
}, {
  "volumeName" : "46353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/230616065200/key3",
  "dataSize" : 17289,
  "creationTime" : "2023-06-16T06:51:53.863Z",
  "modificationTime" : "2023-06-16T06:51:55.773Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { }
} ]</msg>
<status status="PASS" starttime="20230616 06:52:04.512" endtime="20230616 06:52:04.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:04.513" endtime="20230616 06:52:04.514"/>
</kw>
<status status="PASS" starttime="20230616 06:52:00.161" endtime="20230616 06:52:04.514"/>
</kw>
<msg timestamp="20230616 06:52:04.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:00.160" endtime="20230616 06:52:04.514"/>
</kw>
<msg timestamp="20230616 06:52:04.515" level="INFO">${result} = [ {
  "volumeName" : "46353-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "dataSize" : 0,
  "creationTime" : "2023-06-16T06:51:59.754Z",
  "modificationTime" : "2023-06-16T06:51:59.754Z"...</msg>
<status status="PASS" starttime="20230616 06:52:00.160" endtime="20230616 06:52:04.515"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230616 06:52:04.515" endtime="20230616 06:52:04.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:52:04.516" endtime="20230616 06:52:04.516"/>
</kw>
<status status="PASS" starttime="20230616 06:51:09.792" endtime="20230616 06:52:04.516"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230616 06:51:09.790" endtime="20230616 06:52:04.517"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20230616 06:42:21.479" endtime="20230616 06:52:04.518"/>
</suite>
<suite id="s1-s10-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s10-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:52:04.528" endtime="20230616 06:52:04.529"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:52:04.529" level="INFO">${random} = 7PtckpEj15</msg>
<status status="PASS" starttime="20230616 06:52:04.529" endtime="20230616 06:52:04.529"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:04.534" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 7PtckpEj15 --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:11.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:11.154" level="INFO">${output} = 2023-06-16 06:52:06,986 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:52:07,155 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:52:04.531" endtime="20230616 06:52:11.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:11.155" level="INFO">2023-06-16 06:52:06,986 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:52:07,155 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:52:07,155 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:52:07,246 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7PtckpEj15 and number-of-tests 1
2023-06-16 06:52:07,310 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:52:08,339 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:52:09,066 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:52:09,340 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:52:09,389 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:52:10,340 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:52:10,805 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1706.848995, max=1706.848995, mean=1706.848995, stddev=0.0, median=1706.848995, p75=1706.848995, p95=1706.848995, p98=1706.848995, p99=1706.848995, p999=1706.848995, mean_rate=0.4317849935674744, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:52:10,806 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:52:10,806 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:52:10,806 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:52:11.154" endtime="20230616 06:52:11.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:11.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:11.155" endtime="20230616 06:52:11.156"/>
</kw>
<status status="PASS" starttime="20230616 06:52:04.531" endtime="20230616 06:52:11.156"/>
</kw>
<msg timestamp="20230616 06:52:11.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:04.531" endtime="20230616 06:52:11.157"/>
</kw>
<msg timestamp="20230616 06:52:11.157" level="INFO">${result} = 2023-06-16 06:52:06,986 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:52:07,155 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:52:04.530" endtime="20230616 06:52:11.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:52:11.157" endtime="20230616 06:52:11.158"/>
</kw>
<status status="PASS" starttime="20230616 06:52:04.529" endtime="20230616 06:52:11.158"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:11.164" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 7PtckpEj15  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:18.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:18.116" level="INFO">${output} = 2023-06-16 06:52:13,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:52:13,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:52:11.161" endtime="20230616 06:52:18.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:18.117" level="INFO">2023-06-16 06:52:13,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:52:13,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:52:13,708 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:52:13,798 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7PtckpEj15 and number-of-tests 1
2023-06-16 06:52:13,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:52:14,880 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:52:15,527 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:52:15,880 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:52:16,880 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:52:17,755 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=38.935961, max=38.935961, mean=38.935961, stddev=0.0, median=38.935961, p75=38.935961, p95=38.935961, p98=38.935961, p99=38.935961, p999=38.935961, mean_rate=0.9385098201425515, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:52:17,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:52:17,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:52:17,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:52:18.116" endtime="20230616 06:52:18.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:18.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:18.118" endtime="20230616 06:52:18.118"/>
</kw>
<status status="PASS" starttime="20230616 06:52:11.161" endtime="20230616 06:52:18.118"/>
</kw>
<msg timestamp="20230616 06:52:18.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:11.160" endtime="20230616 06:52:18.119"/>
</kw>
<msg timestamp="20230616 06:52:18.119" level="INFO">${result} = 2023-06-16 06:52:13,548 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:52:13,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:52:11.159" endtime="20230616 06:52:18.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:52:18.119" endtime="20230616 06:52:18.120"/>
</kw>
<status status="PASS" starttime="20230616 06:52:11.158" endtime="20230616 06:52:18.120"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:52:04.528" endtime="20230616 06:52:18.120"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20230616 06:52:04.520" endtime="20230616 06:52:18.121"/>
</suite>
<status status="PASS" starttime="20230616 06:34:24.243" endtime="20230616 06:52:18.124"/>
</suite>
<suite id="s1-s11" name="Gdpr" source="/opt/hadoop/smoketest/gdpr">
<suite id="s1-s11-s1" name="Gdpr" source="/opt/hadoop/smoketest/gdpr/gdpr.robot">
<kw name="Generate volume" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:52:22.809" level="INFO">${random} = xpqqm</msg>
<status status="PASS" starttime="20230616 06:52:22.808" endtime="20230616 06:52:22.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:52:22.809" level="INFO">${volume} = xpqqm</msg>
<status status="PASS" starttime="20230616 06:52:22.809" endtime="20230616 06:52:22.810"/>
</kw>
<status status="PASS" starttime="20230616 06:52:22.808" endtime="20230616 06:52:22.810"/>
</kw>
<test id="s1-s11-s1-t1" name="Test GDPR disabled" line="34">
<kw name="Test GDPR(disabled) without explicit options">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:22.816" level="INFO">Running command 'ozone sh volume create /xpqqm --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:27.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:27.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:52:22.812" endtime="20230616 06:52:27.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:27.073" level="INFO"/>
<status status="PASS" starttime="20230616 06:52:27.073" endtime="20230616 06:52:27.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:27.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:27.074" endtime="20230616 06:52:27.074"/>
</kw>
<status status="PASS" starttime="20230616 06:52:22.812" endtime="20230616 06:52:27.075"/>
</kw>
<msg timestamp="20230616 06:52:27.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:22.811" endtime="20230616 06:52:27.075"/>
</kw>
<status status="PASS" starttime="20230616 06:52:22.811" endtime="20230616 06:52:27.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/mybucket1 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:27.083" level="INFO">Running command 'ozone sh bucket create /xpqqm/mybucket1 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:31.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:31.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:52:27.080" endtime="20230616 06:52:31.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:31.069" level="INFO"/>
<status status="PASS" starttime="20230616 06:52:31.068" endtime="20230616 06:52:31.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:31.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:31.069" endtime="20230616 06:52:31.070"/>
</kw>
<status status="PASS" starttime="20230616 06:52:27.080" endtime="20230616 06:52:31.070"/>
</kw>
<msg timestamp="20230616 06:52:31.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:27.076" endtime="20230616 06:52:31.070"/>
</kw>
<status status="PASS" starttime="20230616 06:52:27.075" endtime="20230616 06:52:31.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:31.075" level="INFO">Running command 'ozone sh bucket info /xpqqm/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:35.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:35.343" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20230616 06:52:31.072" endtime="20230616 06:52:35.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:35.344" level="INFO">null</msg>
<status status="PASS" starttime="20230616 06:52:35.343" endtime="20230616 06:52:35.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:35.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:35.344" endtime="20230616 06:52:35.345"/>
</kw>
<status status="PASS" starttime="20230616 06:52:31.072" endtime="20230616 06:52:35.345"/>
</kw>
<msg timestamp="20230616 06:52:35.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:31.072" endtime="20230616 06:52:35.345"/>
</kw>
<msg timestamp="20230616 06:52:35.346" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20230616 06:52:31.070" endtime="20230616 06:52:35.346"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:52:35.346" endtime="20230616 06:52:35.346"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket1/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:35.350" level="INFO">Running command 'ozone sh key put /xpqqm/mybucket1/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:41.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:41.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:52:35.348" endtime="20230616 06:52:41.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:41.837" level="INFO"/>
<status status="PASS" starttime="20230616 06:52:41.836" endtime="20230616 06:52:41.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:41.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:41.837" endtime="20230616 06:52:41.838"/>
</kw>
<status status="PASS" starttime="20230616 06:52:35.347" endtime="20230616 06:52:41.838"/>
</kw>
<msg timestamp="20230616 06:52:41.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:35.347" endtime="20230616 06:52:41.838"/>
</kw>
<status status="PASS" starttime="20230616 06:52:35.346" endtime="20230616 06:52:41.838"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:41.842" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:41.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:41.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:52:41.840" endtime="20230616 06:52:41.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:41.845" level="INFO"/>
<status status="PASS" starttime="20230616 06:52:41.845" endtime="20230616 06:52:41.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:41.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:41.846" endtime="20230616 06:52:41.846"/>
</kw>
<status status="PASS" starttime="20230616 06:52:41.839" endtime="20230616 06:52:41.846"/>
</kw>
<msg timestamp="20230616 06:52:41.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:41.839" endtime="20230616 06:52:41.847"/>
</kw>
<status status="PASS" starttime="20230616 06:52:41.838" endtime="20230616 06:52:41.847"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:41.851" level="INFO">Running command 'ozone sh key info /xpqqm/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:46.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:46.295" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20230616 06:52:41.848" endtime="20230616 06:52:46.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:46.296" level="INFO">null</msg>
<status status="PASS" starttime="20230616 06:52:46.296" endtime="20230616 06:52:46.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:46.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:46.297" endtime="20230616 06:52:46.297"/>
</kw>
<status status="PASS" starttime="20230616 06:52:41.848" endtime="20230616 06:52:46.298"/>
</kw>
<msg timestamp="20230616 06:52:46.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:41.847" endtime="20230616 06:52:46.298"/>
</kw>
<msg timestamp="20230616 06:52:46.298" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20230616 06:52:41.847" endtime="20230616 06:52:46.298"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:52:46.298" endtime="20230616 06:52:46.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket1/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:46.302" level="INFO">Running command 'ozone sh key delete /xpqqm/mybucket1/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:50.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:50.368" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:52:46.300" endtime="20230616 06:52:50.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:50.370" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:52:50.369" endtime="20230616 06:52:50.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:50.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:50.370" endtime="20230616 06:52:50.371"/>
</kw>
<status status="PASS" starttime="20230616 06:52:46.300" endtime="20230616 06:52:50.371"/>
</kw>
<msg timestamp="20230616 06:52:50.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:46.299" endtime="20230616 06:52:50.371"/>
</kw>
<status status="PASS" starttime="20230616 06:52:46.299" endtime="20230616 06:52:50.371"/>
</kw>
<status status="PASS" starttime="20230616 06:52:22.811" endtime="20230616 06:52:50.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:52:22.810" endtime="20230616 06:52:50.372"/>
</test>
<test id="s1-s11-s1-t2" name="Test GDPR --enforcegdpr=true" line="37">
<kw name="Test GDPR with --enforcegdpr=true">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:50.378" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /xpqqm/mybucket2 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:54.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:54.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:52:50.376" endtime="20230616 06:52:54.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:54.598" level="INFO"/>
<status status="PASS" starttime="20230616 06:52:54.597" endtime="20230616 06:52:54.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:54.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:54.598" endtime="20230616 06:52:54.599"/>
</kw>
<status status="PASS" starttime="20230616 06:52:50.375" endtime="20230616 06:52:54.599"/>
</kw>
<msg timestamp="20230616 06:52:54.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:50.375" endtime="20230616 06:52:54.600"/>
</kw>
<status status="PASS" starttime="20230616 06:52:50.375" endtime="20230616 06:52:54.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:54.604" level="INFO">Running command 'ozone sh bucket info /xpqqm/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:52:58.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:52:58.890" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20230616 06:52:54.601" endtime="20230616 06:52:58.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:52:58.891" level="INFO">true</msg>
<status status="PASS" starttime="20230616 06:52:58.890" endtime="20230616 06:52:58.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:52:58.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:52:58.891" endtime="20230616 06:52:58.892"/>
</kw>
<status status="PASS" starttime="20230616 06:52:54.601" endtime="20230616 06:52:58.892"/>
</kw>
<msg timestamp="20230616 06:52:58.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:54.601" endtime="20230616 06:52:58.892"/>
</kw>
<msg timestamp="20230616 06:52:58.892" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20230616 06:52:54.600" endtime="20230616 06:52:58.892"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:52:58.893" endtime="20230616 06:52:58.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket2/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:52:58.897" level="INFO">Running command 'ozone sh key put /xpqqm/mybucket2/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:05.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:05.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:52:58.895" endtime="20230616 06:53:05.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:05.456" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:05.456" endtime="20230616 06:53:05.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:05.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:05.457" endtime="20230616 06:53:05.457"/>
</kw>
<status status="PASS" starttime="20230616 06:52:58.894" endtime="20230616 06:53:05.457"/>
</kw>
<msg timestamp="20230616 06:53:05.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:52:58.894" endtime="20230616 06:53:05.457"/>
</kw>
<status status="PASS" starttime="20230616 06:52:58.893" endtime="20230616 06:53:05.458"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:05.461" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:05.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:05.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:05.459" endtime="20230616 06:53:05.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:05.465" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:05.464" endtime="20230616 06:53:05.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:05.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:05.465" endtime="20230616 06:53:05.466"/>
</kw>
<status status="PASS" starttime="20230616 06:53:05.458" endtime="20230616 06:53:05.466"/>
</kw>
<msg timestamp="20230616 06:53:05.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:05.458" endtime="20230616 06:53:05.466"/>
</kw>
<status status="PASS" starttime="20230616 06:53:05.458" endtime="20230616 06:53:05.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:05.470" level="INFO">Running command 'ozone sh key info /xpqqm/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:09.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:09.818" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20230616 06:53:05.468" endtime="20230616 06:53:09.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:09.820" level="INFO">true</msg>
<status status="PASS" starttime="20230616 06:53:09.819" endtime="20230616 06:53:09.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:09.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:09.820" endtime="20230616 06:53:09.821"/>
</kw>
<status status="PASS" starttime="20230616 06:53:05.468" endtime="20230616 06:53:09.821"/>
</kw>
<msg timestamp="20230616 06:53:09.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:05.467" endtime="20230616 06:53:09.821"/>
</kw>
<msg timestamp="20230616 06:53:09.821" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20230616 06:53:05.467" endtime="20230616 06:53:09.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:53:09.822" endtime="20230616 06:53:09.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket2/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:09.826" level="INFO">Running command 'ozone sh key delete /xpqqm/mybucket2/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:13.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:13.585" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:53:09.824" endtime="20230616 06:53:13.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:13.586" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:53:13.586" endtime="20230616 06:53:13.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:13.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:13.587" endtime="20230616 06:53:13.587"/>
</kw>
<status status="PASS" starttime="20230616 06:53:09.823" endtime="20230616 06:53:13.587"/>
</kw>
<msg timestamp="20230616 06:53:13.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:09.823" endtime="20230616 06:53:13.588"/>
</kw>
<status status="PASS" starttime="20230616 06:53:09.822" endtime="20230616 06:53:13.588"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put --stream /${volume}/mybucket2/myStreamKey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:13.592" level="INFO">Running command 'ozone sh key put --stream /xpqqm/mybucket2/myStreamKey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:23.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:23.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:13.589" endtime="20230616 06:53:23.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:23.625" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:23.625" endtime="20230616 06:53:23.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:23.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:23.626" endtime="20230616 06:53:23.626"/>
</kw>
<status status="PASS" starttime="20230616 06:53:13.589" endtime="20230616 06:53:23.626"/>
</kw>
<msg timestamp="20230616 06:53:23.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:13.589" endtime="20230616 06:53:23.626"/>
</kw>
<status status="PASS" starttime="20230616 06:53:13.588" endtime="20230616 06:53:23.627"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:23.631" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:23.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:23.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:23.628" endtime="20230616 06:53:23.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:23.634" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:23.634" endtime="20230616 06:53:23.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:23.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:23.635" endtime="20230616 06:53:23.635"/>
</kw>
<status status="PASS" starttime="20230616 06:53:23.628" endtime="20230616 06:53:23.636"/>
</kw>
<msg timestamp="20230616 06:53:23.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:23.627" endtime="20230616 06:53:23.636"/>
</kw>
<status status="PASS" starttime="20230616 06:53:23.627" endtime="20230616 06:53:23.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket2/myStreamKey | jq -r '. | select(.name=="myStreamKey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:23.639" level="INFO">Running command 'ozone sh key info /xpqqm/mybucket2/myStreamKey | jq -r '. | select(.name=="myStreamKey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:27.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:27.839" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20230616 06:53:23.637" endtime="20230616 06:53:27.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:27.841" level="INFO">true</msg>
<status status="PASS" starttime="20230616 06:53:27.840" endtime="20230616 06:53:27.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:27.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:27.841" endtime="20230616 06:53:27.842"/>
</kw>
<status status="PASS" starttime="20230616 06:53:23.637" endtime="20230616 06:53:27.842"/>
</kw>
<msg timestamp="20230616 06:53:27.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:23.637" endtime="20230616 06:53:27.842"/>
</kw>
<msg timestamp="20230616 06:53:27.843" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20230616 06:53:23.636" endtime="20230616 06:53:27.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:53:27.843" endtime="20230616 06:53:27.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket2/myStreamKey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:27.847" level="INFO">Running command 'ozone sh key delete /xpqqm/mybucket2/myStreamKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:31.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:31.951" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/myStreamKey </msg>
<status status="PASS" starttime="20230616 06:53:27.845" endtime="20230616 06:53:31.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:31.953" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/myStreamKey </msg>
<status status="PASS" starttime="20230616 06:53:31.952" endtime="20230616 06:53:31.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:31.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:31.953" endtime="20230616 06:53:31.954"/>
</kw>
<status status="PASS" starttime="20230616 06:53:27.844" endtime="20230616 06:53:31.954"/>
</kw>
<msg timestamp="20230616 06:53:31.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:27.844" endtime="20230616 06:53:31.954"/>
</kw>
<status status="PASS" starttime="20230616 06:53:27.843" endtime="20230616 06:53:31.954"/>
</kw>
<status status="PASS" starttime="20230616 06:52:50.374" endtime="20230616 06:53:31.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:52:50.373" endtime="20230616 06:53:31.955"/>
</test>
<test id="s1-s11-s1-t3" name="Test GDPR -g=true" line="40">
<kw name="Test GDPR with -g=true">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -g=true /${volume}/mybucket3 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:31.961" level="INFO">Running command 'ozone sh bucket create -g=true /xpqqm/mybucket3 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:35.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:35.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:31.958" endtime="20230616 06:53:35.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:35.856" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:35.856" endtime="20230616 06:53:35.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:35.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:35.857" endtime="20230616 06:53:35.857"/>
</kw>
<status status="PASS" starttime="20230616 06:53:31.958" endtime="20230616 06:53:35.857"/>
</kw>
<msg timestamp="20230616 06:53:35.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:31.958" endtime="20230616 06:53:35.858"/>
</kw>
<status status="PASS" starttime="20230616 06:53:31.957" endtime="20230616 06:53:35.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:35.862" level="INFO">Running command 'ozone sh bucket info /xpqqm/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:40.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:40.205" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20230616 06:53:35.859" endtime="20230616 06:53:40.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:40.206" level="INFO">true</msg>
<status status="PASS" starttime="20230616 06:53:40.205" endtime="20230616 06:53:40.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:40.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:40.206" endtime="20230616 06:53:40.207"/>
</kw>
<status status="PASS" starttime="20230616 06:53:35.859" endtime="20230616 06:53:40.207"/>
</kw>
<msg timestamp="20230616 06:53:40.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:35.859" endtime="20230616 06:53:40.207"/>
</kw>
<msg timestamp="20230616 06:53:40.208" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20230616 06:53:35.858" endtime="20230616 06:53:40.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:53:40.208" endtime="20230616 06:53:40.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket3/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:40.212" level="INFO">Running command 'ozone sh key put /xpqqm/mybucket3/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:46.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:46.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:40.210" endtime="20230616 06:53:46.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:46.719" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:46.719" endtime="20230616 06:53:46.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:46.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:46.720" endtime="20230616 06:53:46.720"/>
</kw>
<status status="PASS" starttime="20230616 06:53:40.209" endtime="20230616 06:53:46.720"/>
</kw>
<msg timestamp="20230616 06:53:46.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:40.209" endtime="20230616 06:53:46.721"/>
</kw>
<status status="PASS" starttime="20230616 06:53:40.208" endtime="20230616 06:53:46.721"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:46.725" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:46.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:46.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:46.722" endtime="20230616 06:53:46.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:46.728" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:46.728" endtime="20230616 06:53:46.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:46.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:46.728" endtime="20230616 06:53:46.729"/>
</kw>
<status status="PASS" starttime="20230616 06:53:46.722" endtime="20230616 06:53:46.729"/>
</kw>
<msg timestamp="20230616 06:53:46.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:46.721" endtime="20230616 06:53:46.729"/>
</kw>
<status status="PASS" starttime="20230616 06:53:46.721" endtime="20230616 06:53:46.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:46.733" level="INFO">Running command 'ozone sh key info /xpqqm/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:50.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:50.870" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20230616 06:53:46.731" endtime="20230616 06:53:50.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:50.871" level="INFO">true</msg>
<status status="PASS" starttime="20230616 06:53:50.871" endtime="20230616 06:53:50.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:50.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:50.872" endtime="20230616 06:53:50.872"/>
</kw>
<status status="PASS" starttime="20230616 06:53:46.730" endtime="20230616 06:53:50.872"/>
</kw>
<msg timestamp="20230616 06:53:50.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:46.730" endtime="20230616 06:53:50.873"/>
</kw>
<msg timestamp="20230616 06:53:50.873" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20230616 06:53:46.730" endtime="20230616 06:53:50.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:53:50.873" endtime="20230616 06:53:50.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket3/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:50.878" level="INFO">Running command 'ozone sh key delete /xpqqm/mybucket3/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:55.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:55.207" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:53:50.875" endtime="20230616 06:53:55.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:55.209" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:53:55.208" endtime="20230616 06:53:55.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:55.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:55.209" endtime="20230616 06:53:55.210"/>
</kw>
<status status="PASS" starttime="20230616 06:53:50.875" endtime="20230616 06:53:55.210"/>
</kw>
<msg timestamp="20230616 06:53:55.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:50.874" endtime="20230616 06:53:55.210"/>
</kw>
<status status="PASS" starttime="20230616 06:53:50.874" endtime="20230616 06:53:55.210"/>
</kw>
<status status="PASS" starttime="20230616 06:53:31.957" endtime="20230616 06:53:55.211"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:53:31.956" endtime="20230616 06:53:55.211"/>
</test>
<test id="s1-s11-s1-t4" name="Test GDPR -g=false" line="43">
<kw name="Test GDPR with -g=false">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/mybucket4 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:55.217" level="INFO">Running command 'ozone sh bucket create /xpqqm/mybucket4 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:53:59.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:53:59.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:53:55.215" endtime="20230616 06:53:59.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:53:59.194" level="INFO"/>
<status status="PASS" starttime="20230616 06:53:59.193" endtime="20230616 06:53:59.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:53:59.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:53:59.194" endtime="20230616 06:53:59.195"/>
</kw>
<status status="PASS" starttime="20230616 06:53:55.214" endtime="20230616 06:53:59.195"/>
</kw>
<msg timestamp="20230616 06:53:59.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:55.214" endtime="20230616 06:53:59.195"/>
</kw>
<status status="PASS" starttime="20230616 06:53:55.214" endtime="20230616 06:53:59.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:53:59.199" level="INFO">Running command 'ozone sh bucket info /xpqqm/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:03.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:03.357" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20230616 06:53:59.197" endtime="20230616 06:54:03.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:03.358" level="INFO">null</msg>
<status status="PASS" starttime="20230616 06:54:03.358" endtime="20230616 06:54:03.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:03.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:03.359" endtime="20230616 06:54:03.359"/>
</kw>
<status status="PASS" starttime="20230616 06:53:59.196" endtime="20230616 06:54:03.359"/>
</kw>
<msg timestamp="20230616 06:54:03.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:53:59.196" endtime="20230616 06:54:03.360"/>
</kw>
<msg timestamp="20230616 06:54:03.360" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20230616 06:53:59.195" endtime="20230616 06:54:03.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:54:03.360" endtime="20230616 06:54:03.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket4/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:03.364" level="INFO">Running command 'ozone sh key put /xpqqm/mybucket4/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:09.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:09.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:54:03.362" endtime="20230616 06:54:09.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:09.607" level="INFO"/>
<status status="PASS" starttime="20230616 06:54:09.606" endtime="20230616 06:54:09.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:09.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:09.607" endtime="20230616 06:54:09.608"/>
</kw>
<status status="PASS" starttime="20230616 06:54:03.362" endtime="20230616 06:54:09.608"/>
</kw>
<msg timestamp="20230616 06:54:09.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:03.361" endtime="20230616 06:54:09.608"/>
</kw>
<status status="PASS" starttime="20230616 06:54:03.361" endtime="20230616 06:54:09.608"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:09.612" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:09.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:09.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:54:09.610" endtime="20230616 06:54:09.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:09.616" level="INFO"/>
<status status="PASS" starttime="20230616 06:54:09.615" endtime="20230616 06:54:09.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:09.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:09.616" endtime="20230616 06:54:09.617"/>
</kw>
<status status="PASS" starttime="20230616 06:54:09.609" endtime="20230616 06:54:09.617"/>
</kw>
<msg timestamp="20230616 06:54:09.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:09.609" endtime="20230616 06:54:09.617"/>
</kw>
<status status="PASS" starttime="20230616 06:54:09.608" endtime="20230616 06:54:09.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:09.621" level="INFO">Running command 'ozone sh key info /xpqqm/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:14.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:14.093" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20230616 06:54:09.619" endtime="20230616 06:54:14.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:14.094" level="INFO">null</msg>
<status status="PASS" starttime="20230616 06:54:14.093" endtime="20230616 06:54:14.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:14.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:14.094" endtime="20230616 06:54:14.095"/>
</kw>
<status status="PASS" starttime="20230616 06:54:09.619" endtime="20230616 06:54:14.095"/>
</kw>
<msg timestamp="20230616 06:54:14.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:09.618" endtime="20230616 06:54:14.095"/>
</kw>
<msg timestamp="20230616 06:54:14.096" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20230616 06:54:09.618" endtime="20230616 06:54:14.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:54:14.096" endtime="20230616 06:54:14.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket4/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:14.101" level="INFO">Running command 'ozone sh key delete /xpqqm/mybucket4/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:18.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:18.474" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:54:14.099" endtime="20230616 06:54:18.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:18.475" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20230616 06:54:18.474" endtime="20230616 06:54:18.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:18.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:18.475" endtime="20230616 06:54:18.476"/>
</kw>
<status status="PASS" starttime="20230616 06:54:14.097" endtime="20230616 06:54:18.476"/>
</kw>
<msg timestamp="20230616 06:54:18.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:14.097" endtime="20230616 06:54:18.476"/>
</kw>
<status status="PASS" starttime="20230616 06:54:14.096" endtime="20230616 06:54:18.476"/>
</kw>
<status status="PASS" starttime="20230616 06:53:55.213" endtime="20230616 06:54:18.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:53:55.212" endtime="20230616 06:54:18.477"/>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="PASS" starttime="20230616 06:52:22.784" endtime="20230616 06:54:18.478"/>
</suite>
<status status="PASS" starttime="20230616 06:52:22.761" endtime="20230616 06:54:18.480"/>
</suite>
<suite id="s1-s12" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s12-t1" name="Token Test" line="82">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Unsecure Cluster">
<kw name="Get Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token get -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:23.132" level="INFO">Running command 'ozone sh token get -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:25.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:25.698" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:23.128" endtime="20230616 06:54:25.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:25.700" level="INFO">Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:25.699" endtime="20230616 06:54:25.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:25.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:25.700" endtime="20230616 06:54:25.701"/>
</kw>
<status status="PASS" starttime="20230616 06:54:23.127" endtime="20230616 06:54:25.701"/>
</kw>
<msg timestamp="20230616 06:54:25.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:23.127" endtime="20230616 06:54:25.701"/>
</kw>
<msg timestamp="20230616 06:54:25.701" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:23.127" endtime="20230616 06:54:25.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token get</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:25.702" endtime="20230616 06:54:25.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:25.702" endtime="20230616 06:54:25.702"/>
</kw>
<status status="PASS" starttime="20230616 06:54:23.127" endtime="20230616 06:54:25.703"/>
</kw>
<kw name="Renew Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:25.708" level="INFO">Running command 'ozone sh token renew -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:28.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:28.088" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:25.705" endtime="20230616 06:54:28.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:28.089" level="INFO">Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:28.088" endtime="20230616 06:54:28.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:28.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:28.089" endtime="20230616 06:54:28.090"/>
</kw>
<status status="PASS" starttime="20230616 06:54:25.704" endtime="20230616 06:54:28.090"/>
</kw>
<msg timestamp="20230616 06:54:28.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:25.703" endtime="20230616 06:54:28.090"/>
</kw>
<msg timestamp="20230616 06:54:28.091" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:25.703" endtime="20230616 06:54:28.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token renew</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:28.091" endtime="20230616 06:54:28.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:28.091" endtime="20230616 06:54:28.092"/>
</kw>
<status status="PASS" starttime="20230616 06:54:25.703" endtime="20230616 06:54:28.092"/>
</kw>
<kw name="Cancel Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ./ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:28.096" level="INFO">Running command 'ozone sh token cancel -t ./ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:30.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:30.760" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:28.093" endtime="20230616 06:54:30.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:30.762" level="INFO">Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:30.761" endtime="20230616 06:54:30.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:30.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:30.762" endtime="20230616 06:54:30.763"/>
</kw>
<status status="PASS" starttime="20230616 06:54:28.093" endtime="20230616 06:54:30.763"/>
</kw>
<msg timestamp="20230616 06:54:30.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:28.093" endtime="20230616 06:54:30.763"/>
</kw>
<msg timestamp="20230616 06:54:30.764" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20230616 06:54:28.092" endtime="20230616 06:54:30.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token cancel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:30.764" endtime="20230616 06:54:30.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:30.764" endtime="20230616 06:54:30.765"/>
</kw>
<status status="PASS" starttime="20230616 06:54:28.092" endtime="20230616 06:54:30.765"/>
</kw>
<status status="PASS" starttime="20230616 06:54:23.126" endtime="20230616 06:54:30.765"/>
</kw>
<status status="PASS" starttime="20230616 06:54:23.126" endtime="20230616 06:54:30.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:54:30.765" endtime="20230616 06:54:30.765"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:30.769" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:33.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:33.473" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230616 06:54:30.767" endtime="20230616 06:54:33.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:33.474" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230616 06:54:33.473" endtime="20230616 06:54:33.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:33.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:33.475" endtime="20230616 06:54:33.475"/>
</kw>
<status status="PASS" starttime="20230616 06:54:30.767" endtime="20230616 06:54:33.475"/>
</kw>
<msg timestamp="20230616 06:54:33.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:30.766" endtime="20230616 06:54:33.476"/>
</kw>
<msg timestamp="20230616 06:54:33.476" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20230616 06:54:30.766" endtime="20230616 06:54:33.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:33.476" endtime="20230616 06:54:33.476"/>
</kw>
<status status="PASS" starttime="20230616 06:54:30.766" endtime="20230616 06:54:33.476"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:54:23.125" endtime="20230616 06:54:33.477"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20230616 06:54:23.079" endtime="20230616 06:54:33.478"/>
</suite>
<suite id="s1-s13" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s13-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s13-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:38.103" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:41.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:41.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:54:38.099" endtime="20230616 06:54:41.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:41.762" level="INFO"/>
<status status="PASS" starttime="20230616 06:54:41.761" endtime="20230616 06:54:41.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:41.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:41.762" endtime="20230616 06:54:41.763"/>
</kw>
<status status="PASS" starttime="20230616 06:54:38.099" endtime="20230616 06:54:41.763"/>
</kw>
<msg timestamp="20230616 06:54:41.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:38.099" endtime="20230616 06:54:41.763"/>
</kw>
<status status="PASS" starttime="20230616 06:54:38.098" endtime="20230616 06:54:41.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:41.767" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:45.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:45.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:54:41.765" endtime="20230616 06:54:45.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:45.759" level="INFO"/>
<status status="PASS" starttime="20230616 06:54:45.758" endtime="20230616 06:54:45.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:45.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:45.759" endtime="20230616 06:54:45.760"/>
</kw>
<status status="PASS" starttime="20230616 06:54:41.764" endtime="20230616 06:54:45.760"/>
</kw>
<msg timestamp="20230616 06:54:45.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:41.764" endtime="20230616 06:54:45.760"/>
</kw>
<status status="PASS" starttime="20230616 06:54:41.764" endtime="20230616 06:54:45.760"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:45.765" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:52.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:52.908" level="INFO">${output} = 2023-06-16 06:54:47,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:54:47,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:54:45.763" endtime="20230616 06:54:52.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:52.909" level="INFO">2023-06-16 06:54:47,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:54:47,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:54:47,967 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:54:48,057 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-06-16 06:54:48,131 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:54:49,132 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:54:50,000 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:54:50,132 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:54:50,360 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:54:51,132 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2023-06-16 06:54:52,133 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-06-16 06:54:52,539 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=66.958067, max=1650.953496, mean=237.33995290000004, stddev=471.2619498521864, median=81.440576, p75=88.731882, p95=1650.953496, p98=1650.953496, p99=1650.953496, p999=1650.953496, mean_rate=3.2002338177873635, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:54:52,539 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:54:52,539 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:54:52,539 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230616 06:54:52.908" endtime="20230616 06:54:52.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:52.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:52.909" endtime="20230616 06:54:52.910"/>
</kw>
<status status="PASS" starttime="20230616 06:54:45.762" endtime="20230616 06:54:52.910"/>
</kw>
<msg timestamp="20230616 06:54:52.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:45.762" endtime="20230616 06:54:52.910"/>
</kw>
<msg timestamp="20230616 06:54:52.911" level="INFO">${result} = 2023-06-16 06:54:47,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:54:47,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:54:45.761" endtime="20230616 06:54:52.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:52.911" endtime="20230616 06:54:52.911"/>
</kw>
<status status="PASS" starttime="20230616 06:54:45.760" endtime="20230616 06:54:52.911"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:54:52.912" endtime="20230616 06:54:52.913"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:52.917" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:53.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:53.155" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":123,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:54:52.914" endtime="20230616 06:54:53.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:53.156" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":123,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:54:53.155" endtime="20230616 06:54:53.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:53.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:53.157" endtime="20230616 06:54:53.157"/>
</kw>
<status status="PASS" starttime="20230616 06:54:52.914" endtime="20230616 06:54:53.157"/>
</kw>
<msg timestamp="20230616 06:54:53.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:52.914" endtime="20230616 06:54:53.158"/>
</kw>
<msg timestamp="20230616 06:54:53.158" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":123,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:54:52.913" endtime="20230616 06:54:53.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:54:53.158" endtime="20230616 06:54:53.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:54:53.164" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:54:53.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:54:53.188" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:54:53.161" endtime="20230616 06:54:53.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:54:53.190" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230616 06:54:53.189" endtime="20230616 06:54:53.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:54:53.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:54:53.190" endtime="20230616 06:54:53.190"/>
</kw>
<status status="PASS" starttime="20230616 06:54:53.159" endtime="20230616 06:54:53.191"/>
</kw>
<msg timestamp="20230616 06:54:53.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:54:53.159" endtime="20230616 06:54:53.191"/>
</kw>
<msg timestamp="20230616 06:54:53.191" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:54:53.159" endtime="20230616 06:54:53.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:54:53.192" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230616 06:54:53.191" endtime="20230616 06:54:53.192"/>
</kw>
<status status="FAIL" starttime="20230616 06:54:52.912" endtime="20230616 06:54:53.192"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:03.194" endtime="20230616 06:55:03.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:03.198" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:03.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:03.213" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:03.196" endtime="20230616 06:55:03.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:03.215" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:03.214" endtime="20230616 06:55:03.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:03.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:03.215" endtime="20230616 06:55:03.215"/>
</kw>
<status status="PASS" starttime="20230616 06:55:03.195" endtime="20230616 06:55:03.216"/>
</kw>
<msg timestamp="20230616 06:55:03.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:03.195" endtime="20230616 06:55:03.216"/>
</kw>
<msg timestamp="20230616 06:55:03.216" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:03.194" endtime="20230616 06:55:03.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:03.216" endtime="20230616 06:55:03.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:03.220" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:03.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:03.236" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:03.218" endtime="20230616 06:55:03.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:03.237" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230616 06:55:03.236" endtime="20230616 06:55:03.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:03.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:03.237" endtime="20230616 06:55:03.238"/>
</kw>
<status status="PASS" starttime="20230616 06:55:03.218" endtime="20230616 06:55:03.238"/>
</kw>
<msg timestamp="20230616 06:55:03.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:03.217" endtime="20230616 06:55:03.238"/>
</kw>
<msg timestamp="20230616 06:55:03.239" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:03.217" endtime="20230616 06:55:03.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:55:03.239" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230616 06:55:03.239" endtime="20230616 06:55:03.239"/>
</kw>
<status status="FAIL" starttime="20230616 06:55:03.193" endtime="20230616 06:55:03.240"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:13.241" endtime="20230616 06:55:13.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:13.245" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:13.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:13.261" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:13.243" endtime="20230616 06:55:13.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:13.262" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:13.262" endtime="20230616 06:55:13.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:13.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:13.263" endtime="20230616 06:55:13.263"/>
</kw>
<status status="PASS" starttime="20230616 06:55:13.242" endtime="20230616 06:55:13.264"/>
</kw>
<msg timestamp="20230616 06:55:13.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:13.242" endtime="20230616 06:55:13.264"/>
</kw>
<msg timestamp="20230616 06:55:13.264" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:13.242" endtime="20230616 06:55:13.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:13.264" endtime="20230616 06:55:13.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:13.269" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:13.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:13.289" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:13.266" endtime="20230616 06:55:13.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:13.290" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230616 06:55:13.290" endtime="20230616 06:55:13.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:13.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:13.291" endtime="20230616 06:55:13.291"/>
</kw>
<status status="PASS" starttime="20230616 06:55:13.266" endtime="20230616 06:55:13.291"/>
</kw>
<msg timestamp="20230616 06:55:13.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:13.265" endtime="20230616 06:55:13.292"/>
</kw>
<msg timestamp="20230616 06:55:13.292" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:13.265" endtime="20230616 06:55:13.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:55:13.293" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230616 06:55:13.292" endtime="20230616 06:55:13.293"/>
</kw>
<status status="FAIL" starttime="20230616 06:55:13.240" endtime="20230616 06:55:13.293"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:23.295" endtime="20230616 06:55:23.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:23.299" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:23.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:23.314" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:23.297" endtime="20230616 06:55:23.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:23.315" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:23.315" endtime="20230616 06:55:23.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:23.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:23.316" endtime="20230616 06:55:23.316"/>
</kw>
<status status="PASS" starttime="20230616 06:55:23.296" endtime="20230616 06:55:23.316"/>
</kw>
<msg timestamp="20230616 06:55:23.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:23.296" endtime="20230616 06:55:23.317"/>
</kw>
<msg timestamp="20230616 06:55:23.317" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:23.295" endtime="20230616 06:55:23.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:23.317" endtime="20230616 06:55:23.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:23.321" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:23.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:23.337" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:23.319" endtime="20230616 06:55:23.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:23.339" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]</msg>
<status status="PASS" starttime="20230616 06:55:23.338" endtime="20230616 06:55:23.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:23.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:23.339" endtime="20230616 06:55:23.340"/>
</kw>
<status status="PASS" starttime="20230616 06:55:23.318" endtime="20230616 06:55:23.340"/>
</kw>
<msg timestamp="20230616 06:55:23.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:23.318" endtime="20230616 06:55:23.340"/>
</kw>
<msg timestamp="20230616 06:55:23.340" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:23.317" endtime="20230616 06:55:23.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:55:23.341" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230616 06:55:23.341" endtime="20230616 06:55:23.341"/>
</kw>
<status status="FAIL" starttime="20230616 06:55:23.294" endtime="20230616 06:55:23.342"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.343" endtime="20230616 06:55:33.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.347" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.363" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:33.345" endtime="20230616 06:55:33.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.364" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:33.363" endtime="20230616 06:55:33.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.364" endtime="20230616 06:55:33.365"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.344" endtime="20230616 06:55:33.365"/>
</kw>
<msg timestamp="20230616 06:55:33.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.344" endtime="20230616 06:55:33.365"/>
</kw>
<msg timestamp="20230616 06:55:33.366" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":124,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230616 06:55:33.343" endtime="20230616 06:55:33.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.366" endtime="20230616 06:55:33.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.370" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.384" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:33.368" endtime="20230616 06:55:33.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.385" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"53142-without-scheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-acls","bucket":"bb1","fileSize":32768,"count":2},{"volume":"46353-without-host","bucket":"bb1","fileSize":32768,"count":0},{"volume":"46353-with-del","bucket":"bfso","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket2","fileSize":32768,"count":2},{"volume":"xpqqm","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"xpqqm","bucket":"mybucket3","fileSize":32768,"count":1},{"volume":"xpqqm","bucket":"mybucket4","fileSize":32768,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230616 06:55:33.384" endtime="20230616 06:55:33.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.385" endtime="20230616 06:55:33.386"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.367" endtime="20230616 06:55:33.386"/>
</kw>
<msg timestamp="20230616 06:55:33.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.367" endtime="20230616 06:55:33.386"/>
</kw>
<msg timestamp="20230616 06:55:33.387" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":1024,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"74347-source","bucket":"bucket1","fileSize":1024,"count":2},...</msg>
<status status="PASS" starttime="20230616 06:55:33.366" endtime="20230616 06:55:33.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.387" endtime="20230616 06:55:33.387"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.342" endtime="20230616 06:55:33.387"/>
</kw>
<status status="PASS" starttime="20230616 06:54:52.912" endtime="20230616 06:55:33.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:54:38.097" endtime="20230616 06:55:33.388"/>
</test>
<test id="s1-s13-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.393" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.443" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"cap...</msg>
<status status="PASS" starttime="20230616 06:55:33.391" endtime="20230616 06:55:33.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.444" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":1396845,"remaining":19882749952},"pipelines":[{"pipelineID":"36f2c597-69a2-4a1e-ab43-1d6ea8daff6e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"1fa4b221-6054-40b9-bd76-c869776ea9e9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone_datanode_1.ozone_default"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1686897106155,"revision":"998c1eb17fdc5d7daf781ff62644bb335cd612bc","buildDate":"2023-06-16T06:01Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"55d42d4b-e26a-4462-832c-2eb2975f0613","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":1396845,"remaining":19882749952},"pipelines":[{"pipelineID":"1fa4b221-6054-40b9-bd76-c869776ea9e9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"e986ce8a-de65-475c-800f-36120d4c2016","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone_datanode_2.ozone_default"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1686897106431,"revision":"998c1eb17fdc5d7daf781ff62644bb335cd612bc","buildDate":"2023-06-16T06:01Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"2afe77c9-b70d-4f60-853c-539dbe25ad50","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":1407085,"remaining":19882749952},"pipelines":[{"pipelineID":"1fa4b221-6054-40b9-bd76-c869776ea9e9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"0991da7b-5ae8-495b-8d74-442b6e284ff2","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1686897106575,"revision":"998c1eb17fdc5d7daf781ff62644bb335cd612bc","buildDate":"2023-06-16T06:01Z","layoutVersion":7,"networkLocation":"/default-rack"}]}</msg>
<status status="PASS" starttime="20230616 06:55:33.443" endtime="20230616 06:55:33.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.444" endtime="20230616 06:55:33.445"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.390" endtime="20230616 06:55:33.445"/>
</kw>
<msg timestamp="20230616 06:55:33.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.390" endtime="20230616 06:55:33.445"/>
</kw>
<msg timestamp="20230616 06:55:33.445" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"cap...</msg>
<status status="PASS" starttime="20230616 06:55:33.390" endtime="20230616 06:55:33.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.446" endtime="20230616 06:55:33.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.446" endtime="20230616 06:55:33.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.447" endtime="20230616 06:55:33.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.447" endtime="20230616 06:55:33.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.452" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.506" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"36f2c597-69a2-4a1e-ab43-1d6ea8daff6e","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"2...</msg>
<status status="PASS" starttime="20230616 06:55:33.450" endtime="20230616 06:55:33.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.507" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"36f2c597-69a2-4a1e-ab43-1d6ea8daff6e","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","uuidString":"28f28295-f9b6-4a85-ad72-14a73ae69d77","ipAddress":"172.19.0.8","hostName":"ozone_datanode_1.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-236840010,"maintenance":false,"decommissioned":false,"networkName":"28f28295-f9b6-4a85-ad72-14a73ae69d77","networkLocation":"/default-rack","networkFullPath":"/default-rack/28f28295-f9b6-4a85-ad72-14a73ae69d77","numOfLeaves":1}],"lastLeaderElection":0,"duration":1385630,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1fa4b221-6054-40b9-bd76-c869776ea9e9","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","uuidString":"28f28295-f9b6-4a85-ad72-14a73ae69d77","ipAddress":"172.19.0.8","hostName":"ozone_datanode_1.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-236840010,"maintenance":false,"decommissioned":false,"networkName":"28f28295-f9b6-4a85-ad72-14a73ae69d77","networkLocation":"/default-rack","networkFullPath":"/default-rack/28f28295-f9b6-4a85-ad72-14a73ae69d77","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"2afe77c9-b70d-4f60-853c-539dbe25ad50","uuidString":"2afe77c9-b70d-4f60-853c-539dbe25ad50","ipAddress":"172.19.0.3","hostName":"ozone_datanode_3.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1933504432,"maintenance":false,"decommissioned":false,"networkName":"2afe77c9-b70d-4f60-853c-539dbe25ad50","networkLocation":"/default-rack","networkFullPath":"/default-rack/2afe77c9-b70d-4f60-853c-539dbe25ad50","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"55d42d4b-e26a-4462-832c-2eb2975f0613","uuidString":"55d42d4b-e26a-4462-832c-2eb2975f0613","ipAddress":"172.19.0.7","hostName":"ozone_datanode_2.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1981873698,"maintenance":false,"decommissioned":false,"networkName":"55d42d4b-e26a-4462-832c-2eb2975f0613","networkLocation":"/default-rack","networkFullPath":"/default-rack/55d42d4b-e26a-4462-832c-2eb2975f0613","numOfLeaves":1}],"lastLeaderElection":0,"duration":1385555,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e986ce8a-de65-475c-800f-36120d4c2016","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"55d42d4b-e26a-4462-832c-2eb2975f0613","uuidString":"55d42d4b-e26a-4462-832c-2eb2975f0613","ipAddress":"172.19.0.7","hostName":"ozone_datanode_2.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1981873698,"maintenance":false,"decommissioned":false,"networkName":"55d42d4b-e26a-4462-832c-2eb2975f0613","networkLocation":"/default-rack","networkFullPath":"/default-rack/55d42d4b-e26a-4462-832c-2eb2975f0613","numOfLeaves":1}],"lastLeaderElection":0,"duration":1385564,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"0991da7b-5ae8-495b-8d74-442b6e284ff2","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"2afe77c9-b70d-4f60-853c-539dbe25ad50","uuidString":"2afe77c9-b70d-4f60-853c-539dbe25ad50","ipAddress":"172.19.0.3","hostName":"ozone_datanode_3.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1933504432,"maintenance":false,"decommissioned":false,"networkName":"2afe77c9-b70d-4f60-853c-539dbe25ad50","networkLocation":"/default-rack","networkFullPath":"/default-rack/2afe77c9-b70d-4f60-853c-539dbe25ad50","numOfLeaves":1}],"lastLeaderElection":0,"duration":1386338,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":1}]}</msg>
<status status="PASS" starttime="20230616 06:55:33.507" endtime="20230616 06:55:33.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.508" endtime="20230616 06:55:33.508"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.450" endtime="20230616 06:55:33.509"/>
</kw>
<msg timestamp="20230616 06:55:33.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.449" endtime="20230616 06:55:33.509"/>
</kw>
<msg timestamp="20230616 06:55:33.509" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"36f2c597-69a2-4a1e-ab43-1d6ea8daff6e","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"2...</msg>
<status status="PASS" starttime="20230616 06:55:33.448" endtime="20230616 06:55:33.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.509" endtime="20230616 06:55:33.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.510" endtime="20230616 06:55:33.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.510" endtime="20230616 06:55:33.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.511" endtime="20230616 06:55:33.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.511" endtime="20230616 06:55:33.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.516" endtime="20230616 06:55:33.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.521" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.557" level="INFO">${output} = {"deletedDirs":2,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267891929088,"used":4200775,"remaining":59648249856},"containers":2,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230616 06:55:33.518" endtime="20230616 06:55:33.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.558" level="INFO">{"deletedDirs":2,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267891929088,"used":4200775,"remaining":59648249856},"containers":2,"missingContainers":0,"openContainers":2,"deletedContainers":0,"volumes":8,"buckets":21,"keys":121,"keysPendingDeletion":2}</msg>
<status status="PASS" starttime="20230616 06:55:33.558" endtime="20230616 06:55:33.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.558" endtime="20230616 06:55:33.559"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.518" endtime="20230616 06:55:33.559"/>
</kw>
<msg timestamp="20230616 06:55:33.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.517" endtime="20230616 06:55:33.560"/>
</kw>
<msg timestamp="20230616 06:55:33.560" level="INFO">${result} = {"deletedDirs":2,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267891929088,"used":4200775,"remaining":59648249856},"containers":2,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20230616 06:55:33.517" endtime="20230616 06:55:33.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.560" endtime="20230616 06:55:33.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.561" endtime="20230616 06:55:33.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.561" endtime="20230616 06:55:33.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.567" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.584" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","datanodeHost":"ozone_datanode_1.ozone_default","firstSeenTime":1686897206808,"lastSeenTime":1686898456479,"state":"OPEN","lastB...</msg>
<status status="PASS" starttime="20230616 06:55:33.564" endtime="20230616 06:55:33.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.585" level="INFO">[{"containerId":1,"datanodeUuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","datanodeHost":"ozone_datanode_1.ozone_default","firstSeenTime":1686897206808,"lastSeenTime":1686898456479,"state":"OPEN","lastBcsId":495},{"containerId":1,"datanodeUuid":"55d42d4b-e26a-4462-832c-2eb2975f0613","datanodeHost":"ozone_datanode_2.ozone_default","firstSeenTime":1686897207064,"lastSeenTime":1686898457080,"state":"OPEN","lastBcsId":495},{"containerId":1,"datanodeUuid":"2afe77c9-b70d-4f60-853c-539dbe25ad50","datanodeHost":"ozone_datanode_3.ozone_default","firstSeenTime":1686897206924,"lastSeenTime":1686898500044,"state":"OPEN","lastBcsId":535}]</msg>
<status status="PASS" starttime="20230616 06:55:33.585" endtime="20230616 06:55:33.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.586" endtime="20230616 06:55:33.586"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.563" endtime="20230616 06:55:33.586"/>
</kw>
<msg timestamp="20230616 06:55:33.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.562" endtime="20230616 06:55:33.587"/>
</kw>
<msg timestamp="20230616 06:55:33.587" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"28f28295-f9b6-4a85-ad72-14a73ae69d77","datanodeHost":"ozone_datanode_1.ozone_default","firstSeenTime":1686897206808,"lastSeenTime":1686898456479,"state":"OPEN","lastB...</msg>
<status status="PASS" starttime="20230616 06:55:33.562" endtime="20230616 06:55:33.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.587" endtime="20230616 06:55:33.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.389" endtime="20230616 06:55:33.588"/>
</test>
<test id="s1-s13-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.590" endtime="20230616 06:55:33.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.594" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.611" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230616 06:55:33.592" endtime="20230616 06:55:33.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.612" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.a0dcc6a4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.c763df28.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.1d4c10d9.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.793b03a5.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.611" endtime="20230616 06:55:33.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.612" endtime="20230616 06:55:33.612"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.591" endtime="20230616 06:55:33.613"/>
</kw>
<msg timestamp="20230616 06:55:33.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.591" endtime="20230616 06:55:33.613"/>
</kw>
<msg timestamp="20230616 06:55:33.613" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230616 06:55:33.590" endtime="20230616 06:55:33.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.614" endtime="20230616 06:55:33.614"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.589" endtime="20230616 06:55:33.614"/>
</test>
<test id="s1-s13-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.619" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.623" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.617" endtime="20230616 06:55:33.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.624" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.623" endtime="20230616 06:55:33.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.624" endtime="20230616 06:55:33.625"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.617" endtime="20230616 06:55:33.625"/>
</kw>
<msg timestamp="20230616 06:55:33.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.616" endtime="20230616 06:55:33.625"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.616" endtime="20230616 06:55:33.625"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.629" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.644" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.627" endtime="20230616 06:55:33.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.645" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.645" endtime="20230616 06:55:33.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.646" endtime="20230616 06:55:33.646"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.627" endtime="20230616 06:55:33.646"/>
</kw>
<msg timestamp="20230616 06:55:33.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.627" endtime="20230616 06:55:33.647"/>
</kw>
<msg timestamp="20230616 06:55:33.647" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.626" endtime="20230616 06:55:33.647"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.647" endtime="20230616 06:55:33.647"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.647" endtime="20230616 06:55:33.647"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.648" endtime="20230616 06:55:33.648"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.648" endtime="20230616 06:55:33.648"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.647" endtime="20230616 06:55:33.648"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.625" endtime="20230616 06:55:33.648"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.649" endtime="20230616 06:55:33.649"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.648" endtime="20230616 06:55:33.650"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.654" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.667" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.652" endtime="20230616 06:55:33.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.668" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.667" endtime="20230616 06:55:33.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.668" endtime="20230616 06:55:33.668"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.651" endtime="20230616 06:55:33.668"/>
</kw>
<msg timestamp="20230616 06:55:33.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.651" endtime="20230616 06:55:33.669"/>
</kw>
<msg timestamp="20230616 06:55:33.669" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.650" endtime="20230616 06:55:33.669"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.669" endtime="20230616 06:55:33.669"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.669" endtime="20230616 06:55:33.669"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.670" endtime="20230616 06:55:33.670"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.670" endtime="20230616 06:55:33.670"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.669" endtime="20230616 06:55:33.671"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.650" endtime="20230616 06:55:33.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.615" endtime="20230616 06:55:33.671"/>
</test>
<test id="s1-s13-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.676" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.679" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.674" endtime="20230616 06:55:33.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.680" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.680" endtime="20230616 06:55:33.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.681" endtime="20230616 06:55:33.681"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.674" endtime="20230616 06:55:33.681"/>
</kw>
<msg timestamp="20230616 06:55:33.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.673" endtime="20230616 06:55:33.682"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.673" endtime="20230616 06:55:33.682"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.686" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.699" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.684" endtime="20230616 06:55:33.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.700" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.700" endtime="20230616 06:55:33.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.701" endtime="20230616 06:55:33.702"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.684" endtime="20230616 06:55:33.702"/>
</kw>
<msg timestamp="20230616 06:55:33.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.683" endtime="20230616 06:55:33.702"/>
</kw>
<msg timestamp="20230616 06:55:33.702" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.682" endtime="20230616 06:55:33.702"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.703" endtime="20230616 06:55:33.703"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.702" endtime="20230616 06:55:33.703"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.703" endtime="20230616 06:55:33.703"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.703" endtime="20230616 06:55:33.704"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.702" endtime="20230616 06:55:33.704"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.682" endtime="20230616 06:55:33.704"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.704" endtime="20230616 06:55:33.705"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.704" endtime="20230616 06:55:33.705"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.709" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.724" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.707" endtime="20230616 06:55:33.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.726" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.725" endtime="20230616 06:55:33.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.726" endtime="20230616 06:55:33.726"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.706" endtime="20230616 06:55:33.727"/>
</kw>
<msg timestamp="20230616 06:55:33.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.706" endtime="20230616 06:55:33.727"/>
</kw>
<msg timestamp="20230616 06:55:33.727" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.706" endtime="20230616 06:55:33.727"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.728" endtime="20230616 06:55:33.728"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.727" endtime="20230616 06:55:33.728"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.728" endtime="20230616 06:55:33.728"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.728" endtime="20230616 06:55:33.728"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.727" endtime="20230616 06:55:33.728"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.705" endtime="20230616 06:55:33.729"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.729" endtime="20230616 06:55:33.729"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.729" endtime="20230616 06:55:33.730"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.734" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.747" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.732" endtime="20230616 06:55:33.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.748" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.748" endtime="20230616 06:55:33.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.749" endtime="20230616 06:55:33.749"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.731" endtime="20230616 06:55:33.749"/>
</kw>
<msg timestamp="20230616 06:55:33.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.731" endtime="20230616 06:55:33.750"/>
</kw>
<msg timestamp="20230616 06:55:33.750" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.730" endtime="20230616 06:55:33.750"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.750" endtime="20230616 06:55:33.750"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.750" endtime="20230616 06:55:33.751"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.751" endtime="20230616 06:55:33.751"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.751" endtime="20230616 06:55:33.751"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.750" endtime="20230616 06:55:33.751"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.730" endtime="20230616 06:55:33.751"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.752" endtime="20230616 06:55:33.752"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.751" endtime="20230616 06:55:33.752"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.757" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.771" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.755" endtime="20230616 06:55:33.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.772" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.771" endtime="20230616 06:55:33.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.772" endtime="20230616 06:55:33.773"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.754" endtime="20230616 06:55:33.773"/>
</kw>
<msg timestamp="20230616 06:55:33.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.754" endtime="20230616 06:55:33.773"/>
</kw>
<msg timestamp="20230616 06:55:33.773" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.753" endtime="20230616 06:55:33.774"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.774" endtime="20230616 06:55:33.774"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.774" endtime="20230616 06:55:33.774"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.775" endtime="20230616 06:55:33.775"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.774" endtime="20230616 06:55:33.775"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.774" endtime="20230616 06:55:33.775"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.753" endtime="20230616 06:55:33.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.672" endtime="20230616 06:55:33.775"/>
</test>
<test id="s1-s13-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.780" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.783" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.778" endtime="20230616 06:55:33.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.784" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.784" endtime="20230616 06:55:33.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.785" endtime="20230616 06:55:33.785"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.778" endtime="20230616 06:55:33.785"/>
</kw>
<msg timestamp="20230616 06:55:33.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.777" endtime="20230616 06:55:33.786"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.777" endtime="20230616 06:55:33.786"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.789" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.826" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.787" endtime="20230616 06:55:33.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.827" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.826" endtime="20230616 06:55:33.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.827" endtime="20230616 06:55:33.828"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.787" endtime="20230616 06:55:33.828"/>
</kw>
<msg timestamp="20230616 06:55:33.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.787" endtime="20230616 06:55:33.828"/>
</kw>
<msg timestamp="20230616 06:55:33.828" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.786" endtime="20230616 06:55:33.828"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.830" endtime="20230616 06:55:33.830"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.829" endtime="20230616 06:55:33.830"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.831" endtime="20230616 06:55:33.831"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.830" endtime="20230616 06:55:33.831"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.829" endtime="20230616 06:55:33.831"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.786" endtime="20230616 06:55:33.832"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.833" endtime="20230616 06:55:33.833"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.832" endtime="20230616 06:55:33.833"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.842" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.859" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.839" endtime="20230616 06:55:33.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.860" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.860" endtime="20230616 06:55:33.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.860" endtime="20230616 06:55:33.861"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.838" endtime="20230616 06:55:33.861"/>
</kw>
<msg timestamp="20230616 06:55:33.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.838" endtime="20230616 06:55:33.862"/>
</kw>
<msg timestamp="20230616 06:55:33.862" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.837" endtime="20230616 06:55:33.862"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.862" endtime="20230616 06:55:33.862"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.862" endtime="20230616 06:55:33.862"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.863" endtime="20230616 06:55:33.863"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.862" endtime="20230616 06:55:33.863"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.862" endtime="20230616 06:55:33.863"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.833" endtime="20230616 06:55:33.863"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.864" endtime="20230616 06:55:33.864"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.863" endtime="20230616 06:55:33.864"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.868" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.883" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.866" endtime="20230616 06:55:33.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.884" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.884" endtime="20230616 06:55:33.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.884" endtime="20230616 06:55:33.886"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.866" endtime="20230616 06:55:33.886"/>
</kw>
<msg timestamp="20230616 06:55:33.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.865" endtime="20230616 06:55:33.886"/>
</kw>
<msg timestamp="20230616 06:55:33.886" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.865" endtime="20230616 06:55:33.886"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.887" endtime="20230616 06:55:33.887"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.886" endtime="20230616 06:55:33.887"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.887" endtime="20230616 06:55:33.887"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.887" endtime="20230616 06:55:33.887"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.886" endtime="20230616 06:55:33.887"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.864" endtime="20230616 06:55:33.888"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.888" endtime="20230616 06:55:33.888"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.888" endtime="20230616 06:55:33.888"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.892" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.906" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.890" endtime="20230616 06:55:33.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.907" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.907" endtime="20230616 06:55:33.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.908" endtime="20230616 06:55:33.908"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.890" endtime="20230616 06:55:33.908"/>
</kw>
<msg timestamp="20230616 06:55:33.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.889" endtime="20230616 06:55:33.908"/>
</kw>
<msg timestamp="20230616 06:55:33.910" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.889" endtime="20230616 06:55:33.910"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.910" endtime="20230616 06:55:33.910"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.910" endtime="20230616 06:55:33.910"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.910" endtime="20230616 06:55:33.911"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.910" endtime="20230616 06:55:33.911"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.910" endtime="20230616 06:55:33.911"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.889" endtime="20230616 06:55:33.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.776" endtime="20230616 06:55:33.911"/>
</test>
<test id="s1-s13-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.916" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.920" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.914" endtime="20230616 06:55:33.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.921" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.920" endtime="20230616 06:55:33.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.921" endtime="20230616 06:55:33.922"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.914" endtime="20230616 06:55:33.922"/>
</kw>
<msg timestamp="20230616 06:55:33.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.913" endtime="20230616 06:55:33.922"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.912" endtime="20230616 06:55:33.922"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.926" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.941" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.924" endtime="20230616 06:55:33.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.942" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.942" endtime="20230616 06:55:33.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.943" endtime="20230616 06:55:33.943"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.923" endtime="20230616 06:55:33.943"/>
</kw>
<msg timestamp="20230616 06:55:33.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.923" endtime="20230616 06:55:33.943"/>
</kw>
<msg timestamp="20230616 06:55:33.944" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.923" endtime="20230616 06:55:33.944"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.944" endtime="20230616 06:55:33.944"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.944" endtime="20230616 06:55:33.944"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.944" endtime="20230616 06:55:33.945"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.944" endtime="20230616 06:55:33.945"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.944" endtime="20230616 06:55:33.945"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.922" endtime="20230616 06:55:33.945"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.946" endtime="20230616 06:55:33.946"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.945" endtime="20230616 06:55:33.946"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.950" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.965" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.948" endtime="20230616 06:55:33.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.966" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:33.966" endtime="20230616 06:55:33.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.967" endtime="20230616 06:55:33.969"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.948" endtime="20230616 06:55:33.969"/>
</kw>
<msg timestamp="20230616 06:55:33.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.947" endtime="20230616 06:55:33.969"/>
</kw>
<msg timestamp="20230616 06:55:33.970" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:33.947" endtime="20230616 06:55:33.970"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:33.972" endtime="20230616 06:55:33.972"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:33.971" endtime="20230616 06:55:33.972"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:33.972" endtime="20230616 06:55:33.972"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.972" endtime="20230616 06:55:33.972"/>
</branch>
<status status="PASS" starttime="20230616 06:55:33.971" endtime="20230616 06:55:33.972"/>
</if>
<status status="PASS" starttime="20230616 06:55:33.946" endtime="20230616 06:55:33.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.912" endtime="20230616 06:55:33.973"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230616 06:54:38.065" endtime="20230616 06:55:33.975"/>
</suite>
<suite id="s1-s13-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s13-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:33.993" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:33.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:33.996" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.990" endtime="20230616 06:55:33.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:33.997" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:33.997" endtime="20230616 06:55:33.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:33.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:33.997" endtime="20230616 06:55:33.998"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.990" endtime="20230616 06:55:33.998"/>
</kw>
<msg timestamp="20230616 06:55:33.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:33.989" endtime="20230616 06:55:33.998"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.989" endtime="20230616 06:55:33.999"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:33.999" endtime="20230616 06:55:34.000"/>
</kw>
<status status="PASS" starttime="20230616 06:55:33.999" endtime="20230616 06:55:34.000"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:55:34.001" level="INFO">${random} = syrfd</msg>
<status status="PASS" starttime="20230616 06:55:34.000" endtime="20230616 06:55:34.001"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:55:34.001" level="INFO">${VOLUME} = vol-syrfd</msg>
<status status="PASS" starttime="20230616 06:55:34.001" endtime="20230616 06:55:34.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:34.005" level="INFO">Running command 'ozone sh volume create /vol-syrfd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:37.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:37.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:55:34.003" endtime="20230616 06:55:37.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:38.000" level="INFO"/>
<status status="PASS" starttime="20230616 06:55:37.999" endtime="20230616 06:55:38.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:38.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:38.000" endtime="20230616 06:55:38.001"/>
</kw>
<status status="PASS" starttime="20230616 06:55:34.002" endtime="20230616 06:55:38.001"/>
</kw>
<msg timestamp="20230616 06:55:38.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:34.002" endtime="20230616 06:55:38.002"/>
</kw>
<msg timestamp="20230616 06:55:38.002" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:55:34.001" endtime="20230616 06:55:38.002"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:38.002" endtime="20230616 06:55:38.002"/>
</kw>
<status status="PASS" starttime="20230616 06:55:34.000" endtime="20230616 06:55:38.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:33.988" endtime="20230616 06:55:38.003"/>
</test>
<test id="s1-s13-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230616 06:55:38.005" level="INFO">${random} = tjylp</msg>
<status status="PASS" starttime="20230616 06:55:38.005" endtime="20230616 06:55:38.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230616 06:55:38.006" level="INFO">${BUCKET} = buc-tjylp</msg>
<status status="PASS" starttime="20230616 06:55:38.005" endtime="20230616 06:55:38.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:38.010" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-syrfd/buc-tjylp 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:41.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:41.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:55:38.007" endtime="20230616 06:55:41.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:41.900" level="INFO"/>
<status status="PASS" starttime="20230616 06:55:41.900" endtime="20230616 06:55:41.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:41.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:41.901" endtime="20230616 06:55:41.901"/>
</kw>
<status status="PASS" starttime="20230616 06:55:38.007" endtime="20230616 06:55:41.902"/>
</kw>
<msg timestamp="20230616 06:55:41.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:38.007" endtime="20230616 06:55:41.902"/>
</kw>
<msg timestamp="20230616 06:55:41.902" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:55:38.006" endtime="20230616 06:55:41.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:41.902" endtime="20230616 06:55:41.903"/>
</kw>
<status status="PASS" starttime="20230616 06:55:38.004" endtime="20230616 06:55:41.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:38.004" endtime="20230616 06:55:41.903"/>
</test>
<test id="s1-s13-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:41.909" level="INFO">Running command 'ozone sh key put /vol-syrfd/buc-tjylp/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:48.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:48.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:55:41.906" endtime="20230616 06:55:48.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:48.116" level="INFO"/>
<status status="PASS" starttime="20230616 06:55:48.115" endtime="20230616 06:55:48.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:48.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:48.116" endtime="20230616 06:55:48.117"/>
</kw>
<status status="PASS" starttime="20230616 06:55:41.906" endtime="20230616 06:55:48.117"/>
</kw>
<msg timestamp="20230616 06:55:48.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:41.906" endtime="20230616 06:55:48.118"/>
</kw>
<msg timestamp="20230616 06:55:48.118" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:55:41.905" endtime="20230616 06:55:48.118"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:48.118" endtime="20230616 06:55:48.118"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:48.122" level="INFO">Running command 'ozone sh key put /vol-syrfd/buc-tjylp/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:55:48.120" endtime="20230616 06:55:54.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.275" level="INFO"/>
<status status="PASS" starttime="20230616 06:55:54.274" endtime="20230616 06:55:54.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.275" endtime="20230616 06:55:54.276"/>
</kw>
<status status="PASS" starttime="20230616 06:55:48.119" endtime="20230616 06:55:54.276"/>
</kw>
<msg timestamp="20230616 06:55:54.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:48.119" endtime="20230616 06:55:54.276"/>
</kw>
<msg timestamp="20230616 06:55:54.276" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230616 06:55:48.119" endtime="20230616 06:55:54.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.277" endtime="20230616 06:55:54.277"/>
</kw>
<status status="PASS" starttime="20230616 06:55:41.905" endtime="20230616 06:55:54.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:41.904" endtime="20230616 06:55:54.277"/>
</test>
<test id="s1-s13-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.283" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.287" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.281" endtime="20230616 06:55:54.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.288" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.288" endtime="20230616 06:55:54.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.289" endtime="20230616 06:55:54.289"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.280" endtime="20230616 06:55:54.289"/>
</kw>
<msg timestamp="20230616 06:55:54.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.280" endtime="20230616 06:55:54.290"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.280" endtime="20230616 06:55:54.290"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.294" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.341" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.292" endtime="20230616 06:55:54.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.342" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.342" endtime="20230616 06:55:54.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.343" endtime="20230616 06:55:54.343"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.291" endtime="20230616 06:55:54.343"/>
</kw>
<msg timestamp="20230616 06:55:54.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.291" endtime="20230616 06:55:54.344"/>
</kw>
<msg timestamp="20230616 06:55:54.344" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.290" endtime="20230616 06:55:54.344"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.344" endtime="20230616 06:55:54.344"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.344" endtime="20230616 06:55:54.344"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.344" endtime="20230616 06:55:54.345"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.344" endtime="20230616 06:55:54.345"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.344" endtime="20230616 06:55:54.345"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.290" endtime="20230616 06:55:54.345"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.346" endtime="20230616 06:55:54.346"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.345" endtime="20230616 06:55:54.346"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.350" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.368" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.348" endtime="20230616 06:55:54.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.369" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.368" endtime="20230616 06:55:54.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.369" endtime="20230616 06:55:54.370"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.347" endtime="20230616 06:55:54.370"/>
</kw>
<msg timestamp="20230616 06:55:54.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.347" endtime="20230616 06:55:54.370"/>
</kw>
<msg timestamp="20230616 06:55:54.370" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.346" endtime="20230616 06:55:54.370"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.371" endtime="20230616 06:55:54.371"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.370" endtime="20230616 06:55:54.371"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.371" endtime="20230616 06:55:54.371"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.371" endtime="20230616 06:55:54.371"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.370" endtime="20230616 06:55:54.371"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.346" endtime="20230616 06:55:54.371"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.372" endtime="20230616 06:55:54.372"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.371" endtime="20230616 06:55:54.372"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.376" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.393" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.374" endtime="20230616 06:55:54.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.394" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.393" endtime="20230616 06:55:54.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.394" endtime="20230616 06:55:54.395"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.374" endtime="20230616 06:55:54.395"/>
</kw>
<msg timestamp="20230616 06:55:54.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.373" endtime="20230616 06:55:54.395"/>
</kw>
<msg timestamp="20230616 06:55:54.395" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.373" endtime="20230616 06:55:54.395"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.396" endtime="20230616 06:55:54.396"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.396" endtime="20230616 06:55:54.396"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.396" endtime="20230616 06:55:54.397"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.396" endtime="20230616 06:55:54.397"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.395" endtime="20230616 06:55:54.397"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.373" endtime="20230616 06:55:54.397"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.397" endtime="20230616 06:55:54.398"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.397" endtime="20230616 06:55:54.398"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.402" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.416" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.400" endtime="20230616 06:55:54.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.418" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.417" endtime="20230616 06:55:54.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.418" endtime="20230616 06:55:54.418"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.399" endtime="20230616 06:55:54.418"/>
</kw>
<msg timestamp="20230616 06:55:54.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.399" endtime="20230616 06:55:54.419"/>
</kw>
<msg timestamp="20230616 06:55:54.419" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.398" endtime="20230616 06:55:54.419"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.419" endtime="20230616 06:55:54.419"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.419" endtime="20230616 06:55:54.420"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.420" endtime="20230616 06:55:54.420"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.420" endtime="20230616 06:55:54.420"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.419" endtime="20230616 06:55:54.420"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.398" endtime="20230616 06:55:54.420"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.279" endtime="20230616 06:55:54.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:54.278" endtime="20230616 06:55:54.421"/>
</test>
<test id="s1-s13-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.427" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.430" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.425" endtime="20230616 06:55:54.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.431" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.431" endtime="20230616 06:55:54.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.431" endtime="20230616 06:55:54.432"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.424" endtime="20230616 06:55:54.432"/>
</kw>
<msg timestamp="20230616 06:55:54.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.424" endtime="20230616 06:55:54.432"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.423" endtime="20230616 06:55:54.433"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.436" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.492" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.435" endtime="20230616 06:55:54.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.493" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.492" endtime="20230616 06:55:54.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.494" endtime="20230616 06:55:54.494"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.434" endtime="20230616 06:55:54.494"/>
</kw>
<msg timestamp="20230616 06:55:54.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.434" endtime="20230616 06:55:54.494"/>
</kw>
<msg timestamp="20230616 06:55:54.495" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.433" endtime="20230616 06:55:54.495"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.495" endtime="20230616 06:55:54.495"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.495" endtime="20230616 06:55:54.495"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.495" endtime="20230616 06:55:54.496"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.495" endtime="20230616 06:55:54.496"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.495" endtime="20230616 06:55:54.496"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.433" endtime="20230616 06:55:54.496"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.497" endtime="20230616 06:55:54.497"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.496" endtime="20230616 06:55:54.497"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.502" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.524" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.499" endtime="20230616 06:55:54.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.525" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.525" endtime="20230616 06:55:54.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.526" endtime="20230616 06:55:54.526"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.499" endtime="20230616 06:55:54.526"/>
</kw>
<msg timestamp="20230616 06:55:54.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.498" endtime="20230616 06:55:54.527"/>
</kw>
<msg timestamp="20230616 06:55:54.527" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.498" endtime="20230616 06:55:54.527"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.528" endtime="20230616 06:55:54.528"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.527" endtime="20230616 06:55:54.528"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.528" endtime="20230616 06:55:54.528"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.528" endtime="20230616 06:55:54.528"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.527" endtime="20230616 06:55:54.528"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.497" endtime="20230616 06:55:54.529"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.529" endtime="20230616 06:55:54.529"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.529" endtime="20230616 06:55:54.530"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.533" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.550" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.532" endtime="20230616 06:55:54.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.551" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.551" endtime="20230616 06:55:54.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.551" endtime="20230616 06:55:54.552"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.531" endtime="20230616 06:55:54.552"/>
</kw>
<msg timestamp="20230616 06:55:54.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.531" endtime="20230616 06:55:54.552"/>
</kw>
<msg timestamp="20230616 06:55:54.553" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.530" endtime="20230616 06:55:54.553"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.553" endtime="20230616 06:55:54.553"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.553" endtime="20230616 06:55:54.553"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.553" endtime="20230616 06:55:54.554"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.553" endtime="20230616 06:55:54.554"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.553" endtime="20230616 06:55:54.554"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.530" endtime="20230616 06:55:54.554"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.555" endtime="20230616 06:55:54.555"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.554" endtime="20230616 06:55:54.555"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.559" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.578" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.557" endtime="20230616 06:55:54.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.579" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.579" endtime="20230616 06:55:54.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.579" endtime="20230616 06:55:54.580"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.557" endtime="20230616 06:55:54.580"/>
</kw>
<msg timestamp="20230616 06:55:54.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.556" endtime="20230616 06:55:54.580"/>
</kw>
<msg timestamp="20230616 06:55:54.581" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.556" endtime="20230616 06:55:54.581"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.581" endtime="20230616 06:55:54.581"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.581" endtime="20230616 06:55:54.581"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.581" endtime="20230616 06:55:54.582"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.581" endtime="20230616 06:55:54.582"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.581" endtime="20230616 06:55:54.582"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.555" endtime="20230616 06:55:54.582"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.423" endtime="20230616 06:55:54.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:54.422" endtime="20230616 06:55:54.582"/>
</test>
<test id="s1-s13-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.592" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.593" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.587" endtime="20230616 06:55:54.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.601" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.594" endtime="20230616 06:55:54.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.601" endtime="20230616 06:55:54.602"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.587" endtime="20230616 06:55:54.602"/>
</kw>
<msg timestamp="20230616 06:55:54.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.586" endtime="20230616 06:55:54.602"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.586" endtime="20230616 06:55:54.602"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.606" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.661" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.604" endtime="20230616 06:55:54.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.662" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.662" endtime="20230616 06:55:54.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.663" endtime="20230616 06:55:54.663"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.604" endtime="20230616 06:55:54.664"/>
</kw>
<msg timestamp="20230616 06:55:54.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.603" endtime="20230616 06:55:54.664"/>
</kw>
<msg timestamp="20230616 06:55:54.664" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.603" endtime="20230616 06:55:54.664"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.665" endtime="20230616 06:55:54.665"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.665" endtime="20230616 06:55:54.665"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.665" endtime="20230616 06:55:54.666"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.665" endtime="20230616 06:55:54.666"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.664" endtime="20230616 06:55:54.666"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.603" endtime="20230616 06:55:54.666"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.668" endtime="20230616 06:55:54.668"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.666" endtime="20230616 06:55:54.668"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.674" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.711" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.671" endtime="20230616 06:55:54.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.712" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.711" endtime="20230616 06:55:54.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.712" endtime="20230616 06:55:54.712"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.671" endtime="20230616 06:55:54.713"/>
</kw>
<msg timestamp="20230616 06:55:54.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.670" endtime="20230616 06:55:54.713"/>
</kw>
<msg timestamp="20230616 06:55:54.713" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.669" endtime="20230616 06:55:54.713"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.714" endtime="20230616 06:55:54.714"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.713" endtime="20230616 06:55:54.714"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.714" endtime="20230616 06:55:54.714"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.714" endtime="20230616 06:55:54.714"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.713" endtime="20230616 06:55:54.714"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.669" endtime="20230616 06:55:54.715"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.716" endtime="20230616 06:55:54.716"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.715" endtime="20230616 06:55:54.716"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.720" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.761" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.718" endtime="20230616 06:55:54.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.763" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.762" endtime="20230616 06:55:54.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.763" endtime="20230616 06:55:54.764"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.718" endtime="20230616 06:55:54.764"/>
</kw>
<msg timestamp="20230616 06:55:54.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.717" endtime="20230616 06:55:54.764"/>
</kw>
<msg timestamp="20230616 06:55:54.764" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.717" endtime="20230616 06:55:54.764"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.765" endtime="20230616 06:55:54.765"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.764" endtime="20230616 06:55:54.765"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.767" endtime="20230616 06:55:54.767"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.765" endtime="20230616 06:55:54.767"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.764" endtime="20230616 06:55:54.767"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.716" endtime="20230616 06:55:54.767"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.768" endtime="20230616 06:55:54.768"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.768" endtime="20230616 06:55:54.769"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.774" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.805" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.772" endtime="20230616 06:55:54.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.806" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.805" endtime="20230616 06:55:54.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.806" endtime="20230616 06:55:54.807"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.771" endtime="20230616 06:55:54.809"/>
</kw>
<msg timestamp="20230616 06:55:54.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.770" endtime="20230616 06:55:54.809"/>
</kw>
<msg timestamp="20230616 06:55:54.809" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.769" endtime="20230616 06:55:54.809"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.810" endtime="20230616 06:55:54.810"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.809" endtime="20230616 06:55:54.810"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.810" endtime="20230616 06:55:54.810"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.810" endtime="20230616 06:55:54.810"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.809" endtime="20230616 06:55:54.811"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.769" endtime="20230616 06:55:54.811"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.585" endtime="20230616 06:55:54.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:54.585" endtime="20230616 06:55:54.811"/>
</test>
<test id="s1-s13-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.818" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.822" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.815" endtime="20230616 06:55:54.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.823" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230616 06:55:54.823" endtime="20230616 06:55:54.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.823" endtime="20230616 06:55:54.824"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.815" endtime="20230616 06:55:54.824"/>
</kw>
<msg timestamp="20230616 06:55:54.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.815" endtime="20230616 06:55:54.824"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.814" endtime="20230616 06:55:54.825"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.829" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.851" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.827" endtime="20230616 06:55:54.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.852" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.852" endtime="20230616 06:55:54.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.853" endtime="20230616 06:55:54.853"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.826" endtime="20230616 06:55:54.853"/>
</kw>
<msg timestamp="20230616 06:55:54.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.826" endtime="20230616 06:55:54.854"/>
</kw>
<msg timestamp="20230616 06:55:54.854" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.825" endtime="20230616 06:55:54.854"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.854" endtime="20230616 06:55:54.854"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.854" endtime="20230616 06:55:54.855"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.855" endtime="20230616 06:55:54.855"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.855" endtime="20230616 06:55:54.855"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.854" endtime="20230616 06:55:54.855"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.825" endtime="20230616 06:55:54.855"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.856" endtime="20230616 06:55:54.857"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.856" endtime="20230616 06:55:54.857"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.861" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.876" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.859" endtime="20230616 06:55:54.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.877" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.877" endtime="20230616 06:55:54.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.878" endtime="20230616 06:55:54.878"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.858" endtime="20230616 06:55:54.878"/>
</kw>
<msg timestamp="20230616 06:55:54.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.858" endtime="20230616 06:55:54.879"/>
</kw>
<msg timestamp="20230616 06:55:54.879" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.857" endtime="20230616 06:55:54.879"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.879" endtime="20230616 06:55:54.879"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.879" endtime="20230616 06:55:54.879"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.880" endtime="20230616 06:55:54.880"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.879" endtime="20230616 06:55:54.880"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.879" endtime="20230616 06:55:54.880"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.857" endtime="20230616 06:55:54.880"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.881" endtime="20230616 06:55:54.881"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.880" endtime="20230616 06:55:54.881"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.885" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.900" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.883" endtime="20230616 06:55:54.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.901" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.900" endtime="20230616 06:55:54.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.901" endtime="20230616 06:55:54.902"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.883" endtime="20230616 06:55:54.902"/>
</kw>
<msg timestamp="20230616 06:55:54.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.882" endtime="20230616 06:55:54.902"/>
</kw>
<msg timestamp="20230616 06:55:54.902" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.882" endtime="20230616 06:55:54.902"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.903" endtime="20230616 06:55:54.903"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.902" endtime="20230616 06:55:54.903"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.903" endtime="20230616 06:55:54.903"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.903" endtime="20230616 06:55:54.903"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.902" endtime="20230616 06:55:54.903"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.881" endtime="20230616 06:55:54.904"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:55:54.904" endtime="20230616 06:55:54.904"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.904" endtime="20230616 06:55:54.904"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.908" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.923" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.906" endtime="20230616 06:55:54.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.924" level="INFO">200</msg>
<status status="PASS" starttime="20230616 06:55:54.923" endtime="20230616 06:55:54.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.924" endtime="20230616 06:55:54.924"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.906" endtime="20230616 06:55:54.925"/>
</kw>
<msg timestamp="20230616 06:55:54.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.906" endtime="20230616 06:55:54.925"/>
</kw>
<msg timestamp="20230616 06:55:54.925" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230616 06:55:54.905" endtime="20230616 06:55:54.925"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.926" endtime="20230616 06:55:54.926"/>
</kw>
<status status="NOT RUN" starttime="20230616 06:55:54.925" endtime="20230616 06:55:54.926"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.926" endtime="20230616 06:55:54.926"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.926" endtime="20230616 06:55:54.926"/>
</branch>
<status status="PASS" starttime="20230616 06:55:54.925" endtime="20230616 06:55:54.926"/>
</if>
<status status="PASS" starttime="20230616 06:55:54.905" endtime="20230616 06:55:54.926"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.813" endtime="20230616 06:55:54.927"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:54.813" endtime="20230616 06:55:54.927"/>
</test>
<test id="s1-s13-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.933" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.948" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":8,"numBucket":21,"numDir":15,"numKey":108},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creatio...</msg>
<status status="PASS" starttime="20230616 06:55:54.931" endtime="20230616 06:55:54.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.949" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":8,"numBucket":21,"numDir":15,"numKey":108},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:55:54.948" endtime="20230616 06:55:54.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.949" endtime="20230616 06:55:54.950"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.931" endtime="20230616 06:55:54.950"/>
</kw>
<msg timestamp="20230616 06:55:54.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.931" endtime="20230616 06:55:54.950"/>
</kw>
<msg timestamp="20230616 06:55:54.951" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":8,"numBucket":21,"numDir":15,"numKey":108},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creatio...</msg>
<status status="PASS" starttime="20230616 06:55:54.930" endtime="20230616 06:55:54.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.951" endtime="20230616 06:55:54.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:55:54.951" endtime="20230616 06:55:54.952"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.929" endtime="20230616 06:55:54.952"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.929" endtime="20230616 06:55:54.952"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.928" endtime="20230616 06:55:54.952"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:54.928" endtime="20230616 06:55:54.952"/>
</test>
<test id="s1-s13-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:55:54.958" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:55:54.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:55:54.974" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:55:54.956" endtime="20230616 06:55:54.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:55:54.975" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:55:54.974" endtime="20230616 06:55:54.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:55:54.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:55:54.975" endtime="20230616 06:55:54.976"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.956" endtime="20230616 06:55:54.976"/>
</kw>
<msg timestamp="20230616 06:55:54.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:55:54.955" endtime="20230616 06:55:54.976"/>
</kw>
<msg timestamp="20230616 06:55:54.976" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:55:54.955" endtime="20230616 06:55:54.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:55:54.977" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230616 06:55:54.977" endtime="20230616 06:55:54.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:55:54.977" endtime="20230616 06:55:54.978"/>
</kw>
<status status="FAIL" starttime="20230616 06:55:54.955" endtime="20230616 06:55:54.978"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:04.984" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:04.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:04.999" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:56:04.981" endtime="20230616 06:56:04.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:05.000" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:56:04.999" endtime="20230616 06:56:05.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:05.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:05.000" endtime="20230616 06:56:05.000"/>
</kw>
<status status="PASS" starttime="20230616 06:56:04.980" endtime="20230616 06:56:05.001"/>
</kw>
<msg timestamp="20230616 06:56:05.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:04.980" endtime="20230616 06:56:05.001"/>
</kw>
<msg timestamp="20230616 06:56:05.001" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:56:04.979" endtime="20230616 06:56:05.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:56:05.002" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230616 06:56:05.001" endtime="20230616 06:56:05.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:56:05.002" endtime="20230616 06:56:05.002"/>
</kw>
<status status="FAIL" starttime="20230616 06:56:04.978" endtime="20230616 06:56:05.002"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:15.008" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:15.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:15.022" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:56:15.005" endtime="20230616 06:56:15.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:15.024" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:56:15.023" endtime="20230616 06:56:15.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:15.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:15.024" endtime="20230616 06:56:15.024"/>
</kw>
<status status="PASS" starttime="20230616 06:56:15.004" endtime="20230616 06:56:15.025"/>
</kw>
<msg timestamp="20230616 06:56:15.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:15.004" endtime="20230616 06:56:15.025"/>
</kw>
<msg timestamp="20230616 06:56:15.025" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230616 06:56:15.004" endtime="20230616 06:56:15.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230616 06:56:15.026" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230616 06:56:15.026" endtime="20230616 06:56:15.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230616 06:56:15.026" endtime="20230616 06:56:15.026"/>
</kw>
<status status="FAIL" starttime="20230616 06:56:15.003" endtime="20230616 06:56:15.027"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.032" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.061" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-syrfd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230616 06:56:25.029" endtime="20230616 06:56:25.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.062" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-syrfd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1686898537926,"modificationTime":1686898537926,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-syrfd"},"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.061" endtime="20230616 06:56:25.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.062" endtime="20230616 06:56:25.063"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.029" endtime="20230616 06:56:25.063"/>
</kw>
<msg timestamp="20230616 06:56:25.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.029" endtime="20230616 06:56:25.063"/>
</kw>
<msg timestamp="20230616 06:56:25.063" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-syrfd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230616 06:56:25.028" endtime="20230616 06:56:25.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.064" endtime="20230616 06:56:25.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.064" endtime="20230616 06:56:25.064"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.027" endtime="20230616 06:56:25.065"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.954" endtime="20230616 06:56:25.065"/>
</kw>
<status status="PASS" starttime="20230616 06:55:54.953" endtime="20230616 06:56:25.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:55:54.953" endtime="20230616 06:56:25.065"/>
</test>
<test id="s1-s13-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.073" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd/buc-tjylp 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.109" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-tjylp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230616 06:56:25.070" endtime="20230616 06:56:25.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.110" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-tjylp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1686898541806,"modificationTime":1686898541806,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-syrfd","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.109" endtime="20230616 06:56:25.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.110" endtime="20230616 06:56:25.110"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.070" endtime="20230616 06:56:25.111"/>
</kw>
<msg timestamp="20230616 06:56:25.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.069" endtime="20230616 06:56:25.111"/>
</kw>
<msg timestamp="20230616 06:56:25.111" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-tjylp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230616 06:56:25.069" endtime="20230616 06:56:25.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.111" endtime="20230616 06:56:25.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.112" endtime="20230616 06:56:25.112"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.068" endtime="20230616 06:56:25.112"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.068" endtime="20230616 06:56:25.112"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.067" endtime="20230616 06:56:25.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.066" endtime="20230616 06:56:25.113"/>
</test>
<test id="s1-s13-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.119" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd/buc-tjylp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.173" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230616 06:56:25.117" endtime="20230616 06:56:25.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.174" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1686898545718,"modificationTime":1686898547718,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-syrfd","bucketName":"buc-tjylp","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200136},"blockCommitSequenceId":539,"containerID":1,"localID":111677748019200136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200136,"blockCommitSequenceId":539}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200136},"blockCommitSequenceId":539,"containerID":1,"localID":111677748019200136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200136,"blockCommitSequenceId":539}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200136},"blockCommitSequenceId":539,"containerID":1,"localID":111677748019200136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200136,"blockCommitSequenceId":539}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.174" endtime="20230616 06:56:25.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.175" endtime="20230616 06:56:25.175"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.117" endtime="20230616 06:56:25.175"/>
</kw>
<msg timestamp="20230616 06:56:25.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.116" endtime="20230616 06:56:25.175"/>
</kw>
<msg timestamp="20230616 06:56:25.176" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230616 06:56:25.116" endtime="20230616 06:56:25.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.176" endtime="20230616 06:56:25.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.177" endtime="20230616 06:56:25.177"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.116" endtime="20230616 06:56:25.177"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.115" endtime="20230616 06:56:25.177"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.114" endtime="20230616 06:56:25.177"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.114" endtime="20230616 06:56:25.178"/>
</test>
<test id="s1-s13-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:56:25.181" endtime="20230616 06:56:25.181"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.188" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-syrfd/buc-tjylp/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.209" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230616 06:56:25.186" endtime="20230616 06:56:25.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.210" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1686898551761,"modificationTime":1686898551761,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.209" endtime="20230616 06:56:25.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.210" endtime="20230616 06:56:25.211"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.185" endtime="20230616 06:56:25.211"/>
</kw>
<msg timestamp="20230616 06:56:25.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.185" endtime="20230616 06:56:25.211"/>
</kw>
<msg timestamp="20230616 06:56:25.211" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230616 06:56:25.184" endtime="20230616 06:56:25.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.211" endtime="20230616 06:56:25.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.212" endtime="20230616 06:56:25.212"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.183" endtime="20230616 06:56:25.212"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.182" endtime="20230616 06:56:25.212"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.181" endtime="20230616 06:56:25.213"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.181" endtime="20230616 06:56:25.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.180" endtime="20230616 06:56:25.213"/>
</test>
<test id="s1-s13-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.220" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-syrfd/buc-tjylp&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.233" level="INFO">${output} = {"status":"OK","path":"/vol-syrfd/buc-tjylp","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-syrfd/buc-tjylp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230616 06:56:25.218" endtime="20230616 06:56:25.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.234" level="INFO">{"status":"OK","path":"/vol-syrfd/buc-tjylp","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-syrfd/buc-tjylp/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230616 06:56:25.233" endtime="20230616 06:56:25.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.234" endtime="20230616 06:56:25.234"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.217" endtime="20230616 06:56:25.235"/>
</kw>
<msg timestamp="20230616 06:56:25.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.217" endtime="20230616 06:56:25.235"/>
</kw>
<msg timestamp="20230616 06:56:25.235" level="INFO">${result} = {"status":"OK","path":"/vol-syrfd/buc-tjylp","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-syrfd/buc-tjylp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230616 06:56:25.216" endtime="20230616 06:56:25.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.235" endtime="20230616 06:56:25.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.236" endtime="20230616 06:56:25.236"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.216" endtime="20230616 06:56:25.236"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.216" endtime="20230616 06:56:25.236"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.215" endtime="20230616 06:56:25.236"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.214" endtime="20230616 06:56:25.237"/>
</test>
<test id="s1-s13-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.243" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-syrfd 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.260" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.241" endtime="20230616 06:56:25.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.266" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.260" endtime="20230616 06:56:25.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.266" endtime="20230616 06:56:25.267"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.241" endtime="20230616 06:56:25.267"/>
</kw>
<msg timestamp="20230616 06:56:25.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.241" endtime="20230616 06:56:25.267"/>
</kw>
<msg timestamp="20230616 06:56:25.267" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.240" endtime="20230616 06:56:25.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.268" endtime="20230616 06:56:25.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.273" endtime="20230616 06:56:25.273"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.240" endtime="20230616 06:56:25.273"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.239" endtime="20230616 06:56:25.273"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.238" endtime="20230616 06:56:25.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.238" endtime="20230616 06:56:25.274"/>
</test>
<test id="s1-s13-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.286" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-syrfd/buc-tjylp 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.300" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.282" endtime="20230616 06:56:25.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.301" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.300" endtime="20230616 06:56:25.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.301" endtime="20230616 06:56:25.302"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.282" endtime="20230616 06:56:25.302"/>
</kw>
<msg timestamp="20230616 06:56:25.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.281" endtime="20230616 06:56:25.302"/>
</kw>
<msg timestamp="20230616 06:56:25.303" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.281" endtime="20230616 06:56:25.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.303" endtime="20230616 06:56:25.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.303" endtime="20230616 06:56:25.304"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.276" endtime="20230616 06:56:25.304"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.276" endtime="20230616 06:56:25.304"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.275" endtime="20230616 06:56:25.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.275" endtime="20230616 06:56:25.305"/>
</test>
<test id="s1-s13-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:25.312" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:25.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:25.329" level="INFO">${output} = {"dist":[3,0,1,1,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.310" endtime="20230616 06:56:25.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:25.331" level="INFO">{"dist":[3,0,1,1,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.330" endtime="20230616 06:56:25.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:25.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:25.331" endtime="20230616 06:56:25.332"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.309" endtime="20230616 06:56:25.332"/>
</kw>
<msg timestamp="20230616 06:56:25.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:25.309" endtime="20230616 06:56:25.332"/>
</kw>
<msg timestamp="20230616 06:56:25.332" level="INFO">${result} = {"dist":[3,0,1,1,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230616 06:56:25.308" endtime="20230616 06:56:25.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.333" endtime="20230616 06:56:25.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:25.333" endtime="20230616 06:56:25.334"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.308" endtime="20230616 06:56:25.334"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.307" endtime="20230616 06:56:25.334"/>
</kw>
<status status="PASS" starttime="20230616 06:56:25.307" endtime="20230616 06:56:25.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:25.306" endtime="20230616 06:56:25.334"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230616 06:55:33.978" endtime="20230616 06:56:25.336"/>
</suite>
<status status="PASS" starttime="20230616 06:54:38.041" endtime="20230616 06:56:25.339"/>
</suite>
<suite id="s1-s14" name="Om-Ratis" source="/opt/hadoop/smoketest/om-ratis">
<suite id="s1-s14-s1" name="testOMAdminCmd" source="/opt/hadoop/smoketest/om-ratis/testOMAdminCmd.robot">
<test id="s1-s14-s1-t1" name="Check om admin command" line="24">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone admin om roles -id=omServiceIdDefault</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:30.059" level="INFO">Running command 'ozone admin om roles -id=omServiceIdDefault 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:33.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:33.286" level="INFO">${output} = Error: This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are []</msg>
<status status="PASS" starttime="20230616 06:56:30.055" endtime="20230616 06:56:33.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:33.288" level="INFO">Error: This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are []</msg>
<status status="PASS" starttime="20230616 06:56:33.287" endtime="20230616 06:56:33.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:33.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:33.288" endtime="20230616 06:56:33.288"/>
</kw>
<msg timestamp="20230616 06:56:33.289" level="INFO">${result} = Error: This command works only on OzoneManager HA cluster. Service ID specified does not match with ozone.om.service.ids defined in the configuration. Configured ozone.om.service.ids are []</msg>
<status status="PASS" starttime="20230616 06:56:30.054" endtime="20230616 06:56:33.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This command works only on OzoneManager HA cluster.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:33.289" endtime="20230616 06:56:33.289"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:30.054" endtime="20230616 06:56:33.290"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230616 06:56:30.029" endtime="20230616 06:56:33.291"/>
</suite>
<status status="PASS" starttime="20230616 06:56:30.005" endtime="20230616 06:56:33.292"/>
</suite>
<suite id="s1-s15" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s15-s1" name="echoRPCLoad" source="/opt/hadoop/smoketest/freon/echoRPCLoad.robot">
<test id="s1-s15-s1-t1" name="Ozone Echo RPC Load Generator with request payload and response payload" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:37.923" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:42.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:42.171" level="INFO">${output} = 2023-06-16 06:56:40,084 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:40,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:37.919" endtime="20230616 06:56:42.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:42.172" level="INFO">2023-06-16 06:56:40,084 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:40,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:56:40,256 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:56:41,014 [main] INFO freon.BaseFreonGenerator: Executing test with prefix r3cgesun9e and number-of-tests 1
2023-06-16 06:56:41,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:56:42,065 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:56:42,120 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=429.963682, max=429.963682, mean=429.963682, stddev=0.0, median=429.963682, p75=429.963682, p95=429.963682, p98=429.963682, p99=429.963682, p999=429.963682, mean_rate=0.949949961670754, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:56:42,126 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-06-16 06:56:42,127 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:56:42,127 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:56:42.171" endtime="20230616 06:56:42.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:42.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:42.172" endtime="20230616 06:56:42.173"/>
</kw>
<status status="PASS" starttime="20230616 06:56:37.919" endtime="20230616 06:56:42.173"/>
</kw>
<msg timestamp="20230616 06:56:42.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:37.918" endtime="20230616 06:56:42.173"/>
</kw>
<msg timestamp="20230616 06:56:42.174" level="INFO">${result} = 2023-06-16 06:56:40,084 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:40,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:37.918" endtime="20230616 06:56:42.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:42.174" endtime="20230616 06:56:42.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:37.917" endtime="20230616 06:56:42.175"/>
</test>
<test id="s1-s15-s1-t2" name="Ozone Echo RPC Load Generator with request payload and empty response payload" line="30">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:42.180" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:46.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:46.751" level="INFO">${output} = 2023-06-16 06:56:44,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:44,688 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:42.178" endtime="20230616 06:56:46.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:46.752" level="INFO">2023-06-16 06:56:44,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:44,688 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:56:44,688 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:56:45,440 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xy5e18kxzm and number-of-tests 1
2023-06-16 06:56:45,482 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:56:46,487 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:56:46,703 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=421.314939, max=421.314939, mean=421.314939, stddev=0.0, median=421.314939, p75=421.314939, p95=421.314939, p98=421.314939, p99=421.314939, p999=421.314939, mean_rate=0.8177222603529747, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:56:46,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-06-16 06:56:46,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:56:46,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:56:46.751" endtime="20230616 06:56:46.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:46.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:46.752" endtime="20230616 06:56:46.753"/>
</kw>
<status status="PASS" starttime="20230616 06:56:42.177" endtime="20230616 06:56:46.754"/>
</kw>
<msg timestamp="20230616 06:56:46.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:42.177" endtime="20230616 06:56:46.754"/>
</kw>
<msg timestamp="20230616 06:56:46.754" level="INFO">${result} = 2023-06-16 06:56:44,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:44,688 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:42.176" endtime="20230616 06:56:46.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:46.754" endtime="20230616 06:56:46.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:42.176" endtime="20230616 06:56:46.755"/>
</test>
<test id="s1-s15-s1-t3" name="Ozone Echo RPC Load Generator with empty request payload and response payload" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:46.761" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:50.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:50.998" level="INFO">${output} = 2023-06-16 06:56:48,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:48,940 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:46.758" endtime="20230616 06:56:50.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:51.000" level="INFO">2023-06-16 06:56:48,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:48,940 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:56:48,940 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:56:49,706 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kdln6limet and number-of-tests 1
2023-06-16 06:56:49,750 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:56:50,754 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:56:50,951 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=421.024934, max=421.024934, mean=421.024934, stddev=0.0, median=421.024934, p75=421.024934, p95=421.024934, p98=421.024934, p99=421.024934, p999=421.024934, mean_rate=0.8314309431209694, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:56:50,951 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-06-16 06:56:50,953 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:56:50,953 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:56:50.999" endtime="20230616 06:56:51.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:51.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:51.000" endtime="20230616 06:56:51.000"/>
</kw>
<status status="PASS" starttime="20230616 06:56:46.758" endtime="20230616 06:56:51.001"/>
</kw>
<msg timestamp="20230616 06:56:51.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:46.757" endtime="20230616 06:56:51.001"/>
</kw>
<msg timestamp="20230616 06:56:51.001" level="INFO">${result} = 2023-06-16 06:56:48,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:48,940 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:46.757" endtime="20230616 06:56:51.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:51.001" endtime="20230616 06:56:51.002"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:46.756" endtime="20230616 06:56:51.002"/>
</test>
<test id="s1-s15-s1-t4" name="Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:51.008" level="INFO">Running command 'ozone freon ome -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:56:55.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:56:55.504" level="INFO">${output} = 2023-06-16 06:56:53,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:53,620 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:51.005" endtime="20230616 06:56:55.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:56:55.506" level="INFO">2023-06-16 06:56:53,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:53,620 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:56:53,620 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:56:54,348 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7fcwrdo0ny and number-of-tests 1
2023-06-16 06:56:54,396 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:56:55,405 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:56:55,446 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=381.975468, max=381.975468, mean=381.975468, stddev=0.0, median=381.975468, p75=381.975468, p95=381.975468, p98=381.975468, p99=381.975468, p999=381.975468, mean_rate=0.9634710538480398, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:56:55,452 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-06-16 06:56:55,453 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:56:55,453 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:56:55.505" endtime="20230616 06:56:55.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:56:55.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:56:55.506" endtime="20230616 06:56:55.506"/>
</kw>
<status status="PASS" starttime="20230616 06:56:51.005" endtime="20230616 06:56:55.507"/>
</kw>
<msg timestamp="20230616 06:56:55.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:51.004" endtime="20230616 06:56:55.507"/>
</kw>
<msg timestamp="20230616 06:56:55.507" level="INFO">${result} = 2023-06-16 06:56:53,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:53,620 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:51.004" endtime="20230616 06:56:55.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:56:55.507" endtime="20230616 06:56:55.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:51.003" endtime="20230616 06:56:55.508"/>
</test>
<doc>Test freon echo RPC commands</doc>
<status status="PASS" starttime="20230616 06:56:37.896" endtime="20230616 06:56:55.510"/>
</suite>
<suite id="s1-s15-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s15-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:56:55.521" endtime="20230616 06:56:55.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:56:55.525" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcg  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:03.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:03.818" level="INFO">${output} = 2023-06-16 06:56:57,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:57,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:55.523" endtime="20230616 06:57:03.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:03.819" level="INFO">2023-06-16 06:56:57,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:57,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:56:57,797 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:56:58,633 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcg and number-of-tests 100
2023-06-16 06:56:58,669 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:56:59,124 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:56:59,484 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:56:59,670 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:57:00,670 [Thread-6] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2023-06-16 06:57:01,670 [Thread-6] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2023-06-16 06:57:02,671 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-06-16 06:57:03,451 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=13.543398, max=840.067693, mean=29.429775544281707, stddev=81.00196021953315, median=21.350713, p75=22.900435, p95=26.150982, p98=29.054825, p99=29.144027, p999=840.067693, mean_rate=24.368797898160768, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:03,452 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-06-16 06:57:03,452 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:03,452 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230616 06:57:03.818" endtime="20230616 06:57:03.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:03.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:03.820" endtime="20230616 06:57:03.820"/>
</kw>
<status status="PASS" starttime="20230616 06:56:55.522" endtime="20230616 06:57:03.820"/>
</kw>
<msg timestamp="20230616 06:57:03.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:56:55.522" endtime="20230616 06:57:03.821"/>
</kw>
<msg timestamp="20230616 06:57:03.821" level="INFO">${result} = 2023-06-16 06:56:57,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:56:57,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:56:55.521" endtime="20230616 06:57:03.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:03.821" endtime="20230616 06:57:03.822"/>
</kw>
<status status="PASS" starttime="20230616 06:56:55.520" endtime="20230616 06:57:03.822"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:56:55.519" endtime="20230616 06:57:03.822"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230616 06:56:55.512" endtime="20230616 06:57:03.823"/>
</suite>
<suite id="s1-s15-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s15-s3-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:03.837" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:10.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:10.147" level="INFO">${output} = 2023-06-16 06:57:06,106 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:06,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:03.835" endtime="20230616 06:57:10.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:10.148" level="INFO">2023-06-16 06:57:06,106 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:06,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:06,263 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:06,348 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-06-16 06:57:06,407 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:07,409 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:08,298 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:57:08,409 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:08,667 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:57:09,410 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:57:09,796 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1723.942376, max=1723.942376, mean=1723.942376, stddev=0.0, median=1723.942376, p75=1723.942376, p95=1723.942376, p98=1723.942376, p99=1723.942376, p999=1723.942376, mean_rate=0.4630445447662041, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:09,797 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-06-16 06:57:09,797 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:09,797 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:57:10.147" endtime="20230616 06:57:10.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:10.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:10.148" endtime="20230616 06:57:10.149"/>
</kw>
<status status="PASS" starttime="20230616 06:57:03.834" endtime="20230616 06:57:10.149"/>
</kw>
<msg timestamp="20230616 06:57:10.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:03.834" endtime="20230616 06:57:10.149"/>
</kw>
<msg timestamp="20230616 06:57:10.150" level="INFO">${result} = 2023-06-16 06:57:06,106 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:06,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:03.833" endtime="20230616 06:57:10.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:10.150" endtime="20230616 06:57:10.150"/>
</kw>
<status status="PASS" starttime="20230616 06:57:03.832" endtime="20230616 06:57:10.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:03.831" endtime="20230616 06:57:10.151"/>
</test>
<test id="s1-s15-s3-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:10.157" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:15.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:15.218" level="INFO">${output} = 2023-06-16 06:57:12,559 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:12,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:10.155" endtime="20230616 06:57:15.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:15.219" level="INFO">2023-06-16 06:57:12,559 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:12,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:12,720 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:12,798 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2023-06-16 06:57:12,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:13,858 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:14,860 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:57:15,169 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=106.723084, max=106.723084, mean=106.723084, stddev=0.0, median=106.723084, p75=106.723084, p95=106.723084, p98=106.723084, p99=106.723084, p999=106.723084, mean_rate=0.8914499779238654, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:15,170 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:57:15,170 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:15,170 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:57:15.218" endtime="20230616 06:57:15.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:15.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:15.219" endtime="20230616 06:57:15.220"/>
</kw>
<status status="PASS" starttime="20230616 06:57:10.154" endtime="20230616 06:57:15.220"/>
</kw>
<msg timestamp="20230616 06:57:15.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:10.154" endtime="20230616 06:57:15.220"/>
</kw>
<msg timestamp="20230616 06:57:15.220" level="INFO">${result} = 2023-06-16 06:57:12,559 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:12,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:10.153" endtime="20230616 06:57:15.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:15.221" endtime="20230616 06:57:15.221"/>
</kw>
<status status="PASS" starttime="20230616 06:57:10.152" endtime="20230616 06:57:15.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:10.151" endtime="20230616 06:57:15.221"/>
</test>
<test id="s1-s15-s3-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:15.229" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:20.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:20.107" level="INFO">${output} = 2023-06-16 06:57:17,479 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:17,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:15.226" endtime="20230616 06:57:20.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:20.108" level="INFO">2023-06-16 06:57:17,479 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:17,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:17,656 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:17,757 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2023-06-16 06:57:17,819 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:18,827 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:19,827 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:57:20,060 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.086367, max=18.086367, mean=18.086367, stddev=0.0, median=18.086367, p75=18.086367, p95=18.086367, p98=18.086367, p99=18.086367, p999=18.086367, mean_rate=0.9468838380983433, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:20,061 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:57:20,061 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:20,061 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:57:20.107" endtime="20230616 06:57:20.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:20.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:20.109" endtime="20230616 06:57:20.109"/>
</kw>
<status status="PASS" starttime="20230616 06:57:15.226" endtime="20230616 06:57:20.110"/>
</kw>
<msg timestamp="20230616 06:57:20.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:15.226" endtime="20230616 06:57:20.110"/>
</kw>
<msg timestamp="20230616 06:57:20.110" level="INFO">${result} = 2023-06-16 06:57:17,479 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:17,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:15.225" endtime="20230616 06:57:20.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:20.110" endtime="20230616 06:57:20.111"/>
</kw>
<status status="PASS" starttime="20230616 06:57:15.223" endtime="20230616 06:57:20.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:15.223" endtime="20230616 06:57:20.111"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230616 06:57:03.825" endtime="20230616 06:57:20.112"/>
</suite>
<suite id="s1-s15-s4" name="Read-Write-Key" source="/opt/hadoop/smoketest/freon/read-write-key.robot">
<test id="s1-s15-s4-t1" name="Pre-generate 100 keys of size 1 byte each to Ozone" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:20.125" level="INFO">Running command 'ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:33.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:33.527" level="INFO">${output} = 2023-06-16 06:57:22,567 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:22,715 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:20.122" endtime="20230616 06:57:33.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:33.529" level="INFO">2023-06-16 06:57:22,567 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:22,715 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:22,715 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:22,799 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 1
2023-06-16 06:57:22,873 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:23,880 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:24,229 [main] INFO rpc.RpcClient: Creating Volume: voltest, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-06-16 06:57:24,264 [main] INFO rpc.RpcClient: Creating Bucket: voltest/buckettest, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-06-16 06:57:24,881 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:24,923 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:57:25,286 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:57:25,883 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:26,885 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:27,886 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:28,892 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:29,893 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:30,895 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:31,898 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:57:32,899 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:57:32,962 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=1, min=8235.763788, max=8235.763788, mean=8235.763788, stddev=0.0, median=8235.763788, p75=8235.763788, p95=8235.763788, p98=8235.763788, p99=8235.763788, p999=8235.763788, mean_rate=0.11521077966175931, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:32,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-06-16 06:57:32,965 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:32,965 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:57:33.528" endtime="20230616 06:57:33.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:33.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:33.529" endtime="20230616 06:57:33.530"/>
</kw>
<status status="PASS" starttime="20230616 06:57:20.122" endtime="20230616 06:57:33.530"/>
</kw>
<msg timestamp="20230616 06:57:33.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:20.122" endtime="20230616 06:57:33.530"/>
</kw>
<msg timestamp="20230616 06:57:33.530" level="INFO">${result} = 2023-06-16 06:57:22,567 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:22,715 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:20.121" endtime="20230616 06:57:33.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:20.121" endtime="20230616 06:57:33.531"/>
</test>
<test id="s1-s15-s4-t2" name="Read 10 keys from pre-generated keys" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:57:33.533" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230616 06:57:33.533" endtime="20230616 06:57:33.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:33.537" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:40.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:40.513" level="INFO">${output} = 2023-06-16 06:57:35,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:35,929 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:33.534" endtime="20230616 06:57:40.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:40.515" level="INFO">2023-06-16 06:57:35,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:35,929 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:35,929 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:36,019 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-06-16 06:57:36,082 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:37,083 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:37,963 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:57:38,083 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:39,084 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:40,085 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-06-16 06:57:40,143 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=1783.339216, max=1793.429064, mean=1788.0386755, stddev=2.563009729630625, median=1788.392091, p75=1789.390905, p95=1793.429064, p98=1793.429064, p99=1793.429064, p999=1793.429064, mean_rate=3.5302903650975037, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:40,144 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:57:40,151 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:40,151 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230616 06:57:40.514" endtime="20230616 06:57:40.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:40.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:40.515" endtime="20230616 06:57:40.515"/>
</kw>
<status status="PASS" starttime="20230616 06:57:33.534" endtime="20230616 06:57:40.516"/>
</kw>
<msg timestamp="20230616 06:57:40.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:33.534" endtime="20230616 06:57:40.516"/>
</kw>
<msg timestamp="20230616 06:57:40.516" level="INFO">${result} = 2023-06-16 06:57:35,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:35,929 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:33.533" endtime="20230616 06:57:40.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:40.516" endtime="20230616 06:57:40.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:33.532" endtime="20230616 06:57:40.517"/>
</test>
<test id="s1-s15-s4-t3" name="Read 10 keys' metadata from pre-generated keys" line="34">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:57:40.519" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230616 06:57:40.519" endtime="20230616 06:57:40.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:40.523" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:45.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:45.659" level="INFO">${output} = 2023-06-16 06:57:42,865 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:43,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:40.521" endtime="20230616 06:57:45.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:45.660" level="INFO">2023-06-16 06:57:42,865 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:43,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:43,028 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:43,098 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-06-16 06:57:43,149 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:44,155 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:45,156 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-06-16 06:57:45,519 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=108.943696, max=121.955586, mean=120.02763770000001, stddev=3.7032853461579505, median=121.137074, p75=121.305577, p95=121.955586, p98=121.955586, p99=121.955586, p999=121.955586, mean_rate=9.29769619359291, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:45,520 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:57:45,521 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:45,521 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230616 06:57:45.660" endtime="20230616 06:57:45.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:45.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:45.661" endtime="20230616 06:57:45.661"/>
</kw>
<status status="PASS" starttime="20230616 06:57:40.520" endtime="20230616 06:57:45.662"/>
</kw>
<msg timestamp="20230616 06:57:45.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:40.520" endtime="20230616 06:57:45.662"/>
</kw>
<msg timestamp="20230616 06:57:45.662" level="INFO">${result} = 2023-06-16 06:57:42,865 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:43,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:40.519" endtime="20230616 06:57:45.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:45.662" endtime="20230616 06:57:45.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:40.518" endtime="20230616 06:57:45.663"/>
</test>
<test id="s1-s15-s4-t4" name="Write 10 keys of size 1 byte each from key index 0 to 99" line="39">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:57:45.666" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230616 06:57:45.665" endtime="20230616 06:57:45.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:57:45.666" level="INFO">${size} = 1</msg>
<status status="PASS" starttime="20230616 06:57:45.666" endtime="20230616 06:57:45.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 0 --size ${size} -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:45.670" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 0 --size 1 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:53.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:53.102" level="INFO">${output} = 2023-06-16 06:57:47,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:47,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:45.667" endtime="20230616 06:57:53.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:53.104" level="INFO">2023-06-16 06:57:47,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:47,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:47,917 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:47,987 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-06-16 06:57:48,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:49,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:50,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:50,169 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:57:50,584 [pool-2-thread-2] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:57:51,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:57:52,046 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-06-16 06:57:52,740 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=2319.4595, max=2348.100124, mean=2333.4478970000005, stddev=8.673570100207423, median=2333.819212, p75=2340.487712, p95=2348.100124, p98=2348.100124, p99=2348.100124, p999=2348.100124, mean_rate=3.017560104413953, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:57:52,741 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-06-16 06:57:52,741 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:57:52,741 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230616 06:57:53.103" endtime="20230616 06:57:53.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:53.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:53.104" endtime="20230616 06:57:53.105"/>
</kw>
<status status="PASS" starttime="20230616 06:57:45.667" endtime="20230616 06:57:53.105"/>
</kw>
<msg timestamp="20230616 06:57:53.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:45.667" endtime="20230616 06:57:53.105"/>
</kw>
<msg timestamp="20230616 06:57:53.106" level="INFO">${result} = 2023-06-16 06:57:47,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:47,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:45.666" endtime="20230616 06:57:53.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:53.106" endtime="20230616 06:57:53.106"/>
</kw>
<kw name="Execute" library="os">
<var>${keyName}</var>
<arg>echo -n '1' | md5sum | head -c 7</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:53.110" level="INFO">Running command 'echo -n '1' | md5sum | head -c 7 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:53.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:53.114" level="INFO">${output} = c4ca423</msg>
<status status="PASS" starttime="20230616 06:57:53.108" endtime="20230616 06:57:53.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:53.116" level="INFO">c4ca423</msg>
<status status="PASS" starttime="20230616 06:57:53.115" endtime="20230616 06:57:53.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:53.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:53.116" endtime="20230616 06:57:53.117"/>
</kw>
<status status="PASS" starttime="20230616 06:57:53.107" endtime="20230616 06:57:53.117"/>
</kw>
<msg timestamp="20230616 06:57:53.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:53.107" endtime="20230616 06:57:53.117"/>
</kw>
<msg timestamp="20230616 06:57:53.117" level="INFO">${keyName} = c4ca423</msg>
<status status="PASS" starttime="20230616 06:57:53.106" endtime="20230616 06:57:53.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /voltest/buckettest/performanceTest/${keyName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:53.121" level="INFO">Running command 'ozone sh key info /voltest/buckettest/performanceTest/c4ca423 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:57:57.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:57:57.447" level="INFO">${output} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-06-16T06:57:26.095Z",
  "modificationTime" : "2023-06-16T0...</msg>
<status status="PASS" starttime="20230616 06:57:53.119" endtime="20230616 06:57:57.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:57:57.449" level="INFO">{
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-06-16T06:57:26.095Z",
  "modificationTime" : "2023-06-16T06:57:26.154Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200141,
    "length" : 1,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20230616 06:57:57.448" endtime="20230616 06:57:57.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:57:57.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:57:57.449" endtime="20230616 06:57:57.450"/>
</kw>
<status status="PASS" starttime="20230616 06:57:53.118" endtime="20230616 06:57:57.450"/>
</kw>
<msg timestamp="20230616 06:57:57.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:53.118" endtime="20230616 06:57:57.450"/>
</kw>
<msg timestamp="20230616 06:57:57.450" level="INFO">${result} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-06-16T06:57:26.095Z",
  "modificationTime" : "2023-06-16T0...</msg>
<status status="PASS" starttime="20230616 06:57:53.118" endtime="20230616 06:57:57.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"dataSize\" : 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:57:57.450" endtime="20230616 06:57:57.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:45.664" endtime="20230616 06:57:57.451"/>
</test>
<test id="s1-s15-s4-t5" name="Run 90 % of read-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="49">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230616 06:57:57.453" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230616 06:57:57.453" endtime="20230616 06:57:57.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 90 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:57:57.457" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 90 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:04.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:04.770" level="INFO">${output} = 2023-06-16 06:57:59,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:59,592 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:57.455" endtime="20230616 06:58:04.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:04.772" level="INFO">2023-06-16 06:57:59,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:59,592 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:57:59,592 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:57:59,656 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-06-16 06:57:59,708 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:58:00,712 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:58:01,713 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:58:01,859 [pool-2-thread-2] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:58:02,363 [pool-2-thread-2] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:58:02,713 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-06-16 06:58:03,714 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-06-16 06:58:04,189 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=2004.65556, max=2147.502151, mean=2031.9429893000001, stddev=40.36221569911084, median=2028.55561, p75=2033.007675, p95=2147.502151, p98=2147.502151, p99=2147.502151, p999=2147.502151, mean_rate=3.1977920601688368, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:04,190 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:58:04,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:04,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230616 06:58:04.771" endtime="20230616 06:58:04.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:04.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:04.772" endtime="20230616 06:58:04.772"/>
</kw>
<status status="PASS" starttime="20230616 06:57:57.454" endtime="20230616 06:58:04.773"/>
</kw>
<msg timestamp="20230616 06:58:04.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:57:57.454" endtime="20230616 06:58:04.773"/>
</kw>
<msg timestamp="20230616 06:58:04.773" level="INFO">${result} = 2023-06-16 06:57:59,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:57:59,592 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:57:57.453" endtime="20230616 06:58:04.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:04.773" endtime="20230616 06:58:04.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:57:57.452" endtime="20230616 06:58:04.774"/>
</test>
<doc>Test freon read/write key commands</doc>
<status status="PASS" starttime="20230616 06:57:20.114" endtime="20230616 06:58:04.775"/>
</suite>
<suite id="s1-s15-s5" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s15-s5-t1" name="Ozone Client Key Remover" line="26">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:04.790" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:11.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:11.765" level="INFO">${output} = 2023-06-16 06:58:07,024 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:07,125 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:04.787" endtime="20230616 06:58:11.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:11.766" level="INFO">2023-06-16 06:58:07,024 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:07,125 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:07,125 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:07,194 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-06-16 06:58:07,245 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:08,247 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:09,101 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:58:09,248 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:09,461 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:58:10,251 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:11,251 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:58:11,403 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1892.063972, max=1892.063972, mean=1892.063972, stddev=0.0, median=1892.063972, p75=1892.063972, p95=1892.063972, p98=1892.063972, p99=1892.063972, p999=1892.063972, mean_rate=0.3325203735582026, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:11,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:58:11,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:11,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:58:11.765" endtime="20230616 06:58:11.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:11.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:11.766" endtime="20230616 06:58:11.767"/>
</kw>
<status status="PASS" starttime="20230616 06:58:04.787" endtime="20230616 06:58:11.767"/>
</kw>
<msg timestamp="20230616 06:58:11.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:04.786" endtime="20230616 06:58:11.768"/>
</kw>
<msg timestamp="20230616 06:58:11.768" level="INFO">${result} = 2023-06-16 06:58:07,024 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:07,125 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:04.786" endtime="20230616 06:58:11.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:11.768" endtime="20230616 06:58:11.769"/>
</kw>
<status status="PASS" starttime="20230616 06:58:04.785" endtime="20230616 06:58:11.769"/>
</kw>
<kw name="Freon OCKR" library="freon">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:11.774" level="INFO">Running command 'ozone freon ockr  -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:16.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:16.695" level="INFO">${output} = 2023-06-16 06:58:13,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:14,149 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:11.772" endtime="20230616 06:58:16.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:16.696" level="INFO">2023-06-16 06:58:13,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:14,149 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:14,149 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:14,236 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-06-16 06:58:14,304 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:15,310 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:16,311 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:58:16,652 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=49.798237, max=49.798237, mean=49.798237, stddev=0.0, median=49.798237, p75=49.798237, p95=49.798237, p98=49.798237, p99=49.798237, p999=49.798237, mean_rate=0.8621590774921322, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:16,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:58:16,653 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:16,653 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:58:16.695" endtime="20230616 06:58:16.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:16.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:16.696" endtime="20230616 06:58:16.697"/>
</kw>
<status status="PASS" starttime="20230616 06:58:11.771" endtime="20230616 06:58:16.697"/>
</kw>
<msg timestamp="20230616 06:58:16.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:11.771" endtime="20230616 06:58:16.697"/>
</kw>
<msg timestamp="20230616 06:58:16.698" level="INFO">${result} = 2023-06-16 06:58:13,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:14,149 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:11.770" endtime="20230616 06:58:16.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:16.698" endtime="20230616 06:58:16.698"/>
</kw>
<status status="PASS" starttime="20230616 06:58:11.769" endtime="20230616 06:58:16.698"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:04.784" endtime="20230616 06:58:16.699"/>
</test>
<test id="s1-s15-s5-t2" name="OM Bucket Remover" line="30">
<kw name="Freon OMBG" library="freon" type="SETUP">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:16.706" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:21.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:21.484" level="INFO">${output} = 2023-06-16 06:58:18,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:18,941 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:16.703" endtime="20230616 06:58:21.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:21.487" level="INFO">2023-06-16 06:58:18,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:18,941 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:18,941 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:19,007 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-06-16 06:58:19,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:20,066 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:21,067 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:58:21,253 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=25.559064, max=25.559064, mean=25.559064, stddev=0.0, median=25.559064, p75=25.559064, p95=25.559064, p98=25.559064, p99=25.559064, p999=25.559064, mean_rate=0.9512434491228682, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:21,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:58:21,258 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:21,258 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:58:21.484" endtime="20230616 06:58:21.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:21.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:21.488" endtime="20230616 06:58:21.488"/>
</kw>
<status status="PASS" starttime="20230616 06:58:16.703" endtime="20230616 06:58:21.489"/>
</kw>
<msg timestamp="20230616 06:58:21.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:16.703" endtime="20230616 06:58:21.489"/>
</kw>
<msg timestamp="20230616 06:58:21.489" level="INFO">${result} = 2023-06-16 06:58:18,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:18,941 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:16.702" endtime="20230616 06:58:21.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:21.489" endtime="20230616 06:58:21.490"/>
</kw>
<status status="PASS" starttime="20230616 06:58:16.700" endtime="20230616 06:58:21.490"/>
</kw>
<kw name="Freon OMBR" library="freon">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:21.495" level="INFO">Running command 'ozone freon ombr  -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:26.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:26.460" level="INFO">${output} = 2023-06-16 06:58:23,958 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:24,131 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:21.493" endtime="20230616 06:58:26.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:26.461" level="INFO">2023-06-16 06:58:23,958 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:24,131 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:24,132 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:24,218 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-06-16 06:58:24,271 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:25,276 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:26,277 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:58:26,394 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=410.165752, max=410.165752, mean=410.165752, stddev=0.0, median=410.165752, p75=410.165752, p95=410.165752, p98=410.165752, p99=410.165752, p999=410.165752, mean_rate=0.6777909554573129, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:26,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-06-16 06:58:26,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:26,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:58:26.461" endtime="20230616 06:58:26.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:26.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:26.462" endtime="20230616 06:58:26.462"/>
</kw>
<status status="PASS" starttime="20230616 06:58:21.492" endtime="20230616 06:58:26.463"/>
</kw>
<msg timestamp="20230616 06:58:26.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:21.492" endtime="20230616 06:58:26.463"/>
</kw>
<msg timestamp="20230616 06:58:26.463" level="INFO">${result} = 2023-06-16 06:58:23,958 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:24,131 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:21.491" endtime="20230616 06:58:26.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:26.463" endtime="20230616 06:58:26.464"/>
</kw>
<status status="PASS" starttime="20230616 06:58:21.490" endtime="20230616 06:58:26.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:16.700" endtime="20230616 06:58:26.464"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20230616 06:58:04.778" endtime="20230616 06:58:26.466"/>
</suite>
<suite id="s1-s15-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s15-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230616 06:58:26.476" endtime="20230616 06:58:26.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:26.480" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcg  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:32.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:32.504" level="INFO">${output} = 2023-06-16 06:58:28,728 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:28,829 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:26.477" endtime="20230616 06:58:32.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:32.505" level="INFO">2023-06-16 06:58:28,728 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:28,829 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:28,829 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:28,898 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcg and number-of-tests 100
2023-06-16 06:58:28,950 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:58:29,610 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=1fa4b221-6054-40b9-bd76-c869776ea9e9
2023-06-16 06:58:29,957 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:58:30,019 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:58:30,400 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-06-16 06:58:30,959 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-06-16 06:58:31,960 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-06-16 06:58:32,139 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.591124, max=10.579457, mean=3.0773594999999996, stddev=1.6262671664976915, median=2.352335, p75=3.481851, p95=6.180792, p98=7.839216, p99=10.337753, p999=10.579457, mean_rate=93.3183456107117, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:32,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-06-16 06:58:32,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:32,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230616 06:58:32.504" endtime="20230616 06:58:32.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:32.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:32.505" endtime="20230616 06:58:32.506"/>
</kw>
<status status="PASS" starttime="20230616 06:58:26.477" endtime="20230616 06:58:32.506"/>
</kw>
<msg timestamp="20230616 06:58:32.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:26.477" endtime="20230616 06:58:32.506"/>
</kw>
<msg timestamp="20230616 06:58:32.507" level="INFO">${result} = 2023-06-16 06:58:28,728 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:28,829 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:26.476" endtime="20230616 06:58:32.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:32.507" endtime="20230616 06:58:32.507"/>
</kw>
<status status="PASS" starttime="20230616 06:58:26.475" endtime="20230616 06:58:32.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:26.474" endtime="20230616 06:58:32.508"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230616 06:58:26.467" endtime="20230616 06:58:32.509"/>
</suite>
<suite id="s1-s15-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s15-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:32.523" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:39.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:39.486" level="INFO">${output} = 2023-06-16 06:58:34,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:35,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:32.520" endtime="20230616 06:58:39.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:39.487" level="INFO">2023-06-16 06:58:34,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:35,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-16 06:58:35,154 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-06-16 06:58:35,238 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-06-16 06:58:35,293 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:36,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:37,140 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-06-16 06:58:37,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-06-16 06:58:38,320 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-06-16 06:58:39,125 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=24.871164, max=24.871164, mean=24.871164, stddev=0.0, median=24.871164, p75=24.871164, p95=24.871164, p98=24.871164, p99=24.871164, p999=24.871164, mean_rate=0.9564482009886983, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-06-16 06:58:39,126 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-06-16 06:58:39,126 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-06-16 06:58:39,126 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230616 06:58:39.486" endtime="20230616 06:58:39.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:39.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:39.487" endtime="20230616 06:58:39.488"/>
</kw>
<status status="PASS" starttime="20230616 06:58:32.520" endtime="20230616 06:58:39.488"/>
</kw>
<msg timestamp="20230616 06:58:39.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:32.520" endtime="20230616 06:58:39.488"/>
</kw>
<msg timestamp="20230616 06:58:39.489" level="INFO">${result} = 2023-06-16 06:58:34,967 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-16 06:58:35,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230616 06:58:32.519" endtime="20230616 06:58:39.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:39.489" endtime="20230616 06:58:39.489"/>
</kw>
<status status="PASS" starttime="20230616 06:58:32.518" endtime="20230616 06:58:39.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:32.517" endtime="20230616 06:58:39.489"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230616 06:58:32.511" endtime="20230616 06:58:39.493"/>
</suite>
<status status="PASS" starttime="20230616 06:56:37.873" endtime="20230616 06:58:39.496"/>
</suite>
<suite id="s1-s16" name="Cli" source="/opt/hadoop/smoketest/cli">
<suite id="s1-s16-s1" name="Classpath" source="/opt/hadoop/smoketest/cli/classpath.robot">
<kw name="Find Jars Dir" library="shell" type="SETUP">
<kw name="Execute" library="os">
<var>${dir}</var>
<arg>ozone envvars | grep 'HDDS_LIB_JARS_DIR' | cut -f2 -d= | sed -e "s/'//g" -e 's/"//g'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:44.185" level="INFO">Running command 'ozone envvars | grep 'HDDS_LIB_JARS_DIR' | cut -f2 -d= | sed -e "s/'//g" -e 's/"//g' 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:44.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:44.282" level="INFO">${output} = /opt/hadoop/share/ozone/lib</msg>
<status status="PASS" starttime="20230616 06:58:44.181" endtime="20230616 06:58:44.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:44.283" level="INFO">/opt/hadoop/share/ozone/lib</msg>
<status status="PASS" starttime="20230616 06:58:44.283" endtime="20230616 06:58:44.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:44.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:44.284" endtime="20230616 06:58:44.284"/>
</kw>
<status status="PASS" starttime="20230616 06:58:44.180" endtime="20230616 06:58:44.284"/>
</kw>
<msg timestamp="20230616 06:58:44.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:44.180" endtime="20230616 06:58:44.285"/>
</kw>
<msg timestamp="20230616 06:58:44.285" level="INFO">${dir} = /opt/hadoop/share/ozone/lib</msg>
<status status="PASS" starttime="20230616 06:58:44.179" endtime="20230616 06:58:44.285"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HDDS_LIB_JARS_DIR</arg>
<arg>${dir}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:44.285" level="INFO">Environment variable 'HDDS_LIB_JARS_DIR' set to value '/opt/hadoop/share/ozone/lib'.</msg>
<status status="PASS" starttime="20230616 06:58:44.285" endtime="20230616 06:58:44.285"/>
</kw>
<status status="PASS" starttime="20230616 06:58:44.179" endtime="20230616 06:58:44.286"/>
</kw>
<test id="s1-s16-s1-t1" name="Ignores HADOOP_CLASSPATH if OZONE_CLASSPATH is set" line="25">
<kw name="Create File" library="OperatingSystem" type="SETUP">
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20230616 06:58:44.288" level="INFO" html="true">Created file '&lt;a href="file:///opt/hadoop/share/ozone/lib/hadoop-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/hadoop-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:58:44.287" endtime="20230616 06:58:44.288"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CLASSPATH</arg>
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:44.288" level="INFO">Environment variable 'HADOOP_CLASSPATH' set to value '/opt/hadoop/share/ozone/lib/hadoop-classpath.jar'.</msg>
<status status="PASS" starttime="20230616 06:58:44.288" endtime="20230616 06:58:44.288"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CLASSPATH</arg>
<arg>${EMPTY}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:44.289" level="INFO">Environment variable 'OZONE_CLASSPATH' set to value ''.</msg>
<status status="PASS" starttime="20230616 06:58:44.288" endtime="20230616 06:58:44.290"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone classpath ozone-insight</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:44.293" level="INFO">Running command 'ozone classpath ozone-insight 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:44.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:44.907" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/shar...</msg>
<status status="PASS" starttime="20230616 06:58:44.291" endtime="20230616 06:58:44.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:44.909" level="INFO">/etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/bcpkix-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/commons-net-3.9.0.jar:/opt/hadoop/share/ozone/lib/orc-core-1.5.8.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-osx-x86_64.jar:/opt/hadoop/share/ozone/lib/jsr305-3.0.0.jar:/opt/hadoop/share/ozone/lib/j2objc-annotations-1.3.jar:/opt/hadoop/share/ozone/lib/httpmime-4.5.6.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/picocli-4.6.1.jar:/opt/hadoop/share/ozone/lib/jaxb-api-2.3.0.jar:/opt/hadoop/share/ozone/lib/jetty-util-ajax-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/httpasyncclient-4.1.3.jar:/opt/hadoop/share/ozone/lib/commons-codec-1.15.jar:/opt/hadoop/share/ozone/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-1.6.21.jar:/opt/hadoop/share/ozone/lib/hdds-managed-rocksdb-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ranger-plugin-classloader-2.3.0.jar:/opt/hadoop/share/ozone/lib/grpc-context-1.51.1.jar:/opt/hadoop/share/ozone/lib/accessors-smart-2.4.7.jar:/opt/hadoop/share/ozone/lib/txw2-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/netty-codec-http2-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/ratis-metrics-2.5.1.jar:/opt/hadoop/share/ozone/lib/snakeyaml-2.0.jar:/opt/hadoop/share/ozone/lib/libthrift-0.14.1.jar:/opt/hadoop/share/ozone/lib/stax-ex-1.7.8.jar:/opt/hadoop/share/ozone/lib/ozone-interface-storage-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/error_prone_annotations-2.2.0.jar:/opt/hadoop/share/ozone/lib/httpclient-4.5.13.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/zstd-jni-1.5.2-5.jar:/opt/hadoop/share/ozone/lib/commons-lang-2.6.jar:/opt/hadoop/share/ozone/lib/jackson-annotations-2.13.4.jar:/opt/hadoop/share/ozone/lib/grpc-stub-1.51.1.jar:/opt/hadoop/share/ozone/lib/metrics-core-3.2.4.jar:/opt/hadoop/share/ozone/lib/kerby-pkix-1.0.1.jar:/opt/hadoop/share/ozone/lib/jna-5.2.0.jar:/opt/hadoop/share/ozone/lib/activation-1.1.1.jar:/opt/hadoop/share/ozone/lib/aspectjweaver-1.9.7.jar:/opt/hadoop/share/ozone/lib/json-smart-2.4.7.jar:/opt/hadoop/share/ozone/lib/jsr311-api-1.1.1.jar:/opt/hadoop/share/ozone/lib/commons-beanutils-1.9.4.jar:/opt/hadoop/share/ozone/lib/hadoop-auth-3.3.5.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-classes-2.0.54.Final.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-linux-aarch_64.jar:/opt/hadoop/share/ozone/lib/awaitility-4.2.0.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-cred-2.3.0.jar:/opt/hadoop/share/ozone/lib/disruptor-3.4.2.jar:/opt/hadoop/share/ozone/lib/aspectjrt-1.9.7.jar:/opt/hadoop/share/ozone/lib/hppc-0.8.0.jar:/opt/hadoop/share/ozone/lib/joda-time-2.10.6.jar:/opt/hadoop/share/ozone/lib/nimbus-jose-jwt-9.8.1.jar:/opt/hadoop/share/ozone/lib/rocksdb-checkpoint-differ-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-annotations-3.3.5.jar:/opt/hadoop/share/ozone/lib/sqlite-jdbc-3.41.2.2.jar:/opt/hadoop/share/ozone/lib/hdds-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/simpleclient_common-0.7.0.jar:/opt/hadoop/share/ozone/lib/dnsjava-2.1.7.jar:/opt/hadoop/share/ozone/lib/commons-configuration2-2.1.1.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-windows-x86_64.jar:/opt/hadoop/share/ozone/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/hadoop/share/ozone/lib/commons-lang3-3.7.jar:/opt/hadoop/share/ozone/lib/re2j-1.1.jar:/opt/hadoop/share/ozone/lib/netty-transport-native-unix-common-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/simpleclient_dropwizard-0.7.0.jar:/opt/hadoop/share/ozone/lib/simpleclient-0.7.0.jar:/opt/hadoop/share/ozone/lib/jakarta.activation-api-1.2.2.jar:/opt/hadoop/share/ozone/lib/asm-5.0.4.jar:/opt/hadoop/share/ozone/lib/kerby-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/netty-handler-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/grpc-protobuf-lite-1.51.1.jar:/opt/hadoop/share/ozone/lib/jackson-databind-2.13.4.2.jar:/opt/hadoop/share/ozone/lib/failureaccess-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/share/ozone/lib/jsp-api-2.1.jar:/opt/hadoop/share/ozone/lib/gethostname4j-0.0.2.jar:/opt/hadoop/share/ozone/lib/woodstox-core-5.4.0.jar:/opt/hadoop/share/ozone/lib/ratis-server-api-2.5.1.jar:/opt/hadoop/share/ozone/lib/opentracing-api-0.33.0.jar:/opt/hadoop/share/ozone/lib/jcip-annotations-1.0-1.jar:/opt/hadoop/share/ozone/lib/opentracing-noop-0.33.0.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-common-1.6.21.jar:/opt/hadoop/share/ozone/lib/commons-compress-1.21.jar:/opt/hadoop/share/ozone/lib/jaxb-runtime-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/grpc-protobuf-1.51.1.jar:/opt/hadoop/share/ozone/lib/opentracing-util-0.33.0.jar:/opt/hadoop/share/ozone/lib/netty-codec-http-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/snappy-java-1.1.8.2.jar:/opt/hadoop/share/ozone/lib/commons-cli-1.2.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-3.3.5.jar:/opt/hadoop/share/ozone/lib/hdds-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/perfmark-api-0.25.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-server-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-tools-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-collections-3.2.2.jar:/opt/hadoop/share/ozone/lib/commons-digester-1.8.1.jar:/opt/hadoop/share/ozone/lib/jaeger-core-1.6.0.jar:/opt/hadoop/share/ozone/lib/jersey-servlet-1.19.jar:/opt/hadoop/share/ozone/lib/ozone-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jna-platform-5.2.0.jar:/opt/hadoop/share/ozone/lib/slf4j-reload4j-1.7.36.jar:/opt/hadoop/share/ozone/lib/netty-resolver-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/istack-commons-runtime-3.0.5.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-server-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-validator-1.6.jar:/opt/hadoop/share/ozone/lib/hdds-erasurecode-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-manager-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-rocks-native-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/netty-codec-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/kerb-core-1.0.1.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:/opt/hadoop/share/ozone/lib/hadoop-common-3.3.5.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-osx-aarch_64.jar:/opt/hadoop/share/ozone/lib/javassist-3.21.0-GA.jar:/opt/hadoop/share/ozone/lib/proto-google-common-protos-2.9.0.jar:/opt/hadoop/share/ozone/lib/grpc-core-1.51.1.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-client-3.3.5.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-guava-1.1.1.jar:/opt/hadoop/share/ozone/lib/log4j-core-2.17.1.jar:/opt/hadoop/share/ozone/lib/commons-logging-1.2.jar:/opt/hadoop/share/ozone/lib/jetty-http-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-linux-x86_64.jar:/opt/hadoop/share/ozone/lib/httpcore-4.4.13.jar:/opt/hadoop/share/ozone/lib/hdds-container-service-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/opentracing-tracerresolver-0.1.8.jar:/opt/hadoop/share/ozone/lib/guava-31.1-jre.jar:/opt/hadoop/share/ozone/lib/commons-text-1.10.0.jar:/opt/hadoop/share/ozone/lib/jetty-util-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/hamcrest-2.1.jar:/opt/hadoop/share/ozone/lib/ratis-grpc-2.5.1.jar:/opt/hadoop/share/ozone/lib/jaeger-client-1.6.0.jar:/opt/hadoop/share/ozone/lib/ratis-proto-2.5.1.jar:/opt/hadoop/share/ozone/lib/commons-io-2.11.0.jar:/opt/hadoop/share/ozone/lib/netty-buffer-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/ratis-common-2.5.1.jar:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-1.0.4.jar:/opt/hadoop/share/ozone/lib/netty-handler-proxy-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/javax.servlet-api-3.1.0.jar:/opt/hadoop/share/ozone/lib/annotations-4.1.1.4.jar:/opt/hadoop/share/ozone/lib/netty-codec-socks-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/gson-2.9.0.jar:/opt/hadoop/share/ozone/lib/reflections-0.9.11.jar:/opt/hadoop/share/ozone/lib/hdds-server-scm-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/httpcore-nio-4.4.13.jar:/opt/hadoop/share/ozone/lib/annotations-13.0.jar:/opt/hadoop/share/ozone/lib/jaeger-thrift-1.6.0.jar:/opt/hadoop/share/ozone/lib/rocksdbjni-7.7.3.jar:/opt/hadoop/share/ozone/lib/bcprov-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-audit-2.3.0.jar:/opt/hadoop/share/ozone/lib/metainf-services-1.8.jar:/opt/hadoop/share/ozone/lib/commons-daemon-1.0.13.jar:/opt/hadoop/share/ozone/lib/jetty-servlet-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jaeger-tracerresolver-1.6.0.jar:/opt/hadoop/share/ozone/lib/ozone-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/slf4j-api-1.7.36.jar:/opt/hadoop/share/ozone/lib/jackson-datatype-jsr310-2.13.4.jar:/opt/hadoop/share/ozone/lib/jersey-client-1.19.jar:/opt/hadoop/share/ozone/lib/netty-transport-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/okio-2.8.0.jar:/opt/hadoop/share/ozone/lib/ratis-tools-2.5.1.jar:/opt/hadoop/share/ozone/lib/ratis-server-2.5.1.jar:/opt/hadoop/share/ozone/lib/jsch-0.1.54.jar:/opt/hadoop/share/ozone/lib/reload4j-1.2.22.jar:/opt/hadoop/share/ozone/lib/animal-sniffer-annotations-1.21.jar:/opt/hadoop/share/ozone/lib/commons-pool2-2.6.0.jar:/opt/hadoop/share/ozone/lib/ranger-intg-2.3.0.jar:/opt/hadoop/share/ozone/lib/jetty-client-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jetty-server-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-common-2.3.0.jar:/opt/hadoop/share/ozone/lib/jersey-core-1.19.jar:/opt/hadoop/share/ozone/lib/jetty-xml-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/grpc-api-1.51.1.jar:/opt/hadoop/share/ozone/lib/hdds-annotation-processing-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jackson-core-2.13.4.jar:/opt/hadoop/share/ozone/lib/jetty-security-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/stax2-api-4.2.1.jar:/opt/hadoop/share/ozone/lib/netty-common-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/hdds-config-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/log4j-api-2.17.1.jar:/opt/hadoop/share/ozone/lib/javax.annotation-api-1.2.jar:/opt/hadoop/share/ozone/lib/kerby-asn1-1.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-netty-2.5.1.jar:/opt/hadoop/share/ozone/lib/jetty-webapp-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/okhttp-4.9.3.jar:/opt/hadoop/share/ozone/lib/checker-qual-3.12.0.jar:/opt/hadoop/share/ozone/lib/hdds-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ratis-client-2.5.1.jar:/opt/hadoop/share/ozone/lib/FastInfoset-1.2.13.jar:/opt/hadoop/share/ozone/lib/jetty-io-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/hdds-server-framework-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jersey-server-1.19.jar:/opt/hadoop/share/ozone/lib/grpc-netty-1.51.1.jar:/opt/hadoop/share/ozone/web:/opt/hadoop/share/ozone/lib/ozone-insight-1.4.0-SNAPSHOT.jar</msg>
<status status="PASS" starttime="20230616 06:58:44.908" endtime="20230616 06:58:44.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:44.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:44.909" endtime="20230616 06:58:44.910"/>
</kw>
<status status="PASS" starttime="20230616 06:58:44.290" endtime="20230616 06:58:44.910"/>
</kw>
<msg timestamp="20230616 06:58:44.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:44.290" endtime="20230616 06:58:44.910"/>
</kw>
<msg timestamp="20230616 06:58:44.910" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/shar...</msg>
<status status="PASS" starttime="20230616 06:58:44.290" endtime="20230616 06:58:44.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>hdds-interface</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:44.911" endtime="20230616 06:58:44.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:44.911" endtime="20230616 06:58:44.912"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>%{HDDS_LIB_JARS_DIR}/hadoop-classpath.jar</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230616 06:58:44.912" level="INFO" html="true">Removed file '&lt;a href="file:///opt/hadoop/share/ozone/lib/hadoop-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/hadoop-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:58:44.912" endtime="20230616 06:58:44.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:44.286" endtime="20230616 06:58:44.913"/>
</test>
<test id="s1-s16-s1-t2" name="Picks up items from OZONE_CLASSPATH" line="34">
<kw name="Create File" library="OperatingSystem" type="SETUP">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20230616 06:58:44.915" level="INFO" html="true">Created file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:58:44.914" endtime="20230616 06:58:44.915"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CLASSPATH</arg>
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:44.916" level="INFO">Environment variable 'OZONE_CLASSPATH' set to value '/opt/hadoop/share/ozone/lib/ozone-classpath.jar'.</msg>
<status status="PASS" starttime="20230616 06:58:44.915" endtime="20230616 06:58:44.916"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone classpath ozone-insight</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:44.919" level="INFO">Running command 'ozone classpath ozone-insight 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:45.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:45.587" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/shar...</msg>
<status status="PASS" starttime="20230616 06:58:44.917" endtime="20230616 06:58:45.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:45.589" level="INFO">/etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/bcpkix-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/commons-net-3.9.0.jar:/opt/hadoop/share/ozone/lib/orc-core-1.5.8.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-osx-x86_64.jar:/opt/hadoop/share/ozone/lib/jsr305-3.0.0.jar:/opt/hadoop/share/ozone/lib/j2objc-annotations-1.3.jar:/opt/hadoop/share/ozone/lib/httpmime-4.5.6.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/picocli-4.6.1.jar:/opt/hadoop/share/ozone/lib/jaxb-api-2.3.0.jar:/opt/hadoop/share/ozone/lib/jetty-util-ajax-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/httpasyncclient-4.1.3.jar:/opt/hadoop/share/ozone/lib/commons-codec-1.15.jar:/opt/hadoop/share/ozone/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-1.6.21.jar:/opt/hadoop/share/ozone/lib/hdds-managed-rocksdb-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ranger-plugin-classloader-2.3.0.jar:/opt/hadoop/share/ozone/lib/grpc-context-1.51.1.jar:/opt/hadoop/share/ozone/lib/accessors-smart-2.4.7.jar:/opt/hadoop/share/ozone/lib/txw2-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/netty-codec-http2-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/ratis-metrics-2.5.1.jar:/opt/hadoop/share/ozone/lib/snakeyaml-2.0.jar:/opt/hadoop/share/ozone/lib/libthrift-0.14.1.jar:/opt/hadoop/share/ozone/lib/stax-ex-1.7.8.jar:/opt/hadoop/share/ozone/lib/ozone-interface-storage-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/error_prone_annotations-2.2.0.jar:/opt/hadoop/share/ozone/lib/httpclient-4.5.13.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/zstd-jni-1.5.2-5.jar:/opt/hadoop/share/ozone/lib/commons-lang-2.6.jar:/opt/hadoop/share/ozone/lib/jackson-annotations-2.13.4.jar:/opt/hadoop/share/ozone/lib/grpc-stub-1.51.1.jar:/opt/hadoop/share/ozone/lib/metrics-core-3.2.4.jar:/opt/hadoop/share/ozone/lib/kerby-pkix-1.0.1.jar:/opt/hadoop/share/ozone/lib/jna-5.2.0.jar:/opt/hadoop/share/ozone/lib/activation-1.1.1.jar:/opt/hadoop/share/ozone/lib/aspectjweaver-1.9.7.jar:/opt/hadoop/share/ozone/lib/json-smart-2.4.7.jar:/opt/hadoop/share/ozone/lib/jsr311-api-1.1.1.jar:/opt/hadoop/share/ozone/lib/commons-beanutils-1.9.4.jar:/opt/hadoop/share/ozone/lib/hadoop-auth-3.3.5.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-classes-2.0.54.Final.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-linux-aarch_64.jar:/opt/hadoop/share/ozone/lib/awaitility-4.2.0.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-cred-2.3.0.jar:/opt/hadoop/share/ozone/lib/disruptor-3.4.2.jar:/opt/hadoop/share/ozone/lib/aspectjrt-1.9.7.jar:/opt/hadoop/share/ozone/lib/hppc-0.8.0.jar:/opt/hadoop/share/ozone/lib/joda-time-2.10.6.jar:/opt/hadoop/share/ozone/lib/nimbus-jose-jwt-9.8.1.jar:/opt/hadoop/share/ozone/lib/rocksdb-checkpoint-differ-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-annotations-3.3.5.jar:/opt/hadoop/share/ozone/lib/sqlite-jdbc-3.41.2.2.jar:/opt/hadoop/share/ozone/lib/hdds-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/simpleclient_common-0.7.0.jar:/opt/hadoop/share/ozone/lib/dnsjava-2.1.7.jar:/opt/hadoop/share/ozone/lib/commons-configuration2-2.1.1.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-windows-x86_64.jar:/opt/hadoop/share/ozone/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/hadoop/share/ozone/lib/commons-lang3-3.7.jar:/opt/hadoop/share/ozone/lib/re2j-1.1.jar:/opt/hadoop/share/ozone/lib/netty-transport-native-unix-common-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/simpleclient_dropwizard-0.7.0.jar:/opt/hadoop/share/ozone/lib/simpleclient-0.7.0.jar:/opt/hadoop/share/ozone/lib/jakarta.activation-api-1.2.2.jar:/opt/hadoop/share/ozone/lib/asm-5.0.4.jar:/opt/hadoop/share/ozone/lib/kerby-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/netty-handler-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/grpc-protobuf-lite-1.51.1.jar:/opt/hadoop/share/ozone/lib/jackson-databind-2.13.4.2.jar:/opt/hadoop/share/ozone/lib/failureaccess-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/share/ozone/lib/jsp-api-2.1.jar:/opt/hadoop/share/ozone/lib/gethostname4j-0.0.2.jar:/opt/hadoop/share/ozone/lib/woodstox-core-5.4.0.jar:/opt/hadoop/share/ozone/lib/ratis-server-api-2.5.1.jar:/opt/hadoop/share/ozone/lib/opentracing-api-0.33.0.jar:/opt/hadoop/share/ozone/lib/jcip-annotations-1.0-1.jar:/opt/hadoop/share/ozone/lib/opentracing-noop-0.33.0.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-common-1.6.21.jar:/opt/hadoop/share/ozone/lib/commons-compress-1.21.jar:/opt/hadoop/share/ozone/lib/jaxb-runtime-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/grpc-protobuf-1.51.1.jar:/opt/hadoop/share/ozone/lib/opentracing-util-0.33.0.jar:/opt/hadoop/share/ozone/lib/netty-codec-http-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/snappy-java-1.1.8.2.jar:/opt/hadoop/share/ozone/lib/commons-cli-1.2.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-3.3.5.jar:/opt/hadoop/share/ozone/lib/hdds-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/perfmark-api-0.25.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-server-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-tools-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-collections-3.2.2.jar:/opt/hadoop/share/ozone/lib/commons-digester-1.8.1.jar:/opt/hadoop/share/ozone/lib/jaeger-core-1.6.0.jar:/opt/hadoop/share/ozone/lib/jersey-servlet-1.19.jar:/opt/hadoop/share/ozone/lib/ozone-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jna-platform-5.2.0.jar:/opt/hadoop/share/ozone/lib/slf4j-reload4j-1.7.36.jar:/opt/hadoop/share/ozone/lib/netty-resolver-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/istack-commons-runtime-3.0.5.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-server-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-validator-1.6.jar:/opt/hadoop/share/ozone/lib/hdds-erasurecode-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-manager-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-rocks-native-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/netty-codec-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/kerb-core-1.0.1.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:/opt/hadoop/share/ozone/lib/hadoop-common-3.3.5.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-osx-aarch_64.jar:/opt/hadoop/share/ozone/lib/javassist-3.21.0-GA.jar:/opt/hadoop/share/ozone/lib/proto-google-common-protos-2.9.0.jar:/opt/hadoop/share/ozone/lib/grpc-core-1.51.1.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-client-3.3.5.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-guava-1.1.1.jar:/opt/hadoop/share/ozone/lib/log4j-core-2.17.1.jar:/opt/hadoop/share/ozone/lib/commons-logging-1.2.jar:/opt/hadoop/share/ozone/lib/jetty-http-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-linux-x86_64.jar:/opt/hadoop/share/ozone/lib/httpcore-4.4.13.jar:/opt/hadoop/share/ozone/lib/hdds-container-service-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/opentracing-tracerresolver-0.1.8.jar:/opt/hadoop/share/ozone/lib/guava-31.1-jre.jar:/opt/hadoop/share/ozone/lib/commons-text-1.10.0.jar:/opt/hadoop/share/ozone/lib/jetty-util-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/hamcrest-2.1.jar:/opt/hadoop/share/ozone/lib/ratis-grpc-2.5.1.jar:/opt/hadoop/share/ozone/lib/jaeger-client-1.6.0.jar:/opt/hadoop/share/ozone/lib/ratis-proto-2.5.1.jar:/opt/hadoop/share/ozone/lib/commons-io-2.11.0.jar:/opt/hadoop/share/ozone/lib/netty-buffer-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/ratis-common-2.5.1.jar:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-1.0.4.jar:/opt/hadoop/share/ozone/lib/netty-handler-proxy-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/javax.servlet-api-3.1.0.jar:/opt/hadoop/share/ozone/lib/annotations-4.1.1.4.jar:/opt/hadoop/share/ozone/lib/netty-codec-socks-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/gson-2.9.0.jar:/opt/hadoop/share/ozone/lib/reflections-0.9.11.jar:/opt/hadoop/share/ozone/lib/hdds-server-scm-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/httpcore-nio-4.4.13.jar:/opt/hadoop/share/ozone/lib/annotations-13.0.jar:/opt/hadoop/share/ozone/lib/jaeger-thrift-1.6.0.jar:/opt/hadoop/share/ozone/lib/rocksdbjni-7.7.3.jar:/opt/hadoop/share/ozone/lib/bcprov-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-audit-2.3.0.jar:/opt/hadoop/share/ozone/lib/metainf-services-1.8.jar:/opt/hadoop/share/ozone/lib/commons-daemon-1.0.13.jar:/opt/hadoop/share/ozone/lib/jetty-servlet-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jaeger-tracerresolver-1.6.0.jar:/opt/hadoop/share/ozone/lib/ozone-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/slf4j-api-1.7.36.jar:/opt/hadoop/share/ozone/lib/jackson-datatype-jsr310-2.13.4.jar:/opt/hadoop/share/ozone/lib/jersey-client-1.19.jar:/opt/hadoop/share/ozone/lib/netty-transport-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/okio-2.8.0.jar:/opt/hadoop/share/ozone/lib/ratis-tools-2.5.1.jar:/opt/hadoop/share/ozone/lib/ratis-server-2.5.1.jar:/opt/hadoop/share/ozone/lib/jsch-0.1.54.jar:/opt/hadoop/share/ozone/lib/reload4j-1.2.22.jar:/opt/hadoop/share/ozone/lib/animal-sniffer-annotations-1.21.jar:/opt/hadoop/share/ozone/lib/commons-pool2-2.6.0.jar:/opt/hadoop/share/ozone/lib/ranger-intg-2.3.0.jar:/opt/hadoop/share/ozone/lib/jetty-client-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jetty-server-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-common-2.3.0.jar:/opt/hadoop/share/ozone/lib/jersey-core-1.19.jar:/opt/hadoop/share/ozone/lib/jetty-xml-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/grpc-api-1.51.1.jar:/opt/hadoop/share/ozone/lib/hdds-annotation-processing-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jackson-core-2.13.4.jar:/opt/hadoop/share/ozone/lib/jetty-security-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/stax2-api-4.2.1.jar:/opt/hadoop/share/ozone/lib/netty-common-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/hdds-config-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/log4j-api-2.17.1.jar:/opt/hadoop/share/ozone/lib/javax.annotation-api-1.2.jar:/opt/hadoop/share/ozone/lib/kerby-asn1-1.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-netty-2.5.1.jar:/opt/hadoop/share/ozone/lib/jetty-webapp-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/okhttp-4.9.3.jar:/opt/hadoop/share/ozone/lib/checker-qual-3.12.0.jar:/opt/hadoop/share/ozone/lib/hdds-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ratis-client-2.5.1.jar:/opt/hadoop/share/ozone/lib/FastInfoset-1.2.13.jar:/opt/hadoop/share/ozone/lib/jetty-io-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/hdds-server-framework-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jersey-server-1.19.jar:/opt/hadoop/share/ozone/lib/grpc-netty-1.51.1.jar:/opt/hadoop/share/ozone/web:/opt/hadoop/share/ozone/lib/ozone-insight-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-classpath.jar</msg>
<status status="PASS" starttime="20230616 06:58:45.588" endtime="20230616 06:58:45.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:45.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:45.589" endtime="20230616 06:58:45.590"/>
</kw>
<status status="PASS" starttime="20230616 06:58:44.916" endtime="20230616 06:58:45.590"/>
</kw>
<msg timestamp="20230616 06:58:45.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:44.916" endtime="20230616 06:58:45.590"/>
</kw>
<msg timestamp="20230616 06:58:45.591" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/shar...</msg>
<status status="PASS" starttime="20230616 06:58:44.916" endtime="20230616 06:58:45.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:45.591" endtime="20230616 06:58:45.591"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-classpath.jar</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230616 06:58:45.592" level="INFO" html="true">Removed file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-classpath.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-classpath.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:58:45.592" endtime="20230616 06:58:45.592"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:44.914" endtime="20230616 06:58:45.592"/>
</test>
<test id="s1-s16-s1-t3" name="Adds optional dir entries" line="41">
<kw name="Create File" library="OperatingSystem" type="SETUP">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-insight/optional.jar</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20230616 06:58:45.595" level="INFO" html="true">Created file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-insight/optional.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-insight/optional.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:58:45.594" endtime="20230616 06:58:45.595"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CLASSPATH</arg>
<arg>${EMPTY}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:45.596" level="INFO">Environment variable 'OZONE_CLASSPATH' set to value ''.</msg>
<status status="PASS" starttime="20230616 06:58:45.595" endtime="20230616 06:58:45.596"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone classpath ozone-insight</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:45.600" level="INFO">Running command 'ozone classpath ozone-insight 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:46.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:46.237" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/shar...</msg>
<status status="PASS" starttime="20230616 06:58:45.597" endtime="20230616 06:58:46.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:46.238" level="INFO">/etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/bcpkix-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/commons-net-3.9.0.jar:/opt/hadoop/share/ozone/lib/orc-core-1.5.8.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-osx-x86_64.jar:/opt/hadoop/share/ozone/lib/jsr305-3.0.0.jar:/opt/hadoop/share/ozone/lib/j2objc-annotations-1.3.jar:/opt/hadoop/share/ozone/lib/httpmime-4.5.6.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/picocli-4.6.1.jar:/opt/hadoop/share/ozone/lib/jaxb-api-2.3.0.jar:/opt/hadoop/share/ozone/lib/jetty-util-ajax-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/httpasyncclient-4.1.3.jar:/opt/hadoop/share/ozone/lib/commons-codec-1.15.jar:/opt/hadoop/share/ozone/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-1.6.21.jar:/opt/hadoop/share/ozone/lib/hdds-managed-rocksdb-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ranger-plugin-classloader-2.3.0.jar:/opt/hadoop/share/ozone/lib/grpc-context-1.51.1.jar:/opt/hadoop/share/ozone/lib/accessors-smart-2.4.7.jar:/opt/hadoop/share/ozone/lib/txw2-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/netty-codec-http2-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/ratis-metrics-2.5.1.jar:/opt/hadoop/share/ozone/lib/snakeyaml-2.0.jar:/opt/hadoop/share/ozone/lib/libthrift-0.14.1.jar:/opt/hadoop/share/ozone/lib/stax-ex-1.7.8.jar:/opt/hadoop/share/ozone/lib/ozone-interface-storage-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/error_prone_annotations-2.2.0.jar:/opt/hadoop/share/ozone/lib/httpclient-4.5.13.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/zstd-jni-1.5.2-5.jar:/opt/hadoop/share/ozone/lib/commons-lang-2.6.jar:/opt/hadoop/share/ozone/lib/jackson-annotations-2.13.4.jar:/opt/hadoop/share/ozone/lib/grpc-stub-1.51.1.jar:/opt/hadoop/share/ozone/lib/metrics-core-3.2.4.jar:/opt/hadoop/share/ozone/lib/kerby-pkix-1.0.1.jar:/opt/hadoop/share/ozone/lib/jna-5.2.0.jar:/opt/hadoop/share/ozone/lib/activation-1.1.1.jar:/opt/hadoop/share/ozone/lib/aspectjweaver-1.9.7.jar:/opt/hadoop/share/ozone/lib/json-smart-2.4.7.jar:/opt/hadoop/share/ozone/lib/jsr311-api-1.1.1.jar:/opt/hadoop/share/ozone/lib/commons-beanutils-1.9.4.jar:/opt/hadoop/share/ozone/lib/hadoop-auth-3.3.5.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-classes-2.0.54.Final.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-linux-aarch_64.jar:/opt/hadoop/share/ozone/lib/awaitility-4.2.0.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-cred-2.3.0.jar:/opt/hadoop/share/ozone/lib/disruptor-3.4.2.jar:/opt/hadoop/share/ozone/lib/aspectjrt-1.9.7.jar:/opt/hadoop/share/ozone/lib/hppc-0.8.0.jar:/opt/hadoop/share/ozone/lib/joda-time-2.10.6.jar:/opt/hadoop/share/ozone/lib/nimbus-jose-jwt-9.8.1.jar:/opt/hadoop/share/ozone/lib/rocksdb-checkpoint-differ-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-annotations-3.3.5.jar:/opt/hadoop/share/ozone/lib/sqlite-jdbc-3.41.2.2.jar:/opt/hadoop/share/ozone/lib/hdds-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/simpleclient_common-0.7.0.jar:/opt/hadoop/share/ozone/lib/dnsjava-2.1.7.jar:/opt/hadoop/share/ozone/lib/commons-configuration2-2.1.1.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-windows-x86_64.jar:/opt/hadoop/share/ozone/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/hadoop/share/ozone/lib/commons-lang3-3.7.jar:/opt/hadoop/share/ozone/lib/re2j-1.1.jar:/opt/hadoop/share/ozone/lib/netty-transport-native-unix-common-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/simpleclient_dropwizard-0.7.0.jar:/opt/hadoop/share/ozone/lib/simpleclient-0.7.0.jar:/opt/hadoop/share/ozone/lib/jakarta.activation-api-1.2.2.jar:/opt/hadoop/share/ozone/lib/asm-5.0.4.jar:/opt/hadoop/share/ozone/lib/kerby-util-1.0.1.jar:/opt/hadoop/share/ozone/lib/netty-handler-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/grpc-protobuf-lite-1.51.1.jar:/opt/hadoop/share/ozone/lib/jackson-databind-2.13.4.2.jar:/opt/hadoop/share/ozone/lib/failureaccess-1.0.1.jar:/opt/hadoop/share/ozone/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/share/ozone/lib/jsp-api-2.1.jar:/opt/hadoop/share/ozone/lib/gethostname4j-0.0.2.jar:/opt/hadoop/share/ozone/lib/woodstox-core-5.4.0.jar:/opt/hadoop/share/ozone/lib/ratis-server-api-2.5.1.jar:/opt/hadoop/share/ozone/lib/opentracing-api-0.33.0.jar:/opt/hadoop/share/ozone/lib/jcip-annotations-1.0-1.jar:/opt/hadoop/share/ozone/lib/opentracing-noop-0.33.0.jar:/opt/hadoop/share/ozone/lib/kotlin-stdlib-common-1.6.21.jar:/opt/hadoop/share/ozone/lib/commons-compress-1.21.jar:/opt/hadoop/share/ozone/lib/jaxb-runtime-2.3.0.1.jar:/opt/hadoop/share/ozone/lib/grpc-protobuf-1.51.1.jar:/opt/hadoop/share/ozone/lib/opentracing-util-0.33.0.jar:/opt/hadoop/share/ozone/lib/netty-codec-http-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/snappy-java-1.1.8.2.jar:/opt/hadoop/share/ozone/lib/commons-cli-1.2.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-3.3.5.jar:/opt/hadoop/share/ozone/lib/hdds-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/perfmark-api-0.25.0.jar:/opt/hadoop/share/ozone/lib/hdds-interface-server-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-tools-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-collections-3.2.2.jar:/opt/hadoop/share/ozone/lib/commons-digester-1.8.1.jar:/opt/hadoop/share/ozone/lib/jaeger-core-1.6.0.jar:/opt/hadoop/share/ozone/lib/jersey-servlet-1.19.jar:/opt/hadoop/share/ozone/lib/ozone-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jna-platform-5.2.0.jar:/opt/hadoop/share/ozone/lib/slf4j-reload4j-1.7.36.jar:/opt/hadoop/share/ozone/lib/netty-resolver-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/istack-commons-runtime-3.0.5.jar:/opt/hadoop/share/ozone/lib/hdds-hadoop-dependency-server-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/commons-validator-1.6.jar:/opt/hadoop/share/ozone/lib/hdds-erasurecode-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-manager-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hdds-rocks-native-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/netty-codec-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/kerb-core-1.0.1.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:/opt/hadoop/share/ozone/lib/hadoop-common-3.3.5.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-osx-aarch_64.jar:/opt/hadoop/share/ozone/lib/javassist-3.21.0-GA.jar:/opt/hadoop/share/ozone/lib/proto-google-common-protos-2.9.0.jar:/opt/hadoop/share/ozone/lib/grpc-core-1.51.1.jar:/opt/hadoop/share/ozone/lib/hdds-interface-admin-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/hadoop-hdfs-client-3.3.5.jar:/opt/hadoop/share/ozone/lib/hadoop-shaded-guava-1.1.1.jar:/opt/hadoop/share/ozone/lib/log4j-core-2.17.1.jar:/opt/hadoop/share/ozone/lib/commons-logging-1.2.jar:/opt/hadoop/share/ozone/lib/jetty-http-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/share/ozone/lib/netty-tcnative-boringssl-static-2.0.54.Final-linux-x86_64.jar:/opt/hadoop/share/ozone/lib/httpcore-4.4.13.jar:/opt/hadoop/share/ozone/lib/hdds-container-service-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/opentracing-tracerresolver-0.1.8.jar:/opt/hadoop/share/ozone/lib/guava-31.1-jre.jar:/opt/hadoop/share/ozone/lib/commons-text-1.10.0.jar:/opt/hadoop/share/ozone/lib/jetty-util-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/hamcrest-2.1.jar:/opt/hadoop/share/ozone/lib/ratis-grpc-2.5.1.jar:/opt/hadoop/share/ozone/lib/jaeger-client-1.6.0.jar:/opt/hadoop/share/ozone/lib/ratis-proto-2.5.1.jar:/opt/hadoop/share/ozone/lib/commons-io-2.11.0.jar:/opt/hadoop/share/ozone/lib/netty-buffer-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/ratis-common-2.5.1.jar:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-1.0.4.jar:/opt/hadoop/share/ozone/lib/netty-handler-proxy-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/javax.servlet-api-3.1.0.jar:/opt/hadoop/share/ozone/lib/annotations-4.1.1.4.jar:/opt/hadoop/share/ozone/lib/netty-codec-socks-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/gson-2.9.0.jar:/opt/hadoop/share/ozone/lib/reflections-0.9.11.jar:/opt/hadoop/share/ozone/lib/hdds-server-scm-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/httpcore-nio-4.4.13.jar:/opt/hadoop/share/ozone/lib/annotations-13.0.jar:/opt/hadoop/share/ozone/lib/jaeger-thrift-1.6.0.jar:/opt/hadoop/share/ozone/lib/rocksdbjni-7.7.3.jar:/opt/hadoop/share/ozone/lib/bcprov-jdk15on-1.67.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-audit-2.3.0.jar:/opt/hadoop/share/ozone/lib/metainf-services-1.8.jar:/opt/hadoop/share/ozone/lib/commons-daemon-1.0.13.jar:/opt/hadoop/share/ozone/lib/jetty-servlet-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jaeger-tracerresolver-1.6.0.jar:/opt/hadoop/share/ozone/lib/ozone-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/slf4j-api-1.7.36.jar:/opt/hadoop/share/ozone/lib/jackson-datatype-jsr310-2.13.4.jar:/opt/hadoop/share/ozone/lib/jersey-client-1.19.jar:/opt/hadoop/share/ozone/lib/netty-transport-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/okio-2.8.0.jar:/opt/hadoop/share/ozone/lib/ratis-tools-2.5.1.jar:/opt/hadoop/share/ozone/lib/ratis-server-2.5.1.jar:/opt/hadoop/share/ozone/lib/jsch-0.1.54.jar:/opt/hadoop/share/ozone/lib/reload4j-1.2.22.jar:/opt/hadoop/share/ozone/lib/animal-sniffer-annotations-1.21.jar:/opt/hadoop/share/ozone/lib/commons-pool2-2.6.0.jar:/opt/hadoop/share/ozone/lib/ranger-intg-2.3.0.jar:/opt/hadoop/share/ozone/lib/jetty-client-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/jetty-server-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/ranger-plugins-common-2.3.0.jar:/opt/hadoop/share/ozone/lib/jersey-core-1.19.jar:/opt/hadoop/share/ozone/lib/jetty-xml-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/grpc-api-1.51.1.jar:/opt/hadoop/share/ozone/lib/hdds-annotation-processing-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jackson-core-2.13.4.jar:/opt/hadoop/share/ozone/lib/jetty-security-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/stax2-api-4.2.1.jar:/opt/hadoop/share/ozone/lib/netty-common-4.1.86.Final.jar:/opt/hadoop/share/ozone/lib/hdds-config-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/log4j-api-2.17.1.jar:/opt/hadoop/share/ozone/lib/javax.annotation-api-1.2.jar:/opt/hadoop/share/ozone/lib/kerby-asn1-1.0.1.jar:/opt/hadoop/share/ozone/lib/ratis-netty-2.5.1.jar:/opt/hadoop/share/ozone/lib/jetty-webapp-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/okhttp-4.9.3.jar:/opt/hadoop/share/ozone/lib/checker-qual-3.12.0.jar:/opt/hadoop/share/ozone/lib/hdds-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-filesystem-common-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ratis-client-2.5.1.jar:/opt/hadoop/share/ozone/lib/FastInfoset-1.2.13.jar:/opt/hadoop/share/ozone/lib/jetty-io-9.4.51.v20230217.jar:/opt/hadoop/share/ozone/lib/hdds-server-framework-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/jersey-server-1.19.jar:/opt/hadoop/share/ozone/lib/grpc-netty-1.51.1.jar:/opt/hadoop/share/ozone/web:/opt/hadoop/share/ozone/lib/ozone-insight-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/ozone-insight/optional.jar</msg>
<status status="PASS" starttime="20230616 06:58:46.237" endtime="20230616 06:58:46.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:46.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:46.239" endtime="20230616 06:58:46.239"/>
</kw>
<status status="PASS" starttime="20230616 06:58:45.597" endtime="20230616 06:58:46.240"/>
</kw>
<msg timestamp="20230616 06:58:46.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:45.596" endtime="20230616 06:58:46.240"/>
</kw>
<msg timestamp="20230616 06:58:46.240" level="INFO">${output} = /etc/hadoop:/opt/hadoop/share/ozone/lib/ozone-interface-client-1.4.0-SNAPSHOT.jar:/opt/hadoop/share/ozone/lib/protobuf-java-2.5.0.jar:/opt/hadoop/share/ozone/lib/jaxb-core-2.3.0.1.jar:/opt/hadoop/shar...</msg>
<status status="PASS" starttime="20230616 06:58:45.596" endtime="20230616 06:58:46.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>%{HDDS_LIB_JARS_DIR}/ozone-insight/optional.jar</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.240" endtime="20230616 06:58:46.241"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>%{HDDS_LIB_JARS_DIR}/ozone-insight/optional.jar</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230616 06:58:46.241" level="INFO" html="true">Removed file '&lt;a href="file:///opt/hadoop/share/ozone/lib/ozone-insight/optional.jar"&gt;/opt/hadoop/share/ozone/lib/ozone-insight/optional.jar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230616 06:58:46.241" endtime="20230616 06:58:46.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:45.593" endtime="20230616 06:58:46.242"/>
</test>
<doc>Test ozone classpath command</doc>
<status status="PASS" starttime="20230616 06:58:44.152" endtime="20230616 06:58:46.243"/>
</suite>
<suite id="s1-s16-s2" name="Envvars" source="/opt/hadoop/smoketest/cli/envvars.robot">
<test id="s1-s16-s2-t1" name="Ignores deprecated vars if new ones are set" line="26">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/usr/local/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.255" level="INFO">Environment variable 'HADOOP_HOME' set to value '/usr/local/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.254" endtime="20230616 06:58:46.255"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<arg>${OZONE_HOME}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.255" level="INFO">Environment variable 'OZONE_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.255" endtime="20230616 06:58:46.255"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<arg>/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.256" level="INFO">Environment variable 'HADOOP_CONF_DIR' set to value '/etc/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.255" endtime="20230616 06:58:46.256"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<arg>${OZONE_HOME}/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.256" level="INFO">Environment variable 'OZONE_CONF_DIR' set to value '/opt/hadoop/etc/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.256" endtime="20230616 06:58:46.256"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:46.260" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:46.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:46.353" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.257" endtime="20230616 06:58:46.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:46.355" level="INFO">JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.354" endtime="20230616 06:58:46.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:46.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:46.355" endtime="20230616 06:58:46.355"/>
</kw>
<status status="PASS" starttime="20230616 06:58:46.257" endtime="20230616 06:58:46.356"/>
</kw>
<msg timestamp="20230616 06:58:46.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:46.257" endtime="20230616 06:58:46.356"/>
</kw>
<msg timestamp="20230616 06:58:46.356" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.256" endtime="20230616 06:58:46.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='${OZONE_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.356" endtime="20230616 06:58:46.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='${OZONE_HOME}/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.357" endtime="20230616 06:58:46.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='${OZONE_HOME}/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.358" endtime="20230616 06:58:46.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='${OZONE_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.359" endtime="20230616 06:58:46.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.359" endtime="20230616 06:58:46.360"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.360" endtime="20230616 06:58:46.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:46.254" endtime="20230616 06:58:46.360"/>
</test>
<test id="s1-s16-s2-t2" name="Find valid dirs" line="39">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/usr/local/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.362" level="INFO">Environment variable 'HADOOP_HOME' set to value '/usr/local/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.362" endtime="20230616 06:58:46.363"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.363" level="INFO">Environment variable 'HADOOP_CONF_DIR' deleted.</msg>
<status status="PASS" starttime="20230616 06:58:46.363" endtime="20230616 06:58:46.363"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_LIBEXEC_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.363" level="INFO">Environment variable 'HADOOP_LIBEXEC_DIR' does not exist.</msg>
<status status="PASS" starttime="20230616 06:58:46.363" endtime="20230616 06:58:46.363"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.364" level="INFO">Environment variable 'OZONE_HOME' deleted.</msg>
<status status="PASS" starttime="20230616 06:58:46.363" endtime="20230616 06:58:46.364"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.364" level="INFO">Environment variable 'OZONE_CONF_DIR' deleted.</msg>
<status status="PASS" starttime="20230616 06:58:46.364" endtime="20230616 06:58:46.364"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_LIBEXEC_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.364" level="INFO">Environment variable 'OZONE_LIBEXEC_DIR' does not exist.</msg>
<status status="PASS" starttime="20230616 06:58:46.364" endtime="20230616 06:58:46.364"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:46.368" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:46.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:46.463" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_...</msg>
<status status="PASS" starttime="20230616 06:58:46.366" endtime="20230616 06:58:46.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:46.464" level="INFO">WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.464" endtime="20230616 06:58:46.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:46.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:46.465" endtime="20230616 06:58:46.465"/>
</kw>
<status status="PASS" starttime="20230616 06:58:46.365" endtime="20230616 06:58:46.466"/>
</kw>
<msg timestamp="20230616 06:58:46.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:46.365" endtime="20230616 06:58:46.466"/>
</kw>
<msg timestamp="20230616 06:58:46.466" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_...</msg>
<status status="PASS" starttime="20230616 06:58:46.365" endtime="20230616 06:58:46.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='/opt/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.466" endtime="20230616 06:58:46.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='${OZONE_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.467" endtime="20230616 06:58:46.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.467" endtime="20230616 06:58:46.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.468" endtime="20230616 06:58:46.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.468" endtime="20230616 06:58:46.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: OZONE_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.469" endtime="20230616 06:58:46.469"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.469" endtime="20230616 06:58:46.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:46.361" endtime="20230616 06:58:46.470"/>
</test>
<test id="s1-s16-s2-t3" name="Picks up deprecated vars if valid" line="55">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/opt/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.472" level="INFO">Environment variable 'HADOOP_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.472" endtime="20230616 06:58:46.472"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_LIBEXEC_DIR</arg>
<arg>%{HADOOP_HOME}/libexec</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.473" level="INFO">Environment variable 'HADOOP_LIBEXEC_DIR' set to value '/opt/hadoop/libexec'.</msg>
<status status="PASS" starttime="20230616 06:58:46.472" endtime="20230616 06:58:46.473"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<arg>/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.473" level="INFO">Environment variable 'HADOOP_CONF_DIR' set to value '/etc/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.473" endtime="20230616 06:58:46.473"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.474" level="INFO">Environment variable 'OZONE_HOME' does not exist.</msg>
<status status="PASS" starttime="20230616 06:58:46.474" endtime="20230616 06:58:46.474"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.474" level="INFO">Environment variable 'OZONE_CONF_DIR' does not exist.</msg>
<status status="PASS" starttime="20230616 06:58:46.474" endtime="20230616 06:58:46.474"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:46.478" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:46.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:46.573" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
WARNING: HADOOP_LIBEXEC_DIR has been deprecated by OZONE_LIBEXEC_DIR.
WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
JAVA_HOME=...</msg>
<status status="PASS" starttime="20230616 06:58:46.476" endtime="20230616 06:58:46.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:46.575" level="INFO">WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
WARNING: HADOOP_LIBEXEC_DIR has been deprecated by OZONE_LIBEXEC_DIR.
WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.574" endtime="20230616 06:58:46.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:46.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:46.575" endtime="20230616 06:58:46.575"/>
</kw>
<status status="PASS" starttime="20230616 06:58:46.475" endtime="20230616 06:58:46.576"/>
</kw>
<msg timestamp="20230616 06:58:46.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:46.475" endtime="20230616 06:58:46.576"/>
</kw>
<msg timestamp="20230616 06:58:46.576" level="INFO">${output} = WARNING: HADOOP_HOME has been deprecated by OZONE_HOME.
WARNING: HADOOP_LIBEXEC_DIR has been deprecated by OZONE_LIBEXEC_DIR.
WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
JAVA_HOME=...</msg>
<status status="PASS" starttime="20230616 06:58:46.474" endtime="20230616 06:58:46.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='%{HADOOP_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.576" endtime="20230616 06:58:46.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='%{HADOOP_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.577" endtime="20230616 06:58:46.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.578" endtime="20230616 06:58:46.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='%{HADOOP_HOME}/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.578" endtime="20230616 06:58:46.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.579" endtime="20230616 06:58:46.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.579" endtime="20230616 06:58:46.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:46.471" endtime="20230616 06:58:46.580"/>
</test>
<test id="s1-s16-s2-t4" name="Warning for deprecated vars can be suppressed" line="69">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_DEPRECATION_WARNING</arg>
<arg>false</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.582" level="INFO">Environment variable 'OZONE_DEPRECATION_WARNING' set to value 'false'.</msg>
<status status="PASS" starttime="20230616 06:58:46.582" endtime="20230616 06:58:46.582"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<arg>/opt/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.582" level="INFO">Environment variable 'HADOOP_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.582" endtime="20230616 06:58:46.582"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_LIBEXEC_DIR</arg>
<arg>%{HADOOP_HOME}/libexec</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.583" level="INFO">Environment variable 'HADOOP_LIBEXEC_DIR' set to value '/opt/hadoop/libexec'.</msg>
<status status="PASS" starttime="20230616 06:58:46.582" endtime="20230616 06:58:46.583"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<arg>/etc/hadoop</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.583" level="INFO">Environment variable 'HADOOP_CONF_DIR' set to value '/etc/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.583" endtime="20230616 06:58:46.583"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.583" level="INFO">Environment variable 'OZONE_HOME' does not exist.</msg>
<status status="PASS" starttime="20230616 06:58:46.583" endtime="20230616 06:58:46.584"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>OZONE_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.584" level="INFO">Environment variable 'OZONE_CONF_DIR' does not exist.</msg>
<status status="PASS" starttime="20230616 06:58:46.584" endtime="20230616 06:58:46.584"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:46.588" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:46.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:46.680" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.585" endtime="20230616 06:58:46.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:46.681" level="INFO">JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.681" endtime="20230616 06:58:46.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:46.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:46.682" endtime="20230616 06:58:46.682"/>
</kw>
<status status="PASS" starttime="20230616 06:58:46.585" endtime="20230616 06:58:46.683"/>
</kw>
<msg timestamp="20230616 06:58:46.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:46.584" endtime="20230616 06:58:46.683"/>
</kw>
<msg timestamp="20230616 06:58:46.683" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.584" endtime="20230616 06:58:46.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='%{HADOOP_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.683" endtime="20230616 06:58:46.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='%{HADOOP_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.684" endtime="20230616 06:58:46.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.684" endtime="20230616 06:58:46.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_LIBEXEC_DIR='%{HADOOP_HOME}/libexec'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.685" endtime="20230616 06:58:46.685"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.685" endtime="20230616 06:58:46.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.686" endtime="20230616 06:58:46.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:46.581" endtime="20230616 06:58:46.686"/>
</test>
<test id="s1-s16-s2-t5" name="Works with only OZONE_HOME defined" line="84">
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_HOME</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.689" level="INFO">Environment variable 'HADOOP_HOME' deleted.</msg>
<status status="PASS" starttime="20230616 06:58:46.688" endtime="20230616 06:58:46.689"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_CONF_DIR</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20230616 06:58:46.689" level="INFO">Environment variable 'HADOOP_CONF_DIR' deleted.</msg>
<status status="PASS" starttime="20230616 06:58:46.689" endtime="20230616 06:58:46.689"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>OZONE_HOME</arg>
<arg>${OZONE_HOME}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230616 06:58:46.690" level="INFO">Environment variable 'OZONE_HOME' set to value '/opt/hadoop'.</msg>
<status status="PASS" starttime="20230616 06:58:46.689" endtime="20230616 06:58:46.690"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone envvars</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:58:46.694" level="INFO">Running command 'ozone envvars 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:58:46.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:58:46.790" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.691" endtime="20230616 06:58:46.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:58:46.791" level="INFO">JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.790" endtime="20230616 06:58:46.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:58:46.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:58:46.791" endtime="20230616 06:58:46.792"/>
</kw>
<status status="PASS" starttime="20230616 06:58:46.691" endtime="20230616 06:58:46.792"/>
</kw>
<msg timestamp="20230616 06:58:46.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:58:46.691" endtime="20230616 06:58:46.792"/>
</kw>
<msg timestamp="20230616 06:58:46.793" level="INFO">${output} = JAVA_HOME='/usr/lib/jvm/jre/'
OZONE_HOME='/opt/hadoop'
OZONE_CONF_DIR='/opt/hadoop/etc/hadoop'
OZONE_LIBEXEC_DIR='/opt/hadoop/libexec'
HDDS_LIB_JARS_DIR='/opt/hadoop/share/ozone/lib'</msg>
<status status="PASS" starttime="20230616 06:58:46.690" endtime="20230616 06:58:46.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_HOME='${OZONE_HOME}'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.793" endtime="20230616 06:58:46.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>HDDS_LIB_JARS_DIR='${OZONE_HOME}/share/ozone/lib'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.793" endtime="20230616 06:58:46.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OZONE_CONF_DIR='${OZONE_HOME}/etc/hadoop'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.794" endtime="20230616 06:58:46.795"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_HOME</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.795" endtime="20230616 06:58:46.795"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>WARNING: HADOOP_CONF_DIR</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:58:46.795" endtime="20230616 06:58:46.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230616 06:58:46.688" endtime="20230616 06:58:46.796"/>
</test>
<doc>Test ozone envvars command</doc>
<status status="PASS" starttime="20230616 06:58:46.245" endtime="20230616 06:58:46.797"/>
</suite>
<status status="PASS" starttime="20230616 06:58:44.129" endtime="20230616 06:58:46.799"/>
</suite>
<suite id="s1-s17" name="Lib" source="/opt/hadoop/smoketest/lib">
<suite id="s1-s17-s1" name="Fs Tests" source="/opt/hadoop/smoketest/lib/fs_tests.robot">
<test id="s1-s17-s1-t1" name="Format o3fs URL without path" line="22">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.361" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 06:32:45.360" endtime="20230616 06:32:45.361"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.361" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.361" endtime="20230616 06:32:45.361"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.360" endtime="20230616 06:32:45.361"/>
</kw>
<msg timestamp="20230616 06:32:45.362" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.358" endtime="20230616 06:32:45.362"/>
</kw>
<msg timestamp="20230616 06:32:45.362" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230616 06:32:45.357" endtime="20230616 06:32:45.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.362" endtime="20230616 06:32:45.362"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.356" endtime="20230616 06:32:45.363"/>
</test>
<test id="s1-s17-s1-t2" name="Format o3fs URL with path" line="26">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.367" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 06:32:45.367" endtime="20230616 06:32:45.367"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.368" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.367" endtime="20230616 06:32:45.368"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.366" endtime="20230616 06:32:45.368"/>
</kw>
<msg timestamp="20230616 06:32:45.368" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.365" endtime="20230616 06:32:45.368"/>
</kw>
<msg timestamp="20230616 06:32:45.369" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.365" endtime="20230616 06:32:45.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.369" endtime="20230616 06:32:45.369"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.364" endtime="20230616 06:32:45.369"/>
</test>
<test id="s1-s17-s1-t3" name="Format o3fs URL with OM" line="30">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.374" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 06:32:45.373" endtime="20230616 06:32:45.374"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.374" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230616 06:32:45.374" endtime="20230616 06:32:45.374"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.373" endtime="20230616 06:32:45.375"/>
</kw>
<msg timestamp="20230616 06:32:45.375" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230616 06:32:45.372" endtime="20230616 06:32:45.375"/>
</kw>
<msg timestamp="20230616 06:32:45.375" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.371" endtime="20230616 06:32:45.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.375" endtime="20230616 06:32:45.376"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.371" endtime="20230616 06:32:45.376"/>
</test>
<test id="s1-s17-s1-t4" name="Format ofs URL without path" line="35">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.381" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230616 06:32:45.380" endtime="20230616 06:32:45.381"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.382" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.381" endtime="20230616 06:32:45.382"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.380" endtime="20230616 06:32:45.382"/>
</kw>
<msg timestamp="20230616 06:32:45.382" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.379" endtime="20230616 06:32:45.382"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230616 06:32:45.383" endtime="20230616 06:32:45.384"/>
</kw>
<msg timestamp="20230616 06:32:45.384" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230616 06:32:45.382" endtime="20230616 06:32:45.384"/>
</kw>
<msg timestamp="20230616 06:32:45.384" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230616 06:32:45.378" endtime="20230616 06:32:45.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.385" endtime="20230616 06:32:45.385"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.377" endtime="20230616 06:32:45.385"/>
</test>
<test id="s1-s17-s1-t5" name="Format ofs URL with path" line="39">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.390" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230616 06:32:45.389" endtime="20230616 06:32:45.390"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.390" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.390" endtime="20230616 06:32:45.390"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.389" endtime="20230616 06:32:45.391"/>
</kw>
<msg timestamp="20230616 06:32:45.391" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.388" endtime="20230616 06:32:45.391"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.397" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20230616 06:32:45.392" endtime="20230616 06:32:45.397"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.397" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.397" endtime="20230616 06:32:45.397"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.392" endtime="20230616 06:32:45.398"/>
</kw>
<msg timestamp="20230616 06:32:45.398" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.391" endtime="20230616 06:32:45.398"/>
</kw>
<msg timestamp="20230616 06:32:45.398" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.387" endtime="20230616 06:32:45.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.398" endtime="20230616 06:32:45.399"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.387" endtime="20230616 06:32:45.400"/>
</test>
<test id="s1-s17-s1-t6" name="Format ofs URL with OM" line="43">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.413" level="INFO">${last} = 4</msg>
<status status="PASS" starttime="20230616 06:32:45.412" endtime="20230616 06:32:45.413"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.413" level="INFO">${result} = om:1234/</msg>
<status status="PASS" starttime="20230616 06:32:45.413" endtime="20230616 06:32:45.413"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.405" endtime="20230616 06:32:45.415"/>
</kw>
<msg timestamp="20230616 06:32:45.415" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" starttime="20230616 06:32:45.403" endtime="20230616 06:32:45.415"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.418" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20230616 06:32:45.417" endtime="20230616 06:32:45.418"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.418" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.418" endtime="20230616 06:32:45.418"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.417" endtime="20230616 06:32:45.419"/>
</kw>
<msg timestamp="20230616 06:32:45.419" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.415" endtime="20230616 06:32:45.419"/>
</kw>
<msg timestamp="20230616 06:32:45.419" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20230616 06:32:45.402" endtime="20230616 06:32:45.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.419" endtime="20230616 06:32:45.420"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.401" endtime="20230616 06:32:45.421"/>
</test>
<test id="s1-s17-s1-t7" name="Format FS URL with ofs scheme" line="48">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.428" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230616 06:32:45.428" endtime="20230616 06:32:45.428"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.429" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.428" endtime="20230616 06:32:45.429"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.427" endtime="20230616 06:32:45.429"/>
</kw>
<msg timestamp="20230616 06:32:45.429" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.426" endtime="20230616 06:32:45.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230616 06:32:45.430" endtime="20230616 06:32:45.431"/>
</kw>
<msg timestamp="20230616 06:32:45.431" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230616 06:32:45.429" endtime="20230616 06:32:45.431"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.425" endtime="20230616 06:32:45.431"/>
</kw>
<msg timestamp="20230616 06:32:45.432" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230616 06:32:45.425" endtime="20230616 06:32:45.432"/>
</kw>
<msg timestamp="20230616 06:32:45.432" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230616 06:32:45.423" endtime="20230616 06:32:45.432"/>
</kw>
<kw name="Format ofs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.435" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20230616 06:32:45.435" endtime="20230616 06:32:45.435"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.436" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.435" endtime="20230616 06:32:45.436"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.434" endtime="20230616 06:32:45.436"/>
</kw>
<msg timestamp="20230616 06:32:45.436" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20230616 06:32:45.433" endtime="20230616 06:32:45.436"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230616 06:32:45.437" endtime="20230616 06:32:45.438"/>
</kw>
<msg timestamp="20230616 06:32:45.438" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20230616 06:32:45.436" endtime="20230616 06:32:45.438"/>
</kw>
<msg timestamp="20230616 06:32:45.439" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20230616 06:32:45.432" endtime="20230616 06:32:45.439"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.439" endtime="20230616 06:32:45.439"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.422" endtime="20230616 06:32:45.439"/>
</test>
<test id="s1-s17-s1-t8" name="Format FS URL with o3fs scheme" line="53">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.446" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 06:32:45.445" endtime="20230616 06:32:45.446"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.446" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.446" endtime="20230616 06:32:45.446"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.445" endtime="20230616 06:32:45.446"/>
</kw>
<msg timestamp="20230616 06:32:45.447" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.444" endtime="20230616 06:32:45.447"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.443" endtime="20230616 06:32:45.447"/>
</kw>
<msg timestamp="20230616 06:32:45.447" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230616 06:32:45.442" endtime="20230616 06:32:45.447"/>
</kw>
<msg timestamp="20230616 06:32:45.447" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230616 06:32:45.441" endtime="20230616 06:32:45.447"/>
</kw>
<kw name="Format o3fs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.450" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230616 06:32:45.450" endtime="20230616 06:32:45.450"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.451" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.450" endtime="20230616 06:32:45.451"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.449" endtime="20230616 06:32:45.451"/>
</kw>
<msg timestamp="20230616 06:32:45.451" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20230616 06:32:45.449" endtime="20230616 06:32:45.451"/>
</kw>
<msg timestamp="20230616 06:32:45.452" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20230616 06:32:45.447" endtime="20230616 06:32:45.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.452" endtime="20230616 06:32:45.452"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.441" endtime="20230616 06:32:45.452"/>
</test>
<test id="s1-s17-s1-t9" name="Format FS URL with unsupported scheme" line="58">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<var>${result}</var>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Format FS URL" library="fs">
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230616 06:32:45.457" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" starttime="20230616 06:32:45.456" endtime="20230616 06:32:45.457"/>
</kw>
<status status="FAIL" starttime="20230616 06:32:45.456" endtime="20230616 06:32:45.457"/>
</kw>
<status status="FAIL" starttime="20230616 06:32:45.455" endtime="20230616 06:32:45.457"/>
</kw>
<msg timestamp="20230616 06:32:45.458" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" starttime="20230616 06:32:45.454" endtime="20230616 06:32:45.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>http</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:32:45.458" endtime="20230616 06:32:45.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>nsupported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230616 06:32:45.458" endtime="20230616 06:32:45.459"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.454" endtime="20230616 06:32:45.459"/>
</test>
<status status="PASS" starttime="20230616 06:32:45.340" endtime="20230616 06:32:45.460"/>
</suite>
<suite id="s1-s17-s2" name="Os Tests" source="/opt/hadoop/smoketest/lib/os_tests.robot">
<test id="s1-s17-s2-t1" name="Execute" line="22">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>echo 42</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:45.493" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:32:45.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230616 06:32:45.495" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20230616 06:32:45.489" endtime="20230616 06:32:45.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:32:45.496" level="INFO">42</msg>
<status status="PASS" starttime="20230616 06:32:45.495" endtime="20230616 06:32:45.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:32:45.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:32:45.496" endtime="20230616 06:32:45.497"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.488" endtime="20230616 06:32:45.497"/>
</kw>
<msg timestamp="20230616 06:32:45.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230616 06:32:45.488" endtime="20230616 06:32:45.497"/>
</kw>
<msg timestamp="20230616 06:32:45.497" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20230616 06:32:45.487" endtime="20230616 06:32:45.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>42</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.498" endtime="20230616 06:32:45.498"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.487" endtime="20230616 06:32:45.498"/>
</test>
<test id="s1-s17-s2-t2" name="Execute failing command" line="26">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute" library="os">
<arg>false</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:45.503" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:32:45.505" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 06:32:45.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230616 06:32:45.502" endtime="20230616 06:32:45.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:32:45.506" level="INFO"/>
<status status="PASS" starttime="20230616 06:32:45.506" endtime="20230616 06:32:45.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:32:45.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230616 06:32:45.507" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230616 06:32:45.507" endtime="20230616 06:32:45.507"/>
</kw>
<status status="FAIL" starttime="20230616 06:32:45.501" endtime="20230616 06:32:45.508"/>
</kw>
<msg timestamp="20230616 06:32:45.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230616 06:32:45.501" endtime="20230616 06:32:45.508"/>
</kw>
<status status="FAIL" starttime="20230616 06:32:45.500" endtime="20230616 06:32:45.508"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.500" endtime="20230616 06:32:45.508"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.499" endtime="20230616 06:32:45.508"/>
</test>
<test id="s1-s17-s2-t3" name="Execute And Ignore Error" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>echo 123 &amp;&amp; false</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:45.513" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:32:45.515" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 06:32:45.515" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20230616 06:32:45.511" endtime="20230616 06:32:45.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:32:45.516" level="INFO">123</msg>
<status status="PASS" starttime="20230616 06:32:45.515" endtime="20230616 06:32:45.516"/>
</kw>
<msg timestamp="20230616 06:32:45.516" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20230616 06:32:45.511" endtime="20230616 06:32:45.516"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>123</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.516" endtime="20230616 06:32:45.516"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.510" endtime="20230616 06:32:45.517"/>
</test>
<test id="s1-s17-s2-t4" name="Execute and checkrc" line="33">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:45.521" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:32:45.523" level="INFO">${rc} = 1</msg>
<msg timestamp="20230616 06:32:45.523" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20230616 06:32:45.519" endtime="20230616 06:32:45.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:32:45.524" level="INFO">failure</msg>
<status status="PASS" starttime="20230616 06:32:45.523" endtime="20230616 06:32:45.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:32:45.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230616 06:32:45.524" endtime="20230616 06:32:45.525"/>
</kw>
<msg timestamp="20230616 06:32:45.525" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20230616 06:32:45.519" endtime="20230616 06:32:45.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>failure</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.525" endtime="20230616 06:32:45.525"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.518" endtime="20230616 06:32:45.526"/>
</test>
<test id="s1-s17-s2-t5" name="Execute and checkrc RC mismatch" line="37">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute and checkrc" library="os">
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230616 06:32:45.530" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230616 06:32:45.532" level="INFO">${rc} = 3</msg>
<msg timestamp="20230616 06:32:45.533" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20230616 06:32:45.529" endtime="20230616 06:32:45.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230616 06:32:45.533" level="INFO">failure</msg>
<status status="PASS" starttime="20230616 06:32:45.533" endtime="20230616 06:32:45.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230616 06:32:45.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230616 06:32:45.534" level="FAIL">3 != 1</msg>
<status status="FAIL" starttime="20230616 06:32:45.534" endtime="20230616 06:32:45.534"/>
</kw>
<status status="FAIL" starttime="20230616 06:32:45.528" endtime="20230616 06:32:45.535"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.528" endtime="20230616 06:32:45.535"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.527" endtime="20230616 06:32:45.535"/>
</test>
<status status="PASS" starttime="20230616 06:32:45.463" endtime="20230616 06:32:45.537"/>
</suite>
<suite id="s1-s17-s3" name="String Tests" source="/opt/hadoop/smoketest/lib/string_tests.robot">
<test id="s1-s17-s3-t1" name="Ensure Leading without Leading" line="22">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>/</arg>
<arg>a/b</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.549" level="INFO">${first} = a</msg>
<status status="PASS" starttime="20230616 06:32:45.549" endtime="20230616 06:32:45.549"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.551" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20230616 06:32:45.551" endtime="20230616 06:32:45.551"/>
</kw>
<msg timestamp="20230616 06:32:45.553" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20230616 06:32:45.549" endtime="20230616 06:32:45.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>/a/b</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.553" endtime="20230616 06:32:45.553"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.548" endtime="20230616 06:32:45.553"/>
</test>
<test id="s1-s17-s3-t2" name="Ensure Leading with Leading" line="26">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>_</arg>
<arg>_a_b_c</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.557" level="INFO">${first} = _</msg>
<status status="PASS" starttime="20230616 06:32:45.557" endtime="20230616 06:32:45.558"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.559" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20230616 06:32:45.559" endtime="20230616 06:32:45.559"/>
</kw>
<msg timestamp="20230616 06:32:45.559" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20230616 06:32:45.556" endtime="20230616 06:32:45.559"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>_a_b_c</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.559" endtime="20230616 06:32:45.560"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.556" endtime="20230616 06:32:45.560"/>
</test>
<test id="s1-s17-s3-t3" name="Ensure Leading for empty" line="30">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>|</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.565" level="INFO">${first} = </msg>
<status status="PASS" starttime="20230616 06:32:45.564" endtime="20230616 06:32:45.565"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.566" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20230616 06:32:45.566" endtime="20230616 06:32:45.566"/>
</kw>
<msg timestamp="20230616 06:32:45.567" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20230616 06:32:45.563" endtime="20230616 06:32:45.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>|</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.567" endtime="20230616 06:32:45.568"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.563" endtime="20230616 06:32:45.569"/>
</test>
<test id="s1-s17-s3-t4" name="Ensure Trailing without Trailing" line="35">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>.</arg>
<arg>x.y.z</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.572" level="INFO">${last} = z</msg>
<status status="PASS" starttime="20230616 06:32:45.572" endtime="20230616 06:32:45.572"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.573" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20230616 06:32:45.572" endtime="20230616 06:32:45.573"/>
</kw>
<msg timestamp="20230616 06:32:45.573" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20230616 06:32:45.570" endtime="20230616 06:32:45.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>x.y.z.</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.573" endtime="20230616 06:32:45.575"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.570" endtime="20230616 06:32:45.575"/>
</test>
<test id="s1-s17-s3-t5" name="Ensure Trailing with Trailing" line="39">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>x</arg>
<arg>axbxcx</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.578" level="INFO">${last} = x</msg>
<status status="PASS" starttime="20230616 06:32:45.578" endtime="20230616 06:32:45.578"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.580" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20230616 06:32:45.578" endtime="20230616 06:32:45.580"/>
</kw>
<msg timestamp="20230616 06:32:45.580" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20230616 06:32:45.577" endtime="20230616 06:32:45.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>axbxcx</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.580" endtime="20230616 06:32:45.580"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.576" endtime="20230616 06:32:45.587"/>
</test>
<test id="s1-s17-s3-t6" name="Ensure Trailing for empty" line="43">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>=</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230616 06:32:45.591" level="INFO">${last} = </msg>
<status status="PASS" starttime="20230616 06:32:45.591" endtime="20230616 06:32:45.591"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230616 06:32:45.592" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20230616 06:32:45.592" endtime="20230616 06:32:45.592"/>
</kw>
<msg timestamp="20230616 06:32:45.592" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20230616 06:32:45.589" endtime="20230616 06:32:45.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>=</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230616 06:32:45.593" endtime="20230616 06:32:45.593"/>
</kw>
<status status="PASS" starttime="20230616 06:32:45.588" endtime="20230616 06:32:45.593"/>
</test>
<status status="PASS" starttime="20230616 06:32:45.539" endtime="20230616 06:32:45.594"/>
</suite>
<status status="PASS" starttime="20230616 06:32:45.312" endtime="20230616 06:32:45.597"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1994485"/>
</suite>
<statistics>
<total>
<stat pass="195" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="195" fail="1" skip="0" id="s1" name="ozone">ozone</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Ozone-Lib">ozone.Ozone-Lib</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1" name="Shell Tests">ozone.Ozone-Lib.Shell Tests</stat>
<stat pass="36" fail="0" skip="0" id="s1-s2" name="Admincli">ozone.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Admin">ozone.Admincli.Admin</stat>
<stat pass="12" fail="0" skip="0" id="s1-s2-s2" name="Container">ozone.Admincli.Container</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2-s3" name="Datanode">ozone.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s4" name="Pipeline">ozone.Admincli.Pipeline</stat>
<stat pass="5" fail="0" skip="0" id="s1-s2-s5" name="Replicationmanager">ozone.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s6" name="Safemode">ozone.Admincli.Safemode</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Scmrole">ozone.Admincli.Scmrole</stat>
<stat pass="18" fail="0" skip="0" id="s1-s3" name="Httpfs">ozone.Httpfs</stat>
<stat pass="18" fail="0" skip="0" id="s1-s3-s1" name="Operations Tests">ozone.Httpfs.Operations Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Ozone-Debug-Tests">ozone.Ozone-Debug-Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Ozone-Debug-Corrupt-Block">ozone.Ozone-Debug-Corrupt-Block</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Ozone-Debug-Stale-Datanode">ozone.Ozone-Debug-Stale-Datanode</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Ozone-Debug-Dead-Datanode">ozone.Ozone-Debug-Dead-Datanode</stat>
<stat pass="22" fail="1" skip="0" id="s1-s8" name="ozonefs-o3fs-bucket">ozone.ozonefs-o3fs-bucket</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Auditparser">ozone.Auditparser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9-s1" name="Auditparser">ozone.Auditparser.Auditparser</stat>
<stat pass="33" fail="0" skip="0" id="s1-s10" name="Basic">ozone.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s10-s1" name="Basic">ozone.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10-s2" name="Getconf">ozone.Basic.Getconf</stat>
<stat pass="17" fail="0" skip="0" id="s1-s10-s3" name="Links">ozone.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10-s4" name="Ozone-Shell-Single">ozone.Basic.Ozone-Shell-Single</stat>
<stat pass="8" fail="0" skip="0" id="s1-s10-s5" name="Ozone-Shell">ozone.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10-s6" name="Single Node">ozone.Basic.Single Node</stat>
<stat pass="4" fail="0" skip="0" id="s1-s11" name="Gdpr">ozone.Gdpr</stat>
<stat pass="4" fail="0" skip="0" id="s1-s11-s1" name="Gdpr">ozone.Gdpr.Gdpr</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Ozone-Secure-Token">ozone.Ozone-Secure-Token</stat>
<stat pass="23" fail="0" skip="0" id="s1-s13" name="Recon">ozone.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s13-s1" name="Recon-Api">ozone.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s13-s2" name="Recon-Nssummary">ozone.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Om-Ratis">ozone.Om-Ratis</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14-s1" name="testOMAdminCmd">ozone.Om-Ratis.testOMAdminCmd</stat>
<stat pass="17" fail="0" skip="0" id="s1-s15" name="Freon">ozone.Freon</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15-s1" name="echoRPCLoad">ozone.Freon.echoRPCLoad</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15-s2" name="Generate-Chunk">ozone.Freon.Generate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s15-s3" name="Generate">ozone.Freon.Generate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s15-s4" name="Read-Write-Key">ozone.Freon.Read-Write-Key</stat>
<stat pass="2" fail="0" skip="0" id="s1-s15-s5" name="Remove">ozone.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15-s6" name="Validate-Chunk">ozone.Freon.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15-s7" name="Validate">ozone.Freon.Validate</stat>
<stat pass="8" fail="0" skip="0" id="s1-s16" name="Cli">ozone.Cli</stat>
<stat pass="3" fail="0" skip="0" id="s1-s16-s1" name="Classpath">ozone.Cli.Classpath</stat>
<stat pass="5" fail="0" skip="0" id="s1-s16-s2" name="Envvars">ozone.Cli.Envvars</stat>
<stat pass="20" fail="0" skip="0" id="s1-s17" name="Lib">ozone.Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s17-s1" name="Fs Tests">ozone.Lib.Fs Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s17-s2" name="Os Tests">ozone.Lib.Os Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s17-s3" name="String Tests">ozone.Lib.String Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
