<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230614 14:27:54.106" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230614 14:19:02.136" level="INFO">${random} = 02496</msg>
<status status="PASS" starttime="20230614 14:19:02.135" endtime="20230614 14:19:02.136"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:02.144" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-02496 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:08.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:08.747" level="INFO">${output} = 2023-06-14 14:19:07,092 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:07,290 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:02.139" endtime="20230614 14:19:08.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:08.749" level="INFO">2023-06-14 14:19:07,092 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:07,290 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:19:07,290 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230614 14:19:08.748" endtime="20230614 14:19:08.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:08.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:08.749" endtime="20230614 14:19:08.750"/>
</kw>
<status status="PASS" starttime="20230614 14:19:02.138" endtime="20230614 14:19:08.750"/>
</kw>
<msg timestamp="20230614 14:19:08.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:02.137" endtime="20230614 14:19:08.751"/>
</kw>
<msg timestamp="20230614 14:19:08.752" level="INFO">${output} = 2023-06-14 14:19:07,092 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:07,290 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:02.136" endtime="20230614 14:19:08.752"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:08.752" endtime="20230614 14:19:08.752"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:08.756" level="INFO">Running command 'cat /tmp/key-02496 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:08.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:08.759" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:08.753" endtime="20230614 14:19:08.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:08.760" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:08.760" endtime="20230614 14:19:08.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:08.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:08.761" endtime="20230614 14:19:08.761"/>
</kw>
<msg timestamp="20230614 14:19:08.762" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:08.752" endtime="20230614 14:19:08.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:08.762" endtime="20230614 14:19:08.763"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:08.766" level="INFO">Running command 'rm /tmp/key-02496 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:08.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:08.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:08.764" endtime="20230614 14:19:08.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:08.770" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:08.769" endtime="20230614 14:19:08.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:08.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:08.770" endtime="20230614 14:19:08.771"/>
</kw>
<status status="PASS" starttime="20230614 14:19:08.763" endtime="20230614 14:19:08.771"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:02.134" endtime="20230614 14:19:08.772"/>
</test>
<test id="s1-s1-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:08.780" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:09.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:09.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:08.777" endtime="20230614 14:19:09.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:09.862" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:09.861" endtime="20230614 14:19:09.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:09.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:09.862" endtime="20230614 14:19:09.863"/>
</kw>
<status status="PASS" starttime="20230614 14:19:08.777" endtime="20230614 14:19:09.863"/>
</kw>
<msg timestamp="20230614 14:19:09.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:08.776" endtime="20230614 14:19:09.864"/>
</kw>
<status status="PASS" starttime="20230614 14:19:08.775" endtime="20230614 14:19:09.864"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:09.869" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:10.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:10.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:09.866" endtime="20230614 14:19:10.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:10.514" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:10.513" endtime="20230614 14:19:10.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:10.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:10.514" endtime="20230614 14:19:10.515"/>
</kw>
<status status="PASS" starttime="20230614 14:19:09.865" endtime="20230614 14:19:10.515"/>
</kw>
<msg timestamp="20230614 14:19:10.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:09.865" endtime="20230614 14:19:10.516"/>
</kw>
<status status="PASS" starttime="20230614 14:19:09.864" endtime="20230614 14:19:10.516"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:10.521" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:11.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:11.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:10.518" endtime="20230614 14:19:11.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:11.123" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:11.122" endtime="20230614 14:19:11.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:11.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:11.123" endtime="20230614 14:19:11.124"/>
</kw>
<status status="PASS" starttime="20230614 14:19:10.517" endtime="20230614 14:19:11.124"/>
</kw>
<msg timestamp="20230614 14:19:11.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:10.517" endtime="20230614 14:19:11.125"/>
</kw>
<status status="PASS" starttime="20230614 14:19:10.516" endtime="20230614 14:19:11.125"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:11.132" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:11.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:11.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:11.127" endtime="20230614 14:19:11.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:11.711" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:11.710" endtime="20230614 14:19:11.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:11.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:11.711" endtime="20230614 14:19:11.712"/>
</kw>
<status status="PASS" starttime="20230614 14:19:11.126" endtime="20230614 14:19:11.712"/>
</kw>
<msg timestamp="20230614 14:19:11.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:11.126" endtime="20230614 14:19:11.713"/>
</kw>
<status status="PASS" starttime="20230614 14:19:11.125" endtime="20230614 14:19:11.713"/>
</kw>
<status status="PASS" starttime="20230614 14:19:08.775" endtime="20230614 14:19:11.714"/>
</kw>
<status status="PASS" starttime="20230614 14:19:08.774" endtime="20230614 14:19:11.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:08.773" endtime="20230614 14:19:11.714"/>
</test>
<test id="s1-s1-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:11.719" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:15.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:15.697" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:41 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:11.717" endtime="20230614 14:19:15.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:15.700" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:41 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:19:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:19:15.699" endtime="20230614 14:19:15.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:15.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:15.707" endtime="20230614 14:19:15.707"/>
</kw>
<msg timestamp="20230614 14:19:15.708" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:41 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:11.716" endtime="20230614 14:19:15.708"/>
</kw>
<msg timestamp="20230614 14:19:15.708" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:41 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:11.716" endtime="20230614 14:19:15.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:15.709" endtime="20230614 14:19:15.709"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:15.717" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:15.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:15.728" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:15.710" endtime="20230614 14:19:15.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:15.736" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:15.728" endtime="20230614 14:19:15.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:15.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:15.736" endtime="20230614 14:19:15.737"/>
</kw>
<msg timestamp="20230614 14:19:15.739" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:15.710" endtime="20230614 14:19:15.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:15.739" endtime="20230614 14:19:15.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:15.755" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:15.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:15.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:15.747" endtime="20230614 14:19:15.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:15.778" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:15.762" endtime="20230614 14:19:15.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:15.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:15.778" endtime="20230614 14:19:15.780"/>
</kw>
<status status="PASS" starttime="20230614 14:19:15.740" endtime="20230614 14:19:15.781"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:11.715" endtime="20230614 14:19:15.781"/>
</test>
<test id="s1-s1-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:15.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:16.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:16.792" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:48 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:15.797" endtime="20230614 14:19:16.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:16.794" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:48 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:19:16 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:19:16.793" endtime="20230614 14:19:16.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:16.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:16.794" endtime="20230614 14:19:16.795"/>
</kw>
<msg timestamp="20230614 14:19:16.796" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:48 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:15.796" endtime="20230614 14:19:16.796"/>
</kw>
<msg timestamp="20230614 14:19:16.797" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:13:48 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:15.795" endtime="20230614 14:19:16.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:16.797" endtime="20230614 14:19:16.798"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:16.801" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:16.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:16.804" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:19:16.798" endtime="20230614 14:19:16.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:16.806" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:19:16.805" endtime="20230614 14:19:16.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:16.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:16.806" endtime="20230614 14:19:16.807"/>
</kw>
<msg timestamp="20230614 14:19:16.807" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:19:16.798" endtime="20230614 14:19:16.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:16.808" endtime="20230614 14:19:16.808"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:16.812" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:16.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:16.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:16.809" endtime="20230614 14:19:16.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:16.817" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:16.816" endtime="20230614 14:19:16.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:16.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:16.817" endtime="20230614 14:19:16.817"/>
</kw>
<status status="PASS" starttime="20230614 14:19:16.808" endtime="20230614 14:19:16.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:15.783" endtime="20230614 14:19:16.818"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230614 14:19:02.020" endtime="20230614 14:19:16.820"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230614 14:19:21.983" level="INFO">${random} = 15466</msg>
<status status="PASS" starttime="20230614 14:19:21.982" endtime="20230614 14:19:21.983"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:21.990" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-15466 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:28.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:28.096" level="INFO">${output} = 2023-06-14 14:19:26,486 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:26,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:21.986" endtime="20230614 14:19:28.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:28.098" level="INFO">2023-06-14 14:19:26,486 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:26,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:19:26,626 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230614 14:19:28.097" endtime="20230614 14:19:28.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:28.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:28.098" endtime="20230614 14:19:28.099"/>
</kw>
<status status="PASS" starttime="20230614 14:19:21.985" endtime="20230614 14:19:28.099"/>
</kw>
<msg timestamp="20230614 14:19:28.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:21.984" endtime="20230614 14:19:28.101"/>
</kw>
<msg timestamp="20230614 14:19:28.101" level="INFO">${output} = 2023-06-14 14:19:26,486 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:26,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:21.983" endtime="20230614 14:19:28.101"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:28.102" endtime="20230614 14:19:28.102"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:28.106" level="INFO">Running command 'cat /tmp/key-15466 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:28.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:28.109" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:28.104" endtime="20230614 14:19:28.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:28.111" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:28.110" endtime="20230614 14:19:28.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:28.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:28.111" endtime="20230614 14:19:28.112"/>
</kw>
<msg timestamp="20230614 14:19:28.112" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:28.103" endtime="20230614 14:19:28.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:28.113" endtime="20230614 14:19:28.113"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:28.116" level="INFO">Running command 'rm /tmp/key-15466 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:28.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:28.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:28.114" endtime="20230614 14:19:28.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:28.121" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:28.120" endtime="20230614 14:19:28.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:28.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:28.121" endtime="20230614 14:19:28.122"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.113" endtime="20230614 14:19:28.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:21.981" endtime="20230614 14:19:28.123"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:28.131" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:28.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:28.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:28.128" endtime="20230614 14:19:28.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:28.757" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:28.756" endtime="20230614 14:19:28.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:28.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:28.757" endtime="20230614 14:19:28.758"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.128" endtime="20230614 14:19:28.758"/>
</kw>
<msg timestamp="20230614 14:19:28.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:28.127" endtime="20230614 14:19:28.759"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.126" endtime="20230614 14:19:28.759"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:28.764" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:29.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:29.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:28.761" endtime="20230614 14:19:29.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:29.401" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:29.400" endtime="20230614 14:19:29.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:29.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:29.401" endtime="20230614 14:19:29.401"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.760" endtime="20230614 14:19:29.402"/>
</kw>
<msg timestamp="20230614 14:19:29.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:28.760" endtime="20230614 14:19:29.403"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.759" endtime="20230614 14:19:29.403"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:29.408" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:30.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:30.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:29.405" endtime="20230614 14:19:30.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:30.116" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:30.114" endtime="20230614 14:19:30.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:30.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:30.117" endtime="20230614 14:19:30.117"/>
</kw>
<status status="PASS" starttime="20230614 14:19:29.404" endtime="20230614 14:19:30.118"/>
</kw>
<msg timestamp="20230614 14:19:30.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:29.404" endtime="20230614 14:19:30.119"/>
</kw>
<status status="PASS" starttime="20230614 14:19:29.403" endtime="20230614 14:19:30.119"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:30.140" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:30.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:30.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:30.121" endtime="20230614 14:19:30.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:30.813" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:30.812" endtime="20230614 14:19:30.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:30.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:30.813" endtime="20230614 14:19:30.814"/>
</kw>
<status status="PASS" starttime="20230614 14:19:30.120" endtime="20230614 14:19:30.814"/>
</kw>
<msg timestamp="20230614 14:19:30.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:30.120" endtime="20230614 14:19:30.815"/>
</kw>
<status status="PASS" starttime="20230614 14:19:30.119" endtime="20230614 14:19:30.815"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.125" endtime="20230614 14:19:30.815"/>
</kw>
<status status="PASS" starttime="20230614 14:19:28.125" endtime="20230614 14:19:30.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:28.124" endtime="20230614 14:19:30.816"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:30.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:31.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:31.703" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:30.820" endtime="20230614 14:19:31.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:31.704" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:19:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:19:31.703" endtime="20230614 14:19:31.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:31.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:31.705" endtime="20230614 14:19:31.705"/>
</kw>
<msg timestamp="20230614 14:19:31.706" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:30.819" endtime="20230614 14:19:31.706"/>
</kw>
<msg timestamp="20230614 14:19:31.706" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:30.818" endtime="20230614 14:19:31.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:31.707" endtime="20230614 14:19:31.707"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:31.711" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:31.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:31.714" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:31.708" endtime="20230614 14:19:31.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:31.715" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:31.715" endtime="20230614 14:19:31.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:31.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:31.716" endtime="20230614 14:19:31.716"/>
</kw>
<msg timestamp="20230614 14:19:31.717" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:19:31.707" endtime="20230614 14:19:31.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:31.717" endtime="20230614 14:19:31.718"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:31.721" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:31.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:31.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:31.718" endtime="20230614 14:19:31.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:31.724" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:31.724" endtime="20230614 14:19:31.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:31.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:31.725" endtime="20230614 14:19:31.725"/>
</kw>
<status status="PASS" starttime="20230614 14:19:31.718" endtime="20230614 14:19:31.726"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:30.817" endtime="20230614 14:19:31.726"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:31.734" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:32.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:32.572" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:31.731" endtime="20230614 14:19:32.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:32.574" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:19:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:19:32.573" endtime="20230614 14:19:32.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:32.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:32.575" endtime="20230614 14:19:32.579"/>
</kw>
<msg timestamp="20230614 14:19:32.580" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:31.730" endtime="20230614 14:19:32.580"/>
</kw>
<msg timestamp="20230614 14:19:32.580" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:19:31.729" endtime="20230614 14:19:32.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:32.581" endtime="20230614 14:19:32.581"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:32.585" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:32.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:32.588" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:19:32.582" endtime="20230614 14:19:32.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:32.589" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:19:32.588" endtime="20230614 14:19:32.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:32.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:32.589" endtime="20230614 14:19:32.590"/>
</kw>
<msg timestamp="20230614 14:19:32.590" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:19:32.581" endtime="20230614 14:19:32.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:32.590" endtime="20230614 14:19:32.591"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:32.595" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:32.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:32.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:32.592" endtime="20230614 14:19:32.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:32.600" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:32.598" endtime="20230614 14:19:32.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:32.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:32.600" endtime="20230614 14:19:32.600"/>
</kw>
<status status="PASS" starttime="20230614 14:19:32.591" endtime="20230614 14:19:32.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:31.728" endtime="20230614 14:19:32.601"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230614 14:19:21.831" endtime="20230614 14:19:32.603"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:37.591" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:41.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:41.084" level="INFO">${output} = 2023-06-14 14:19:40,950 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230614 14:19:37.587" endtime="20230614 14:19:41.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:41.086" level="INFO">2023-06-14 14:19:40,950 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230614 14:19:41.085" endtime="20230614 14:19:41.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:41.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:41.086" endtime="20230614 14:19:41.087"/>
</kw>
<status status="PASS" starttime="20230614 14:19:37.586" endtime="20230614 14:19:41.088"/>
</kw>
<msg timestamp="20230614 14:19:41.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:37.586" endtime="20230614 14:19:41.090"/>
</kw>
<msg timestamp="20230614 14:19:41.090" level="INFO">${output} = 2023-06-14 14:19:40,950 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230614 14:19:37.585" endtime="20230614 14:19:41.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:41.090" endtime="20230614 14:19:41.091"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:41.096" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:44.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:44.386" level="INFO">${output} = 2023-06-14 14:19:44,306 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230614 14:19:41.093" endtime="20230614 14:19:44.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:44.388" level="INFO">2023-06-14 14:19:44,306 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230614 14:19:44.387" endtime="20230614 14:19:44.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:44.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:44.388" endtime="20230614 14:19:44.389"/>
</kw>
<status status="PASS" starttime="20230614 14:19:41.093" endtime="20230614 14:19:44.389"/>
</kw>
<msg timestamp="20230614 14:19:44.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:41.092" endtime="20230614 14:19:44.390"/>
</kw>
<msg timestamp="20230614 14:19:44.390" level="INFO">${output} = 2023-06-14 14:19:44,306 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230614 14:19:41.091" endtime="20230614 14:19:44.390"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:44.391" endtime="20230614 14:19:44.391"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:37.583" endtime="20230614 14:19:44.392"/>
</test>
<test id="s1-s3-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:44.398" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:19:44.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:44.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:44.395" endtime="20230614 14:19:44.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:44.403" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:44.402" endtime="20230614 14:19:44.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:44.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:44.403" endtime="20230614 14:19:44.404"/>
</kw>
<status status="PASS" starttime="20230614 14:19:44.394" endtime="20230614 14:19:44.404"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:44.411" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:52.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:52.025" level="INFO">${output} = 2023-06-14 14:19:49,435 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:49,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:44.407" endtime="20230614 14:19:52.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:52.026" level="INFO">2023-06-14 14:19:49,435 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:49,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:19:49,686 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-14 14:19:50,056 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230614 14:19:52.026" endtime="20230614 14:19:52.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:52.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:52.027" endtime="20230614 14:19:52.028"/>
</kw>
<status status="PASS" starttime="20230614 14:19:44.406" endtime="20230614 14:19:52.028"/>
</kw>
<msg timestamp="20230614 14:19:52.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:44.405" endtime="20230614 14:19:52.028"/>
</kw>
<msg timestamp="20230614 14:19:52.029" level="INFO">${output} = 2023-06-14 14:19:49,435 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:19:49,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:44.404" endtime="20230614 14:19:52.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:52.029" endtime="20230614 14:19:52.029"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:52.033" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:52.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:52.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:52.030" endtime="20230614 14:19:52.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:52.037" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:52.037" endtime="20230614 14:19:52.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:52.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:52.038" endtime="20230614 14:19:52.038"/>
</kw>
<status status="PASS" starttime="20230614 14:19:52.030" endtime="20230614 14:19:52.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:44.393" endtime="20230614 14:19:52.039"/>
</test>
<test id="s1-s3-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:52.045" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:19:55.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:55.775" level="INFO">${output} = 2023-06-14 14:19:55,715 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230614 14:19:52.043" endtime="20230614 14:19:55.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:55.776" level="INFO">2023-06-14 14:19:55,715 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230614 14:19:55.775" endtime="20230614 14:19:55.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:55.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:55.776" endtime="20230614 14:19:55.777"/>
</kw>
<status status="PASS" starttime="20230614 14:19:52.042" endtime="20230614 14:19:55.777"/>
</kw>
<msg timestamp="20230614 14:19:55.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:52.041" endtime="20230614 14:19:55.778"/>
</kw>
<msg timestamp="20230614 14:19:55.779" level="INFO">${output} = 2023-06-14 14:19:55,715 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230614 14:19:52.041" endtime="20230614 14:19:55.779"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:19:55.779" endtime="20230614 14:19:55.779"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:52.040" endtime="20230614 14:19:55.781"/>
</test>
<test id="s1-s3-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:55.788" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:19:55.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:19:55.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:19:55.785" endtime="20230614 14:19:55.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:19:55.791" level="INFO"/>
<status status="PASS" starttime="20230614 14:19:55.790" endtime="20230614 14:19:55.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:19:55.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:19:55.791" endtime="20230614 14:19:55.792"/>
</kw>
<status status="PASS" starttime="20230614 14:19:55.785" endtime="20230614 14:19:55.792"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:19:55.799" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:02.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:02.311" level="INFO">${output} = 2023-06-14 14:20:00,237 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:00,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:55.797" endtime="20230614 14:20:02.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:02.312" level="INFO">2023-06-14 14:20:00,237 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:00,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:20:00,462 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-14 14:20:00,918 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230614 14:20:02.311" endtime="20230614 14:20:02.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:02.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:02.313" endtime="20230614 14:20:02.313"/>
</kw>
<status status="PASS" starttime="20230614 14:19:55.794" endtime="20230614 14:20:02.314"/>
</kw>
<msg timestamp="20230614 14:20:02.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:19:55.793" endtime="20230614 14:20:02.314"/>
</kw>
<msg timestamp="20230614 14:20:02.315" level="INFO">${output} = 2023-06-14 14:20:00,237 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:00,462 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:19:55.793" endtime="20230614 14:20:02.315"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:02.315" endtime="20230614 14:20:02.315"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:02.318" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:02.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:02.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:02.316" endtime="20230614 14:20:02.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:02.323" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:02.322" endtime="20230614 14:20:02.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:02.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:02.324" endtime="20230614 14:20:02.325"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.316" endtime="20230614 14:20:02.325"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:19:55.784" endtime="20230614 14:20:02.325"/>
</test>
<test id="s1-s3-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:02.332" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:02.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:02.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:02.330" endtime="20230614 14:20:02.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:02.984" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:02.983" endtime="20230614 14:20:02.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:02.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:02.985" endtime="20230614 14:20:02.985"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.329" endtime="20230614 14:20:02.986"/>
</kw>
<msg timestamp="20230614 14:20:02.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:02.329" endtime="20230614 14:20:02.986"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.328" endtime="20230614 14:20:02.986"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:02.991" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:03.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:03.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:02.989" endtime="20230614 14:20:03.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:03.664" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:03.663" endtime="20230614 14:20:03.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:03.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:03.664" endtime="20230614 14:20:03.665"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.988" endtime="20230614 14:20:03.666"/>
</kw>
<msg timestamp="20230614 14:20:03.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:02.987" endtime="20230614 14:20:03.667"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.987" endtime="20230614 14:20:03.667"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:03.672" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:04.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:04.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:03.669" endtime="20230614 14:20:04.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:04.359" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:04.356" endtime="20230614 14:20:04.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:04.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:04.360" endtime="20230614 14:20:04.361"/>
</kw>
<status status="PASS" starttime="20230614 14:20:03.668" endtime="20230614 14:20:04.361"/>
</kw>
<msg timestamp="20230614 14:20:04.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:03.668" endtime="20230614 14:20:04.362"/>
</kw>
<status status="PASS" starttime="20230614 14:20:03.667" endtime="20230614 14:20:04.362"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:04.371" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:05.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:05.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:04.364" endtime="20230614 14:20:05.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:05.110" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:05.109" endtime="20230614 14:20:05.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:05.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:05.111" endtime="20230614 14:20:05.112"/>
</kw>
<status status="PASS" starttime="20230614 14:20:04.364" endtime="20230614 14:20:05.112"/>
</kw>
<msg timestamp="20230614 14:20:05.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:04.363" endtime="20230614 14:20:05.113"/>
</kw>
<status status="PASS" starttime="20230614 14:20:04.362" endtime="20230614 14:20:05.113"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.328" endtime="20230614 14:20:05.113"/>
</kw>
<status status="PASS" starttime="20230614 14:20:02.327" endtime="20230614 14:20:05.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:02.326" endtime="20230614 14:20:05.114"/>
</test>
<test id="s1-s3-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:05.122" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:06.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:06.080" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:05.119" endtime="20230614 14:20:06.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:06.081" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:06.080" endtime="20230614 14:20:06.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:06.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:06.082" endtime="20230614 14:20:06.082"/>
</kw>
<status status="PASS" starttime="20230614 14:20:05.118" endtime="20230614 14:20:06.083"/>
</kw>
<msg timestamp="20230614 14:20:06.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:05.118" endtime="20230614 14:20:06.084"/>
</kw>
<msg timestamp="20230614 14:20:06.084" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:05.117" endtime="20230614 14:20:06.084"/>
</kw>
<msg timestamp="20230614 14:20:06.085" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:05.117" endtime="20230614 14:20:06.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:06.085" endtime="20230614 14:20:06.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:06.085" endtime="20230614 14:20:06.086"/>
</kw>
<msg timestamp="20230614 14:20:06.086" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230614 14:20:05.116" endtime="20230614 14:20:06.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230614 14:20:06.086" endtime="20230614 14:20:06.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:05.115" endtime="20230614 14:20:06.087"/>
</test>
<test id="s1-s3-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:06.093" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:20:06.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:06.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:06.090" endtime="20230614 14:20:06.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:06.096" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:06.096" endtime="20230614 14:20:06.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:06.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:06.097" endtime="20230614 14:20:06.097"/>
</kw>
<status status="PASS" starttime="20230614 14:20:06.090" endtime="20230614 14:20:06.098"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:06.103" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:07.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:07.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:06.100" endtime="20230614 14:20:07.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:07.534" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:07.533" endtime="20230614 14:20:07.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:07.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:07.535" endtime="20230614 14:20:07.536"/>
</kw>
<msg timestamp="20230614 14:20:07.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:06.099" endtime="20230614 14:20:07.536"/>
</kw>
<msg timestamp="20230614 14:20:07.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:06.098" endtime="20230614 14:20:07.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:07.537" endtime="20230614 14:20:07.538"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:07.541" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:07.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:07.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:07.539" endtime="20230614 14:20:07.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:07.547" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:07.546" endtime="20230614 14:20:07.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:07.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:07.547" endtime="20230614 14:20:07.548"/>
</kw>
<status status="PASS" starttime="20230614 14:20:07.538" endtime="20230614 14:20:07.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:06.089" endtime="20230614 14:20:07.549"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230614 14:19:37.469" endtime="20230614 14:20:07.551"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230614 14:20:12.457" level="INFO">${random} = 23736</msg>
<status status="PASS" starttime="20230614 14:20:12.456" endtime="20230614 14:20:12.457"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:12.467" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-23736 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:18.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:18.327" level="INFO">${output} = 2023-06-14 14:20:16,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:16,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:20:12.460" endtime="20230614 14:20:18.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:18.328" level="INFO">2023-06-14 14:20:16,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:16,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:20:16,978 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230614 14:20:18.328" endtime="20230614 14:20:18.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:18.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:18.329" endtime="20230614 14:20:18.330"/>
</kw>
<status status="PASS" starttime="20230614 14:20:12.459" endtime="20230614 14:20:18.330"/>
</kw>
<msg timestamp="20230614 14:20:18.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:12.458" endtime="20230614 14:20:18.332"/>
</kw>
<msg timestamp="20230614 14:20:18.332" level="INFO">${output} = 2023-06-14 14:20:16,788 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:16,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:20:12.457" endtime="20230614 14:20:18.332"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:18.332" endtime="20230614 14:20:18.333"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:18.336" level="INFO">Running command 'cat /tmp/key-23736 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:18.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:18.339" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:20:18.334" endtime="20230614 14:20:18.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:18.340" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:20:18.339" endtime="20230614 14:20:18.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:18.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:18.340" endtime="20230614 14:20:18.341"/>
</kw>
<msg timestamp="20230614 14:20:18.341" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:20:18.333" endtime="20230614 14:20:18.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:18.341" endtime="20230614 14:20:18.342"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:18.345" level="INFO">Running command 'rm /tmp/key-23736 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:18.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:18.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:18.343" endtime="20230614 14:20:18.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:18.349" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:18.348" endtime="20230614 14:20:18.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:18.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:18.349" endtime="20230614 14:20:18.350"/>
</kw>
<status status="PASS" starttime="20230614 14:20:18.342" endtime="20230614 14:20:18.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:12.453" endtime="20230614 14:20:18.351"/>
</test>
<test id="s1-s4-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:18.358" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:18.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:18.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:18.355" endtime="20230614 14:20:18.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:18.998" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:18.997" endtime="20230614 14:20:18.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:18.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:18.999" endtime="20230614 14:20:18.999"/>
</kw>
<status status="PASS" starttime="20230614 14:20:18.355" endtime="20230614 14:20:19.000"/>
</kw>
<msg timestamp="20230614 14:20:19.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:18.354" endtime="20230614 14:20:19.001"/>
</kw>
<status status="PASS" starttime="20230614 14:20:18.354" endtime="20230614 14:20:19.001"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:19.006" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:19.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:19.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:19.003" endtime="20230614 14:20:19.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:19.627" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:19.626" endtime="20230614 14:20:19.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:19.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:19.627" endtime="20230614 14:20:19.628"/>
</kw>
<status status="PASS" starttime="20230614 14:20:19.003" endtime="20230614 14:20:19.628"/>
</kw>
<msg timestamp="20230614 14:20:19.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:19.002" endtime="20230614 14:20:19.629"/>
</kw>
<status status="PASS" starttime="20230614 14:20:19.001" endtime="20230614 14:20:19.629"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:19.634" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:20.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:20.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:19.632" endtime="20230614 14:20:20.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:20.279" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:20.278" endtime="20230614 14:20:20.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:20.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:20.279" endtime="20230614 14:20:20.280"/>
</kw>
<status status="PASS" starttime="20230614 14:20:19.631" endtime="20230614 14:20:20.280"/>
</kw>
<msg timestamp="20230614 14:20:20.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:19.630" endtime="20230614 14:20:20.281"/>
</kw>
<status status="PASS" starttime="20230614 14:20:19.630" endtime="20230614 14:20:20.281"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:20.286" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:20.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:20.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:20.283" endtime="20230614 14:20:20.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:20.992" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:20.991" endtime="20230614 14:20:20.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:20.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:20.992" endtime="20230614 14:20:20.993"/>
</kw>
<status status="PASS" starttime="20230614 14:20:20.282" endtime="20230614 14:20:20.994"/>
</kw>
<msg timestamp="20230614 14:20:20.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:20.282" endtime="20230614 14:20:20.995"/>
</kw>
<status status="PASS" starttime="20230614 14:20:20.281" endtime="20230614 14:20:20.995"/>
</kw>
<status status="PASS" starttime="20230614 14:20:18.353" endtime="20230614 14:20:20.995"/>
</kw>
<status status="PASS" starttime="20230614 14:20:18.353" endtime="20230614 14:20:20.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:18.352" endtime="20230614 14:20:20.995"/>
</test>
<test id="s1-s4-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:21.002" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:21.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:21.859" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:20:20.999" endtime="20230614 14:20:21.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:21.860" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:20:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:20:21.859" endtime="20230614 14:20:21.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:21.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:21.861" endtime="20230614 14:20:21.862"/>
</kw>
<msg timestamp="20230614 14:20:21.862" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:20:20.998" endtime="20230614 14:20:21.862"/>
</kw>
<msg timestamp="20230614 14:20:21.863" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:20:20.998" endtime="20230614 14:20:21.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:21.863" endtime="20230614 14:20:21.863"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:21.867" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:21.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:21.869" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:20:21.864" endtime="20230614 14:20:21.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:21.871" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:20:21.870" endtime="20230614 14:20:21.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:21.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:21.871" endtime="20230614 14:20:21.872"/>
</kw>
<msg timestamp="20230614 14:20:21.872" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:20:21.864" endtime="20230614 14:20:21.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:21.872" endtime="20230614 14:20:21.873"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:21.878" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:21.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:21.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:21.874" endtime="20230614 14:20:21.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:21.883" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:21.882" endtime="20230614 14:20:21.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:21.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:21.883" endtime="20230614 14:20:21.884"/>
</kw>
<status status="PASS" starttime="20230614 14:20:21.873" endtime="20230614 14:20:21.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:20.997" endtime="20230614 14:20:21.884"/>
</test>
<test id="s1-s4-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:21.890" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:22.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:22.763" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:20:21.888" endtime="20230614 14:20:22.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:22.765" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:20:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:20:22.764" endtime="20230614 14:20:22.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:22.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:22.765" endtime="20230614 14:20:22.766"/>
</kw>
<msg timestamp="20230614 14:20:22.766" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:20:21.887" endtime="20230614 14:20:22.766"/>
</kw>
<msg timestamp="20230614 14:20:22.767" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:20:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:20:21.886" endtime="20230614 14:20:22.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:22.767" endtime="20230614 14:20:22.768"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:22.771" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:22.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:22.775" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:20:22.769" endtime="20230614 14:20:22.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:22.776" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:20:22.775" endtime="20230614 14:20:22.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:22.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:22.776" endtime="20230614 14:20:22.777"/>
</kw>
<msg timestamp="20230614 14:20:22.777" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:20:22.768" endtime="20230614 14:20:22.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:22.778" endtime="20230614 14:20:22.778"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:22.781" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:22.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:22.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:22.779" endtime="20230614 14:20:22.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:22.785" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:22.785" endtime="20230614 14:20:22.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:22.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:22.786" endtime="20230614 14:20:22.787"/>
</kw>
<status status="PASS" starttime="20230614 14:20:22.778" endtime="20230614 14:20:22.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:21.885" endtime="20230614 14:20:22.787"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230614 14:20:12.344" endtime="20230614 14:20:22.790"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:27.882" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:20:27.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:27.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:27.877" endtime="20230614 14:20:27.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:27.885" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:27.885" endtime="20230614 14:20:27.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:27.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:27.886" endtime="20230614 14:20:27.886"/>
</kw>
<status status="PASS" starttime="20230614 14:20:27.876" endtime="20230614 14:20:27.887"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:27.892" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:34.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:34.082" level="INFO">${output} = 2023-06-14 14:20:32,292 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:32,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:20:27.889" endtime="20230614 14:20:34.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:34.084" level="INFO">2023-06-14 14:20:32,292 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:32,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:20:32,410 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-14 14:20:32,758 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230614 14:20:34.083" endtime="20230614 14:20:34.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:34.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:34.084" endtime="20230614 14:20:34.085"/>
</kw>
<status status="PASS" starttime="20230614 14:20:27.888" endtime="20230614 14:20:34.085"/>
</kw>
<msg timestamp="20230614 14:20:34.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:27.888" endtime="20230614 14:20:34.087"/>
</kw>
<msg timestamp="20230614 14:20:34.087" level="INFO">${output} = 2023-06-14 14:20:32,292 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:32,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:20:27.887" endtime="20230614 14:20:34.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:34.087" endtime="20230614 14:20:34.088"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:34.091" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:34.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:34.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:34.089" endtime="20230614 14:20:34.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:34.096" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:34.096" endtime="20230614 14:20:34.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:34.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:34.097" endtime="20230614 14:20:34.097"/>
</kw>
<status status="PASS" starttime="20230614 14:20:34.088" endtime="20230614 14:20:34.098"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:27.875" endtime="20230614 14:20:34.098"/>
</test>
<test id="s1-s5-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:34.104" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:20:34.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:34.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:34.101" endtime="20230614 14:20:34.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:34.107" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:34.106" endtime="20230614 14:20:34.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:34.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:34.107" endtime="20230614 14:20:34.108"/>
</kw>
<status status="PASS" starttime="20230614 14:20:34.100" endtime="20230614 14:20:34.108"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:34.113" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:40.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:40.157" level="INFO">${output} = 2023-06-14 14:20:38,411 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:38,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:20:34.110" endtime="20230614 14:20:40.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:40.158" level="INFO">2023-06-14 14:20:38,411 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:38,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:20:38,539 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-14 14:20:38,860 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230614 14:20:40.157" endtime="20230614 14:20:40.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:40.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:40.158" endtime="20230614 14:20:40.159"/>
</kw>
<status status="PASS" starttime="20230614 14:20:34.109" endtime="20230614 14:20:40.160"/>
</kw>
<msg timestamp="20230614 14:20:40.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:34.109" endtime="20230614 14:20:40.160"/>
</kw>
<msg timestamp="20230614 14:20:40.161" level="INFO">${output} = 2023-06-14 14:20:38,411 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:20:38,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:20:34.108" endtime="20230614 14:20:40.161"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:40.161" endtime="20230614 14:20:40.161"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:40.165" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:40.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:40.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:40.162" endtime="20230614 14:20:40.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:40.169" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:40.168" endtime="20230614 14:20:40.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:40.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:40.169" endtime="20230614 14:20:40.170"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.161" endtime="20230614 14:20:40.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:34.099" endtime="20230614 14:20:40.171"/>
</test>
<test id="s1-s5-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:40.180" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:40.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:40.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:40.178" endtime="20230614 14:20:40.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:40.865" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:40.864" endtime="20230614 14:20:40.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:40.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:40.865" endtime="20230614 14:20:40.866"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.177" endtime="20230614 14:20:40.866"/>
</kw>
<msg timestamp="20230614 14:20:40.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:40.176" endtime="20230614 14:20:40.867"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.176" endtime="20230614 14:20:40.867"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:40.873" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:41.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:41.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:40.869" endtime="20230614 14:20:41.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:41.524" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:41.524" endtime="20230614 14:20:41.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:41.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:41.525" endtime="20230614 14:20:41.527"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.869" endtime="20230614 14:20:41.527"/>
</kw>
<msg timestamp="20230614 14:20:41.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:40.868" endtime="20230614 14:20:41.528"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.868" endtime="20230614 14:20:41.528"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:41.533" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:42.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:42.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:41.530" endtime="20230614 14:20:42.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:42.186" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:42.185" endtime="20230614 14:20:42.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:42.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:42.186" endtime="20230614 14:20:42.187"/>
</kw>
<status status="PASS" starttime="20230614 14:20:41.529" endtime="20230614 14:20:42.187"/>
</kw>
<msg timestamp="20230614 14:20:42.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:41.529" endtime="20230614 14:20:42.188"/>
</kw>
<status status="PASS" starttime="20230614 14:20:41.528" endtime="20230614 14:20:42.188"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:42.193" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:42.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:42.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:42.190" endtime="20230614 14:20:42.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:42.837" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:42.836" endtime="20230614 14:20:42.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:42.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:42.837" endtime="20230614 14:20:42.838"/>
</kw>
<status status="PASS" starttime="20230614 14:20:42.190" endtime="20230614 14:20:42.838"/>
</kw>
<msg timestamp="20230614 14:20:42.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:42.189" endtime="20230614 14:20:42.839"/>
</kw>
<status status="PASS" starttime="20230614 14:20:42.189" endtime="20230614 14:20:42.839"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.175" endtime="20230614 14:20:42.840"/>
</kw>
<status status="PASS" starttime="20230614 14:20:40.175" endtime="20230614 14:20:42.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:40.174" endtime="20230614 14:20:42.840"/>
</test>
<test id="s1-s5-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:42.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:43.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:43.704" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:42.845" endtime="20230614 14:20:43.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:43.706" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:43.705" endtime="20230614 14:20:43.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:43.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:43.706" endtime="20230614 14:20:43.707"/>
</kw>
<status status="PASS" starttime="20230614 14:20:42.844" endtime="20230614 14:20:43.707"/>
</kw>
<msg timestamp="20230614 14:20:43.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:20:42.844" endtime="20230614 14:20:43.708"/>
</kw>
<msg timestamp="20230614 14:20:43.708" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:42.843" endtime="20230614 14:20:43.708"/>
</kw>
<msg timestamp="20230614 14:20:43.709" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:20:42.843" endtime="20230614 14:20:43.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:43.709" endtime="20230614 14:20:43.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:43.709" endtime="20230614 14:20:43.710"/>
</kw>
<msg timestamp="20230614 14:20:43.710" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230614 14:20:42.842" endtime="20230614 14:20:43.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230614 14:20:43.711" endtime="20230614 14:20:43.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:42.841" endtime="20230614 14:20:43.711"/>
</test>
<test id="s1-s5-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:43.718" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:20:43.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:43.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:43.715" endtime="20230614 14:20:43.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:43.721" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:43.720" endtime="20230614 14:20:43.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:43.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:43.721" endtime="20230614 14:20:43.722"/>
</kw>
<status status="PASS" starttime="20230614 14:20:43.714" endtime="20230614 14:20:43.723"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:43.727" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:44.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:44.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:43.725" endtime="20230614 14:20:44.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:44.729" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:44.728" endtime="20230614 14:20:44.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:44.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:44.730" endtime="20230614 14:20:44.730"/>
</kw>
<msg timestamp="20230614 14:20:44.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:43.724" endtime="20230614 14:20:44.731"/>
</kw>
<msg timestamp="20230614 14:20:44.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:43.723" endtime="20230614 14:20:44.731"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:20:44.732" endtime="20230614 14:20:44.732"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:44.736" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:20:44.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:20:44.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:20:44.733" endtime="20230614 14:20:44.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:20:44.741" level="INFO"/>
<status status="PASS" starttime="20230614 14:20:44.740" endtime="20230614 14:20:44.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:20:44.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:20:44.741" endtime="20230614 14:20:44.742"/>
</kw>
<status status="PASS" starttime="20230614 14:20:44.732" endtime="20230614 14:20:44.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:20:43.713" endtime="20230614 14:20:44.743"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230614 14:20:27.766" endtime="20230614 14:20:44.745"/>
</suite>
<suite id="s1-s6" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s6-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:20:49.694" endtime="20230614 14:20:49.695"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:20:49.695" endtime="20230614 14:20:49.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:20:49.702" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:25:49.693" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230614 14:20:49.697" endtime="20230614 14:25:49.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230614 14:25:49.694" endtime="20230614 14:25:49.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230614 14:25:49.694" endtime="20230614 14:25:49.694"/>
</kw>
<status status="FAIL" starttime="20230614 14:20:49.696" endtime="20230614 14:25:49.696"/>
</kw>
<msg timestamp="20230614 14:25:49.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230614 14:20:49.696" endtime="20230614 14:25:49.697"/>
</kw>
<status status="FAIL" starttime="20230614 14:20:49.695" endtime="20230614 14:25:49.698"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230614 14:25:49.698" endtime="20230614 14:25:49.698"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230614 14:20:49.692" endtime="20230614 14:25:49.699">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230614 14:20:49.619" endtime="20230614 14:25:49.701"/>
</suite>
<suite id="s1-s7" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s7-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:18:49.332" endtime="20230614 14:18:49.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:18:49.342" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:18:49.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:18:49.347" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9df04aea238c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230614 14:18:49.334" endtime="20230614 14:18:49.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:18:49.349" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9df04aea238c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230614 14:18:49.348" endtime="20230614 14:18:49.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:18:49.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:18:49.350" endtime="20230614 14:18:49.351"/>
</kw>
<status status="PASS" starttime="20230614 14:18:49.334" endtime="20230614 14:18:49.351"/>
</kw>
<msg timestamp="20230614 14:18:49.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:18:49.333" endtime="20230614 14:18:49.353"/>
</kw>
<msg timestamp="20230614 14:18:49.353" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9df04aea238c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230614 14:18:49.333" endtime="20230614 14:18:49.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:18:49.354" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=9df04aea238c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230614 14:18:49.354" endtime="20230614 14:18:49.354"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:18:49.355" endtime="20230614 14:18:49.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:18:49.363" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:18:53.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:18:53.433" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:18:49.360" endtime="20230614 14:18:53.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:18:53.435" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:18:53.434" endtime="20230614 14:18:53.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:18:53.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:18:53.435" endtime="20230614 14:18:53.436"/>
</kw>
<status status="PASS" starttime="20230614 14:18:49.359" endtime="20230614 14:18:53.437"/>
</kw>
<msg timestamp="20230614 14:18:53.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:18:49.358" endtime="20230614 14:18:53.438"/>
</kw>
<msg timestamp="20230614 14:18:53.438" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:18:49.355" endtime="20230614 14:18:53.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:18:53.439" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:18:53.438" endtime="20230614 14:18:53.439"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230614 14:18:53.439" endtime="20230614 14:18:53.440"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230614 14:18:49.329" endtime="20230614 14:18:53.440"/>
</test>
<test id="s1-s7-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:18:53.442" endtime="20230614 14:18:53.443"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:18:53.443" endtime="20230614 14:18:53.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:18:53.449" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:18:57.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:18:57.185" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:18:53.446" endtime="20230614 14:18:57.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:18:57.187" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:18:57.186" endtime="20230614 14:18:57.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:18:57.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:18:57.187" endtime="20230614 14:18:57.188"/>
</kw>
<status status="PASS" starttime="20230614 14:18:53.445" endtime="20230614 14:18:57.188"/>
</kw>
<msg timestamp="20230614 14:18:57.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:18:53.445" endtime="20230614 14:18:57.189"/>
</kw>
<msg timestamp="20230614 14:18:57.189" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:18:53.444" endtime="20230614 14:18:57.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:18:57.190" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:18:57.189" endtime="20230614 14:18:57.190"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230614 14:18:57.190" endtime="20230614 14:18:57.190"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230614 14:18:53.441" endtime="20230614 14:18:57.191"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230614 14:18:49.249" endtime="20230614 14:18:57.192"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s8-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:38.752" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:42.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:42.312" level="INFO">${output} = 2023-06-14 14:08:42,190 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230614 14:08:38.744" endtime="20230614 14:08:42.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:42.314" level="INFO">2023-06-14 14:08:42,190 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230614 14:08:42.313" endtime="20230614 14:08:42.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:42.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:42.314" endtime="20230614 14:08:42.315"/>
</kw>
<status status="PASS" starttime="20230614 14:08:38.743" endtime="20230614 14:08:42.316"/>
</kw>
<msg timestamp="20230614 14:08:42.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:38.743" endtime="20230614 14:08:42.318"/>
</kw>
<msg timestamp="20230614 14:08:42.318" level="INFO">${output} = 2023-06-14 14:08:42,190 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230614 14:08:38.742" endtime="20230614 14:08:42.318"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:08:42.318" endtime="20230614 14:08:42.319"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:42.324" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:45.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:45.961" level="INFO">${output} = 2023-06-14 14:08:45,852 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230614 14:08:42.321" endtime="20230614 14:08:45.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:45.963" level="INFO">2023-06-14 14:08:45,852 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230614 14:08:45.962" endtime="20230614 14:08:45.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:45.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:45.963" endtime="20230614 14:08:45.964"/>
</kw>
<status status="PASS" starttime="20230614 14:08:42.321" endtime="20230614 14:08:45.964"/>
</kw>
<msg timestamp="20230614 14:08:45.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:42.320" endtime="20230614 14:08:45.965"/>
</kw>
<msg timestamp="20230614 14:08:45.965" level="INFO">${output} = 2023-06-14 14:08:45,852 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230614 14:08:42.319" endtime="20230614 14:08:45.965"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:08:45.966" endtime="20230614 14:08:45.966"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:08:38.741" endtime="20230614 14:08:45.967"/>
</test>
<test id="s1-s8-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:45.973" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:08:45.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:45.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:08:45.970" endtime="20230614 14:08:45.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:45.976" level="INFO"/>
<status status="PASS" starttime="20230614 14:08:45.975" endtime="20230614 14:08:45.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:45.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:45.976" endtime="20230614 14:08:45.977"/>
</kw>
<status status="PASS" starttime="20230614 14:08:45.969" endtime="20230614 14:08:45.977"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:45.982" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:53.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:53.745" level="INFO">${output} = 2023-06-14 14:08:50,743 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:08:51,043 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:08:45.980" endtime="20230614 14:08:53.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:53.748" level="INFO">2023-06-14 14:08:50,743 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:08:51,043 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:08:51,043 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-14 14:08:51,444 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230614 14:08:53.746" endtime="20230614 14:08:53.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:53.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:53.748" endtime="20230614 14:08:53.748"/>
</kw>
<status status="PASS" starttime="20230614 14:08:45.979" endtime="20230614 14:08:53.749"/>
</kw>
<msg timestamp="20230614 14:08:53.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:45.978" endtime="20230614 14:08:53.750"/>
</kw>
<msg timestamp="20230614 14:08:53.750" level="INFO">${output} = 2023-06-14 14:08:50,743 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:08:51,043 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:08:45.977" endtime="20230614 14:08:53.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:08:53.751" endtime="20230614 14:08:53.751"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:53.755" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:53.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:53.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:08:53.752" endtime="20230614 14:08:53.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:53.759" level="INFO"/>
<status status="PASS" starttime="20230614 14:08:53.759" endtime="20230614 14:08:53.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:53.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:53.760" endtime="20230614 14:08:53.760"/>
</kw>
<status status="PASS" starttime="20230614 14:08:53.751" endtime="20230614 14:08:53.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:08:45.968" endtime="20230614 14:08:53.761"/>
</test>
<test id="s1-s8-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:53.768" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:57.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:57.404" level="INFO">${output} = 2023-06-14 14:08:57,342 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230614 14:08:53.765" endtime="20230614 14:08:57.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:57.405" level="INFO">2023-06-14 14:08:57,342 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230614 14:08:57.404" endtime="20230614 14:08:57.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:57.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:57.406" endtime="20230614 14:08:57.406"/>
</kw>
<status status="PASS" starttime="20230614 14:08:53.765" endtime="20230614 14:08:57.407"/>
</kw>
<msg timestamp="20230614 14:08:57.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:53.764" endtime="20230614 14:08:57.407"/>
</kw>
<msg timestamp="20230614 14:08:57.408" level="INFO">${output} = 2023-06-14 14:08:57,342 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230614 14:08:53.763" endtime="20230614 14:08:57.408"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:08:57.408" endtime="20230614 14:08:57.408"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:08:53.762" endtime="20230614 14:08:57.409"/>
</test>
<test id="s1-s8-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:57.415" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:08:57.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:57.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:08:57.413" endtime="20230614 14:08:57.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:57.420" level="INFO"/>
<status status="PASS" starttime="20230614 14:08:57.419" endtime="20230614 14:08:57.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:57.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:57.420" endtime="20230614 14:08:57.421"/>
</kw>
<status status="PASS" starttime="20230614 14:08:57.412" endtime="20230614 14:08:57.422"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:57.427" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:05.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:05.153" level="INFO">${output} = 2023-06-14 14:09:02,631 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:09:02,807 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:08:57.424" endtime="20230614 14:09:05.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:05.155" level="INFO">2023-06-14 14:09:02,631 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:09:02,807 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:09:02,807 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-14 14:09:03,257 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230614 14:09:05.154" endtime="20230614 14:09:05.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:05.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:05.155" endtime="20230614 14:09:05.156"/>
</kw>
<status status="PASS" starttime="20230614 14:08:57.423" endtime="20230614 14:09:05.156"/>
</kw>
<msg timestamp="20230614 14:09:05.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:57.422" endtime="20230614 14:09:05.157"/>
</kw>
<msg timestamp="20230614 14:09:05.157" level="INFO">${output} = 2023-06-14 14:09:02,631 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:09:02,807 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:08:57.422" endtime="20230614 14:09:05.157"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:05.158" endtime="20230614 14:09:05.158"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:05.162" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:05.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:05.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:05.159" endtime="20230614 14:09:05.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:05.166" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:05.166" endtime="20230614 14:09:05.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:05.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:05.167" endtime="20230614 14:09:05.167"/>
</kw>
<status status="PASS" starttime="20230614 14:09:05.159" endtime="20230614 14:09:05.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:08:57.410" endtime="20230614 14:09:05.168"/>
</test>
<test id="s1-s8-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:05.175" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:06.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:06.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:05.173" endtime="20230614 14:09:06.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:06.117" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:06.116" endtime="20230614 14:09:06.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:06.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:06.117" endtime="20230614 14:09:06.118"/>
</kw>
<status status="PASS" starttime="20230614 14:09:05.173" endtime="20230614 14:09:06.118"/>
</kw>
<msg timestamp="20230614 14:09:06.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:05.172" endtime="20230614 14:09:06.119"/>
</kw>
<status status="PASS" starttime="20230614 14:09:05.172" endtime="20230614 14:09:06.119"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:06.124" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:06.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:06.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:06.121" endtime="20230614 14:09:06.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:06.800" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:06.799" endtime="20230614 14:09:06.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:06.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:06.800" endtime="20230614 14:09:06.801"/>
</kw>
<status status="PASS" starttime="20230614 14:09:06.120" endtime="20230614 14:09:06.802"/>
</kw>
<msg timestamp="20230614 14:09:06.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:06.120" endtime="20230614 14:09:06.802"/>
</kw>
<status status="PASS" starttime="20230614 14:09:06.119" endtime="20230614 14:09:06.803"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:06.808" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:07.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:07.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:06.805" endtime="20230614 14:09:07.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:07.508" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:07.507" endtime="20230614 14:09:07.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:07.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:07.508" endtime="20230614 14:09:07.509"/>
</kw>
<status status="PASS" starttime="20230614 14:09:06.804" endtime="20230614 14:09:07.509"/>
</kw>
<msg timestamp="20230614 14:09:07.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:06.804" endtime="20230614 14:09:07.510"/>
</kw>
<status status="PASS" starttime="20230614 14:09:06.803" endtime="20230614 14:09:07.510"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:07.515" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:08.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:08.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:07.512" endtime="20230614 14:09:08.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:08.228" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:08.227" endtime="20230614 14:09:08.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:08.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:08.229" endtime="20230614 14:09:08.229"/>
</kw>
<status status="PASS" starttime="20230614 14:09:07.511" endtime="20230614 14:09:08.230"/>
</kw>
<msg timestamp="20230614 14:09:08.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:07.511" endtime="20230614 14:09:08.231"/>
</kw>
<status status="PASS" starttime="20230614 14:09:07.510" endtime="20230614 14:09:08.232"/>
</kw>
<status status="PASS" starttime="20230614 14:09:05.171" endtime="20230614 14:09:08.232"/>
</kw>
<status status="PASS" starttime="20230614 14:09:05.171" endtime="20230614 14:09:08.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:05.169" endtime="20230614 14:09:08.232"/>
</test>
<test id="s1-s8-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:08.243" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:10.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:10.958" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:09:08.240" endtime="20230614 14:09:10.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:10.960" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:09:10.959" endtime="20230614 14:09:10.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:10.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:10.960" endtime="20230614 14:09:10.961"/>
</kw>
<status status="PASS" starttime="20230614 14:09:08.239" endtime="20230614 14:09:10.961"/>
</kw>
<msg timestamp="20230614 14:09:10.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:08.238" endtime="20230614 14:09:10.962"/>
</kw>
<msg timestamp="20230614 14:09:10.963" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:09:08.237" endtime="20230614 14:09:10.963"/>
</kw>
<msg timestamp="20230614 14:09:10.963" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:09:08.236" endtime="20230614 14:09:10.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:10.964" endtime="20230614 14:09:10.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:10.964" endtime="20230614 14:09:10.965"/>
</kw>
<msg timestamp="20230614 14:09:10.965" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230614 14:09:08.235" endtime="20230614 14:09:10.965"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230614 14:09:10.965" endtime="20230614 14:09:10.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:08.234" endtime="20230614 14:09:10.966"/>
</test>
<test id="s1-s8-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:10.971" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:09:10.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:10.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:10.969" endtime="20230614 14:09:10.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:10.975" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:10.974" endtime="20230614 14:09:10.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:10.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:10.975" endtime="20230614 14:09:10.976"/>
</kw>
<status status="PASS" starttime="20230614 14:09:10.968" endtime="20230614 14:09:10.976"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:10.981" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:13.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:13.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:10.978" endtime="20230614 14:09:13.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:13.196" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:13.195" endtime="20230614 14:09:13.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:13.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:13.196" endtime="20230614 14:09:13.197"/>
</kw>
<msg timestamp="20230614 14:09:13.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:10.977" endtime="20230614 14:09:13.197"/>
</kw>
<msg timestamp="20230614 14:09:13.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:10.976" endtime="20230614 14:09:13.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:13.198" endtime="20230614 14:09:13.209"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:13.217" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:13.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:13.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:13.210" endtime="20230614 14:09:13.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:13.230" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:13.226" endtime="20230614 14:09:13.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:13.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:13.230" endtime="20230614 14:09:13.231"/>
</kw>
<status status="PASS" starttime="20230614 14:09:13.209" endtime="20230614 14:09:13.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:10.967" endtime="20230614 14:09:13.232"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230614 14:08:38.628" endtime="20230614 14:09:13.237"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230614 14:09:18.309" level="INFO">${random} = 69507</msg>
<status status="PASS" starttime="20230614 14:09:18.308" endtime="20230614 14:09:18.309"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:18.316" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-69507 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:24.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:24.261" level="INFO">${output} = 2023-06-14 14:09:22,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:09:22,785 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:09:18.311" endtime="20230614 14:09:24.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:24.263" level="INFO">2023-06-14 14:09:22,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:09:22,785 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-14 14:09:22,785 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230614 14:09:24.262" endtime="20230614 14:09:24.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:24.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:24.263" endtime="20230614 14:09:24.264"/>
</kw>
<status status="PASS" starttime="20230614 14:09:18.311" endtime="20230614 14:09:24.264"/>
</kw>
<msg timestamp="20230614 14:09:24.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:18.309" endtime="20230614 14:09:24.266"/>
</kw>
<msg timestamp="20230614 14:09:24.266" level="INFO">${output} = 2023-06-14 14:09:22,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-14 14:09:22,785 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230614 14:09:18.309" endtime="20230614 14:09:24.266"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:24.266" endtime="20230614 14:09:24.267"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:24.270" level="INFO">Running command 'cat /tmp/key-69507 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:24.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:24.273" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:09:24.267" endtime="20230614 14:09:24.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:24.275" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:09:24.274" endtime="20230614 14:09:24.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:24.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:24.275" endtime="20230614 14:09:24.276"/>
</kw>
<msg timestamp="20230614 14:09:24.276" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:09:24.267" endtime="20230614 14:09:24.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:24.276" endtime="20230614 14:09:24.277"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:24.280" level="INFO">Running command 'rm /tmp/key-69507 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:24.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:24.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:24.278" endtime="20230614 14:09:24.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:24.286" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:24.286" endtime="20230614 14:09:24.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:24.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:24.287" endtime="20230614 14:09:24.287"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.277" endtime="20230614 14:09:24.288"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:18.307" endtime="20230614 14:09:24.288"/>
</test>
<test id="s1-s9-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:24.297" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:24.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:24.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:24.293" endtime="20230614 14:09:24.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:24.931" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:24.930" endtime="20230614 14:09:24.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:24.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:24.931" endtime="20230614 14:09:24.932"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.292" endtime="20230614 14:09:24.932"/>
</kw>
<msg timestamp="20230614 14:09:24.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:24.292" endtime="20230614 14:09:24.933"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.291" endtime="20230614 14:09:24.933"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:24.937" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:25.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:25.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:24.935" endtime="20230614 14:09:25.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:25.561" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:25.561" endtime="20230614 14:09:25.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:25.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:25.562" endtime="20230614 14:09:25.562"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.934" endtime="20230614 14:09:25.563"/>
</kw>
<msg timestamp="20230614 14:09:25.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:24.934" endtime="20230614 14:09:25.563"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.933" endtime="20230614 14:09:25.564"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:25.569" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:26.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:26.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:25.565" endtime="20230614 14:09:26.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:26.217" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:26.216" endtime="20230614 14:09:26.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:26.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:26.217" endtime="20230614 14:09:26.218"/>
</kw>
<status status="PASS" starttime="20230614 14:09:25.565" endtime="20230614 14:09:26.218"/>
</kw>
<msg timestamp="20230614 14:09:26.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:25.564" endtime="20230614 14:09:26.219"/>
</kw>
<status status="PASS" starttime="20230614 14:09:25.564" endtime="20230614 14:09:26.219"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:26.224" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:26.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:26.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:26.221" endtime="20230614 14:09:26.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:26.867" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:26.866" endtime="20230614 14:09:26.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:26.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:26.868" endtime="20230614 14:09:26.868"/>
</kw>
<status status="PASS" starttime="20230614 14:09:26.221" endtime="20230614 14:09:26.869"/>
</kw>
<msg timestamp="20230614 14:09:26.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:26.220" endtime="20230614 14:09:26.869"/>
</kw>
<status status="PASS" starttime="20230614 14:09:26.219" endtime="20230614 14:09:26.870"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.290" endtime="20230614 14:09:26.870"/>
</kw>
<status status="PASS" starttime="20230614 14:09:24.290" endtime="20230614 14:09:26.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:24.289" endtime="20230614 14:09:26.870"/>
</test>
<test id="s1-s9-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:26.876" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:27.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:27.823" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:09:26.874" endtime="20230614 14:09:27.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:27.825" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:09:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:09:27.824" endtime="20230614 14:09:27.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:27.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:27.825" endtime="20230614 14:09:27.826"/>
</kw>
<msg timestamp="20230614 14:09:27.826" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:09:26.873" endtime="20230614 14:09:27.826"/>
</kw>
<msg timestamp="20230614 14:09:27.827" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:09:26.872" endtime="20230614 14:09:27.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:27.827" endtime="20230614 14:09:27.828"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:27.831" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:27.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:27.834" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:09:27.829" endtime="20230614 14:09:27.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:27.836" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:09:27.835" endtime="20230614 14:09:27.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:27.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:27.836" endtime="20230614 14:09:27.837"/>
</kw>
<msg timestamp="20230614 14:09:27.838" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:09:27.828" endtime="20230614 14:09:27.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:27.838" endtime="20230614 14:09:27.839"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:27.842" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:27.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:27.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:27.840" endtime="20230614 14:09:27.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:27.845" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:27.845" endtime="20230614 14:09:27.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:27.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:27.846" endtime="20230614 14:09:27.847"/>
</kw>
<status status="PASS" starttime="20230614 14:09:27.839" endtime="20230614 14:09:27.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:26.871" endtime="20230614 14:09:27.848"/>
</test>
<test id="s1-s9-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:27.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:28.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:28.714" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:09:27.854" endtime="20230614 14:09:28.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:28.716" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:09:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:09:28.714" endtime="20230614 14:09:28.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:28.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:28.716" endtime="20230614 14:09:28.716"/>
</kw>
<msg timestamp="20230614 14:09:28.717" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:09:27.853" endtime="20230614 14:09:28.717"/>
</kw>
<msg timestamp="20230614 14:09:28.718" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:09:27.852" endtime="20230614 14:09:28.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:28.718" endtime="20230614 14:09:28.718"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:28.722" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:28.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:28.725" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:09:28.719" endtime="20230614 14:09:28.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:28.727" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:09:28.726" endtime="20230614 14:09:28.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:28.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:28.727" endtime="20230614 14:09:28.728"/>
</kw>
<msg timestamp="20230614 14:09:28.728" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:09:28.718" endtime="20230614 14:09:28.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:28.728" endtime="20230614 14:09:28.729"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:28.733" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:28.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:28.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:09:28.730" endtime="20230614 14:09:28.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:28.737" level="INFO"/>
<status status="PASS" starttime="20230614 14:09:28.736" endtime="20230614 14:09:28.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:28.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:28.738" endtime="20230614 14:09:28.738"/>
</kw>
<status status="PASS" starttime="20230614 14:09:28.729" endtime="20230614 14:09:28.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:27.850" endtime="20230614 14:09:28.739"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230614 14:09:18.191" endtime="20230614 14:09:28.743"/>
</suite>
<suite id="s1-s10" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s10-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:09:33.881" endtime="20230614 14:09:33.882"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:09:33.882" endtime="20230614 14:09:33.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:09:33.889" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:09:42.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:09:42.774" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [25].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230614 14:09:33.884" endtime="20230614 14:09:42.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:09:42.776" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [25].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [25]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [25]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [25]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230614 14:09:42.775" endtime="20230614 14:09:42.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:09:42.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:09:42.776" endtime="20230614 14:09:42.777"/>
</kw>
<status status="PASS" starttime="20230614 14:09:33.884" endtime="20230614 14:09:42.777"/>
</kw>
<msg timestamp="20230614 14:09:42.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:09:33.883" endtime="20230614 14:09:42.779"/>
</kw>
<msg timestamp="20230614 14:09:42.779" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [25].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230614 14:09:33.883" endtime="20230614 14:09:42.779"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:09:42.780" endtime="20230614 14:09:42.782"/>
</kw>
<status status="PASS" starttime="20230614 14:09:42.779" endtime="20230614 14:09:42.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:09:33.879" endtime="20230614 14:09:42.782"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230614 14:09:33.813" endtime="20230614 14:09:42.783"/>
</suite>
<suite id="s1-s11" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s11-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:08:25.403" endtime="20230614 14:08:25.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:25.412" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:25.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:25.414" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=79121f2e12d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230614 14:08:25.406" endtime="20230614 14:08:25.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:25.415" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=79121f2e12d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230614 14:08:25.415" endtime="20230614 14:08:25.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:25.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:25.416" endtime="20230614 14:08:25.416"/>
</kw>
<status status="PASS" starttime="20230614 14:08:25.405" endtime="20230614 14:08:25.417"/>
</kw>
<msg timestamp="20230614 14:08:25.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:25.405" endtime="20230614 14:08:25.418"/>
</kw>
<msg timestamp="20230614 14:08:25.419" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=79121f2e12d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230614 14:08:25.405" endtime="20230614 14:08:25.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:25.420" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=79121f2e12d9
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230614 14:08:25.419" endtime="20230614 14:08:25.420"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:08:25.420" endtime="20230614 14:08:25.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:25.425" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:29.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:29.144" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:08:25.423" endtime="20230614 14:08:29.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:29.145" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:08:29.145" endtime="20230614 14:08:29.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:29.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:29.146" endtime="20230614 14:08:29.146"/>
</kw>
<status status="PASS" starttime="20230614 14:08:25.422" endtime="20230614 14:08:29.147"/>
</kw>
<msg timestamp="20230614 14:08:29.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:25.422" endtime="20230614 14:08:29.147"/>
</kw>
<msg timestamp="20230614 14:08:29.148" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:08:25.421" endtime="20230614 14:08:29.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:29.149" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230614 14:08:29.148" endtime="20230614 14:08:29.149"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230614 14:08:29.149" endtime="20230614 14:08:29.149"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230614 14:08:25.401" endtime="20230614 14:08:29.150"/>
</test>
<test id="s1-s11-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:08:29.152" endtime="20230614 14:08:29.153"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:08:29.153" endtime="20230614 14:08:29.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:08:29.160" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:08:33.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:08:33.692" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:08:29.156" endtime="20230614 14:08:33.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:33.693" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:08:33.692" endtime="20230614 14:08:33.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:08:33.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:08:33.694" endtime="20230614 14:08:33.694"/>
</kw>
<status status="PASS" starttime="20230614 14:08:29.154" endtime="20230614 14:08:33.695"/>
</kw>
<msg timestamp="20230614 14:08:33.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:08:29.154" endtime="20230614 14:08:33.699"/>
</kw>
<msg timestamp="20230614 14:08:33.700" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:08:29.153" endtime="20230614 14:08:33.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:08:33.703" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230614 14:08:33.703" endtime="20230614 14:08:33.704"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230614 14:08:33.704" endtime="20230614 14:08:33.704"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230614 14:08:29.151" endtime="20230614 14:08:33.705"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230614 14:08:25.330" endtime="20230614 14:08:33.707"/>
</suite>
<suite id="s1-s12" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s12-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:18.919" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:13:18.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:18.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:18.913" endtime="20230614 14:13:18.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:18.924" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:18.923" endtime="20230614 14:13:18.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:18.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:18.924" endtime="20230614 14:13:18.925"/>
</kw>
<status status="PASS" starttime="20230614 14:13:18.913" endtime="20230614 14:13:18.925"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:18.933" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:31.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:31.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:18.927" endtime="20230614 14:13:31.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:31.136" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:31.135" endtime="20230614 14:13:31.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:31.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:31.136" endtime="20230614 14:13:31.137"/>
</kw>
<status status="PASS" starttime="20230614 14:13:18.926" endtime="20230614 14:13:31.137"/>
</kw>
<msg timestamp="20230614 14:13:31.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:18.926" endtime="20230614 14:13:31.138"/>
</kw>
<msg timestamp="20230614 14:13:31.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:18.925" endtime="20230614 14:13:31.138"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:31.138" endtime="20230614 14:13:31.140"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:31.148" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:31.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:31.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:31.144" endtime="20230614 14:13:31.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:31.155" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:31.154" endtime="20230614 14:13:31.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:31.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:31.156" endtime="20230614 14:13:31.157"/>
</kw>
<status status="PASS" starttime="20230614 14:13:31.140" endtime="20230614 14:13:31.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:18.912" endtime="20230614 14:13:31.158"/>
</test>
<test id="s1-s12-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:31.166" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:13:31.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:31.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:31.163" endtime="20230614 14:13:31.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:31.173" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:31.171" endtime="20230614 14:13:31.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:31.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:31.173" endtime="20230614 14:13:31.175"/>
</kw>
<status status="PASS" starttime="20230614 14:13:31.162" endtime="20230614 14:13:31.176"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:31.182" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:41.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:41.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:31.179" endtime="20230614 14:13:41.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:41.529" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:41.529" endtime="20230614 14:13:41.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:41.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:41.530" endtime="20230614 14:13:41.531"/>
</kw>
<status status="PASS" starttime="20230614 14:13:31.178" endtime="20230614 14:13:41.531"/>
</kw>
<msg timestamp="20230614 14:13:41.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:31.178" endtime="20230614 14:13:41.531"/>
</kw>
<msg timestamp="20230614 14:13:41.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:31.177" endtime="20230614 14:13:41.532"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:41.532" endtime="20230614 14:13:41.532"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:41.537" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:41.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:41.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:41.533" endtime="20230614 14:13:41.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:41.544" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:41.543" endtime="20230614 14:13:41.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:41.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:41.544" endtime="20230614 14:13:41.545"/>
</kw>
<status status="PASS" starttime="20230614 14:13:41.532" endtime="20230614 14:13:41.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:31.161" endtime="20230614 14:13:41.546"/>
</test>
<test id="s1-s12-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:41.556" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:42.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:42.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:41.552" endtime="20230614 14:13:42.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:42.545" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:42.544" endtime="20230614 14:13:42.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:42.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:42.546" endtime="20230614 14:13:42.547"/>
</kw>
<status status="PASS" starttime="20230614 14:13:41.551" endtime="20230614 14:13:42.547"/>
</kw>
<msg timestamp="20230614 14:13:42.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:41.550" endtime="20230614 14:13:42.547"/>
</kw>
<status status="PASS" starttime="20230614 14:13:41.550" endtime="20230614 14:13:42.548"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:42.554" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:43.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:43.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:42.550" endtime="20230614 14:13:43.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:43.490" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:43.489" endtime="20230614 14:13:43.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:43.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:43.491" endtime="20230614 14:13:43.492"/>
</kw>
<status status="PASS" starttime="20230614 14:13:42.549" endtime="20230614 14:13:43.492"/>
</kw>
<msg timestamp="20230614 14:13:43.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:42.549" endtime="20230614 14:13:43.493"/>
</kw>
<status status="PASS" starttime="20230614 14:13:42.548" endtime="20230614 14:13:43.493"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:43.499" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:44.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:44.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:43.495" endtime="20230614 14:13:44.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:44.420" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:44.418" endtime="20230614 14:13:44.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:44.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:44.420" endtime="20230614 14:13:44.422"/>
</kw>
<status status="PASS" starttime="20230614 14:13:43.494" endtime="20230614 14:13:44.422"/>
</kw>
<msg timestamp="20230614 14:13:44.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:43.494" endtime="20230614 14:13:44.422"/>
</kw>
<status status="PASS" starttime="20230614 14:13:43.493" endtime="20230614 14:13:44.423"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:44.429" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:45.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:45.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:44.426" endtime="20230614 14:13:45.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:45.370" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:45.369" endtime="20230614 14:13:45.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:45.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:45.370" endtime="20230614 14:13:45.372"/>
</kw>
<status status="PASS" starttime="20230614 14:13:44.425" endtime="20230614 14:13:45.372"/>
</kw>
<msg timestamp="20230614 14:13:45.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:44.424" endtime="20230614 14:13:45.372"/>
</kw>
<status status="PASS" starttime="20230614 14:13:44.423" endtime="20230614 14:13:45.373"/>
</kw>
<status status="PASS" starttime="20230614 14:13:41.549" endtime="20230614 14:13:45.373"/>
</kw>
<status status="PASS" starttime="20230614 14:13:41.549" endtime="20230614 14:13:45.373"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:41.548" endtime="20230614 14:13:45.374"/>
</test>
<test id="s1-s12-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:45.384" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:46.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:46.567" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:13:45.381" endtime="20230614 14:13:46.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:46.568" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:13:46.567" endtime="20230614 14:13:46.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:46.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:46.568" endtime="20230614 14:13:46.569"/>
</kw>
<status status="PASS" starttime="20230614 14:13:45.380" endtime="20230614 14:13:46.570"/>
</kw>
<msg timestamp="20230614 14:13:46.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:45.380" endtime="20230614 14:13:46.570"/>
</kw>
<msg timestamp="20230614 14:13:46.570" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:13:45.379" endtime="20230614 14:13:46.570"/>
</kw>
<msg timestamp="20230614 14:13:46.571" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:13:45.377" endtime="20230614 14:13:46.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:46.571" endtime="20230614 14:13:46.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:46.572" endtime="20230614 14:13:46.573"/>
</kw>
<msg timestamp="20230614 14:13:46.573" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230614 14:13:45.377" endtime="20230614 14:13:46.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230614 14:13:46.573" endtime="20230614 14:13:46.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:45.375" endtime="20230614 14:13:46.574"/>
</test>
<test id="s1-s12-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:46.581" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:13:46.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:46.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:46.578" endtime="20230614 14:13:46.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:46.585" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:46.585" endtime="20230614 14:13:46.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:46.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:46.586" endtime="20230614 14:13:46.587"/>
</kw>
<status status="PASS" starttime="20230614 14:13:46.577" endtime="20230614 14:13:46.587"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:46.596" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:48.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:48.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:46.593" endtime="20230614 14:13:48.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:48.875" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:48.874" endtime="20230614 14:13:48.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:48.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:48.876" endtime="20230614 14:13:48.876"/>
</kw>
<msg timestamp="20230614 14:13:48.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:46.592" endtime="20230614 14:13:48.877"/>
</kw>
<msg timestamp="20230614 14:13:48.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:46.587" endtime="20230614 14:13:48.877"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:48.877" endtime="20230614 14:13:48.878"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:48.887" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:48.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:48.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:48.883" endtime="20230614 14:13:48.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:48.896" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:48.893" endtime="20230614 14:13:48.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:48.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:48.896" endtime="20230614 14:13:48.898"/>
</kw>
<status status="PASS" starttime="20230614 14:13:48.878" endtime="20230614 14:13:48.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:46.576" endtime="20230614 14:13:48.899"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230614 14:13:18.798" endtime="20230614 14:13:48.903"/>
</suite>
<suite id="s1-s13" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s13-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:54.382" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:00.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:00.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:54.377" endtime="20230614 14:14:00.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:00.195" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:00.194" endtime="20230614 14:14:00.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:00.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:00.196" endtime="20230614 14:14:00.196"/>
</kw>
<status status="PASS" starttime="20230614 14:13:54.376" endtime="20230614 14:14:00.197"/>
</kw>
<msg timestamp="20230614 14:14:00.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:54.376" endtime="20230614 14:14:00.197"/>
</kw>
<msg timestamp="20230614 14:14:00.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:54.374" endtime="20230614 14:14:00.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:00.198" endtime="20230614 14:14:00.199"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:00.205" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:06.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:06.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:00.201" endtime="20230614 14:14:06.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:06.446" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:06.445" endtime="20230614 14:14:06.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:06.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:06.447" endtime="20230614 14:14:06.447"/>
</kw>
<status status="PASS" starttime="20230614 14:14:00.200" endtime="20230614 14:14:06.448"/>
</kw>
<msg timestamp="20230614 14:14:06.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:00.200" endtime="20230614 14:14:06.448"/>
</kw>
<msg timestamp="20230614 14:14:06.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:00.199" endtime="20230614 14:14:06.449"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:06.451" endtime="20230614 14:14:06.452"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:54.373" endtime="20230614 14:14:06.452"/>
</test>
<test id="s1-s13-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:06.459" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:14:06.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:06.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:06.455" endtime="20230614 14:14:06.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:06.464" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:06.463" endtime="20230614 14:14:06.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:06.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:06.465" endtime="20230614 14:14:06.466"/>
</kw>
<status status="PASS" starttime="20230614 14:14:06.454" endtime="20230614 14:14:06.466"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:06.474" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:16.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:16.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:06.470" endtime="20230614 14:14:16.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:16.375" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:16.372" endtime="20230614 14:14:16.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:16.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:16.375" endtime="20230614 14:14:16.378"/>
</kw>
<status status="PASS" starttime="20230614 14:14:06.469" endtime="20230614 14:14:16.378"/>
</kw>
<msg timestamp="20230614 14:14:16.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:06.468" endtime="20230614 14:14:16.379"/>
</kw>
<msg timestamp="20230614 14:14:16.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:06.467" endtime="20230614 14:14:16.379"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:16.380" endtime="20230614 14:14:16.380"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:16.386" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:16.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:16.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:16.382" endtime="20230614 14:14:16.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:16.392" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:16.391" endtime="20230614 14:14:16.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:16.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:16.394" endtime="20230614 14:14:16.395"/>
</kw>
<status status="PASS" starttime="20230614 14:14:16.381" endtime="20230614 14:14:16.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:06.453" endtime="20230614 14:14:16.396"/>
</test>
<test id="s1-s13-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:16.405" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:22.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:22.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:16.402" endtime="20230614 14:14:22.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:22.333" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:22.332" endtime="20230614 14:14:22.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:22.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:22.334" endtime="20230614 14:14:22.335"/>
</kw>
<status status="PASS" starttime="20230614 14:14:16.401" endtime="20230614 14:14:22.335"/>
</kw>
<msg timestamp="20230614 14:14:22.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:16.400" endtime="20230614 14:14:22.335"/>
</kw>
<msg timestamp="20230614 14:14:22.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:16.399" endtime="20230614 14:14:22.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:22.336" endtime="20230614 14:14:22.337"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:16.398" endtime="20230614 14:14:22.337"/>
</test>
<test id="s1-s13-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:22.345" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:14:22.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:22.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:22.341" endtime="20230614 14:14:22.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:22.352" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:22.350" endtime="20230614 14:14:22.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:22.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:22.352" endtime="20230614 14:14:22.353"/>
</kw>
<status status="PASS" starttime="20230614 14:14:22.340" endtime="20230614 14:14:22.353"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:22.359" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:31.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:31.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:22.356" endtime="20230614 14:14:31.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:31.191" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:31.190" endtime="20230614 14:14:31.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:31.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:31.191" endtime="20230614 14:14:31.192"/>
</kw>
<status status="PASS" starttime="20230614 14:14:22.355" endtime="20230614 14:14:31.193"/>
</kw>
<msg timestamp="20230614 14:14:31.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:22.354" endtime="20230614 14:14:31.193"/>
</kw>
<msg timestamp="20230614 14:14:31.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:22.354" endtime="20230614 14:14:31.193"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:31.194" endtime="20230614 14:14:31.194"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:31.199" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:31.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:31.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:31.195" endtime="20230614 14:14:31.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:31.205" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:31.204" endtime="20230614 14:14:31.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:31.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:31.206" endtime="20230614 14:14:31.207"/>
</kw>
<status status="PASS" starttime="20230614 14:14:31.195" endtime="20230614 14:14:31.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:22.339" endtime="20230614 14:14:31.208"/>
</test>
<test id="s1-s13-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:31.216" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:32.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:32.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:31.213" endtime="20230614 14:14:32.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:32.062" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:32.061" endtime="20230614 14:14:32.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:32.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:32.064" endtime="20230614 14:14:32.066"/>
</kw>
<status status="PASS" starttime="20230614 14:14:31.213" endtime="20230614 14:14:32.067"/>
</kw>
<msg timestamp="20230614 14:14:32.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:31.212" endtime="20230614 14:14:32.067"/>
</kw>
<status status="PASS" starttime="20230614 14:14:31.211" endtime="20230614 14:14:32.068"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:32.077" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:32.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:32.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:32.070" endtime="20230614 14:14:32.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:32.849" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:32.848" endtime="20230614 14:14:32.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:32.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:32.849" endtime="20230614 14:14:32.851"/>
</kw>
<status status="PASS" starttime="20230614 14:14:32.069" endtime="20230614 14:14:32.851"/>
</kw>
<msg timestamp="20230614 14:14:32.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:32.068" endtime="20230614 14:14:32.851"/>
</kw>
<status status="PASS" starttime="20230614 14:14:32.068" endtime="20230614 14:14:32.852"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:32.857" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:33.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:33.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:32.854" endtime="20230614 14:14:33.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:33.762" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:33.760" endtime="20230614 14:14:33.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:33.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:33.762" endtime="20230614 14:14:33.763"/>
</kw>
<status status="PASS" starttime="20230614 14:14:32.853" endtime="20230614 14:14:33.764"/>
</kw>
<msg timestamp="20230614 14:14:33.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:32.853" endtime="20230614 14:14:33.764"/>
</kw>
<status status="PASS" starttime="20230614 14:14:32.852" endtime="20230614 14:14:33.764"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:33.770" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:34.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:34.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:33.767" endtime="20230614 14:14:34.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:34.632" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:34.631" endtime="20230614 14:14:34.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:34.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:34.632" endtime="20230614 14:14:34.633"/>
</kw>
<status status="PASS" starttime="20230614 14:14:33.766" endtime="20230614 14:14:34.634"/>
</kw>
<msg timestamp="20230614 14:14:34.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:33.766" endtime="20230614 14:14:34.634"/>
</kw>
<status status="PASS" starttime="20230614 14:14:33.764" endtime="20230614 14:14:34.634"/>
</kw>
<status status="PASS" starttime="20230614 14:14:31.211" endtime="20230614 14:14:34.634"/>
</kw>
<status status="PASS" starttime="20230614 14:14:31.210" endtime="20230614 14:14:34.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:31.209" endtime="20230614 14:14:34.635"/>
</test>
<test id="s1-s13-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:34.647" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:35.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:35.612" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:14:34.645" endtime="20230614 14:14:35.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:35.614" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:14:35.613" endtime="20230614 14:14:35.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:35.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:35.615" endtime="20230614 14:14:35.615"/>
</kw>
<status status="PASS" starttime="20230614 14:14:34.644" endtime="20230614 14:14:35.616"/>
</kw>
<msg timestamp="20230614 14:14:35.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:34.644" endtime="20230614 14:14:35.616"/>
</kw>
<msg timestamp="20230614 14:14:35.616" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:14:34.639" endtime="20230614 14:14:35.616"/>
</kw>
<msg timestamp="20230614 14:14:35.617" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230614 14:14:34.638" endtime="20230614 14:14:35.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:35.617" endtime="20230614 14:14:35.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:35.618" endtime="20230614 14:14:35.619"/>
</kw>
<msg timestamp="20230614 14:14:35.619" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230614 14:14:34.637" endtime="20230614 14:14:35.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230614 14:14:35.619" endtime="20230614 14:14:35.620"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:34.637" endtime="20230614 14:14:35.620"/>
</test>
<test id="s1-s13-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:35.628" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230614 14:14:35.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:35.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:35.624" endtime="20230614 14:14:35.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:35.632" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:35.631" endtime="20230614 14:14:35.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:35.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:35.632" endtime="20230614 14:14:35.633"/>
</kw>
<status status="PASS" starttime="20230614 14:14:35.623" endtime="20230614 14:14:35.633"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:35.639" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:36.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:36.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:35.636" endtime="20230614 14:14:36.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:36.962" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:36.962" endtime="20230614 14:14:36.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:36.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:36.963" endtime="20230614 14:14:36.964"/>
</kw>
<msg timestamp="20230614 14:14:36.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:35.635" endtime="20230614 14:14:36.964"/>
</kw>
<msg timestamp="20230614 14:14:36.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:35.634" endtime="20230614 14:14:36.965"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:36.965" endtime="20230614 14:14:36.966"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:36.972" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:36.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:36.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:36.968" endtime="20230614 14:14:36.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:36.976" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:36.975" endtime="20230614 14:14:36.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:36.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:36.976" endtime="20230614 14:14:36.977"/>
</kw>
<status status="PASS" starttime="20230614 14:14:36.967" endtime="20230614 14:14:36.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:35.622" endtime="20230614 14:14:36.978"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230614 14:13:54.246" endtime="20230614 14:14:36.980"/>
</suite>
<suite id="s1-s14" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s14-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230614 14:14:42.407" level="INFO">${random} = 39529</msg>
<status status="PASS" starttime="20230614 14:14:42.406" endtime="20230614 14:14:42.407"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:42.414" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-39529 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:51.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:51.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:42.409" endtime="20230614 14:14:51.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:51.173" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:51.172" endtime="20230614 14:14:51.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:51.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:51.174" endtime="20230614 14:14:51.175"/>
</kw>
<status status="PASS" starttime="20230614 14:14:42.408" endtime="20230614 14:14:51.175"/>
</kw>
<msg timestamp="20230614 14:14:51.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:42.408" endtime="20230614 14:14:51.176"/>
</kw>
<msg timestamp="20230614 14:14:51.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:42.407" endtime="20230614 14:14:51.176"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:51.176" endtime="20230614 14:14:51.177"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:51.182" level="INFO">Running command 'cat /tmp/key-39529 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:51.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:51.185" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:14:51.178" endtime="20230614 14:14:51.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:51.188" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:14:51.186" endtime="20230614 14:14:51.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:51.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:51.188" endtime="20230614 14:14:51.189"/>
</kw>
<msg timestamp="20230614 14:14:51.190" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:14:51.177" endtime="20230614 14:14:51.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:51.190" endtime="20230614 14:14:51.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:51.195" level="INFO">Running command 'rm /tmp/key-39529 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:51.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:51.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:51.192" endtime="20230614 14:14:51.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:51.202" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:51.200" endtime="20230614 14:14:51.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:51.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:51.203" endtime="20230614 14:14:51.203"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.191" endtime="20230614 14:14:51.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:42.405" endtime="20230614 14:14:51.204"/>
</test>
<test id="s1-s14-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:51.215" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:51.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:51.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:51.211" endtime="20230614 14:14:51.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:51.987" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:51.987" endtime="20230614 14:14:51.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:51.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:51.988" endtime="20230614 14:14:51.989"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.211" endtime="20230614 14:14:51.989"/>
</kw>
<msg timestamp="20230614 14:14:51.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:51.210" endtime="20230614 14:14:51.989"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.210" endtime="20230614 14:14:51.990"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:51.996" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:52.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:52.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:51.991" endtime="20230614 14:14:52.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:52.767" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:52.766" endtime="20230614 14:14:52.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:52.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:52.768" endtime="20230614 14:14:52.769"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.991" endtime="20230614 14:14:52.769"/>
</kw>
<msg timestamp="20230614 14:14:52.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:51.990" endtime="20230614 14:14:52.769"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.990" endtime="20230614 14:14:52.770"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:52.775" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:53.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:53.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:52.772" endtime="20230614 14:14:53.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:53.456" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:53.455" endtime="20230614 14:14:53.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:53.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:53.456" endtime="20230614 14:14:53.457"/>
</kw>
<status status="PASS" starttime="20230614 14:14:52.771" endtime="20230614 14:14:53.457"/>
</kw>
<msg timestamp="20230614 14:14:53.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:52.770" endtime="20230614 14:14:53.457"/>
</kw>
<status status="PASS" starttime="20230614 14:14:52.770" endtime="20230614 14:14:53.458"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:53.463" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:54.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:54.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:53.460" endtime="20230614 14:14:54.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:54.254" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:54.253" endtime="20230614 14:14:54.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:54.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:54.254" endtime="20230614 14:14:54.255"/>
</kw>
<status status="PASS" starttime="20230614 14:14:53.459" endtime="20230614 14:14:54.255"/>
</kw>
<msg timestamp="20230614 14:14:54.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:14:53.459" endtime="20230614 14:14:54.255"/>
</kw>
<status status="PASS" starttime="20230614 14:14:53.458" endtime="20230614 14:14:54.256"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.209" endtime="20230614 14:14:54.256"/>
</kw>
<status status="PASS" starttime="20230614 14:14:51.208" endtime="20230614 14:14:54.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:51.207" endtime="20230614 14:14:54.256"/>
</test>
<test id="s1-s14-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:54.264" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:55.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:55.332" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:14:54.260" endtime="20230614 14:14:55.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:55.334" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:14:55 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:14:55.332" endtime="20230614 14:14:55.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:55.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:55.334" endtime="20230614 14:14:55.335"/>
</kw>
<msg timestamp="20230614 14:14:55.336" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:14:54.259" endtime="20230614 14:14:55.336"/>
</kw>
<msg timestamp="20230614 14:14:55.337" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:30 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:14:54.259" endtime="20230614 14:14:55.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:55.337" endtime="20230614 14:14:55.337"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:55.342" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:55.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:55.346" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:14:55.339" endtime="20230614 14:14:55.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:55.348" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:14:55.347" endtime="20230614 14:14:55.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:55.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:55.349" endtime="20230614 14:14:55.350"/>
</kw>
<msg timestamp="20230614 14:14:55.350" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:14:55.338" endtime="20230614 14:14:55.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:55.351" endtime="20230614 14:14:55.351"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:55.355" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:55.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:55.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:55.352" endtime="20230614 14:14:55.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:55.360" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:55.360" endtime="20230614 14:14:55.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:55.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:55.361" endtime="20230614 14:14:55.361"/>
</kw>
<status status="PASS" starttime="20230614 14:14:55.351" endtime="20230614 14:14:55.362"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:54.258" endtime="20230614 14:14:55.362"/>
</test>
<test id="s1-s14-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:55.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:56.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:56.602" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:14:55.366" endtime="20230614 14:14:56.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:56.605" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:14:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:14:56.604" endtime="20230614 14:14:56.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:56.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:56.605" endtime="20230614 14:14:56.606"/>
</kw>
<msg timestamp="20230614 14:14:56.607" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:14:55.365" endtime="20230614 14:14:56.607"/>
</kw>
<msg timestamp="20230614 14:14:56.608" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:14:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:14:55.364" endtime="20230614 14:14:56.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:56.608" endtime="20230614 14:14:56.609"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:56.615" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:56.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:56.618" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:14:56.612" endtime="20230614 14:14:56.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:56.620" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:14:56.619" endtime="20230614 14:14:56.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:56.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:56.621" endtime="20230614 14:14:56.621"/>
</kw>
<msg timestamp="20230614 14:14:56.622" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:14:56.610" endtime="20230614 14:14:56.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:14:56.622" endtime="20230614 14:14:56.623"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:14:56.626" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:14:56.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:14:56.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:14:56.624" endtime="20230614 14:14:56.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:14:56.631" level="INFO"/>
<status status="PASS" starttime="20230614 14:14:56.630" endtime="20230614 14:14:56.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:14:56.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:14:56.631" endtime="20230614 14:14:56.632"/>
</kw>
<status status="PASS" starttime="20230614 14:14:56.623" endtime="20230614 14:14:56.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:14:55.363" endtime="20230614 14:14:56.632"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230614 14:14:42.275" endtime="20230614 14:14:56.634"/>
</suite>
<suite id="s1-s15" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s15-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:15:01.853" endtime="20230614 14:15:01.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:01.862" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:08.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:15:08.653" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:01.856" endtime="20230614 14:15:08.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:08.655" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:08.654" endtime="20230614 14:15:08.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:15:08.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:15:08.655" endtime="20230614 14:15:08.656"/>
</kw>
<status status="PASS" starttime="20230614 14:15:01.855" endtime="20230614 14:15:08.657"/>
</kw>
<msg timestamp="20230614 14:15:08.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:15:01.855" endtime="20230614 14:15:08.657"/>
</kw>
<msg timestamp="20230614 14:15:08.658" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:01.854" endtime="20230614 14:15:08.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:08.659" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:08.658" endtime="20230614 14:15:08.659"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230614 14:15:08.659" endtime="20230614 14:15:08.660"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230614 14:15:01.852" endtime="20230614 14:15:08.660"/>
</test>
<test id="s1-s15-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:15:08.664" endtime="20230614 14:15:08.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:08.671" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:14.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:15:14.014" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:08.667" endtime="20230614 14:15:14.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:14.015" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:14.014" endtime="20230614 14:15:14.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:15:14.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:15:14.016" endtime="20230614 14:15:14.017"/>
</kw>
<status status="PASS" starttime="20230614 14:15:08.666" endtime="20230614 14:15:14.017"/>
</kw>
<msg timestamp="20230614 14:15:14.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:15:08.665" endtime="20230614 14:15:14.017"/>
</kw>
<msg timestamp="20230614 14:15:14.018" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:08.664" endtime="20230614 14:15:14.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:14.018" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230614 14:15:14.018" endtime="20230614 14:15:14.019"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230614 14:15:14.019" endtime="20230614 14:15:14.020"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230614 14:15:08.662" endtime="20230614 14:15:14.021"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230614 14:15:01.765" endtime="20230614 14:15:14.023"/>
</suite>
<suite id="s1-s16" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s16-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="39">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:19.348" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:25.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:15:25.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:15:19.340" endtime="20230614 14:15:25.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:25.089" level="INFO"/>
<status status="PASS" starttime="20230614 14:15:25.088" endtime="20230614 14:15:25.089"/>
</kw>
<msg timestamp="20230614 14:15:25.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:15:19.340" endtime="20230614 14:15:25.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:15:25.090" endtime="20230614 14:15:25.090"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:25.101" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:30.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:15:30.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:15:25.091" endtime="20230614 14:15:30.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:30.844" level="INFO"/>
<status status="PASS" starttime="20230614 14:15:30.843" endtime="20230614 14:15:30.844"/>
</kw>
<msg timestamp="20230614 14:15:30.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:15:25.091" endtime="20230614 14:15:30.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:15:30.845" endtime="20230614 14:15:30.846"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:30.851" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:36.536" level="INFO">${rc} = 255</msg>
<msg timestamp="20230614 14:15:36.536" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230614 14:15:30.848" endtime="20230614 14:15:36.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:36.538" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230614 14:15:36.537" endtime="20230614 14:15:36.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:15:36.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:15:36.539" endtime="20230614 14:15:36.540"/>
</kw>
<msg timestamp="20230614 14:15:36.540" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230614 14:15:30.846" endtime="20230614 14:15:36.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:15:36.541" endtime="20230614 14:15:36.541"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:15:19.339" endtime="20230614 14:15:36.542"/>
</test>
<test id="s1-s16-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="55">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:36.549" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:42.100" level="INFO">${rc} = 255</msg>
<msg timestamp="20230614 14:15:42.100" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230614 14:15:36.546" endtime="20230614 14:15:42.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:42.102" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230614 14:15:42.101" endtime="20230614 14:15:42.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:15:42.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:15:42.102" endtime="20230614 14:15:42.103"/>
</kw>
<msg timestamp="20230614 14:15:42.104" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230614 14:15:36.545" endtime="20230614 14:15:42.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:15:42.104" endtime="20230614 14:15:42.105"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:15:36.544" endtime="20230614 14:15:42.105"/>
</test>
<test id="s1-s16-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="72">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:42.112" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:47.017" level="INFO">${rc} = 255</msg>
<msg timestamp="20230614 14:15:47.018" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230614 14:15:42.109" endtime="20230614 14:15:47.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:47.019" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230614 14:15:47.018" endtime="20230614 14:15:47.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:15:47.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:15:47.020" endtime="20230614 14:15:47.021"/>
</kw>
<msg timestamp="20230614 14:15:47.021" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230614 14:15:42.108" endtime="20230614 14:15:47.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:15:47.021" endtime="20230614 14:15:47.022"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:15:42.107" endtime="20230614 14:15:47.022"/>
</test>
<test id="s1-s16-t4" name="Attempt to delete when snapshot feature is disabled" line="85">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:47.030" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:15:52.355" level="INFO">${rc} = 255</msg>
<msg timestamp="20230614 14:15:52.355" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230614 14:15:47.025" endtime="20230614 14:15:52.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:15:52.357" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230614 14:15:52.356" endtime="20230614 14:15:52.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:15:52.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:15:52.357" endtime="20230614 14:15:52.358"/>
</kw>
<msg timestamp="20230614 14:15:52.359" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230614 14:15:47.024" endtime="20230614 14:15:52.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:15:52.359" endtime="20230614 14:15:52.359"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:15:47.023" endtime="20230614 14:15:52.360"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20230614 14:15:19.260" endtime="20230614 14:15:52.362"/>
</suite>
<suite id="s1-s17" name="Prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s17-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230614 14:15:57.681" endtime="20230614 14:15:57.682"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230614 14:15:57.682" endtime="20230614 14:15:57.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:15:57.689" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:16:08.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:16:08.858" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230614 14:15:57.684" endtime="20230614 14:16:08.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:16:08.860" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230614 14:16:08.859" endtime="20230614 14:16:08.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:16:08.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:16:08.860" endtime="20230614 14:16:08.861"/>
</kw>
<status status="PASS" starttime="20230614 14:15:57.684" endtime="20230614 14:16:08.862"/>
</kw>
<msg timestamp="20230614 14:16:08.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:15:57.683" endtime="20230614 14:16:08.862"/>
</kw>
<msg timestamp="20230614 14:16:08.862" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230614 14:15:57.682" endtime="20230614 14:16:08.862"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:16:08.863" endtime="20230614 14:16:08.864"/>
</kw>
<status status="PASS" starttime="20230614 14:16:08.863" endtime="20230614 14:16:08.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:15:57.680" endtime="20230614 14:16:08.864"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230614 14:15:57.611" endtime="20230614 14:16:08.867"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230614 14:12:50.454" level="INFO">${random} = 12877</msg>
<status status="PASS" starttime="20230614 14:12:50.453" endtime="20230614 14:12:50.454"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:12:50.462" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-12877 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:00.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:00.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:12:50.456" endtime="20230614 14:13:00.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:00.608" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:00.603" endtime="20230614 14:13:00.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:00.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:00.609" endtime="20230614 14:13:00.610"/>
</kw>
<status status="PASS" starttime="20230614 14:12:50.455" endtime="20230614 14:13:00.611"/>
</kw>
<msg timestamp="20230614 14:13:00.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:12:50.455" endtime="20230614 14:13:00.611"/>
</kw>
<msg timestamp="20230614 14:13:00.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:12:50.454" endtime="20230614 14:13:00.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:00.612" endtime="20230614 14:13:00.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:00.619" level="INFO">Running command 'cat /tmp/key-12877 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:00.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:00.624" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:13:00.615" endtime="20230614 14:13:00.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:00.632" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:13:00.631" endtime="20230614 14:13:00.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:00.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:00.633" endtime="20230614 14:13:00.634"/>
</kw>
<msg timestamp="20230614 14:13:00.635" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:13:00.613" endtime="20230614 14:13:00.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:00.635" endtime="20230614 14:13:00.636"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:00.641" level="INFO">Running command 'rm /tmp/key-12877 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:00.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:00.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:00.637" endtime="20230614 14:13:00.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:00.648" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:00.647" endtime="20230614 14:13:00.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:00.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:00.649" endtime="20230614 14:13:00.650"/>
</kw>
<status status="PASS" starttime="20230614 14:13:00.636" endtime="20230614 14:13:00.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:12:50.452" endtime="20230614 14:13:00.651"/>
</test>
<test id="s1-s18-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:00.661" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:02.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:02.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:00.658" endtime="20230614 14:13:02.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:02.480" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:02.478" endtime="20230614 14:13:02.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:02.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:02.481" endtime="20230614 14:13:02.482"/>
</kw>
<status status="PASS" starttime="20230614 14:13:00.658" endtime="20230614 14:13:02.483"/>
</kw>
<msg timestamp="20230614 14:13:02.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:00.657" endtime="20230614 14:13:02.483"/>
</kw>
<status status="PASS" starttime="20230614 14:13:00.656" endtime="20230614 14:13:02.483"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:02.490" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:03.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:03.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:02.486" endtime="20230614 14:13:03.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:03.421" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:03.420" endtime="20230614 14:13:03.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:03.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:03.421" endtime="20230614 14:13:03.422"/>
</kw>
<status status="PASS" starttime="20230614 14:13:02.485" endtime="20230614 14:13:03.422"/>
</kw>
<msg timestamp="20230614 14:13:03.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:02.484" endtime="20230614 14:13:03.423"/>
</kw>
<status status="PASS" starttime="20230614 14:13:02.484" endtime="20230614 14:13:03.423"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:03.430" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:04.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:04.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:03.425" endtime="20230614 14:13:04.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:04.404" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:04.403" endtime="20230614 14:13:04.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:04.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:04.405" endtime="20230614 14:13:04.405"/>
</kw>
<status status="PASS" starttime="20230614 14:13:03.424" endtime="20230614 14:13:04.406"/>
</kw>
<msg timestamp="20230614 14:13:04.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:03.424" endtime="20230614 14:13:04.406"/>
</kw>
<status status="PASS" starttime="20230614 14:13:03.423" endtime="20230614 14:13:04.406"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:04.412" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:05.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:05.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:04.408" endtime="20230614 14:13:05.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:05.358" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:05.357" endtime="20230614 14:13:05.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:05.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:05.358" endtime="20230614 14:13:05.359"/>
</kw>
<status status="PASS" starttime="20230614 14:13:04.407" endtime="20230614 14:13:05.360"/>
</kw>
<msg timestamp="20230614 14:13:05.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230614 14:13:04.407" endtime="20230614 14:13:05.360"/>
</kw>
<status status="PASS" starttime="20230614 14:13:04.406" endtime="20230614 14:13:05.360"/>
</kw>
<status status="PASS" starttime="20230614 14:13:00.655" endtime="20230614 14:13:05.361"/>
</kw>
<status status="PASS" starttime="20230614 14:13:00.655" endtime="20230614 14:13:05.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:00.653" endtime="20230614 14:13:05.361"/>
</test>
<test id="s1-s18-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:05.370" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:12.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:12.476" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:13:05.366" endtime="20230614 14:13:12.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:12.477" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:13:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:13:12.476" endtime="20230614 14:13:12.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:12.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:12.478" endtime="20230614 14:13:12.479"/>
</kw>
<msg timestamp="20230614 14:13:12.479" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:13:05.365" endtime="20230614 14:13:12.479"/>
</kw>
<msg timestamp="20230614 14:13:12.479" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:13:05.364" endtime="20230614 14:13:12.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:12.480" endtime="20230614 14:13:12.480"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:12.484" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:12.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:12.488" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:13:12.481" endtime="20230614 14:13:12.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:12.489" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:13:12.488" endtime="20230614 14:13:12.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:12.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:12.489" endtime="20230614 14:13:12.490"/>
</kw>
<msg timestamp="20230614 14:13:12.491" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230614 14:13:12.480" endtime="20230614 14:13:12.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:12.491" endtime="20230614 14:13:12.491"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:12.496" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:12.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:12.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:12.493" endtime="20230614 14:13:12.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:12.500" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:12.500" endtime="20230614 14:13:12.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:12.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:12.501" endtime="20230614 14:13:12.502"/>
</kw>
<status status="PASS" starttime="20230614 14:13:12.492" endtime="20230614 14:13:12.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:05.363" endtime="20230614 14:13:12.502"/>
</test>
<test id="s1-s18-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:12.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:13.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:13.587" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:13:12.508" endtime="20230614 14:13:13.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:13.589" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 14 Jun 2023 14:13:13 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230614 14:13:13.588" endtime="20230614 14:13:13.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:13.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:13.589" endtime="20230614 14:13:13.590"/>
</kw>
<msg timestamp="20230614 14:13:13.591" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:13:12.506" endtime="20230614 14:13:13.591"/>
</kw>
<msg timestamp="20230614 14:13:13.591" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 14 Jun 2023 14:09:13 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230614 14:13:12.506" endtime="20230614 14:13:13.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:13.591" endtime="20230614 14:13:13.592"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:13.596" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:13.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:13.600" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:13:13.593" endtime="20230614 14:13:13.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:13.604" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:13:13.601" endtime="20230614 14:13:13.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:13.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:13.606" endtime="20230614 14:13:13.607"/>
</kw>
<msg timestamp="20230614 14:13:13.608" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230614 14:13:13.592" endtime="20230614 14:13:13.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230614 14:13:13.608" endtime="20230614 14:13:13.609"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230614 14:13:13.613" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230614 14:13:13.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20230614 14:13:13.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230614 14:13:13.610" endtime="20230614 14:13:13.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230614 14:13:13.620" level="INFO"/>
<status status="PASS" starttime="20230614 14:13:13.619" endtime="20230614 14:13:13.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230614 14:13:13.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 14:13:13.621" endtime="20230614 14:13:13.622"/>
</kw>
<status status="PASS" starttime="20230614 14:13:13.609" endtime="20230614 14:13:13.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230614 14:13:12.505" endtime="20230614 14:13:13.623"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230614 14:12:50.321" endtime="20230614 14:13:13.625"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="620730"/>
</suite>
<statistics>
<total>
<stat pass="67" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="67" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s6" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s8" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s11" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="5" fail="0" skip="0" id="s1-s12" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s13" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s14" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s15" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s16" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Prepare">upgrade.Prepare</stat>
<stat pass="4" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
