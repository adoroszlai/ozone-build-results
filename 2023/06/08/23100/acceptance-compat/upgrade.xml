<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230608 09:31:45.697" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:29.858" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:32.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:32.611" level="INFO">${output} = 2023-06-08 09:25:32,519 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230608 09:25:29.853" endtime="20230608 09:25:32.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:32.612" level="INFO">2023-06-08 09:25:32,519 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230608 09:25:32.611" endtime="20230608 09:25:32.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:32.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:32.612" endtime="20230608 09:25:32.613"/>
</kw>
<status status="PASS" starttime="20230608 09:25:29.853" endtime="20230608 09:25:32.613"/>
</kw>
<msg timestamp="20230608 09:25:32.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:29.853" endtime="20230608 09:25:32.615"/>
</kw>
<msg timestamp="20230608 09:25:32.615" level="INFO">${output} = 2023-06-08 09:25:32,519 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230608 09:25:29.852" endtime="20230608 09:25:32.615"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:32.615" endtime="20230608 09:25:32.620"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:32.625" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:35.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:35.338" level="INFO">${output} = 2023-06-08 09:25:35,271 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230608 09:25:32.622" endtime="20230608 09:25:35.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:35.340" level="INFO">2023-06-08 09:25:35,271 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230608 09:25:35.339" endtime="20230608 09:25:35.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:35.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:35.340" endtime="20230608 09:25:35.341"/>
</kw>
<status status="PASS" starttime="20230608 09:25:32.621" endtime="20230608 09:25:35.342"/>
</kw>
<msg timestamp="20230608 09:25:35.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:32.621" endtime="20230608 09:25:35.342"/>
</kw>
<msg timestamp="20230608 09:25:35.342" level="INFO">${output} = 2023-06-08 09:25:35,271 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230608 09:25:32.620" endtime="20230608 09:25:35.342"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:35.343" endtime="20230608 09:25:35.343"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:29.851" endtime="20230608 09:25:35.343"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:35.349" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230608 09:25:35.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:35.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:35.347" endtime="20230608 09:25:35.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:35.353" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:35.352" endtime="20230608 09:25:35.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:35.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:35.353" endtime="20230608 09:25:35.354"/>
</kw>
<status status="PASS" starttime="20230608 09:25:35.346" endtime="20230608 09:25:35.354"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:35.359" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:41.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:41.601" level="INFO">${output} = 2023-06-08 09:25:39,115 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:25:39,191 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230608 09:25:35.356" endtime="20230608 09:25:41.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:41.603" level="INFO">2023-06-08 09:25:39,115 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:25:39,191 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-08 09:25:39,191 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-08 09:25:39,535 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230608 09:25:41.602" endtime="20230608 09:25:41.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:41.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:41.603" endtime="20230608 09:25:41.604"/>
</kw>
<status status="PASS" starttime="20230608 09:25:35.355" endtime="20230608 09:25:41.604"/>
</kw>
<msg timestamp="20230608 09:25:41.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:35.355" endtime="20230608 09:25:41.604"/>
</kw>
<msg timestamp="20230608 09:25:41.605" level="INFO">${output} = 2023-06-08 09:25:39,115 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:25:39,191 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230608 09:25:35.354" endtime="20230608 09:25:41.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:41.605" endtime="20230608 09:25:41.605"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:41.609" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:41.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:41.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:41.606" endtime="20230608 09:25:41.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:41.612" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:41.611" endtime="20230608 09:25:41.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:41.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:41.612" endtime="20230608 09:25:41.613"/>
</kw>
<status status="PASS" starttime="20230608 09:25:41.605" endtime="20230608 09:25:41.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:35.345" endtime="20230608 09:25:41.613"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:41.618" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:44.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:44.472" level="INFO">${output} = 2023-06-08 09:25:44,412 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230608 09:25:41.616" endtime="20230608 09:25:44.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:44.474" level="INFO">2023-06-08 09:25:44,412 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230608 09:25:44.473" endtime="20230608 09:25:44.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:44.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:44.474" endtime="20230608 09:25:44.474"/>
</kw>
<status status="PASS" starttime="20230608 09:25:41.616" endtime="20230608 09:25:44.475"/>
</kw>
<msg timestamp="20230608 09:25:44.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:41.616" endtime="20230608 09:25:44.475"/>
</kw>
<msg timestamp="20230608 09:25:44.476" level="INFO">${output} = 2023-06-08 09:25:44,412 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230608 09:25:41.615" endtime="20230608 09:25:44.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:44.476" endtime="20230608 09:25:44.476"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:41.614" endtime="20230608 09:25:44.476"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:44.484" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230608 09:25:44.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:44.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:44.482" endtime="20230608 09:25:44.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:44.488" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:44.487" endtime="20230608 09:25:44.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:44.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:44.488" endtime="20230608 09:25:44.488"/>
</kw>
<status status="PASS" starttime="20230608 09:25:44.481" endtime="20230608 09:25:44.489"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:44.493" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:49.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:49.754" level="INFO">${output} = 2023-06-08 09:25:48,060 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:25:48,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230608 09:25:44.491" endtime="20230608 09:25:49.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:49.756" level="INFO">2023-06-08 09:25:48,060 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:25:48,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-08 09:25:48,144 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-08 09:25:48,485 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230608 09:25:49.755" endtime="20230608 09:25:49.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:49.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:49.756" endtime="20230608 09:25:49.756"/>
</kw>
<status status="PASS" starttime="20230608 09:25:44.490" endtime="20230608 09:25:49.757"/>
</kw>
<msg timestamp="20230608 09:25:49.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:44.490" endtime="20230608 09:25:49.757"/>
</kw>
<msg timestamp="20230608 09:25:49.757" level="INFO">${output} = 2023-06-08 09:25:48,060 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:25:48,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230608 09:25:44.489" endtime="20230608 09:25:49.757"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:49.758" endtime="20230608 09:25:49.758"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:49.762" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:49.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:49.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:49.759" endtime="20230608 09:25:49.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:49.765" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:49.765" endtime="20230608 09:25:49.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:49.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:49.766" endtime="20230608 09:25:49.766"/>
</kw>
<status status="PASS" starttime="20230608 09:25:49.758" endtime="20230608 09:25:49.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:44.480" endtime="20230608 09:25:49.767"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:49.773" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:50.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:50.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:49.771" endtime="20230608 09:25:50.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:50.493" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:50.493" endtime="20230608 09:25:50.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:50.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:50.494" endtime="20230608 09:25:50.494"/>
</kw>
<status status="PASS" starttime="20230608 09:25:49.770" endtime="20230608 09:25:50.494"/>
</kw>
<msg timestamp="20230608 09:25:50.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:49.770" endtime="20230608 09:25:50.495"/>
</kw>
<status status="PASS" starttime="20230608 09:25:49.770" endtime="20230608 09:25:50.495"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:50.499" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:51.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:51.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:50.497" endtime="20230608 09:25:51.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:51.019" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:51.018" endtime="20230608 09:25:51.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:51.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:51.019" endtime="20230608 09:25:51.020"/>
</kw>
<status status="PASS" starttime="20230608 09:25:50.496" endtime="20230608 09:25:51.020"/>
</kw>
<msg timestamp="20230608 09:25:51.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:50.496" endtime="20230608 09:25:51.021"/>
</kw>
<status status="PASS" starttime="20230608 09:25:50.495" endtime="20230608 09:25:51.021"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:51.025" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:51.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:51.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:51.022" endtime="20230608 09:25:51.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:51.566" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:51.566" endtime="20230608 09:25:51.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:51.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:51.567" endtime="20230608 09:25:51.567"/>
</kw>
<status status="PASS" starttime="20230608 09:25:51.022" endtime="20230608 09:25:51.568"/>
</kw>
<msg timestamp="20230608 09:25:51.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:51.021" endtime="20230608 09:25:51.568"/>
</kw>
<status status="PASS" starttime="20230608 09:25:51.021" endtime="20230608 09:25:51.568"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:51.572" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:52.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:52.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:51.570" endtime="20230608 09:25:52.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:52.109" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:52.108" endtime="20230608 09:25:52.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:52.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:52.109" endtime="20230608 09:25:52.109"/>
</kw>
<status status="PASS" starttime="20230608 09:25:51.569" endtime="20230608 09:25:52.110"/>
</kw>
<msg timestamp="20230608 09:25:52.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:51.569" endtime="20230608 09:25:52.110"/>
</kw>
<status status="PASS" starttime="20230608 09:25:51.568" endtime="20230608 09:25:52.111"/>
</kw>
<status status="PASS" starttime="20230608 09:25:49.769" endtime="20230608 09:25:52.111"/>
</kw>
<status status="PASS" starttime="20230608 09:25:49.769" endtime="20230608 09:25:52.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:49.768" endtime="20230608 09:25:52.111"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:52.118" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:54.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:54.081" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230608 09:25:52.115" endtime="20230608 09:25:54.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:54.082" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230608 09:25:54.081" endtime="20230608 09:25:54.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:54.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:54.083" endtime="20230608 09:25:54.083"/>
</kw>
<status status="PASS" starttime="20230608 09:25:52.115" endtime="20230608 09:25:54.083"/>
</kw>
<msg timestamp="20230608 09:25:54.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:52.114" endtime="20230608 09:25:54.084"/>
</kw>
<msg timestamp="20230608 09:25:54.084" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230608 09:25:52.114" endtime="20230608 09:25:54.084"/>
</kw>
<msg timestamp="20230608 09:25:54.085" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230608 09:25:52.114" endtime="20230608 09:25:54.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:54.085" endtime="20230608 09:25:54.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:54.086" endtime="20230608 09:25:54.086"/>
</kw>
<msg timestamp="20230608 09:25:54.086" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230608 09:25:52.113" endtime="20230608 09:25:54.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230608 09:25:54.086" endtime="20230608 09:25:54.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:52.112" endtime="20230608 09:25:54.087"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:54.093" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230608 09:25:54.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:54.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:54.090" endtime="20230608 09:25:54.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:54.097" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:54.096" endtime="20230608 09:25:54.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:54.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:54.097" endtime="20230608 09:25:54.098"/>
</kw>
<status status="PASS" starttime="20230608 09:25:54.089" endtime="20230608 09:25:54.098"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:54.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:56.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:56.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:54.100" endtime="20230608 09:25:56.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:56.139" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:56.138" endtime="20230608 09:25:56.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:56.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:56.140" endtime="20230608 09:25:56.140"/>
</kw>
<msg timestamp="20230608 09:25:56.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:54.099" endtime="20230608 09:25:56.141"/>
</kw>
<msg timestamp="20230608 09:25:56.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:54.098" endtime="20230608 09:25:56.141"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:25:56.141" endtime="20230608 09:25:56.141"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:56.145" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:56.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:56.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:25:56.142" endtime="20230608 09:25:56.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:56.148" level="INFO"/>
<status status="PASS" starttime="20230608 09:25:56.148" endtime="20230608 09:25:56.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:56.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:56.149" endtime="20230608 09:25:56.149"/>
</kw>
<status status="PASS" starttime="20230608 09:25:56.142" endtime="20230608 09:25:56.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:25:54.088" endtime="20230608 09:25:56.150"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230608 09:25:29.770" endtime="20230608 09:25:56.152"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230608 09:26:00.195" level="INFO">${random} = 98265</msg>
<status status="PASS" starttime="20230608 09:26:00.195" endtime="20230608 09:26:00.195"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:00.201" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-98265 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:05.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:05.282" level="INFO">${output} = 2023-06-08 09:26:03,870 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:26:03,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230608 09:26:00.197" endtime="20230608 09:26:05.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:05.284" level="INFO">2023-06-08 09:26:03,870 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:26:03,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-08 09:26:03,953 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230608 09:26:05.283" endtime="20230608 09:26:05.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:05.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:05.284" endtime="20230608 09:26:05.284"/>
</kw>
<status status="PASS" starttime="20230608 09:26:00.197" endtime="20230608 09:26:05.285"/>
</kw>
<msg timestamp="20230608 09:26:05.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:26:00.196" endtime="20230608 09:26:05.286"/>
</kw>
<msg timestamp="20230608 09:26:05.286" level="INFO">${output} = 2023-06-08 09:26:03,870 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-08 09:26:03,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230608 09:26:00.195" endtime="20230608 09:26:05.286"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:26:05.287" endtime="20230608 09:26:05.287"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:05.290" level="INFO">Running command 'cat /tmp/key-98265 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:05.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:05.293" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230608 09:26:05.288" endtime="20230608 09:26:05.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:05.294" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230608 09:26:05.293" endtime="20230608 09:26:05.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:05.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:05.294" endtime="20230608 09:26:05.295"/>
</kw>
<msg timestamp="20230608 09:26:05.295" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230608 09:26:05.287" endtime="20230608 09:26:05.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:26:05.296" endtime="20230608 09:26:05.296"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:05.299" level="INFO">Running command 'rm /tmp/key-98265 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:05.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:05.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:05.297" endtime="20230608 09:26:05.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:05.303" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:05.302" endtime="20230608 09:26:05.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:05.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:05.303" endtime="20230608 09:26:05.303"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.296" endtime="20230608 09:26:05.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:26:00.194" endtime="20230608 09:26:05.304"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:05.309" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:05.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:05.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:05.307" endtime="20230608 09:26:05.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:05.800" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:05.800" endtime="20230608 09:26:05.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:05.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:05.801" endtime="20230608 09:26:05.801"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.307" endtime="20230608 09:26:05.801"/>
</kw>
<msg timestamp="20230608 09:26:05.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:26:05.306" endtime="20230608 09:26:05.802"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.306" endtime="20230608 09:26:05.802"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:05.806" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:06.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:06.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:05.804" endtime="20230608 09:26:06.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:06.334" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:06.333" endtime="20230608 09:26:06.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:06.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:06.334" endtime="20230608 09:26:06.334"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.803" endtime="20230608 09:26:06.335"/>
</kw>
<msg timestamp="20230608 09:26:06.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:26:05.803" endtime="20230608 09:26:06.335"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.802" endtime="20230608 09:26:06.335"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:06.339" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:06.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:06.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:06.337" endtime="20230608 09:26:06.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:06.849" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:06.849" endtime="20230608 09:26:06.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:06.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:06.850" endtime="20230608 09:26:06.850"/>
</kw>
<status status="PASS" starttime="20230608 09:26:06.337" endtime="20230608 09:26:06.850"/>
</kw>
<msg timestamp="20230608 09:26:06.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:26:06.336" endtime="20230608 09:26:06.851"/>
</kw>
<status status="PASS" starttime="20230608 09:26:06.335" endtime="20230608 09:26:06.851"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:06.855" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:07.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:07.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:06.853" endtime="20230608 09:26:07.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:07.367" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:07.366" endtime="20230608 09:26:07.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:07.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:07.367" endtime="20230608 09:26:07.367"/>
</kw>
<status status="PASS" starttime="20230608 09:26:06.852" endtime="20230608 09:26:07.368"/>
</kw>
<msg timestamp="20230608 09:26:07.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:26:06.852" endtime="20230608 09:26:07.368"/>
</kw>
<status status="PASS" starttime="20230608 09:26:06.851" endtime="20230608 09:26:07.368"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.305" endtime="20230608 09:26:07.369"/>
</kw>
<status status="PASS" starttime="20230608 09:26:05.305" endtime="20230608 09:26:07.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:26:05.305" endtime="20230608 09:26:07.369"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:07.374" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:08.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:08.151" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:49 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230608 09:26:07.372" endtime="20230608 09:26:08.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:08.152" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:49 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 08 Jun 2023 09:26:07 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230608 09:26:08.151" endtime="20230608 09:26:08.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:08.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:08.153" endtime="20230608 09:26:08.153"/>
</kw>
<msg timestamp="20230608 09:26:08.154" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:49 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230608 09:26:07.371" endtime="20230608 09:26:08.154"/>
</kw>
<msg timestamp="20230608 09:26:08.154" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:49 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230608 09:26:07.371" endtime="20230608 09:26:08.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:26:08.155" endtime="20230608 09:26:08.155"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:08.159" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:08.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:08.164" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230608 09:26:08.156" endtime="20230608 09:26:08.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:08.165" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230608 09:26:08.164" endtime="20230608 09:26:08.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:08.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:08.165" endtime="20230608 09:26:08.166"/>
</kw>
<msg timestamp="20230608 09:26:08.166" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230608 09:26:08.155" endtime="20230608 09:26:08.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:26:08.166" endtime="20230608 09:26:08.166"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:08.170" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:08.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:08.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:08.167" endtime="20230608 09:26:08.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:08.174" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:08.173" endtime="20230608 09:26:08.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:08.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:08.174" endtime="20230608 09:26:08.174"/>
</kw>
<status status="PASS" starttime="20230608 09:26:08.167" endtime="20230608 09:26:08.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:26:07.370" endtime="20230608 09:26:08.175"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:08.180" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:08.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:08.880" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:56 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230608 09:26:08.178" endtime="20230608 09:26:08.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:08.881" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:56 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 08 Jun 2023 09:26:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230608 09:26:08.880" endtime="20230608 09:26:08.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:08.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:08.881" endtime="20230608 09:26:08.882"/>
</kw>
<msg timestamp="20230608 09:26:08.882" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:56 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230608 09:26:08.177" endtime="20230608 09:26:08.882"/>
</kw>
<msg timestamp="20230608 09:26:08.883" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 08 Jun 2023 09:25:56 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230608 09:26:08.177" endtime="20230608 09:26:08.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:26:08.883" endtime="20230608 09:26:08.883"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:08.886" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:08.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:08.888" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230608 09:26:08.884" endtime="20230608 09:26:08.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:08.889" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230608 09:26:08.889" endtime="20230608 09:26:08.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:08.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:08.890" endtime="20230608 09:26:08.890"/>
</kw>
<msg timestamp="20230608 09:26:08.891" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230608 09:26:08.883" endtime="20230608 09:26:08.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230608 09:26:08.891" endtime="20230608 09:26:08.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:08.894" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:26:08.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:26:08.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230608 09:26:08.892" endtime="20230608 09:26:08.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:26:08.897" level="INFO"/>
<status status="PASS" starttime="20230608 09:26:08.897" endtime="20230608 09:26:08.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:26:08.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:26:08.897" endtime="20230608 09:26:08.898"/>
</kw>
<status status="PASS" starttime="20230608 09:26:08.891" endtime="20230608 09:26:08.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230608 09:26:08.176" endtime="20230608 09:26:08.898"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230608 09:26:00.107" endtime="20230608 09:26:08.900"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230608 09:26:12.924" endtime="20230608 09:26:12.925"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230608 09:26:12.925" endtime="20230608 09:26:12.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:26:12.931" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:31:12.924" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230608 09:26:12.927" endtime="20230608 09:31:12.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230608 09:31:12.925" endtime="20230608 09:31:12.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230608 09:31:12.925" endtime="20230608 09:31:12.925"/>
</kw>
<status status="FAIL" starttime="20230608 09:26:12.926" endtime="20230608 09:31:12.925"/>
</kw>
<msg timestamp="20230608 09:31:12.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230608 09:26:12.926" endtime="20230608 09:31:12.927"/>
</kw>
<status status="FAIL" starttime="20230608 09:26:12.925" endtime="20230608 09:31:12.927"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230608 09:31:12.928" endtime="20230608 09:31:12.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230608 09:26:12.923" endtime="20230608 09:31:12.929">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230608 09:26:12.875" endtime="20230608 09:31:12.930"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230608 09:25:19.993" endtime="20230608 09:25:19.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:20.000" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:20.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:20.003" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=4bbe4d412784
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230608 09:25:19.995" endtime="20230608 09:25:20.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:20.004" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=4bbe4d412784
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230608 09:25:20.003" endtime="20230608 09:25:20.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:20.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:20.004" endtime="20230608 09:25:20.005"/>
</kw>
<status status="PASS" starttime="20230608 09:25:19.995" endtime="20230608 09:25:20.005"/>
</kw>
<msg timestamp="20230608 09:25:20.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:19.994" endtime="20230608 09:25:20.008"/>
</kw>
<msg timestamp="20230608 09:25:20.008" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=4bbe4d412784
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230608 09:25:19.994" endtime="20230608 09:25:20.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:20.009" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=4bbe4d412784
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230608 09:25:20.009" endtime="20230608 09:25:20.009"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230608 09:25:20.009" endtime="20230608 09:25:20.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:20.015" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:22.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:22.928" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230608 09:25:20.011" endtime="20230608 09:25:22.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:22.929" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230608 09:25:22.928" endtime="20230608 09:25:22.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:22.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:22.930" endtime="20230608 09:25:22.930"/>
</kw>
<status status="PASS" starttime="20230608 09:25:20.010" endtime="20230608 09:25:22.931"/>
</kw>
<msg timestamp="20230608 09:25:22.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:20.010" endtime="20230608 09:25:22.931"/>
</kw>
<msg timestamp="20230608 09:25:22.931" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230608 09:25:20.010" endtime="20230608 09:25:22.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:22.932" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230608 09:25:22.932" endtime="20230608 09:25:22.932"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230608 09:25:22.932" endtime="20230608 09:25:22.933"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230608 09:25:19.992" endtime="20230608 09:25:22.933"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230608 09:25:22.935" endtime="20230608 09:25:22.935"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230608 09:25:22.935" endtime="20230608 09:25:22.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230608 09:25:22.939" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230608 09:25:25.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20230608 09:25:25.735" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230608 09:25:22.937" endtime="20230608 09:25:25.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:25.736" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230608 09:25:25.736" endtime="20230608 09:25:25.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230608 09:25:25.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230608 09:25:25.737" endtime="20230608 09:25:25.737"/>
</kw>
<status status="PASS" starttime="20230608 09:25:22.936" endtime="20230608 09:25:25.737"/>
</kw>
<msg timestamp="20230608 09:25:25.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230608 09:25:22.936" endtime="20230608 09:25:25.738"/>
</kw>
<msg timestamp="20230608 09:25:25.738" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230608 09:25:22.936" endtime="20230608 09:25:25.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230608 09:25:25.739" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230608 09:25:25.738" endtime="20230608 09:25:25.739"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230608 09:25:25.739" endtime="20230608 09:25:25.739"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230608 09:25:22.934" endtime="20230608 09:25:25.740"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230608 09:25:19.931" endtime="20230608 09:25:25.741"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="341040"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
