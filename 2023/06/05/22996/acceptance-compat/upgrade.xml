<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230605 20:02:28.031" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:07.106" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:10.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:10.192" level="INFO">${output} = 2023-06-05 19:55:10,033 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230605 19:55:07.100" endtime="20230605 19:55:10.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:10.194" level="INFO">2023-06-05 19:55:10,033 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230605 19:55:10.193" endtime="20230605 19:55:10.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:10.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:10.194" endtime="20230605 19:55:10.201"/>
</kw>
<status status="PASS" starttime="20230605 19:55:07.100" endtime="20230605 19:55:10.201"/>
</kw>
<msg timestamp="20230605 19:55:10.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:07.100" endtime="20230605 19:55:10.215"/>
</kw>
<msg timestamp="20230605 19:55:10.215" level="INFO">${output} = 2023-06-05 19:55:10,033 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230605 19:55:07.099" endtime="20230605 19:55:10.215"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:10.216" endtime="20230605 19:55:10.216"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:10.230" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:13.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:13.586" level="INFO">${output} = 2023-06-05 19:55:13,464 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230605 19:55:10.221" endtime="20230605 19:55:13.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:13.588" level="INFO">2023-06-05 19:55:13,464 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230605 19:55:13.586" endtime="20230605 19:55:13.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:13.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:13.589" endtime="20230605 19:55:13.590"/>
</kw>
<status status="PASS" starttime="20230605 19:55:10.220" endtime="20230605 19:55:13.590"/>
</kw>
<msg timestamp="20230605 19:55:13.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:10.220" endtime="20230605 19:55:13.591"/>
</kw>
<msg timestamp="20230605 19:55:13.591" level="INFO">${output} = 2023-06-05 19:55:13,464 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230605 19:55:10.219" endtime="20230605 19:55:13.591"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:13.591" endtime="20230605 19:55:13.592"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:07.098" endtime="20230605 19:55:13.592"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:13.598" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230605 19:55:13.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:13.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:13.596" endtime="20230605 19:55:13.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:13.602" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:13.601" endtime="20230605 19:55:13.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:13.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:13.602" endtime="20230605 19:55:13.603"/>
</kw>
<status status="PASS" starttime="20230605 19:55:13.595" endtime="20230605 19:55:13.603"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:13.608" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:21.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:21.077" level="INFO">${output} = 2023-06-05 19:55:18,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:18,474 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230605 19:55:13.605" endtime="20230605 19:55:21.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:21.079" level="INFO">2023-06-05 19:55:18,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:18,474 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-05 19:55:18,475 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-05 19:55:18,977 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230605 19:55:21.078" endtime="20230605 19:55:21.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:21.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:21.079" endtime="20230605 19:55:21.080"/>
</kw>
<status status="PASS" starttime="20230605 19:55:13.605" endtime="20230605 19:55:21.080"/>
</kw>
<msg timestamp="20230605 19:55:21.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:13.604" endtime="20230605 19:55:21.081"/>
</kw>
<msg timestamp="20230605 19:55:21.081" level="INFO">${output} = 2023-06-05 19:55:18,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:18,474 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230605 19:55:13.604" endtime="20230605 19:55:21.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:21.081" endtime="20230605 19:55:21.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:21.085" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:21.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:21.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:21.082" endtime="20230605 19:55:21.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:21.089" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:21.088" endtime="20230605 19:55:21.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:21.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:21.090" endtime="20230605 19:55:21.090"/>
</kw>
<status status="PASS" starttime="20230605 19:55:21.082" endtime="20230605 19:55:21.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:13.593" endtime="20230605 19:55:21.091"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:21.098" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:24.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:24.898" level="INFO">${output} = 2023-06-05 19:55:24,792 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230605 19:55:21.095" endtime="20230605 19:55:24.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:24.900" level="INFO">2023-06-05 19:55:24,792 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230605 19:55:24.898" endtime="20230605 19:55:24.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:24.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:24.900" endtime="20230605 19:55:24.906"/>
</kw>
<status status="PASS" starttime="20230605 19:55:21.094" endtime="20230605 19:55:24.906"/>
</kw>
<msg timestamp="20230605 19:55:24.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:21.094" endtime="20230605 19:55:24.907"/>
</kw>
<msg timestamp="20230605 19:55:24.907" level="INFO">${output} = 2023-06-05 19:55:24,792 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230605 19:55:21.093" endtime="20230605 19:55:24.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:24.908" endtime="20230605 19:55:24.908"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:21.092" endtime="20230605 19:55:24.908"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:24.914" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230605 19:55:24.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:24.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:24.912" endtime="20230605 19:55:24.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:24.918" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:24.917" endtime="20230605 19:55:24.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:24.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:24.918" endtime="20230605 19:55:24.918"/>
</kw>
<status status="PASS" starttime="20230605 19:55:24.910" endtime="20230605 19:55:24.919"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:24.923" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:31.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:31.863" level="INFO">${output} = 2023-06-05 19:55:29,952 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:30,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230605 19:55:24.921" endtime="20230605 19:55:31.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:31.864" level="INFO">2023-06-05 19:55:29,952 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:30,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-05 19:55:30,100 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-05 19:55:30,533 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230605 19:55:31.863" endtime="20230605 19:55:31.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:31.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:31.864" endtime="20230605 19:55:31.865"/>
</kw>
<status status="PASS" starttime="20230605 19:55:24.920" endtime="20230605 19:55:31.865"/>
</kw>
<msg timestamp="20230605 19:55:31.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:24.920" endtime="20230605 19:55:31.866"/>
</kw>
<msg timestamp="20230605 19:55:31.866" level="INFO">${output} = 2023-06-05 19:55:29,952 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:30,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230605 19:55:24.919" endtime="20230605 19:55:31.866"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:31.866" endtime="20230605 19:55:31.867"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:31.873" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:31.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:31.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:31.869" endtime="20230605 19:55:31.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:31.879" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:31.878" endtime="20230605 19:55:31.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:31.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:31.880" endtime="20230605 19:55:31.881"/>
</kw>
<status status="PASS" starttime="20230605 19:55:31.867" endtime="20230605 19:55:31.881"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:24.909" endtime="20230605 19:55:31.881"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:31.890" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:32.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:32.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:31.885" endtime="20230605 19:55:32.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:32.827" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:32.826" endtime="20230605 19:55:32.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:32.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:32.828" endtime="20230605 19:55:32.828"/>
</kw>
<status status="PASS" starttime="20230605 19:55:31.884" endtime="20230605 19:55:32.829"/>
</kw>
<msg timestamp="20230605 19:55:32.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:31.884" endtime="20230605 19:55:32.830"/>
</kw>
<status status="PASS" starttime="20230605 19:55:31.883" endtime="20230605 19:55:32.830"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:32.835" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:33.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:33.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:32.832" endtime="20230605 19:55:33.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:33.505" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:33.503" endtime="20230605 19:55:33.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:33.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:33.506" endtime="20230605 19:55:33.507"/>
</kw>
<status status="PASS" starttime="20230605 19:55:32.831" endtime="20230605 19:55:33.507"/>
</kw>
<msg timestamp="20230605 19:55:33.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:32.831" endtime="20230605 19:55:33.508"/>
</kw>
<status status="PASS" starttime="20230605 19:55:32.830" endtime="20230605 19:55:33.508"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:33.514" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:34.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:34.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:33.511" endtime="20230605 19:55:34.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:34.186" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:34.185" endtime="20230605 19:55:34.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:34.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:34.187" endtime="20230605 19:55:34.187"/>
</kw>
<status status="PASS" starttime="20230605 19:55:33.510" endtime="20230605 19:55:34.187"/>
</kw>
<msg timestamp="20230605 19:55:34.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:33.509" endtime="20230605 19:55:34.188"/>
</kw>
<status status="PASS" starttime="20230605 19:55:33.508" endtime="20230605 19:55:34.188"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:34.192" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:34.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:34.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:34.190" endtime="20230605 19:55:34.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:34.808" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:34.806" endtime="20230605 19:55:34.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:34.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:34.808" endtime="20230605 19:55:34.809"/>
</kw>
<status status="PASS" starttime="20230605 19:55:34.189" endtime="20230605 19:55:34.809"/>
</kw>
<msg timestamp="20230605 19:55:34.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:34.189" endtime="20230605 19:55:34.810"/>
</kw>
<status status="PASS" starttime="20230605 19:55:34.188" endtime="20230605 19:55:34.810"/>
</kw>
<status status="PASS" starttime="20230605 19:55:31.883" endtime="20230605 19:55:34.810"/>
</kw>
<status status="PASS" starttime="20230605 19:55:31.883" endtime="20230605 19:55:34.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:31.882" endtime="20230605 19:55:34.811"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:34.818" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:37.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:37.461" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230605 19:55:34.815" endtime="20230605 19:55:37.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:37.463" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230605 19:55:37.462" endtime="20230605 19:55:37.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:37.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:37.463" endtime="20230605 19:55:37.463"/>
</kw>
<status status="PASS" starttime="20230605 19:55:34.814" endtime="20230605 19:55:37.464"/>
</kw>
<msg timestamp="20230605 19:55:37.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:34.814" endtime="20230605 19:55:37.465"/>
</kw>
<msg timestamp="20230605 19:55:37.466" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230605 19:55:34.814" endtime="20230605 19:55:37.466"/>
</kw>
<msg timestamp="20230605 19:55:37.466" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230605 19:55:34.813" endtime="20230605 19:55:37.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:37.466" endtime="20230605 19:55:37.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:37.467" endtime="20230605 19:55:37.467"/>
</kw>
<msg timestamp="20230605 19:55:37.467" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230605 19:55:34.812" endtime="20230605 19:55:37.467"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230605 19:55:37.468" endtime="20230605 19:55:37.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:34.811" endtime="20230605 19:55:37.469"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:37.476" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230605 19:55:37.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:37.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:37.472" endtime="20230605 19:55:37.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:37.480" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:37.479" endtime="20230605 19:55:37.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:37.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:37.481" endtime="20230605 19:55:37.481"/>
</kw>
<status status="PASS" starttime="20230605 19:55:37.472" endtime="20230605 19:55:37.482"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:37.489" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:39.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:39.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:37.484" endtime="20230605 19:55:39.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:39.768" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:39.767" endtime="20230605 19:55:39.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:39.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:39.768" endtime="20230605 19:55:39.769"/>
</kw>
<msg timestamp="20230605 19:55:39.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:37.483" endtime="20230605 19:55:39.769"/>
</kw>
<msg timestamp="20230605 19:55:39.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:37.482" endtime="20230605 19:55:39.770"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:39.770" endtime="20230605 19:55:39.770"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:39.775" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:39.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:39.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:39.771" endtime="20230605 19:55:39.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:39.781" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:39.780" endtime="20230605 19:55:39.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:39.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:39.781" endtime="20230605 19:55:39.782"/>
</kw>
<status status="PASS" starttime="20230605 19:55:39.770" endtime="20230605 19:55:39.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:37.471" endtime="20230605 19:55:39.782"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230605 19:55:07.006" endtime="20230605 19:55:39.785"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230605 19:55:44.704" level="INFO">${random} = 28174</msg>
<status status="PASS" starttime="20230605 19:55:44.703" endtime="20230605 19:55:44.704"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:44.712" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-28174 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:50.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:50.367" level="INFO">${output} = 2023-06-05 19:55:48,844 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:48,954 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230605 19:55:44.707" endtime="20230605 19:55:50.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:50.369" level="INFO">2023-06-05 19:55:48,844 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:48,954 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-05 19:55:48,954 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230605 19:55:50.368" endtime="20230605 19:55:50.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:50.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:50.369" endtime="20230605 19:55:50.369"/>
</kw>
<status status="PASS" starttime="20230605 19:55:44.706" endtime="20230605 19:55:50.370"/>
</kw>
<msg timestamp="20230605 19:55:50.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:44.705" endtime="20230605 19:55:50.371"/>
</kw>
<msg timestamp="20230605 19:55:50.372" level="INFO">${output} = 2023-06-05 19:55:48,844 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-05 19:55:48,954 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230605 19:55:44.704" endtime="20230605 19:55:50.372"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:50.372" endtime="20230605 19:55:50.372"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:50.376" level="INFO">Running command 'cat /tmp/key-28174 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:50.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:50.379" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230605 19:55:50.373" endtime="20230605 19:55:50.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:50.380" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230605 19:55:50.380" endtime="20230605 19:55:50.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:50.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:50.381" endtime="20230605 19:55:50.382"/>
</kw>
<msg timestamp="20230605 19:55:50.382" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230605 19:55:50.373" endtime="20230605 19:55:50.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:50.382" endtime="20230605 19:55:50.383"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:50.386" level="INFO">Running command 'rm /tmp/key-28174 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:50.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:50.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:50.384" endtime="20230605 19:55:50.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:50.391" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:50.390" endtime="20230605 19:55:50.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:50.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:50.391" endtime="20230605 19:55:50.392"/>
</kw>
<status status="PASS" starttime="20230605 19:55:50.383" endtime="20230605 19:55:50.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:44.702" endtime="20230605 19:55:50.392"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:50.399" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:51.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:51.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:50.397" endtime="20230605 19:55:51.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:51.040" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:51.039" endtime="20230605 19:55:51.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:51.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:51.040" endtime="20230605 19:55:51.041"/>
</kw>
<status status="PASS" starttime="20230605 19:55:50.396" endtime="20230605 19:55:51.041"/>
</kw>
<msg timestamp="20230605 19:55:51.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:50.396" endtime="20230605 19:55:51.042"/>
</kw>
<status status="PASS" starttime="20230605 19:55:50.395" endtime="20230605 19:55:51.042"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:51.047" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:51.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:51.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:51.044" endtime="20230605 19:55:51.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:51.655" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:51.654" endtime="20230605 19:55:51.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:51.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:51.655" endtime="20230605 19:55:51.656"/>
</kw>
<status status="PASS" starttime="20230605 19:55:51.043" endtime="20230605 19:55:51.656"/>
</kw>
<msg timestamp="20230605 19:55:51.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:51.043" endtime="20230605 19:55:51.657"/>
</kw>
<status status="PASS" starttime="20230605 19:55:51.042" endtime="20230605 19:55:51.658"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:51.662" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:52.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:52.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:51.659" endtime="20230605 19:55:52.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:52.297" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:52.296" endtime="20230605 19:55:52.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:52.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:52.297" endtime="20230605 19:55:52.298"/>
</kw>
<status status="PASS" starttime="20230605 19:55:51.659" endtime="20230605 19:55:52.298"/>
</kw>
<msg timestamp="20230605 19:55:52.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:51.659" endtime="20230605 19:55:52.299"/>
</kw>
<status status="PASS" starttime="20230605 19:55:51.658" endtime="20230605 19:55:52.299"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:52.303" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:52.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:52.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:52.300" endtime="20230605 19:55:52.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:52.885" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:52.885" endtime="20230605 19:55:52.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:52.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:52.886" endtime="20230605 19:55:52.886"/>
</kw>
<status status="PASS" starttime="20230605 19:55:52.300" endtime="20230605 19:55:52.887"/>
</kw>
<msg timestamp="20230605 19:55:52.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:55:52.300" endtime="20230605 19:55:52.887"/>
</kw>
<status status="PASS" starttime="20230605 19:55:52.299" endtime="20230605 19:55:52.887"/>
</kw>
<status status="PASS" starttime="20230605 19:55:50.395" endtime="20230605 19:55:52.888"/>
</kw>
<status status="PASS" starttime="20230605 19:55:50.394" endtime="20230605 19:55:52.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:50.393" endtime="20230605 19:55:52.888"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:52.894" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:53.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:53.961" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:31 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230605 19:55:52.891" endtime="20230605 19:55:53.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:53.962" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:31 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 05 Jun 2023 19:55:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230605 19:55:53.961" endtime="20230605 19:55:53.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:53.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:53.963" endtime="20230605 19:55:53.963"/>
</kw>
<msg timestamp="20230605 19:55:53.964" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:31 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230605 19:55:52.891" endtime="20230605 19:55:53.964"/>
</kw>
<msg timestamp="20230605 19:55:53.964" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:31 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230605 19:55:52.890" endtime="20230605 19:55:53.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:53.964" endtime="20230605 19:55:53.965"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:53.968" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:53.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:53.972" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230605 19:55:53.966" endtime="20230605 19:55:53.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:53.974" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230605 19:55:53.973" endtime="20230605 19:55:53.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:53.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:53.974" endtime="20230605 19:55:53.974"/>
</kw>
<msg timestamp="20230605 19:55:53.975" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230605 19:55:53.965" endtime="20230605 19:55:53.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:53.975" endtime="20230605 19:55:53.975"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:53.979" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:53.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:53.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:53.976" endtime="20230605 19:55:53.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:53.984" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:53.983" endtime="20230605 19:55:53.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:53.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:53.984" endtime="20230605 19:55:53.985"/>
</kw>
<status status="PASS" starttime="20230605 19:55:53.976" endtime="20230605 19:55:53.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:52.889" endtime="20230605 19:55:53.985"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:53.993" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:54.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:54.721" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230605 19:55:53.990" endtime="20230605 19:55:54.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:54.723" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 05 Jun 2023 19:55:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230605 19:55:54.722" endtime="20230605 19:55:54.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:54.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:54.723" endtime="20230605 19:55:54.723"/>
</kw>
<msg timestamp="20230605 19:55:54.724" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230605 19:55:53.989" endtime="20230605 19:55:54.725"/>
</kw>
<msg timestamp="20230605 19:55:54.725" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 05 Jun 2023 19:55:39 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230605 19:55:53.988" endtime="20230605 19:55:54.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:54.725" endtime="20230605 19:55:54.726"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:54.729" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:54.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:54.732" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230605 19:55:54.727" endtime="20230605 19:55:54.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:54.734" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230605 19:55:54.733" endtime="20230605 19:55:54.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:54.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:54.734" endtime="20230605 19:55:54.735"/>
</kw>
<msg timestamp="20230605 19:55:54.735" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230605 19:55:54.726" endtime="20230605 19:55:54.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230605 19:55:54.736" endtime="20230605 19:55:54.736"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:54.741" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:54.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:54.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230605 19:55:54.737" endtime="20230605 19:55:54.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:54.744" level="INFO"/>
<status status="PASS" starttime="20230605 19:55:54.743" endtime="20230605 19:55:54.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:54.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:54.744" endtime="20230605 19:55:54.745"/>
</kw>
<status status="PASS" starttime="20230605 19:55:54.736" endtime="20230605 19:55:54.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230605 19:55:53.987" endtime="20230605 19:55:54.746"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230605 19:55:44.605" endtime="20230605 19:55:54.747"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230605 19:55:59.595" endtime="20230605 19:55:59.596"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230605 19:55:59.596" endtime="20230605 19:55:59.596"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:55:59.602" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 20:00:59.595" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230605 19:55:59.598" endtime="20230605 20:00:59.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230605 20:00:59.596" endtime="20230605 20:00:59.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230605 20:00:59.596" endtime="20230605 20:00:59.596"/>
</kw>
<status status="FAIL" starttime="20230605 19:55:59.597" endtime="20230605 20:00:59.597"/>
</kw>
<msg timestamp="20230605 20:00:59.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230605 19:55:59.597" endtime="20230605 20:00:59.598"/>
</kw>
<status status="FAIL" starttime="20230605 19:55:59.596" endtime="20230605 20:00:59.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230605 20:00:59.599" endtime="20230605 20:00:59.599"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230605 19:55:59.594" endtime="20230605 20:00:59.600">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230605 19:55:59.533" endtime="20230605 20:00:59.602"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230605 19:54:55.229" endtime="20230605 19:54:55.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:54:55.241" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:54:55.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:54:55.245" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=08503cf31b91
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230605 19:54:55.231" endtime="20230605 19:54:55.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:54:55.246" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=08503cf31b91
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230605 19:54:55.245" endtime="20230605 19:54:55.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:54:55.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:54:55.246" endtime="20230605 19:54:55.247"/>
</kw>
<status status="PASS" starttime="20230605 19:54:55.231" endtime="20230605 19:54:55.247"/>
</kw>
<msg timestamp="20230605 19:54:55.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:54:55.231" endtime="20230605 19:54:55.249"/>
</kw>
<msg timestamp="20230605 19:54:55.249" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=08503cf31b91
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230605 19:54:55.230" endtime="20230605 19:54:55.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:54:55.250" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=08503cf31b91
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230605 19:54:55.250" endtime="20230605 19:54:55.250"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230605 19:54:55.250" endtime="20230605 19:54:55.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:54:55.255" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:54:58.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:54:58.791" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230605 19:54:55.252" endtime="20230605 19:54:58.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:54:58.792" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230605 19:54:58.791" endtime="20230605 19:54:58.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:54:58.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:54:58.793" endtime="20230605 19:54:58.793"/>
</kw>
<status status="PASS" starttime="20230605 19:54:55.252" endtime="20230605 19:54:58.794"/>
</kw>
<msg timestamp="20230605 19:54:58.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:54:55.251" endtime="20230605 19:54:58.794"/>
</kw>
<msg timestamp="20230605 19:54:58.795" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230605 19:54:55.251" endtime="20230605 19:54:58.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:54:58.795" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230605 19:54:58.795" endtime="20230605 19:54:58.795"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230605 19:54:58.795" endtime="20230605 19:54:58.796"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230605 19:54:55.228" endtime="20230605 19:54:58.796"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230605 19:54:58.798" endtime="20230605 19:54:58.799"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230605 19:54:58.799" endtime="20230605 19:54:58.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230605 19:54:58.804" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230605 19:55:02.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230605 19:55:02.140" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230605 19:54:58.801" endtime="20230605 19:55:02.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:02.142" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230605 19:55:02.141" endtime="20230605 19:55:02.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230605 19:55:02.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230605 19:55:02.142" endtime="20230605 19:55:02.143"/>
</kw>
<status status="PASS" starttime="20230605 19:54:58.800" endtime="20230605 19:55:02.143"/>
</kw>
<msg timestamp="20230605 19:55:02.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230605 19:54:58.800" endtime="20230605 19:55:02.144"/>
</kw>
<msg timestamp="20230605 19:55:02.144" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230605 19:54:58.800" endtime="20230605 19:55:02.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230605 19:55:02.145" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230605 19:55:02.144" endtime="20230605 19:55:02.145"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230605 19:55:02.145" endtime="20230605 19:55:02.145"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230605 19:54:58.797" endtime="20230605 19:55:02.146"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230605 19:54:55.173" endtime="20230605 19:55:02.147"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="349964"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
