<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230601 09:59:19.675" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:57:28.428" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:57:28.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:57:28.452" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:57:28.421" endtime="20230601 09:57:28.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:57:28.454" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:57:28.453" endtime="20230601 09:57:28.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:57:28.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:57:28.454" endtime="20230601 09:57:28.455"/>
</kw>
<status status="PASS" starttime="20230601 09:57:28.420" endtime="20230601 09:57:28.455"/>
</kw>
<msg timestamp="20230601 09:57:28.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:57:28.420" endtime="20230601 09:57:28.459"/>
</kw>
<status status="PASS" starttime="20230601 09:57:28.419" endtime="20230601 09:57:28.459"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:57:28.466" endtime="20230601 09:57:28.467"/>
</kw>
<status status="PASS" starttime="20230601 09:57:28.466" endtime="20230601 09:57:28.469"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 09:57:28.470" level="INFO">${random} = pfnav</msg>
<status status="PASS" starttime="20230601 09:57:28.469" endtime="20230601 09:57:28.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 09:57:28.471" level="INFO">${VOLUME} = vol-pfnav</msg>
<status status="PASS" starttime="20230601 09:57:28.470" endtime="20230601 09:57:28.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:57:28.478" level="INFO">Running command 'ozone sh volume create /vol-pfnav 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:57:37.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:57:37.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 09:57:28.475" endtime="20230601 09:57:37.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:57:37.509" level="INFO"/>
<status status="PASS" starttime="20230601 09:57:37.508" endtime="20230601 09:57:37.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:57:37.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:57:37.509" endtime="20230601 09:57:37.510"/>
</kw>
<status status="PASS" starttime="20230601 09:57:28.473" endtime="20230601 09:57:37.510"/>
</kw>
<msg timestamp="20230601 09:57:37.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:57:28.473" endtime="20230601 09:57:37.511"/>
</kw>
<msg timestamp="20230601 09:57:37.511" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230601 09:57:28.472" endtime="20230601 09:57:37.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:57:37.511" endtime="20230601 09:57:37.511"/>
</kw>
<status status="PASS" starttime="20230601 09:57:28.469" endtime="20230601 09:57:37.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:57:28.418" endtime="20230601 09:57:37.512"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 09:57:37.515" level="INFO">${random} = hxlkm</msg>
<status status="PASS" starttime="20230601 09:57:37.514" endtime="20230601 09:57:37.515"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 09:57:37.516" level="INFO">${BUCKET} = buc-hxlkm</msg>
<status status="PASS" starttime="20230601 09:57:37.515" endtime="20230601 09:57:37.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:57:37.519" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-pfnav/buc-hxlkm 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:57:42.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:57:42.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 09:57:37.517" endtime="20230601 09:57:42.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:57:42.372" level="INFO"/>
<status status="PASS" starttime="20230601 09:57:42.369" endtime="20230601 09:57:42.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:57:42.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:57:42.372" endtime="20230601 09:57:42.375"/>
</kw>
<status status="PASS" starttime="20230601 09:57:37.517" endtime="20230601 09:57:42.375"/>
</kw>
<msg timestamp="20230601 09:57:42.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:57:37.517" endtime="20230601 09:57:42.377"/>
</kw>
<msg timestamp="20230601 09:57:42.377" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230601 09:57:37.516" endtime="20230601 09:57:42.377"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:57:42.377" endtime="20230601 09:57:42.377"/>
</kw>
<status status="PASS" starttime="20230601 09:57:37.514" endtime="20230601 09:57:42.378"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:57:37.513" endtime="20230601 09:57:42.380"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:57:42.395" level="INFO">Running command 'ozone sh key put /vol-pfnav/buc-hxlkm/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:57:52.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:57:52.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 09:57:42.390" endtime="20230601 09:57:52.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:57:52.015" level="INFO"/>
<status status="PASS" starttime="20230601 09:57:52.014" endtime="20230601 09:57:52.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:57:52.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:57:52.015" endtime="20230601 09:57:52.016"/>
</kw>
<status status="PASS" starttime="20230601 09:57:42.389" endtime="20230601 09:57:52.016"/>
</kw>
<msg timestamp="20230601 09:57:52.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:57:42.385" endtime="20230601 09:57:52.016"/>
</kw>
<msg timestamp="20230601 09:57:52.017" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230601 09:57:42.384" endtime="20230601 09:57:52.017"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:57:52.017" endtime="20230601 09:57:52.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:57:52.021" level="INFO">Running command 'ozone sh key put /vol-pfnav/buc-hxlkm/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 09:57:52.019" endtime="20230601 09:58:02.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.114" level="INFO"/>
<status status="PASS" starttime="20230601 09:58:02.113" endtime="20230601 09:58:02.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.114" endtime="20230601 09:58:02.115"/>
</kw>
<status status="PASS" starttime="20230601 09:57:52.018" endtime="20230601 09:58:02.115"/>
</kw>
<msg timestamp="20230601 09:58:02.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:57:52.018" endtime="20230601 09:58:02.116"/>
</kw>
<msg timestamp="20230601 09:58:02.116" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230601 09:57:52.017" endtime="20230601 09:58:02.116"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.116" endtime="20230601 09:58:02.116"/>
</kw>
<status status="PASS" starttime="20230601 09:57:42.384" endtime="20230601 09:58:02.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:57:42.383" endtime="20230601 09:58:02.117"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.124" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.131" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.122" endtime="20230601 09:58:02.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.133" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.132" endtime="20230601 09:58:02.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.133" endtime="20230601 09:58:02.134"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.121" endtime="20230601 09:58:02.134"/>
</kw>
<msg timestamp="20230601 09:58:02.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.121" endtime="20230601 09:58:02.135"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.120" endtime="20230601 09:58:02.135"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.139" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.440" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.137" endtime="20230601 09:58:02.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.442" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.441" endtime="20230601 09:58:02.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.442" endtime="20230601 09:58:02.443"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.136" endtime="20230601 09:58:02.443"/>
</kw>
<msg timestamp="20230601 09:58:02.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.136" endtime="20230601 09:58:02.444"/>
</kw>
<msg timestamp="20230601 09:58:02.444" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.136" endtime="20230601 09:58:02.445"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.445" endtime="20230601 09:58:02.445"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.445" endtime="20230601 09:58:02.445"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.446" endtime="20230601 09:58:02.446"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.445" endtime="20230601 09:58:02.446"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.445" endtime="20230601 09:58:02.446"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.135" endtime="20230601 09:58:02.447"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.447" endtime="20230601 09:58:02.448"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.447" endtime="20230601 09:58:02.448"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.453" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.471" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.450" endtime="20230601 09:58:02.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.472" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.472" endtime="20230601 09:58:02.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.472" endtime="20230601 09:58:02.473"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.449" endtime="20230601 09:58:02.473"/>
</kw>
<msg timestamp="20230601 09:58:02.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.449" endtime="20230601 09:58:02.474"/>
</kw>
<msg timestamp="20230601 09:58:02.474" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.448" endtime="20230601 09:58:02.474"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.475" endtime="20230601 09:58:02.475"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.475" endtime="20230601 09:58:02.475"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.475" endtime="20230601 09:58:02.476"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.475" endtime="20230601 09:58:02.476"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.474" endtime="20230601 09:58:02.476"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.448" endtime="20230601 09:58:02.476"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.477" endtime="20230601 09:58:02.478"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.476" endtime="20230601 09:58:02.478"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.484" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.501" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.481" endtime="20230601 09:58:02.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.503" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.502" endtime="20230601 09:58:02.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.503" endtime="20230601 09:58:02.504"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.481" endtime="20230601 09:58:02.504"/>
</kw>
<msg timestamp="20230601 09:58:02.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.480" endtime="20230601 09:58:02.505"/>
</kw>
<msg timestamp="20230601 09:58:02.505" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.480" endtime="20230601 09:58:02.505"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.507" endtime="20230601 09:58:02.507"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.507" endtime="20230601 09:58:02.508"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.508" endtime="20230601 09:58:02.508"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.508" endtime="20230601 09:58:02.508"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.505" endtime="20230601 09:58:02.508"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.478" endtime="20230601 09:58:02.508"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.509" endtime="20230601 09:58:02.509"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.509" endtime="20230601 09:58:02.510"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.517" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.542" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.514" endtime="20230601 09:58:02.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.543" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.543" endtime="20230601 09:58:02.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.544" endtime="20230601 09:58:02.544"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.513" endtime="20230601 09:58:02.544"/>
</kw>
<msg timestamp="20230601 09:58:02.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.513" endtime="20230601 09:58:02.545"/>
</kw>
<msg timestamp="20230601 09:58:02.545" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.510" endtime="20230601 09:58:02.545"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.547" endtime="20230601 09:58:02.547"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.545" endtime="20230601 09:58:02.547"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.548" endtime="20230601 09:58:02.548"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.547" endtime="20230601 09:58:02.548"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.545" endtime="20230601 09:58:02.548"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.510" endtime="20230601 09:58:02.548"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.119" endtime="20230601 09:58:02.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.118" endtime="20230601 09:58:02.549"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.556" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.561" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.553" endtime="20230601 09:58:02.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.563" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.561" endtime="20230601 09:58:02.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.563" endtime="20230601 09:58:02.564"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.553" endtime="20230601 09:58:02.564"/>
</kw>
<msg timestamp="20230601 09:58:02.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.552" endtime="20230601 09:58:02.564"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.552" endtime="20230601 09:58:02.565"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.571" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.599" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.567" endtime="20230601 09:58:02.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.600" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.600" endtime="20230601 09:58:02.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.600" endtime="20230601 09:58:02.601"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.566" endtime="20230601 09:58:02.601"/>
</kw>
<msg timestamp="20230601 09:58:02.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.566" endtime="20230601 09:58:02.602"/>
</kw>
<msg timestamp="20230601 09:58:02.603" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.565" endtime="20230601 09:58:02.603"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.603" endtime="20230601 09:58:02.603"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.603" endtime="20230601 09:58:02.603"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.604" endtime="20230601 09:58:02.604"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.603" endtime="20230601 09:58:02.604"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.603" endtime="20230601 09:58:02.604"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.565" endtime="20230601 09:58:02.604"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.605" endtime="20230601 09:58:02.605"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.604" endtime="20230601 09:58:02.605"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.609" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.624" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.607" endtime="20230601 09:58:02.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.625" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.624" endtime="20230601 09:58:02.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.625" endtime="20230601 09:58:02.626"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.607" endtime="20230601 09:58:02.626"/>
</kw>
<msg timestamp="20230601 09:58:02.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.606" endtime="20230601 09:58:02.627"/>
</kw>
<msg timestamp="20230601 09:58:02.627" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.606" endtime="20230601 09:58:02.627"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.628" endtime="20230601 09:58:02.628"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.628" endtime="20230601 09:58:02.628"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.628" endtime="20230601 09:58:02.628"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.628" endtime="20230601 09:58:02.628"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.627" endtime="20230601 09:58:02.628"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.605" endtime="20230601 09:58:02.629"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.629" endtime="20230601 09:58:02.630"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.629" endtime="20230601 09:58:02.630"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.634" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.649" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.631" endtime="20230601 09:58:02.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.650" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.649" endtime="20230601 09:58:02.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.650" endtime="20230601 09:58:02.651"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.631" endtime="20230601 09:58:02.651"/>
</kw>
<msg timestamp="20230601 09:58:02.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.631" endtime="20230601 09:58:02.652"/>
</kw>
<msg timestamp="20230601 09:58:02.652" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.630" endtime="20230601 09:58:02.652"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.652" endtime="20230601 09:58:02.652"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.652" endtime="20230601 09:58:02.652"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.653" endtime="20230601 09:58:02.653"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.652" endtime="20230601 09:58:02.653"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.652" endtime="20230601 09:58:02.653"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.630" endtime="20230601 09:58:02.653"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.654" endtime="20230601 09:58:02.654"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.653" endtime="20230601 09:58:02.654"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.658" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.673" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.656" endtime="20230601 09:58:02.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.674" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.674" endtime="20230601 09:58:02.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.675" endtime="20230601 09:58:02.675"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.655" endtime="20230601 09:58:02.675"/>
</kw>
<msg timestamp="20230601 09:58:02.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.655" endtime="20230601 09:58:02.676"/>
</kw>
<msg timestamp="20230601 09:58:02.676" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.655" endtime="20230601 09:58:02.676"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.677" endtime="20230601 09:58:02.677"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.677" endtime="20230601 09:58:02.677"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.678" endtime="20230601 09:58:02.678"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.677" endtime="20230601 09:58:02.678"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.677" endtime="20230601 09:58:02.678"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.654" endtime="20230601 09:58:02.678"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.551" endtime="20230601 09:58:02.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.550" endtime="20230601 09:58:02.679"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.685" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.689" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.683" endtime="20230601 09:58:02.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.690" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.689" endtime="20230601 09:58:02.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.690" endtime="20230601 09:58:02.691"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.682" endtime="20230601 09:58:02.691"/>
</kw>
<msg timestamp="20230601 09:58:02.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.682" endtime="20230601 09:58:02.692"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.681" endtime="20230601 09:58:02.692"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.696" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.721" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.694" endtime="20230601 09:58:02.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.723" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.722" endtime="20230601 09:58:02.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.723" endtime="20230601 09:58:02.724"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.693" endtime="20230601 09:58:02.724"/>
</kw>
<msg timestamp="20230601 09:58:02.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.693" endtime="20230601 09:58:02.725"/>
</kw>
<msg timestamp="20230601 09:58:02.725" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.693" endtime="20230601 09:58:02.725"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.726" endtime="20230601 09:58:02.726"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.726" endtime="20230601 09:58:02.726"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.726" endtime="20230601 09:58:02.727"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.726" endtime="20230601 09:58:02.727"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.726" endtime="20230601 09:58:02.727"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.692" endtime="20230601 09:58:02.727"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.727" endtime="20230601 09:58:02.728"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.727" endtime="20230601 09:58:02.728"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.732" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.747" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.729" endtime="20230601 09:58:02.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.748" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.748" endtime="20230601 09:58:02.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.749" endtime="20230601 09:58:02.749"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.729" endtime="20230601 09:58:02.749"/>
</kw>
<msg timestamp="20230601 09:58:02.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.729" endtime="20230601 09:58:02.751"/>
</kw>
<msg timestamp="20230601 09:58:02.751" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.728" endtime="20230601 09:58:02.751"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.752" endtime="20230601 09:58:02.752"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.752" endtime="20230601 09:58:02.752"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.752" endtime="20230601 09:58:02.752"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.752" endtime="20230601 09:58:02.753"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.751" endtime="20230601 09:58:02.753"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.728" endtime="20230601 09:58:02.753"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.753" endtime="20230601 09:58:02.754"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.753" endtime="20230601 09:58:02.754"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.758" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.774" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.756" endtime="20230601 09:58:02.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.775" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.775" endtime="20230601 09:58:02.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.776" endtime="20230601 09:58:02.776"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.755" endtime="20230601 09:58:02.776"/>
</kw>
<msg timestamp="20230601 09:58:02.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.755" endtime="20230601 09:58:02.777"/>
</kw>
<msg timestamp="20230601 09:58:02.777" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.754" endtime="20230601 09:58:02.777"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.778" endtime="20230601 09:58:02.778"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.778" endtime="20230601 09:58:02.778"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.778" endtime="20230601 09:58:02.778"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.778" endtime="20230601 09:58:02.778"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.777" endtime="20230601 09:58:02.778"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.754" endtime="20230601 09:58:02.779"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.779" endtime="20230601 09:58:02.780"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.779" endtime="20230601 09:58:02.780"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.784" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.799" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.782" endtime="20230601 09:58:02.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.801" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.800" endtime="20230601 09:58:02.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.802" endtime="20230601 09:58:02.802"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.781" endtime="20230601 09:58:02.803"/>
</kw>
<msg timestamp="20230601 09:58:02.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.781" endtime="20230601 09:58:02.803"/>
</kw>
<msg timestamp="20230601 09:58:02.804" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.780" endtime="20230601 09:58:02.804"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.804" endtime="20230601 09:58:02.804"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.804" endtime="20230601 09:58:02.804"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.804" endtime="20230601 09:58:02.805"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.804" endtime="20230601 09:58:02.805"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.804" endtime="20230601 09:58:02.805"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.780" endtime="20230601 09:58:02.805"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.681" endtime="20230601 09:58:02.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.680" endtime="20230601 09:58:02.806"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.812" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.816" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.809" endtime="20230601 09:58:02.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.818" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230601 09:58:02.817" endtime="20230601 09:58:02.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.818" endtime="20230601 09:58:02.819"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.809" endtime="20230601 09:58:02.819"/>
</kw>
<msg timestamp="20230601 09:58:02.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.809" endtime="20230601 09:58:02.819"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.808" endtime="20230601 09:58:02.820"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.824" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.846" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.822" endtime="20230601 09:58:02.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.847" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.846" endtime="20230601 09:58:02.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.847" endtime="20230601 09:58:02.848"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.821" endtime="20230601 09:58:02.848"/>
</kw>
<msg timestamp="20230601 09:58:02.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.821" endtime="20230601 09:58:02.849"/>
</kw>
<msg timestamp="20230601 09:58:02.849" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.820" endtime="20230601 09:58:02.849"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.849" endtime="20230601 09:58:02.849"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.849" endtime="20230601 09:58:02.849"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.850" endtime="20230601 09:58:02.850"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.850" endtime="20230601 09:58:02.850"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.849" endtime="20230601 09:58:02.850"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.820" endtime="20230601 09:58:02.850"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.851" endtime="20230601 09:58:02.852"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.850" endtime="20230601 09:58:02.852"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.856" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.871" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.854" endtime="20230601 09:58:02.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.872" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.871" endtime="20230601 09:58:02.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.873" endtime="20230601 09:58:02.873"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.853" endtime="20230601 09:58:02.874"/>
</kw>
<msg timestamp="20230601 09:58:02.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.853" endtime="20230601 09:58:02.874"/>
</kw>
<msg timestamp="20230601 09:58:02.875" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.852" endtime="20230601 09:58:02.875"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.875" endtime="20230601 09:58:02.875"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.875" endtime="20230601 09:58:02.876"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.876" endtime="20230601 09:58:02.876"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.876" endtime="20230601 09:58:02.876"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.875" endtime="20230601 09:58:02.876"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.852" endtime="20230601 09:58:02.876"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.877" endtime="20230601 09:58:02.877"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.876" endtime="20230601 09:58:02.877"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.881" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.896" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.879" endtime="20230601 09:58:02.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.897" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.897" endtime="20230601 09:58:02.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.898" endtime="20230601 09:58:02.898"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.879" endtime="20230601 09:58:02.899"/>
</kw>
<msg timestamp="20230601 09:58:02.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.878" endtime="20230601 09:58:02.899"/>
</kw>
<msg timestamp="20230601 09:58:02.900" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.878" endtime="20230601 09:58:02.900"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.900" endtime="20230601 09:58:02.900"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.900" endtime="20230601 09:58:02.900"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.900" endtime="20230601 09:58:02.901"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.900" endtime="20230601 09:58:02.901"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.900" endtime="20230601 09:58:02.901"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.877" endtime="20230601 09:58:02.901"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:58:02.902" endtime="20230601 09:58:02.902"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.901" endtime="20230601 09:58:02.902"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.906" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.925" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.904" endtime="20230601 09:58:02.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.926" level="INFO">200</msg>
<status status="PASS" starttime="20230601 09:58:02.925" endtime="20230601 09:58:02.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.926" endtime="20230601 09:58:02.927"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.903" endtime="20230601 09:58:02.927"/>
</kw>
<msg timestamp="20230601 09:58:02.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.903" endtime="20230601 09:58:02.928"/>
</kw>
<msg timestamp="20230601 09:58:02.928" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230601 09:58:02.903" endtime="20230601 09:58:02.928"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:02.928" endtime="20230601 09:58:02.929"/>
</kw>
<status status="NOT RUN" starttime="20230601 09:58:02.928" endtime="20230601 09:58:02.929"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.929" endtime="20230601 09:58:02.929"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.929" endtime="20230601 09:58:02.929"/>
</branch>
<status status="PASS" starttime="20230601 09:58:02.928" endtime="20230601 09:58:02.929"/>
</if>
<status status="PASS" starttime="20230601 09:58:02.902" endtime="20230601 09:58:02.930"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.808" endtime="20230601 09:58:02.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.807" endtime="20230601 09:58:02.930"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.937" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.953" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":0,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230601 09:58:02.935" endtime="20230601 09:58:02.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.955" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":0,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:58:02.954" endtime="20230601 09:58:02.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.955" endtime="20230601 09:58:02.955"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.934" endtime="20230601 09:58:02.956"/>
</kw>
<msg timestamp="20230601 09:58:02.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.934" endtime="20230601 09:58:02.956"/>
</kw>
<msg timestamp="20230601 09:58:02.956" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":0,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230601 09:58:02.934" endtime="20230601 09:58:02.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.957" endtime="20230601 09:58:02.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.957" endtime="20230601 09:58:02.958"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.933" endtime="20230601 09:58:02.958"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.932" endtime="20230601 09:58:02.958"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.932" endtime="20230601 09:58:02.958"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.931" endtime="20230601 09:58:02.958"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:02.965" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:02.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:02.988" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"vol-pfnav","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230601 09:58:02.963" endtime="20230601 09:58:02.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:02.989" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"vol-pfnav","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1685613457152,"modificationTime":1685613457152,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-pfnav"},"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:58:02.989" endtime="20230601 09:58:02.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:02.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:02.990" endtime="20230601 09:58:02.990"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.962" endtime="20230601 09:58:02.991"/>
</kw>
<msg timestamp="20230601 09:58:02.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.962" endtime="20230601 09:58:02.991"/>
</kw>
<msg timestamp="20230601 09:58:02.991" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"vol-pfnav","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230601 09:58:02.962" endtime="20230601 09:58:02.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.992" endtime="20230601 09:58:02.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:02.992" endtime="20230601 09:58:02.992"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.961" endtime="20230601 09:58:02.993"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.961" endtime="20230601 09:58:02.993"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.960" endtime="20230601 09:58:02.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.959" endtime="20230601 09:58:02.994"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:03.002" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:03.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:03.040" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-hxlkm","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230601 09:58:02.999" endtime="20230601 09:58:03.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:03.041" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-hxlkm","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1685613462106,"modificationTime":1685613462106,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-pfnav","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:58:03.040" endtime="20230601 09:58:03.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:03.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:03.041" endtime="20230601 09:58:03.042"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.998" endtime="20230601 09:58:03.042"/>
</kw>
<msg timestamp="20230601 09:58:03.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:02.998" endtime="20230601 09:58:03.043"/>
</kw>
<msg timestamp="20230601 09:58:03.043" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-hxlkm","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230601 09:58:02.998" endtime="20230601 09:58:03.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:03.043" endtime="20230601 09:58:03.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:03.044" endtime="20230601 09:58:03.044"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.996" endtime="20230601 09:58:03.044"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.996" endtime="20230601 09:58:03.044"/>
</kw>
<status status="PASS" starttime="20230601 09:58:02.995" endtime="20230601 09:58:03.044"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:02.995" endtime="20230601 09:58:03.045"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:03.052" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:03.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:03.120" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230601 09:58:03.050" endtime="20230601 09:58:03.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:03.121" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1685613467689,"modificationTime":1685613471435,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-pfnav","bucketName":"buc-hxlkm","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:58:03.121" endtime="20230601 09:58:03.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:03.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:03.122" endtime="20230601 09:58:03.122"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.049" endtime="20230601 09:58:03.123"/>
</kw>
<msg timestamp="20230601 09:58:03.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:03.049" endtime="20230601 09:58:03.123"/>
</kw>
<msg timestamp="20230601 09:58:03.124" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230601 09:58:03.049" endtime="20230601 09:58:03.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:03.124" endtime="20230601 09:58:03.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:58:03.125" endtime="20230601 09:58:03.126"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.048" endtime="20230601 09:58:03.126"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.048" endtime="20230601 09:58:03.126"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.047" endtime="20230601 09:58:03.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:03.046" endtime="20230601 09:58:03.126"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:03.136" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:03.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:03.153" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:03.134" endtime="20230601 09:58:03.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:03.154" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:03.153" endtime="20230601 09:58:03.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:03.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:03.154" endtime="20230601 09:58:03.155"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.133" endtime="20230601 09:58:03.155"/>
</kw>
<msg timestamp="20230601 09:58:03.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:03.133" endtime="20230601 09:58:03.156"/>
</kw>
<msg timestamp="20230601 09:58:03.156" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:03.131" endtime="20230601 09:58:03.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 09:58:03.157" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230601 09:58:03.156" endtime="20230601 09:58:03.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:03.158" endtime="20230601 09:58:03.158"/>
</kw>
<status status="FAIL" starttime="20230601 09:58:03.131" endtime="20230601 09:58:03.159"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:13.163" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:13.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:13.180" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:13.161" endtime="20230601 09:58:13.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:13.182" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:13.181" endtime="20230601 09:58:13.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:13.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:13.182" endtime="20230601 09:58:13.183"/>
</kw>
<status status="PASS" starttime="20230601 09:58:13.161" endtime="20230601 09:58:13.183"/>
</kw>
<msg timestamp="20230601 09:58:13.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:13.160" endtime="20230601 09:58:13.184"/>
</kw>
<msg timestamp="20230601 09:58:13.184" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:13.160" endtime="20230601 09:58:13.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 09:58:13.185" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230601 09:58:13.184" endtime="20230601 09:58:13.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:13.185" endtime="20230601 09:58:13.185"/>
</kw>
<status status="FAIL" starttime="20230601 09:58:13.159" endtime="20230601 09:58:13.187"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:23.193" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:23.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:23.211" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:23.190" endtime="20230601 09:58:23.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:23.212" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:23.211" endtime="20230601 09:58:23.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:23.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:23.212" endtime="20230601 09:58:23.213"/>
</kw>
<status status="PASS" starttime="20230601 09:58:23.189" endtime="20230601 09:58:23.213"/>
</kw>
<msg timestamp="20230601 09:58:23.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:23.189" endtime="20230601 09:58:23.214"/>
</kw>
<msg timestamp="20230601 09:58:23.214" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:23.188" endtime="20230601 09:58:23.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 09:58:23.215" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230601 09:58:23.214" endtime="20230601 09:58:23.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:23.216" endtime="20230601 09:58:23.216"/>
</kw>
<status status="FAIL" starttime="20230601 09:58:23.188" endtime="20230601 09:58:23.216"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:33.221" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:33.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:33.239" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:33.219" endtime="20230601 09:58:33.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:33.240" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:33.240" endtime="20230601 09:58:33.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:33.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:33.240" endtime="20230601 09:58:33.241"/>
</kw>
<status status="PASS" starttime="20230601 09:58:33.218" endtime="20230601 09:58:33.241"/>
</kw>
<msg timestamp="20230601 09:58:33.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:33.218" endtime="20230601 09:58:33.243"/>
</kw>
<msg timestamp="20230601 09:58:33.243" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:33.218" endtime="20230601 09:58:33.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 09:58:33.244" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230601 09:58:33.243" endtime="20230601 09:58:33.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:33.247" endtime="20230601 09:58:33.248"/>
</kw>
<status status="FAIL" starttime="20230601 09:58:33.217" endtime="20230601 09:58:33.250"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:43.255" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:43.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:43.269" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:43.252" endtime="20230601 09:58:43.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:43.271" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:43.270" endtime="20230601 09:58:43.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:43.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:43.271" endtime="20230601 09:58:43.271"/>
</kw>
<status status="PASS" starttime="20230601 09:58:43.252" endtime="20230601 09:58:43.272"/>
</kw>
<msg timestamp="20230601 09:58:43.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:43.252" endtime="20230601 09:58:43.272"/>
</kw>
<msg timestamp="20230601 09:58:43.273" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:43.251" endtime="20230601 09:58:43.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 09:58:43.274" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230601 09:58:43.273" endtime="20230601 09:58:43.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:43.274" endtime="20230601 09:58:43.274"/>
</kw>
<status status="FAIL" starttime="20230601 09:58:43.250" endtime="20230601 09:58:43.275"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:58:53.280" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:58:53.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:58:53.296" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:53.278" endtime="20230601 09:58:53.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:58:53.297" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:53.296" endtime="20230601 09:58:53.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:58:53.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:58:53.297" endtime="20230601 09:58:53.298"/>
</kw>
<status status="PASS" starttime="20230601 09:58:53.277" endtime="20230601 09:58:53.298"/>
</kw>
<msg timestamp="20230601 09:58:53.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:58:53.277" endtime="20230601 09:58:53.299"/>
</kw>
<msg timestamp="20230601 09:58:53.299" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230601 09:58:53.277" endtime="20230601 09:58:53.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 09:58:53.300" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230601 09:58:53.299" endtime="20230601 09:58:53.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230601 09:58:53.301" endtime="20230601 09:58:53.301"/>
</kw>
<status status="FAIL" starttime="20230601 09:58:53.276" endtime="20230601 09:58:53.301"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:59:03.306" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-pfnav/buc-hxlkm/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:59:03.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:59:03.322" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230601 09:59:03.304" endtime="20230601 09:59:03.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:59:03.323" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.323" endtime="20230601 09:59:03.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:59:03.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:59:03.323" endtime="20230601 09:59:03.324"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.303" endtime="20230601 09:59:03.324"/>
</kw>
<msg timestamp="20230601 09:59:03.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:59:03.303" endtime="20230601 09:59:03.325"/>
</kw>
<msg timestamp="20230601 09:59:03.325" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230601 09:59:03.302" endtime="20230601 09:59:03.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.325" endtime="20230601 09:59:03.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.326" endtime="20230601 09:59:03.326"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.302" endtime="20230601 09:59:03.327"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.130" endtime="20230601 09:59:03.327"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.129" endtime="20230601 09:59:03.327"/>
</kw>
<status status="PASS" starttime="20230601 09:58:03.129" endtime="20230601 09:59:03.327"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 09:59:03.327" endtime="20230601 09:59:03.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:58:03.128" endtime="20230601 09:59:03.328"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:59:03.335" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-pfnav/buc-hxlkm&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:59:03.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:59:03.352" level="INFO">${output} = {"status":"OK","path":"/vol-pfnav/buc-hxlkm","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-pfnav/buc-hxlkm/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230601 09:59:03.333" endtime="20230601 09:59:03.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:59:03.353" level="INFO">{"status":"OK","path":"/vol-pfnav/buc-hxlkm","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-pfnav/buc-hxlkm/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230601 09:59:03.353" endtime="20230601 09:59:03.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:59:03.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:59:03.353" endtime="20230601 09:59:03.354"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.332" endtime="20230601 09:59:03.354"/>
</kw>
<msg timestamp="20230601 09:59:03.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:59:03.332" endtime="20230601 09:59:03.355"/>
</kw>
<msg timestamp="20230601 09:59:03.355" level="INFO">${result} = {"status":"OK","path":"/vol-pfnav/buc-hxlkm","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-pfnav/buc-hxlkm/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230601 09:59:03.331" endtime="20230601 09:59:03.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.355" endtime="20230601 09:59:03.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.356" endtime="20230601 09:59:03.356"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.331" endtime="20230601 09:59:03.357"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.331" endtime="20230601 09:59:03.357"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.330" endtime="20230601 09:59:03.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:59:03.329" endtime="20230601 09:59:03.357"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:59:03.364" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-pfnav 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:59:03.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:59:03.379" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.362" endtime="20230601 09:59:03.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:59:03.381" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.380" endtime="20230601 09:59:03.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:59:03.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:59:03.381" endtime="20230601 09:59:03.382"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.361" endtime="20230601 09:59:03.382"/>
</kw>
<msg timestamp="20230601 09:59:03.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:59:03.361" endtime="20230601 09:59:03.383"/>
</kw>
<msg timestamp="20230601 09:59:03.383" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.360" endtime="20230601 09:59:03.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.383" endtime="20230601 09:59:03.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.384" endtime="20230601 09:59:03.384"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.360" endtime="20230601 09:59:03.385"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.360" endtime="20230601 09:59:03.385"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.359" endtime="20230601 09:59:03.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:59:03.358" endtime="20230601 09:59:03.385"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:59:03.393" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-pfnav/buc-hxlkm 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:59:03.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:59:03.408" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.391" endtime="20230601 09:59:03.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:59:03.409" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.409" endtime="20230601 09:59:03.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:59:03.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:59:03.410" endtime="20230601 09:59:03.410"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.390" endtime="20230601 09:59:03.410"/>
</kw>
<msg timestamp="20230601 09:59:03.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:59:03.389" endtime="20230601 09:59:03.411"/>
</kw>
<msg timestamp="20230601 09:59:03.411" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.389" endtime="20230601 09:59:03.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.411" endtime="20230601 09:59:03.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.412" endtime="20230601 09:59:03.412"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.388" endtime="20230601 09:59:03.412"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.388" endtime="20230601 09:59:03.413"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.387" endtime="20230601 09:59:03.413"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:59:03.386" endtime="20230601 09:59:03.413"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 09:59:03.420" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 09:59:03.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 09:59:03.434" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.417" endtime="20230601 09:59:03.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 09:59:03.435" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.434" endtime="20230601 09:59:03.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 09:59:03.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 09:59:03.435" endtime="20230601 09:59:03.436"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.417" endtime="20230601 09:59:03.436"/>
</kw>
<msg timestamp="20230601 09:59:03.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 09:59:03.417" endtime="20230601 09:59:03.437"/>
</kw>
<msg timestamp="20230601 09:59:03.437" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230601 09:59:03.416" endtime="20230601 09:59:03.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.437" endtime="20230601 09:59:03.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 09:59:03.438" endtime="20230601 09:59:03.438"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.416" endtime="20230601 09:59:03.439"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.415" endtime="20230601 09:59:03.439"/>
</kw>
<status status="PASS" starttime="20230601 09:59:03.415" endtime="20230601 09:59:03.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 09:59:03.414" endtime="20230601 09:59:03.439"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20230601 09:57:28.312" endtime="20230601 09:59:03.441"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
