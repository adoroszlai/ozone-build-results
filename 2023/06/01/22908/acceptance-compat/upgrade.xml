<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230601 19:45:30.569" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:33:43.527" level="INFO">${random} = 21156</msg>
<status status="PASS" starttime="20230601 19:33:43.527" endtime="20230601 19:33:43.527"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:43.536" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-21156 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:49.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:49.956" level="INFO">${output} = 2023-06-01 19:33:48,202 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:33:48,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:33:43.531" endtime="20230601 19:33:49.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:49.957" level="INFO">2023-06-01 19:33:48,202 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:33:48,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:33:48,320 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230601 19:33:49.956" endtime="20230601 19:33:49.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:49.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:49.957" endtime="20230601 19:33:49.959"/>
</kw>
<status status="PASS" starttime="20230601 19:33:43.530" endtime="20230601 19:33:49.960"/>
</kw>
<msg timestamp="20230601 19:33:49.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:43.529" endtime="20230601 19:33:49.962"/>
</kw>
<msg timestamp="20230601 19:33:49.963" level="INFO">${output} = 2023-06-01 19:33:48,202 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:33:48,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:33:43.528" endtime="20230601 19:33:49.963"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:33:49.963" endtime="20230601 19:33:49.964"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:49.967" level="INFO">Running command 'cat /tmp/key-21156 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:49.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:49.970" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:33:49.965" endtime="20230601 19:33:49.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:49.971" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:33:49.971" endtime="20230601 19:33:49.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:49.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:49.972" endtime="20230601 19:33:49.972"/>
</kw>
<msg timestamp="20230601 19:33:49.973" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:33:49.964" endtime="20230601 19:33:49.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:33:49.973" endtime="20230601 19:33:49.974"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:49.977" level="INFO">Running command 'rm /tmp/key-21156 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:49.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:49.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:49.975" endtime="20230601 19:33:49.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:49.984" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:49.983" endtime="20230601 19:33:49.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:49.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:49.985" endtime="20230601 19:33:49.986"/>
</kw>
<status status="PASS" starttime="20230601 19:33:49.974" endtime="20230601 19:33:49.986"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:33:43.524" endtime="20230601 19:33:49.986"/>
</test>
<test id="s1-s1-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:49.995" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:50.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:50.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:49.993" endtime="20230601 19:33:50.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:50.727" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:50.726" endtime="20230601 19:33:50.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:50.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:50.727" endtime="20230601 19:33:50.728"/>
</kw>
<status status="PASS" starttime="20230601 19:33:49.992" endtime="20230601 19:33:50.728"/>
</kw>
<msg timestamp="20230601 19:33:50.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:49.991" endtime="20230601 19:33:50.729"/>
</kw>
<status status="PASS" starttime="20230601 19:33:49.991" endtime="20230601 19:33:50.729"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:50.734" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:51.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:51.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:50.731" endtime="20230601 19:33:51.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:51.455" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:51.454" endtime="20230601 19:33:51.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:51.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:51.456" endtime="20230601 19:33:51.456"/>
</kw>
<status status="PASS" starttime="20230601 19:33:50.731" endtime="20230601 19:33:51.457"/>
</kw>
<msg timestamp="20230601 19:33:51.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:50.730" endtime="20230601 19:33:51.458"/>
</kw>
<status status="PASS" starttime="20230601 19:33:50.729" endtime="20230601 19:33:51.458"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:51.463" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:52.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:52.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:51.460" endtime="20230601 19:33:52.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:52.203" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:52.202" endtime="20230601 19:33:52.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:52.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:52.204" endtime="20230601 19:33:52.205"/>
</kw>
<status status="PASS" starttime="20230601 19:33:51.460" endtime="20230601 19:33:52.205"/>
</kw>
<msg timestamp="20230601 19:33:52.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:51.459" endtime="20230601 19:33:52.206"/>
</kw>
<status status="PASS" starttime="20230601 19:33:51.458" endtime="20230601 19:33:52.206"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:52.212" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:52.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:52.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:52.208" endtime="20230601 19:33:52.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:52.914" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:52.912" endtime="20230601 19:33:52.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:52.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:52.914" endtime="20230601 19:33:52.915"/>
</kw>
<status status="PASS" starttime="20230601 19:33:52.207" endtime="20230601 19:33:52.915"/>
</kw>
<msg timestamp="20230601 19:33:52.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:52.207" endtime="20230601 19:33:52.916"/>
</kw>
<status status="PASS" starttime="20230601 19:33:52.206" endtime="20230601 19:33:52.916"/>
</kw>
<status status="PASS" starttime="20230601 19:33:49.990" endtime="20230601 19:33:52.916"/>
</kw>
<status status="PASS" starttime="20230601 19:33:49.990" endtime="20230601 19:33:52.917"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:33:49.988" endtime="20230601 19:33:52.917"/>
</test>
<test id="s1-s1-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:52.924" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:56.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:56.640" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:33:52.921" endtime="20230601 19:33:56.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:56.641" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:33:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:33:56.641" endtime="20230601 19:33:56.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:56.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:56.642" endtime="20230601 19:33:56.643"/>
</kw>
<msg timestamp="20230601 19:33:56.643" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:33:52.920" endtime="20230601 19:33:56.643"/>
</kw>
<msg timestamp="20230601 19:33:56.643" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:33:52.919" endtime="20230601 19:33:56.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:33:56.644" endtime="20230601 19:33:56.644"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:56.649" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:56.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:56.652" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:33:56.645" endtime="20230601 19:33:56.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:56.654" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:33:56.653" endtime="20230601 19:33:56.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:56.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:56.654" endtime="20230601 19:33:56.654"/>
</kw>
<msg timestamp="20230601 19:33:56.655" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:33:56.645" endtime="20230601 19:33:56.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:33:56.655" endtime="20230601 19:33:56.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:56.660" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:56.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:56.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:56.657" endtime="20230601 19:33:56.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:56.668" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:56.666" endtime="20230601 19:33:56.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:56.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:56.669" endtime="20230601 19:33:56.669"/>
</kw>
<status status="PASS" starttime="20230601 19:33:56.656" endtime="20230601 19:33:56.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:33:52.918" endtime="20230601 19:33:56.670"/>
</test>
<test id="s1-s1-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:56.679" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:57.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:57.720" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:33:56.676" endtime="20230601 19:33:57.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:57.721" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:33:57 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:33:57.720" endtime="20230601 19:33:57.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:57.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:57.722" endtime="20230601 19:33:57.722"/>
</kw>
<msg timestamp="20230601 19:33:57.723" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:33:56.675" endtime="20230601 19:33:57.723"/>
</kw>
<msg timestamp="20230601 19:33:57.724" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:28:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:33:56.674" endtime="20230601 19:33:57.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:33:57.724" endtime="20230601 19:33:57.725"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:57.728" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:57.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:57.732" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:33:57.726" endtime="20230601 19:33:57.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:57.733" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:33:57.732" endtime="20230601 19:33:57.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:57.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:57.734" endtime="20230601 19:33:57.735"/>
</kw>
<msg timestamp="20230601 19:33:57.735" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:33:57.725" endtime="20230601 19:33:57.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:33:57.735" endtime="20230601 19:33:57.736"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:57.739" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:57.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:57.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:33:57.737" endtime="20230601 19:33:57.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:57.743" level="INFO"/>
<status status="PASS" starttime="20230601 19:33:57.742" endtime="20230601 19:33:57.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:57.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:57.743" endtime="20230601 19:33:57.744"/>
</kw>
<status status="PASS" starttime="20230601 19:33:57.736" endtime="20230601 19:33:57.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:33:56.673" endtime="20230601 19:33:57.745"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:33:43.406" endtime="20230601 19:33:57.747"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:34:03.763" level="INFO">${random} = 78249</msg>
<status status="PASS" starttime="20230601 19:34:03.762" endtime="20230601 19:34:03.763"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:03.773" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-78249 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:10.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:10.033" level="INFO">${output} = 2023-06-01 19:34:08,332 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:08,453 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:03.766" endtime="20230601 19:34:10.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:10.035" level="INFO">2023-06-01 19:34:08,332 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:08,453 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:34:08,453 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230601 19:34:10.034" endtime="20230601 19:34:10.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:10.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:10.036" endtime="20230601 19:34:10.036"/>
</kw>
<status status="PASS" starttime="20230601 19:34:03.765" endtime="20230601 19:34:10.037"/>
</kw>
<msg timestamp="20230601 19:34:10.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:03.764" endtime="20230601 19:34:10.038"/>
</kw>
<msg timestamp="20230601 19:34:10.039" level="INFO">${output} = 2023-06-01 19:34:08,332 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:08,453 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:03.763" endtime="20230601 19:34:10.039"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:10.039" endtime="20230601 19:34:10.041"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:10.045" level="INFO">Running command 'cat /tmp/key-78249 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:10.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:10.049" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:34:10.042" endtime="20230601 19:34:10.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:10.050" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:34:10.050" endtime="20230601 19:34:10.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:10.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:10.051" endtime="20230601 19:34:10.051"/>
</kw>
<msg timestamp="20230601 19:34:10.052" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:34:10.041" endtime="20230601 19:34:10.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:10.052" endtime="20230601 19:34:10.053"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:10.058" level="INFO">Running command 'rm /tmp/key-78249 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:10.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:10.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:10.054" endtime="20230601 19:34:10.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:10.066" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:10.064" endtime="20230601 19:34:10.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:10.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:10.066" endtime="20230601 19:34:10.067"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.053" endtime="20230601 19:34:10.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:03.756" endtime="20230601 19:34:10.068"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:10.079" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:10.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:10.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:10.076" endtime="20230601 19:34:10.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:10.767" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:10.766" endtime="20230601 19:34:10.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:10.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:10.768" endtime="20230601 19:34:10.768"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.075" endtime="20230601 19:34:10.769"/>
</kw>
<msg timestamp="20230601 19:34:10.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:10.074" endtime="20230601 19:34:10.770"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.073" endtime="20230601 19:34:10.770"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:10.775" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:11.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:11.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:10.772" endtime="20230601 19:34:11.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:11.502" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:11.501" endtime="20230601 19:34:11.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:11.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:11.502" endtime="20230601 19:34:11.503"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.771" endtime="20230601 19:34:11.504"/>
</kw>
<msg timestamp="20230601 19:34:11.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:10.771" endtime="20230601 19:34:11.504"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.770" endtime="20230601 19:34:11.505"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:11.510" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:12.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:12.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:11.507" endtime="20230601 19:34:12.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:12.195" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:12.194" endtime="20230601 19:34:12.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:12.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:12.196" endtime="20230601 19:34:12.196"/>
</kw>
<status status="PASS" starttime="20230601 19:34:11.506" endtime="20230601 19:34:12.197"/>
</kw>
<msg timestamp="20230601 19:34:12.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:11.506" endtime="20230601 19:34:12.198"/>
</kw>
<status status="PASS" starttime="20230601 19:34:11.505" endtime="20230601 19:34:12.199"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:12.204" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:12.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:12.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:12.201" endtime="20230601 19:34:12.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:12.905" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:12.904" endtime="20230601 19:34:12.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:12.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:12.906" endtime="20230601 19:34:12.906"/>
</kw>
<status status="PASS" starttime="20230601 19:34:12.200" endtime="20230601 19:34:12.907"/>
</kw>
<msg timestamp="20230601 19:34:12.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:12.199" endtime="20230601 19:34:12.907"/>
</kw>
<status status="PASS" starttime="20230601 19:34:12.199" endtime="20230601 19:34:12.908"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.072" endtime="20230601 19:34:12.908"/>
</kw>
<status status="PASS" starttime="20230601 19:34:10.071" endtime="20230601 19:34:12.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:10.070" endtime="20230601 19:34:12.908"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:12.919" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:13.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:13.764" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:34:12.913" endtime="20230601 19:34:13.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:13.765" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:34:13 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:34:13.764" endtime="20230601 19:34:13.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:13.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:13.766" endtime="20230601 19:34:13.766"/>
</kw>
<msg timestamp="20230601 19:34:13.767" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:34:12.912" endtime="20230601 19:34:13.767"/>
</kw>
<msg timestamp="20230601 19:34:13.767" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:34:12.911" endtime="20230601 19:34:13.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:13.768" endtime="20230601 19:34:13.768"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:13.772" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:13.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:13.776" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:34:13.769" endtime="20230601 19:34:13.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:13.778" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:34:13.777" endtime="20230601 19:34:13.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:13.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:13.779" endtime="20230601 19:34:13.780"/>
</kw>
<msg timestamp="20230601 19:34:13.780" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:34:13.768" endtime="20230601 19:34:13.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:13.781" endtime="20230601 19:34:13.781"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:13.785" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:13.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:13.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:13.782" endtime="20230601 19:34:13.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:13.797" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:13.796" endtime="20230601 19:34:13.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:13.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:13.797" endtime="20230601 19:34:13.798"/>
</kw>
<status status="PASS" starttime="20230601 19:34:13.782" endtime="20230601 19:34:13.798"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:12.910" endtime="20230601 19:34:13.799"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:13.807" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:14.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:14.652" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:34:13.804" endtime="20230601 19:34:14.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:14.654" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:34:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:34:14.653" endtime="20230601 19:34:14.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:14.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:14.654" endtime="20230601 19:34:14.655"/>
</kw>
<msg timestamp="20230601 19:34:14.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:34:13.803" endtime="20230601 19:34:14.656"/>
</kw>
<msg timestamp="20230601 19:34:14.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:34:13.802" endtime="20230601 19:34:14.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:14.657" endtime="20230601 19:34:14.658"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:14.661" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:14.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:14.667" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:34:14.658" endtime="20230601 19:34:14.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:14.669" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:34:14.668" endtime="20230601 19:34:14.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:14.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:14.669" endtime="20230601 19:34:14.670"/>
</kw>
<msg timestamp="20230601 19:34:14.671" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:34:14.658" endtime="20230601 19:34:14.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:14.671" endtime="20230601 19:34:14.672"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:14.675" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:14.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:14.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:14.673" endtime="20230601 19:34:14.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:14.680" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:14.679" endtime="20230601 19:34:14.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:14.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:14.680" endtime="20230601 19:34:14.681"/>
</kw>
<status status="PASS" starttime="20230601 19:34:14.672" endtime="20230601 19:34:14.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:13.801" endtime="20230601 19:34:14.682"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:34:03.473" endtime="20230601 19:34:14.685"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:20.046" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:24.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:24.017" level="INFO">${output} = 2023-06-01 19:34:23,847 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230601 19:34:20.041" endtime="20230601 19:34:24.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:24.019" level="INFO">2023-06-01 19:34:23,847 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230601 19:34:24.019" endtime="20230601 19:34:24.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:24.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:24.020" endtime="20230601 19:34:24.020"/>
</kw>
<status status="PASS" starttime="20230601 19:34:20.040" endtime="20230601 19:34:24.025"/>
</kw>
<msg timestamp="20230601 19:34:24.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:20.040" endtime="20230601 19:34:24.028"/>
</kw>
<msg timestamp="20230601 19:34:24.029" level="INFO">${output} = 2023-06-01 19:34:23,847 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230601 19:34:20.039" endtime="20230601 19:34:24.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:24.029" endtime="20230601 19:34:24.030"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:24.044" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:27.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:27.717" level="INFO">${output} = 2023-06-01 19:34:27,632 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230601 19:34:24.036" endtime="20230601 19:34:27.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:27.719" level="INFO">2023-06-01 19:34:27,632 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230601 19:34:27.718" endtime="20230601 19:34:27.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:27.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:27.719" endtime="20230601 19:34:27.720"/>
</kw>
<status status="PASS" starttime="20230601 19:34:24.035" endtime="20230601 19:34:27.720"/>
</kw>
<msg timestamp="20230601 19:34:27.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:24.035" endtime="20230601 19:34:27.721"/>
</kw>
<msg timestamp="20230601 19:34:27.722" level="INFO">${output} = 2023-06-01 19:34:27,632 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230601 19:34:24.031" endtime="20230601 19:34:27.722"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:27.722" endtime="20230601 19:34:27.722"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:20.038" endtime="20230601 19:34:27.723"/>
</test>
<test id="s1-s3-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:27.731" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:34:27.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:27.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:27.727" endtime="20230601 19:34:27.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:27.736" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:27.735" endtime="20230601 19:34:27.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:27.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:27.736" endtime="20230601 19:34:27.737"/>
</kw>
<status status="PASS" starttime="20230601 19:34:27.726" endtime="20230601 19:34:27.737"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:27.742" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:36.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:36.216" level="INFO">${output} = 2023-06-01 19:34:33,768 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:33,951 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:27.739" endtime="20230601 19:34:36.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:36.218" level="INFO">2023-06-01 19:34:33,768 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:33,951 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:34:33,951 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-01 19:34:34,353 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230601 19:34:36.217" endtime="20230601 19:34:36.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:36.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:36.218" endtime="20230601 19:34:36.219"/>
</kw>
<status status="PASS" starttime="20230601 19:34:27.739" endtime="20230601 19:34:36.220"/>
</kw>
<msg timestamp="20230601 19:34:36.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:27.738" endtime="20230601 19:34:36.220"/>
</kw>
<msg timestamp="20230601 19:34:36.221" level="INFO">${output} = 2023-06-01 19:34:33,768 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:33,951 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:27.737" endtime="20230601 19:34:36.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:36.221" endtime="20230601 19:34:36.221"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:36.225" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:36.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:36.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:36.222" endtime="20230601 19:34:36.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:36.230" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:36.230" endtime="20230601 19:34:36.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:36.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:36.231" endtime="20230601 19:34:36.231"/>
</kw>
<status status="PASS" starttime="20230601 19:34:36.222" endtime="20230601 19:34:36.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:27.724" endtime="20230601 19:34:36.232"/>
</test>
<test id="s1-s3-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:36.239" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:39.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:39.930" level="INFO">${output} = 2023-06-01 19:34:39,847 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230601 19:34:36.236" endtime="20230601 19:34:39.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:39.932" level="INFO">2023-06-01 19:34:39,847 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230601 19:34:39.931" endtime="20230601 19:34:39.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:39.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:39.932" endtime="20230601 19:34:39.933"/>
</kw>
<status status="PASS" starttime="20230601 19:34:36.235" endtime="20230601 19:34:39.934"/>
</kw>
<msg timestamp="20230601 19:34:39.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:36.235" endtime="20230601 19:34:39.935"/>
</kw>
<msg timestamp="20230601 19:34:39.935" level="INFO">${output} = 2023-06-01 19:34:39,847 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230601 19:34:36.234" endtime="20230601 19:34:39.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:39.935" endtime="20230601 19:34:39.936"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:36.233" endtime="20230601 19:34:39.937"/>
</test>
<test id="s1-s3-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:39.944" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:34:39.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:39.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:39.941" endtime="20230601 19:34:39.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:39.948" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:39.947" endtime="20230601 19:34:39.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:39.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:39.948" endtime="20230601 19:34:39.949"/>
</kw>
<status status="PASS" starttime="20230601 19:34:39.940" endtime="20230601 19:34:39.950"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:39.954" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:46.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:46.731" level="INFO">${output} = 2023-06-01 19:34:44,774 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:44,941 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:39.952" endtime="20230601 19:34:46.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:46.732" level="INFO">2023-06-01 19:34:44,774 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:44,941 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:34:44,941 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-01 19:34:45,289 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230601 19:34:46.731" endtime="20230601 19:34:46.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:46.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:46.733" endtime="20230601 19:34:46.733"/>
</kw>
<status status="PASS" starttime="20230601 19:34:39.951" endtime="20230601 19:34:46.734"/>
</kw>
<msg timestamp="20230601 19:34:46.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:39.951" endtime="20230601 19:34:46.735"/>
</kw>
<msg timestamp="20230601 19:34:46.735" level="INFO">${output} = 2023-06-01 19:34:44,774 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:34:44,941 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:39.950" endtime="20230601 19:34:46.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:46.735" endtime="20230601 19:34:46.736"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:46.740" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:46.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:46.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:46.737" endtime="20230601 19:34:46.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:46.745" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:46.744" endtime="20230601 19:34:46.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:46.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:46.745" endtime="20230601 19:34:46.746"/>
</kw>
<status status="PASS" starttime="20230601 19:34:46.736" endtime="20230601 19:34:46.747"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:39.939" endtime="20230601 19:34:46.747"/>
</test>
<test id="s1-s3-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:46.755" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:47.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:47.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:46.752" endtime="20230601 19:34:47.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:47.461" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:47.460" endtime="20230601 19:34:47.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:47.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:47.461" endtime="20230601 19:34:47.462"/>
</kw>
<status status="PASS" starttime="20230601 19:34:46.752" endtime="20230601 19:34:47.463"/>
</kw>
<msg timestamp="20230601 19:34:47.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:46.751" endtime="20230601 19:34:47.463"/>
</kw>
<status status="PASS" starttime="20230601 19:34:46.750" endtime="20230601 19:34:47.464"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:47.470" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:48.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:48.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:47.466" endtime="20230601 19:34:48.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:48.118" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:48.118" endtime="20230601 19:34:48.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:48.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:48.119" endtime="20230601 19:34:48.119"/>
</kw>
<status status="PASS" starttime="20230601 19:34:47.465" endtime="20230601 19:34:48.120"/>
</kw>
<msg timestamp="20230601 19:34:48.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:47.465" endtime="20230601 19:34:48.120"/>
</kw>
<status status="PASS" starttime="20230601 19:34:47.464" endtime="20230601 19:34:48.120"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:48.125" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:48.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:48.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:48.122" endtime="20230601 19:34:48.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:48.810" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:48.809" endtime="20230601 19:34:48.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:48.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:48.811" endtime="20230601 19:34:48.811"/>
</kw>
<status status="PASS" starttime="20230601 19:34:48.122" endtime="20230601 19:34:48.812"/>
</kw>
<msg timestamp="20230601 19:34:48.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:48.121" endtime="20230601 19:34:48.813"/>
</kw>
<status status="PASS" starttime="20230601 19:34:48.121" endtime="20230601 19:34:48.813"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:48.818" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:49.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:49.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:48.815" endtime="20230601 19:34:49.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:49.537" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:49.536" endtime="20230601 19:34:49.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:49.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:49.537" endtime="20230601 19:34:49.538"/>
</kw>
<status status="PASS" starttime="20230601 19:34:48.814" endtime="20230601 19:34:49.538"/>
</kw>
<msg timestamp="20230601 19:34:49.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:48.814" endtime="20230601 19:34:49.540"/>
</kw>
<status status="PASS" starttime="20230601 19:34:48.813" endtime="20230601 19:34:49.541"/>
</kw>
<status status="PASS" starttime="20230601 19:34:46.750" endtime="20230601 19:34:49.541"/>
</kw>
<status status="PASS" starttime="20230601 19:34:46.749" endtime="20230601 19:34:49.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:46.748" endtime="20230601 19:34:49.541"/>
</test>
<test id="s1-s3-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:49.549" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:50.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:50.440" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:34:49.546" endtime="20230601 19:34:50.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:50.442" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:34:50.441" endtime="20230601 19:34:50.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:50.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:50.442" endtime="20230601 19:34:50.443"/>
</kw>
<status status="PASS" starttime="20230601 19:34:49.545" endtime="20230601 19:34:50.443"/>
</kw>
<msg timestamp="20230601 19:34:50.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:49.545" endtime="20230601 19:34:50.444"/>
</kw>
<msg timestamp="20230601 19:34:50.445" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:34:49.544" endtime="20230601 19:34:50.445"/>
</kw>
<msg timestamp="20230601 19:34:50.445" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:34:49.544" endtime="20230601 19:34:50.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:50.445" endtime="20230601 19:34:50.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:50.446" endtime="20230601 19:34:50.447"/>
</kw>
<msg timestamp="20230601 19:34:50.447" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 19:34:49.543" endtime="20230601 19:34:50.447"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230601 19:34:50.447" endtime="20230601 19:34:50.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:49.542" endtime="20230601 19:34:50.448"/>
</test>
<test id="s1-s3-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:50.455" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:34:50.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:50.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:50.452" endtime="20230601 19:34:50.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:50.458" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:50.457" endtime="20230601 19:34:50.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:50.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:50.458" endtime="20230601 19:34:50.459"/>
</kw>
<status status="PASS" starttime="20230601 19:34:50.451" endtime="20230601 19:34:50.460"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:50.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:51.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:51.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:50.463" endtime="20230601 19:34:51.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:51.865" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:51.864" endtime="20230601 19:34:51.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:51.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:51.866" endtime="20230601 19:34:51.866"/>
</kw>
<msg timestamp="20230601 19:34:51.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:50.461" endtime="20230601 19:34:51.867"/>
</kw>
<msg timestamp="20230601 19:34:51.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:50.460" endtime="20230601 19:34:51.867"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:34:51.867" endtime="20230601 19:34:51.868"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:51.871" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:34:51.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:34:51.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:34:51.868" endtime="20230601 19:34:51.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:34:51.877" level="INFO"/>
<status status="PASS" starttime="20230601 19:34:51.876" endtime="20230601 19:34:51.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:34:51.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:34:51.878" endtime="20230601 19:34:51.878"/>
</kw>
<status status="PASS" starttime="20230601 19:34:51.868" endtime="20230601 19:34:51.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:50.449" endtime="20230601 19:34:51.879"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230601 19:34:19.913" endtime="20230601 19:34:51.881"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:34:57.261" level="INFO">${random} = 43372</msg>
<status status="PASS" starttime="20230601 19:34:57.260" endtime="20230601 19:34:57.261"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:34:57.271" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-43372 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:03.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:03.397" level="INFO">${output} = 2023-06-01 19:35:01,737 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:01,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:57.264" endtime="20230601 19:35:03.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:03.398" level="INFO">2023-06-01 19:35:01,737 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:01,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:35:01,953 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230601 19:35:03.397" endtime="20230601 19:35:03.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:03.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:03.399" endtime="20230601 19:35:03.400"/>
</kw>
<status status="PASS" starttime="20230601 19:34:57.263" endtime="20230601 19:35:03.400"/>
</kw>
<msg timestamp="20230601 19:35:03.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:34:57.262" endtime="20230601 19:35:03.402"/>
</kw>
<msg timestamp="20230601 19:35:03.402" level="INFO">${output} = 2023-06-01 19:35:01,737 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:01,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:34:57.261" endtime="20230601 19:35:03.402"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:03.402" endtime="20230601 19:35:03.403"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:03.407" level="INFO">Running command 'cat /tmp/key-43372 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:03.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:03.411" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:35:03.404" endtime="20230601 19:35:03.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:03.412" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:35:03.411" endtime="20230601 19:35:03.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:03.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:03.412" endtime="20230601 19:35:03.413"/>
</kw>
<msg timestamp="20230601 19:35:03.414" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:35:03.403" endtime="20230601 19:35:03.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:03.414" endtime="20230601 19:35:03.414"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:03.418" level="INFO">Running command 'rm /tmp/key-43372 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:03.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:03.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:03.415" endtime="20230601 19:35:03.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:03.422" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:03.421" endtime="20230601 19:35:03.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:03.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:03.422" endtime="20230601 19:35:03.423"/>
</kw>
<status status="PASS" starttime="20230601 19:35:03.415" endtime="20230601 19:35:03.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:34:57.259" endtime="20230601 19:35:03.424"/>
</test>
<test id="s1-s4-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:03.433" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:04.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:04.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:03.430" endtime="20230601 19:35:04.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:04.159" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:04.158" endtime="20230601 19:35:04.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:04.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:04.159" endtime="20230601 19:35:04.160"/>
</kw>
<status status="PASS" starttime="20230601 19:35:03.429" endtime="20230601 19:35:04.160"/>
</kw>
<msg timestamp="20230601 19:35:04.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:03.429" endtime="20230601 19:35:04.161"/>
</kw>
<status status="PASS" starttime="20230601 19:35:03.428" endtime="20230601 19:35:04.161"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:04.168" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:04.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:04.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:04.164" endtime="20230601 19:35:04.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:04.821" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:04.821" endtime="20230601 19:35:04.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:04.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:04.822" endtime="20230601 19:35:04.822"/>
</kw>
<status status="PASS" starttime="20230601 19:35:04.163" endtime="20230601 19:35:04.823"/>
</kw>
<msg timestamp="20230601 19:35:04.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:04.163" endtime="20230601 19:35:04.823"/>
</kw>
<status status="PASS" starttime="20230601 19:35:04.162" endtime="20230601 19:35:04.824"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:04.828" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:05.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:05.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:04.826" endtime="20230601 19:35:05.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:05.475" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:05.475" endtime="20230601 19:35:05.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:05.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:05.476" endtime="20230601 19:35:05.476"/>
</kw>
<status status="PASS" starttime="20230601 19:35:04.825" endtime="20230601 19:35:05.477"/>
</kw>
<msg timestamp="20230601 19:35:05.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:04.824" endtime="20230601 19:35:05.478"/>
</kw>
<status status="PASS" starttime="20230601 19:35:04.824" endtime="20230601 19:35:05.478"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:05.485" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:06.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:06.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:05.480" endtime="20230601 19:35:06.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:06.149" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:06.148" endtime="20230601 19:35:06.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:06.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:06.149" endtime="20230601 19:35:06.151"/>
</kw>
<status status="PASS" starttime="20230601 19:35:05.479" endtime="20230601 19:35:06.151"/>
</kw>
<msg timestamp="20230601 19:35:06.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:05.479" endtime="20230601 19:35:06.152"/>
</kw>
<status status="PASS" starttime="20230601 19:35:05.478" endtime="20230601 19:35:06.152"/>
</kw>
<status status="PASS" starttime="20230601 19:35:03.427" endtime="20230601 19:35:06.152"/>
</kw>
<status status="PASS" starttime="20230601 19:35:03.427" endtime="20230601 19:35:06.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:03.426" endtime="20230601 19:35:06.153"/>
</test>
<test id="s1-s4-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:06.162" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:07.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:07.040" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:35:06.158" endtime="20230601 19:35:07.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:07.042" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:35:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:35:07.041" endtime="20230601 19:35:07.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:07.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:07.042" endtime="20230601 19:35:07.043"/>
</kw>
<msg timestamp="20230601 19:35:07.044" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:35:06.157" endtime="20230601 19:35:07.044"/>
</kw>
<msg timestamp="20230601 19:35:07.044" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:35:06.156" endtime="20230601 19:35:07.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:07.044" endtime="20230601 19:35:07.045"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:07.051" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:07.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:07.054" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:35:07.046" endtime="20230601 19:35:07.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:07.056" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:35:07.055" endtime="20230601 19:35:07.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:07.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:07.057" endtime="20230601 19:35:07.058"/>
</kw>
<msg timestamp="20230601 19:35:07.058" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:35:07.045" endtime="20230601 19:35:07.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:07.059" endtime="20230601 19:35:07.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:07.063" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:07.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:07.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:07.060" endtime="20230601 19:35:07.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:07.069" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:07.068" endtime="20230601 19:35:07.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:07.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:07.070" endtime="20230601 19:35:07.070"/>
</kw>
<status status="PASS" starttime="20230601 19:35:07.059" endtime="20230601 19:35:07.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:06.154" endtime="20230601 19:35:07.071"/>
</test>
<test id="s1-s4-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:07.078" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:07.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:07.902" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:35:07.075" endtime="20230601 19:35:07.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:07.903" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:35:07 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:35:07.902" endtime="20230601 19:35:07.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:07.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:07.904" endtime="20230601 19:35:07.905"/>
</kw>
<msg timestamp="20230601 19:35:07.905" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:35:07.074" endtime="20230601 19:35:07.906"/>
</kw>
<msg timestamp="20230601 19:35:07.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:35:07.073" endtime="20230601 19:35:07.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:07.906" endtime="20230601 19:35:07.907"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:07.911" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:07.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:07.914" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:35:07.908" endtime="20230601 19:35:07.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:07.915" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:35:07.914" endtime="20230601 19:35:07.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:07.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:07.915" endtime="20230601 19:35:07.917"/>
</kw>
<msg timestamp="20230601 19:35:07.917" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:35:07.907" endtime="20230601 19:35:07.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:07.917" endtime="20230601 19:35:07.918"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:07.921" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:07.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:07.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:07.919" endtime="20230601 19:35:07.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:07.925" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:07.924" endtime="20230601 19:35:07.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:07.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:07.925" endtime="20230601 19:35:07.926"/>
</kw>
<status status="PASS" starttime="20230601 19:35:07.918" endtime="20230601 19:35:07.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:07.072" endtime="20230601 19:35:07.926"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:34:57.137" endtime="20230601 19:35:07.929"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:13.149" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:35:13.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:13.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:13.142" endtime="20230601 19:35:13.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:13.153" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:13.152" endtime="20230601 19:35:13.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:13.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:13.153" endtime="20230601 19:35:13.154"/>
</kw>
<status status="PASS" starttime="20230601 19:35:13.141" endtime="20230601 19:35:13.154"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:13.159" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:19.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:19.944" level="INFO">${output} = 2023-06-01 19:35:17,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:17,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:35:13.157" endtime="20230601 19:35:19.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:19.946" level="INFO">2023-06-01 19:35:17,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:17,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:35:17,886 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-01 19:35:18,265 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230601 19:35:19.945" endtime="20230601 19:35:19.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:19.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:19.946" endtime="20230601 19:35:19.947"/>
</kw>
<status status="PASS" starttime="20230601 19:35:13.156" endtime="20230601 19:35:19.948"/>
</kw>
<msg timestamp="20230601 19:35:19.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:13.156" endtime="20230601 19:35:19.949"/>
</kw>
<msg timestamp="20230601 19:35:19.950" level="INFO">${output} = 2023-06-01 19:35:17,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:17,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:35:13.155" endtime="20230601 19:35:19.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:19.950" endtime="20230601 19:35:19.951"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:19.954" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:19.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:19.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:19.951" endtime="20230601 19:35:19.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:19.959" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:19.958" endtime="20230601 19:35:19.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:19.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:19.959" endtime="20230601 19:35:19.960"/>
</kw>
<status status="PASS" starttime="20230601 19:35:19.951" endtime="20230601 19:35:19.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:13.140" endtime="20230601 19:35:19.961"/>
</test>
<test id="s1-s5-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:19.967" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:35:19.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:19.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:19.965" endtime="20230601 19:35:19.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:19.971" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:19.970" endtime="20230601 19:35:19.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:19.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:19.971" endtime="20230601 19:35:19.972"/>
</kw>
<status status="PASS" starttime="20230601 19:35:19.964" endtime="20230601 19:35:19.973"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:19.978" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:26.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:26.297" level="INFO">${output} = 2023-06-01 19:35:24,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:24,521 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:35:19.975" endtime="20230601 19:35:26.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:26.299" level="INFO">2023-06-01 19:35:24,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:24,521 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:35:24,521 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-01 19:35:24,865 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230601 19:35:26.298" endtime="20230601 19:35:26.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:26.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:26.299" endtime="20230601 19:35:26.300"/>
</kw>
<status status="PASS" starttime="20230601 19:35:19.974" endtime="20230601 19:35:26.300"/>
</kw>
<msg timestamp="20230601 19:35:26.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:19.974" endtime="20230601 19:35:26.301"/>
</kw>
<msg timestamp="20230601 19:35:26.301" level="INFO">${output} = 2023-06-01 19:35:24,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:35:24,521 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:35:19.973" endtime="20230601 19:35:26.301"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:26.302" endtime="20230601 19:35:26.302"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:26.306" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:26.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:26.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:26.303" endtime="20230601 19:35:26.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:26.311" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:26.310" endtime="20230601 19:35:26.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:26.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:26.311" endtime="20230601 19:35:26.312"/>
</kw>
<status status="PASS" starttime="20230601 19:35:26.302" endtime="20230601 19:35:26.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:19.963" endtime="20230601 19:35:26.312"/>
</test>
<test id="s1-s5-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:26.320" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:26.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:26.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:26.318" endtime="20230601 19:35:26.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:26.998" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:26.997" endtime="20230601 19:35:26.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:26.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:26.998" endtime="20230601 19:35:26.999"/>
</kw>
<status status="PASS" starttime="20230601 19:35:26.317" endtime="20230601 19:35:26.999"/>
</kw>
<msg timestamp="20230601 19:35:26.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:26.316" endtime="20230601 19:35:27.000"/>
</kw>
<status status="PASS" starttime="20230601 19:35:26.315" endtime="20230601 19:35:27.000"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:27.016" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:27.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:27.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:27.011" endtime="20230601 19:35:27.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:27.732" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:27.731" endtime="20230601 19:35:27.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:27.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:27.733" endtime="20230601 19:35:27.734"/>
</kw>
<status status="PASS" starttime="20230601 19:35:27.010" endtime="20230601 19:35:27.734"/>
</kw>
<msg timestamp="20230601 19:35:27.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:27.001" endtime="20230601 19:35:27.735"/>
</kw>
<status status="PASS" starttime="20230601 19:35:27.000" endtime="20230601 19:35:27.735"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:27.740" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:28.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:28.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:27.737" endtime="20230601 19:35:28.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:28.404" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:28.403" endtime="20230601 19:35:28.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:28.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:28.404" endtime="20230601 19:35:28.405"/>
</kw>
<status status="PASS" starttime="20230601 19:35:27.737" endtime="20230601 19:35:28.405"/>
</kw>
<msg timestamp="20230601 19:35:28.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:27.736" endtime="20230601 19:35:28.406"/>
</kw>
<status status="PASS" starttime="20230601 19:35:27.736" endtime="20230601 19:35:28.406"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:28.411" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:29.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:29.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:28.408" endtime="20230601 19:35:29.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:29.204" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:29.203" endtime="20230601 19:35:29.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:29.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:29.204" endtime="20230601 19:35:29.205"/>
</kw>
<status status="PASS" starttime="20230601 19:35:28.407" endtime="20230601 19:35:29.205"/>
</kw>
<msg timestamp="20230601 19:35:29.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:28.407" endtime="20230601 19:35:29.207"/>
</kw>
<status status="PASS" starttime="20230601 19:35:28.406" endtime="20230601 19:35:29.208"/>
</kw>
<status status="PASS" starttime="20230601 19:35:26.315" endtime="20230601 19:35:29.209"/>
</kw>
<status status="PASS" starttime="20230601 19:35:26.315" endtime="20230601 19:35:29.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:26.314" endtime="20230601 19:35:29.209"/>
</test>
<test id="s1-s5-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:29.219" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:30.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:30.126" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:35:29.216" endtime="20230601 19:35:30.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:30.127" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:35:30.126" endtime="20230601 19:35:30.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:30.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:30.128" endtime="20230601 19:35:30.128"/>
</kw>
<status status="PASS" starttime="20230601 19:35:29.216" endtime="20230601 19:35:30.129"/>
</kw>
<msg timestamp="20230601 19:35:30.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:29.215" endtime="20230601 19:35:30.130"/>
</kw>
<msg timestamp="20230601 19:35:30.130" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:35:29.214" endtime="20230601 19:35:30.130"/>
</kw>
<msg timestamp="20230601 19:35:30.130" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:35:29.214" endtime="20230601 19:35:30.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:30.131" endtime="20230601 19:35:30.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:30.131" endtime="20230601 19:35:30.132"/>
</kw>
<msg timestamp="20230601 19:35:30.132" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 19:35:29.213" endtime="20230601 19:35:30.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230601 19:35:30.132" endtime="20230601 19:35:30.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:29.211" endtime="20230601 19:35:30.133"/>
</test>
<test id="s1-s5-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:30.139" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:35:30.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:30.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:30.136" endtime="20230601 19:35:30.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:30.143" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:30.142" endtime="20230601 19:35:30.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:30.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:30.143" endtime="20230601 19:35:30.144"/>
</kw>
<status status="PASS" starttime="20230601 19:35:30.135" endtime="20230601 19:35:30.145"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:30.149" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:31.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:31.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:30.146" endtime="20230601 19:35:31.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:31.230" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:31.230" endtime="20230601 19:35:31.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:31.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:31.231" endtime="20230601 19:35:31.232"/>
</kw>
<msg timestamp="20230601 19:35:31.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:30.146" endtime="20230601 19:35:31.232"/>
</kw>
<msg timestamp="20230601 19:35:31.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:30.145" endtime="20230601 19:35:31.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:31.233" endtime="20230601 19:35:31.233"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:31.237" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:31.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:31.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:35:31.235" endtime="20230601 19:35:31.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:31.243" level="INFO"/>
<status status="PASS" starttime="20230601 19:35:31.242" endtime="20230601 19:35:31.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:31.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:31.243" endtime="20230601 19:35:31.244"/>
</kw>
<status status="PASS" starttime="20230601 19:35:31.234" endtime="20230601 19:35:31.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:30.134" endtime="20230601 19:35:31.245"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230601 19:35:13.023" endtime="20230601 19:35:31.246"/>
</suite>
<suite id="s1-s6" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s6-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:35:36.507" endtime="20230601 19:35:36.508"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:35:36.508" endtime="20230601 19:35:36.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:35:36.515" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:35:45.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:35:45.338" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230601 19:35:36.511" endtime="20230601 19:35:45.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:35:45.340" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230601 19:35:45.339" endtime="20230601 19:35:45.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:35:45.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:35:45.340" endtime="20230601 19:35:45.341"/>
</kw>
<status status="PASS" starttime="20230601 19:35:36.510" endtime="20230601 19:35:45.341"/>
</kw>
<msg timestamp="20230601 19:35:45.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:35:36.510" endtime="20230601 19:35:45.343"/>
</kw>
<msg timestamp="20230601 19:35:45.343" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230601 19:35:36.509" endtime="20230601 19:35:45.343"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:35:45.344" endtime="20230601 19:35:45.345"/>
</kw>
<status status="PASS" starttime="20230601 19:35:45.343" endtime="20230601 19:35:45.345"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:35:36.506" endtime="20230601 19:35:45.345"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230601 19:35:36.438" endtime="20230601 19:35:45.348"/>
</suite>
<suite id="s1-s7" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s7-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:33:31.010" endtime="20230601 19:33:31.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:31.020" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:31.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:31.023" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d464471f9b13
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:33:31.013" endtime="20230601 19:33:31.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:31.024" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d464471f9b13
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:33:31.023" endtime="20230601 19:33:31.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:31.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:31.024" endtime="20230601 19:33:31.025"/>
</kw>
<status status="PASS" starttime="20230601 19:33:31.012" endtime="20230601 19:33:31.025"/>
</kw>
<msg timestamp="20230601 19:33:31.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:31.012" endtime="20230601 19:33:31.027"/>
</kw>
<msg timestamp="20230601 19:33:31.027" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d464471f9b13
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:33:31.011" endtime="20230601 19:33:31.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:31.028" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=d464471f9b13
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:33:31.027" endtime="20230601 19:33:31.028"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:33:31.028" endtime="20230601 19:33:31.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:31.033" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:34.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:34.994" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:33:31.030" endtime="20230601 19:33:34.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:34.996" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:33:34.995" endtime="20230601 19:33:34.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:34.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:34.996" endtime="20230601 19:33:34.998"/>
</kw>
<status status="PASS" starttime="20230601 19:33:31.030" endtime="20230601 19:33:34.998"/>
</kw>
<msg timestamp="20230601 19:33:34.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:31.029" endtime="20230601 19:33:34.999"/>
</kw>
<msg timestamp="20230601 19:33:35.000" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:33:31.028" endtime="20230601 19:33:35.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:35.000" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:33:35.000" endtime="20230601 19:33:35.000"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:33:35.001" endtime="20230601 19:33:35.001"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:33:31.009" endtime="20230601 19:33:35.001"/>
</test>
<test id="s1-s7-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:33:35.004" endtime="20230601 19:33:35.004"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:33:35.004" endtime="20230601 19:33:35.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:33:35.010" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:33:38.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:33:38.283" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:33:35.007" endtime="20230601 19:33:38.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:38.284" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:33:38.283" endtime="20230601 19:33:38.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:33:38.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:33:38.285" endtime="20230601 19:33:38.285"/>
</kw>
<status status="PASS" starttime="20230601 19:33:35.006" endtime="20230601 19:33:38.286"/>
</kw>
<msg timestamp="20230601 19:33:38.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:33:35.006" endtime="20230601 19:33:38.286"/>
</kw>
<msg timestamp="20230601 19:33:38.287" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:33:35.005" endtime="20230601 19:33:38.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:33:38.287" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:33:38.287" endtime="20230601 19:33:38.287"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:33:38.288" endtime="20230601 19:33:38.288"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:33:35.003" endtime="20230601 19:33:38.288"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230601 19:33:30.938" endtime="20230601 19:33:38.291"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s8-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:29.805" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:33.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:33.339" level="INFO">${output} = 2023-06-01 19:23:33,218 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230601 19:23:29.800" endtime="20230601 19:23:33.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:33.340" level="INFO">2023-06-01 19:23:33,218 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230601 19:23:33.340" endtime="20230601 19:23:33.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:33.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:33.341" endtime="20230601 19:23:33.342"/>
</kw>
<status status="PASS" starttime="20230601 19:23:29.799" endtime="20230601 19:23:33.342"/>
</kw>
<msg timestamp="20230601 19:23:33.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:29.799" endtime="20230601 19:23:33.344"/>
</kw>
<msg timestamp="20230601 19:23:33.345" level="INFO">${output} = 2023-06-01 19:23:33,218 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230601 19:23:29.798" endtime="20230601 19:23:33.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:23:33.345" endtime="20230601 19:23:33.346"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:33.352" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:36.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:36.980" level="INFO">${output} = 2023-06-01 19:23:36,891 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230601 19:23:33.349" endtime="20230601 19:23:36.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:36.982" level="INFO">2023-06-01 19:23:36,891 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230601 19:23:36.980" endtime="20230601 19:23:36.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:36.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:36.982" endtime="20230601 19:23:36.982"/>
</kw>
<status status="PASS" starttime="20230601 19:23:33.348" endtime="20230601 19:23:36.983"/>
</kw>
<msg timestamp="20230601 19:23:36.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:33.347" endtime="20230601 19:23:36.983"/>
</kw>
<msg timestamp="20230601 19:23:36.984" level="INFO">${output} = 2023-06-01 19:23:36,891 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230601 19:23:33.346" endtime="20230601 19:23:36.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:23:36.984" endtime="20230601 19:23:36.986"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:23:29.797" endtime="20230601 19:23:36.986"/>
</test>
<test id="s1-s8-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:36.992" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:23:36.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:36.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:23:36.990" endtime="20230601 19:23:36.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:36.995" level="INFO"/>
<status status="PASS" starttime="20230601 19:23:36.995" endtime="20230601 19:23:36.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:36.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:36.996" endtime="20230601 19:23:36.997"/>
</kw>
<status status="PASS" starttime="20230601 19:23:36.988" endtime="20230601 19:23:36.997"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:37.002" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:45.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:45.253" level="INFO">${output} = 2023-06-01 19:23:42,215 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:23:42,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:23:36.999" endtime="20230601 19:23:45.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:45.255" level="INFO">2023-06-01 19:23:42,215 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:23:42,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:23:42,413 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-01 19:23:42,856 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230601 19:23:45.254" endtime="20230601 19:23:45.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:45.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:45.255" endtime="20230601 19:23:45.256"/>
</kw>
<status status="PASS" starttime="20230601 19:23:36.999" endtime="20230601 19:23:45.257"/>
</kw>
<msg timestamp="20230601 19:23:45.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:36.998" endtime="20230601 19:23:45.257"/>
</kw>
<msg timestamp="20230601 19:23:45.258" level="INFO">${output} = 2023-06-01 19:23:42,215 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:23:42,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:23:36.997" endtime="20230601 19:23:45.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:23:45.258" endtime="20230601 19:23:45.259"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:45.262" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:45.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:45.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:23:45.259" endtime="20230601 19:23:45.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:45.268" level="INFO"/>
<status status="PASS" starttime="20230601 19:23:45.267" endtime="20230601 19:23:45.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:45.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:45.268" endtime="20230601 19:23:45.269"/>
</kw>
<status status="PASS" starttime="20230601 19:23:45.259" endtime="20230601 19:23:45.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:23:36.988" endtime="20230601 19:23:45.269"/>
</test>
<test id="s1-s8-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:45.275" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:49.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:49.125" level="INFO">${output} = 2023-06-01 19:23:49,034 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230601 19:23:45.272" endtime="20230601 19:23:49.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:49.126" level="INFO">2023-06-01 19:23:49,034 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230601 19:23:49.125" endtime="20230601 19:23:49.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:49.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:49.126" endtime="20230601 19:23:49.127"/>
</kw>
<status status="PASS" starttime="20230601 19:23:45.272" endtime="20230601 19:23:49.127"/>
</kw>
<msg timestamp="20230601 19:23:49.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:45.271" endtime="20230601 19:23:49.128"/>
</kw>
<msg timestamp="20230601 19:23:49.128" level="INFO">${output} = 2023-06-01 19:23:49,034 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230601 19:23:45.271" endtime="20230601 19:23:49.128"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:23:49.130" endtime="20230601 19:23:49.131"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:23:45.270" endtime="20230601 19:23:49.133"/>
</test>
<test id="s1-s8-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:49.142" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:23:49.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:49.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:23:49.138" endtime="20230601 19:23:49.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:49.146" level="INFO"/>
<status status="PASS" starttime="20230601 19:23:49.145" endtime="20230601 19:23:49.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:49.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:49.147" endtime="20230601 19:23:49.148"/>
</kw>
<status status="PASS" starttime="20230601 19:23:49.137" endtime="20230601 19:23:49.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:49.154" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:58.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:58.842" level="INFO">${output} = 2023-06-01 19:23:54,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:23:54,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:23:49.151" endtime="20230601 19:23:58.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:58.843" level="INFO">2023-06-01 19:23:54,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:23:54,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:23:54,207 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-01 19:23:54,654 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230601 19:23:58.842" endtime="20230601 19:23:58.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:58.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:58.843" endtime="20230601 19:23:58.844"/>
</kw>
<status status="PASS" starttime="20230601 19:23:49.150" endtime="20230601 19:23:58.844"/>
</kw>
<msg timestamp="20230601 19:23:58.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:49.149" endtime="20230601 19:23:58.845"/>
</kw>
<msg timestamp="20230601 19:23:58.846" level="INFO">${output} = 2023-06-01 19:23:54,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:23:54,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:23:49.148" endtime="20230601 19:23:58.846"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:23:58.846" endtime="20230601 19:23:58.846"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:58.849" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:58.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:58.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:23:58.847" endtime="20230601 19:23:58.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:58.854" level="INFO"/>
<status status="PASS" starttime="20230601 19:23:58.853" endtime="20230601 19:23:58.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:58.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:58.854" endtime="20230601 19:23:58.855"/>
</kw>
<status status="PASS" starttime="20230601 19:23:58.847" endtime="20230601 19:23:58.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:23:49.136" endtime="20230601 19:23:58.856"/>
</test>
<test id="s1-s8-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:58.863" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:59.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:59.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:23:58.860" endtime="20230601 19:23:59.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:59.827" level="INFO"/>
<status status="PASS" starttime="20230601 19:23:59.826" endtime="20230601 19:23:59.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:59.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:59.827" endtime="20230601 19:23:59.828"/>
</kw>
<status status="PASS" starttime="20230601 19:23:58.860" endtime="20230601 19:23:59.828"/>
</kw>
<msg timestamp="20230601 19:23:59.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:58.859" endtime="20230601 19:23:59.829"/>
</kw>
<status status="PASS" starttime="20230601 19:23:58.859" endtime="20230601 19:23:59.829"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:59.834" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:00.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:00.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:23:59.831" endtime="20230601 19:24:00.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:00.610" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:00.609" endtime="20230601 19:24:00.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:00.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:00.610" endtime="20230601 19:24:00.611"/>
</kw>
<status status="PASS" starttime="20230601 19:23:59.831" endtime="20230601 19:24:00.611"/>
</kw>
<msg timestamp="20230601 19:24:00.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:59.830" endtime="20230601 19:24:00.612"/>
</kw>
<status status="PASS" starttime="20230601 19:23:59.829" endtime="20230601 19:24:00.612"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:00.616" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:01.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:01.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:00.614" endtime="20230601 19:24:01.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:01.286" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:01.285" endtime="20230601 19:24:01.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:01.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:01.286" endtime="20230601 19:24:01.287"/>
</kw>
<status status="PASS" starttime="20230601 19:24:00.613" endtime="20230601 19:24:01.288"/>
</kw>
<msg timestamp="20230601 19:24:01.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:00.613" endtime="20230601 19:24:01.288"/>
</kw>
<status status="PASS" starttime="20230601 19:24:00.612" endtime="20230601 19:24:01.288"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:01.293" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:01.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:01.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:01.290" endtime="20230601 19:24:01.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:01.954" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:01.954" endtime="20230601 19:24:01.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:01.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:01.955" endtime="20230601 19:24:01.955"/>
</kw>
<status status="PASS" starttime="20230601 19:24:01.290" endtime="20230601 19:24:01.956"/>
</kw>
<msg timestamp="20230601 19:24:01.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:01.289" endtime="20230601 19:24:01.956"/>
</kw>
<status status="PASS" starttime="20230601 19:24:01.289" endtime="20230601 19:24:01.957"/>
</kw>
<status status="PASS" starttime="20230601 19:23:58.858" endtime="20230601 19:24:01.957"/>
</kw>
<status status="PASS" starttime="20230601 19:23:58.858" endtime="20230601 19:24:01.957"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:23:58.857" endtime="20230601 19:24:01.957"/>
</test>
<test id="s1-s8-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:01.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:05.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:05.022" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:24:01.962" endtime="20230601 19:24:05.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:05.024" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:24:05.023" endtime="20230601 19:24:05.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:05.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:05.024" endtime="20230601 19:24:05.025"/>
</kw>
<status status="PASS" starttime="20230601 19:24:01.961" endtime="20230601 19:24:05.026"/>
</kw>
<msg timestamp="20230601 19:24:05.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:01.961" endtime="20230601 19:24:05.027"/>
</kw>
<msg timestamp="20230601 19:24:05.028" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:24:01.961" endtime="20230601 19:24:05.028"/>
</kw>
<msg timestamp="20230601 19:24:05.028" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:24:01.960" endtime="20230601 19:24:05.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:05.028" endtime="20230601 19:24:05.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:05.030" endtime="20230601 19:24:05.030"/>
</kw>
<msg timestamp="20230601 19:24:05.030" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 19:24:01.959" endtime="20230601 19:24:05.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230601 19:24:05.031" endtime="20230601 19:24:05.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:01.958" endtime="20230601 19:24:05.032"/>
</test>
<test id="s1-s8-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:05.039" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:24:05.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:05.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:05.036" endtime="20230601 19:24:05.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:05.043" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:05.042" endtime="20230601 19:24:05.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:05.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:05.043" endtime="20230601 19:24:05.044"/>
</kw>
<status status="PASS" starttime="20230601 19:24:05.035" endtime="20230601 19:24:05.044"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:05.049" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:07.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:07.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:05.046" endtime="20230601 19:24:07.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:07.362" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:07.361" endtime="20230601 19:24:07.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:07.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:07.363" endtime="20230601 19:24:07.363"/>
</kw>
<msg timestamp="20230601 19:24:07.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:05.045" endtime="20230601 19:24:07.365"/>
</kw>
<msg timestamp="20230601 19:24:07.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:05.044" endtime="20230601 19:24:07.365"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:07.366" endtime="20230601 19:24:07.366"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:07.371" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:07.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:07.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:07.367" endtime="20230601 19:24:07.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:07.378" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:07.378" endtime="20230601 19:24:07.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:07.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:07.379" endtime="20230601 19:24:07.379"/>
</kw>
<status status="PASS" starttime="20230601 19:24:07.367" endtime="20230601 19:24:07.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:05.034" endtime="20230601 19:24:07.380"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230601 19:23:29.689" endtime="20230601 19:24:07.382"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:24:12.592" level="INFO">${random} = 07987</msg>
<status status="PASS" starttime="20230601 19:24:12.591" endtime="20230601 19:24:12.592"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:12.600" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-07987 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:18.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:18.817" level="INFO">${output} = 2023-06-01 19:24:17,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:24:17,198 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:24:12.595" endtime="20230601 19:24:18.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:18.819" level="INFO">2023-06-01 19:24:17,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:24:17,198 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-01 19:24:17,198 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230601 19:24:18.818" endtime="20230601 19:24:18.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:18.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:18.819" endtime="20230601 19:24:18.820"/>
</kw>
<status status="PASS" starttime="20230601 19:24:12.594" endtime="20230601 19:24:18.821"/>
</kw>
<msg timestamp="20230601 19:24:18.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:12.593" endtime="20230601 19:24:18.822"/>
</kw>
<msg timestamp="20230601 19:24:18.823" level="INFO">${output} = 2023-06-01 19:24:17,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-01 19:24:17,198 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230601 19:24:12.592" endtime="20230601 19:24:18.823"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:18.823" endtime="20230601 19:24:18.823"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:18.831" level="INFO">Running command 'cat /tmp/key-07987 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:18.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:18.834" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:24:18.827" endtime="20230601 19:24:18.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:18.835" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:24:18.834" endtime="20230601 19:24:18.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:18.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:18.835" endtime="20230601 19:24:18.836"/>
</kw>
<msg timestamp="20230601 19:24:18.836" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:24:18.824" endtime="20230601 19:24:18.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:18.836" endtime="20230601 19:24:18.837"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:18.841" level="INFO">Running command 'rm /tmp/key-07987 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:18.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:18.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:18.838" endtime="20230601 19:24:18.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:18.845" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:18.844" endtime="20230601 19:24:18.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:18.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:18.845" endtime="20230601 19:24:18.846"/>
</kw>
<status status="PASS" starttime="20230601 19:24:18.837" endtime="20230601 19:24:18.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:12.590" endtime="20230601 19:24:18.847"/>
</test>
<test id="s1-s9-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:18.853" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:19.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:19.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:18.851" endtime="20230601 19:24:19.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:19.537" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:19.536" endtime="20230601 19:24:19.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:19.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:19.537" endtime="20230601 19:24:19.538"/>
</kw>
<status status="PASS" starttime="20230601 19:24:18.851" endtime="20230601 19:24:19.538"/>
</kw>
<msg timestamp="20230601 19:24:19.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:18.850" endtime="20230601 19:24:19.539"/>
</kw>
<status status="PASS" starttime="20230601 19:24:18.850" endtime="20230601 19:24:19.539"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:19.546" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:20.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:20.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:19.541" endtime="20230601 19:24:20.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:20.231" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:20.230" endtime="20230601 19:24:20.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:20.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:20.232" endtime="20230601 19:24:20.232"/>
</kw>
<status status="PASS" starttime="20230601 19:24:19.541" endtime="20230601 19:24:20.233"/>
</kw>
<msg timestamp="20230601 19:24:20.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:19.540" endtime="20230601 19:24:20.233"/>
</kw>
<status status="PASS" starttime="20230601 19:24:19.540" endtime="20230601 19:24:20.234"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:20.238" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:20.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:20.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:20.235" endtime="20230601 19:24:20.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:20.875" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:20.874" endtime="20230601 19:24:20.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:20.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:20.876" endtime="20230601 19:24:20.876"/>
</kw>
<status status="PASS" starttime="20230601 19:24:20.235" endtime="20230601 19:24:20.877"/>
</kw>
<msg timestamp="20230601 19:24:20.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:20.235" endtime="20230601 19:24:20.877"/>
</kw>
<status status="PASS" starttime="20230601 19:24:20.234" endtime="20230601 19:24:20.878"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:20.883" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:21.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:21.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:20.880" endtime="20230601 19:24:21.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:21.542" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:21.541" endtime="20230601 19:24:21.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:21.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:21.542" endtime="20230601 19:24:21.543"/>
</kw>
<status status="PASS" starttime="20230601 19:24:20.879" endtime="20230601 19:24:21.543"/>
</kw>
<msg timestamp="20230601 19:24:21.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:20.879" endtime="20230601 19:24:21.544"/>
</kw>
<status status="PASS" starttime="20230601 19:24:20.878" endtime="20230601 19:24:21.545"/>
</kw>
<status status="PASS" starttime="20230601 19:24:18.849" endtime="20230601 19:24:21.545"/>
</kw>
<status status="PASS" starttime="20230601 19:24:18.849" endtime="20230601 19:24:21.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:18.848" endtime="20230601 19:24:21.546"/>
</test>
<test id="s1-s9-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:21.553" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:22.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:22.575" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:24:21.550" endtime="20230601 19:24:22.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:22.576" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:24:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:24:22.575" endtime="20230601 19:24:22.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:22.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:22.576" endtime="20230601 19:24:22.577"/>
</kw>
<msg timestamp="20230601 19:24:22.577" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:24:21.549" endtime="20230601 19:24:22.577"/>
</kw>
<msg timestamp="20230601 19:24:22.578" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:24:21.548" endtime="20230601 19:24:22.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:22.578" endtime="20230601 19:24:22.579"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:22.583" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:22.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:22.586" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:24:22.580" endtime="20230601 19:24:22.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:22.588" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:24:22.587" endtime="20230601 19:24:22.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:22.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:22.588" endtime="20230601 19:24:22.589"/>
</kw>
<msg timestamp="20230601 19:24:22.589" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:24:22.579" endtime="20230601 19:24:22.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:22.590" endtime="20230601 19:24:22.591"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:22.594" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:22.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:22.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:22.592" endtime="20230601 19:24:22.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:22.600" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:22.599" endtime="20230601 19:24:22.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:22.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:22.601" endtime="20230601 19:24:22.602"/>
</kw>
<status status="PASS" starttime="20230601 19:24:22.591" endtime="20230601 19:24:22.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:21.547" endtime="20230601 19:24:22.602"/>
</test>
<test id="s1-s9-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:22.609" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:23.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:23.457" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:24:22.606" endtime="20230601 19:24:23.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:23.459" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:24:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:24:23.458" endtime="20230601 19:24:23.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:23.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:23.459" endtime="20230601 19:24:23.460"/>
</kw>
<msg timestamp="20230601 19:24:23.460" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:24:22.605" endtime="20230601 19:24:23.461"/>
</kw>
<msg timestamp="20230601 19:24:23.461" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:24:22.605" endtime="20230601 19:24:23.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:23.461" endtime="20230601 19:24:23.462"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:23.465" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:23.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:23.468" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:24:23.463" endtime="20230601 19:24:23.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:23.470" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:24:23.469" endtime="20230601 19:24:23.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:23.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:23.470" endtime="20230601 19:24:23.471"/>
</kw>
<msg timestamp="20230601 19:24:23.471" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:24:23.462" endtime="20230601 19:24:23.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:23.471" endtime="20230601 19:24:23.472"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:23.475" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:23.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:23.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:24:23.473" endtime="20230601 19:24:23.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:23.479" level="INFO"/>
<status status="PASS" starttime="20230601 19:24:23.479" endtime="20230601 19:24:23.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:23.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:23.480" endtime="20230601 19:24:23.480"/>
</kw>
<status status="PASS" starttime="20230601 19:24:23.472" endtime="20230601 19:24:23.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:22.603" endtime="20230601 19:24:23.482"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:24:12.482" endtime="20230601 19:24:23.484"/>
</suite>
<suite id="s1-s10" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s10-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:24:28.669" endtime="20230601 19:24:28.670"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:24:28.671" endtime="20230601 19:24:28.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:24:28.688" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:24:37.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:24:37.781" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [25].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230601 19:24:28.673" endtime="20230601 19:24:37.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:24:37.783" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [25].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [25]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [25]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [25]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230601 19:24:37.782" endtime="20230601 19:24:37.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:24:37.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:24:37.783" endtime="20230601 19:24:37.784"/>
</kw>
<status status="PASS" starttime="20230601 19:24:28.672" endtime="20230601 19:24:37.784"/>
</kw>
<msg timestamp="20230601 19:24:37.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:24:28.672" endtime="20230601 19:24:37.786"/>
</kw>
<msg timestamp="20230601 19:24:37.786" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [25].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230601 19:24:28.671" endtime="20230601 19:24:37.786"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:24:37.788" endtime="20230601 19:24:37.789"/>
</kw>
<status status="PASS" starttime="20230601 19:24:37.786" endtime="20230601 19:24:37.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:24:28.668" endtime="20230601 19:24:37.790"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230601 19:24:28.583" endtime="20230601 19:24:37.792"/>
</suite>
<suite id="s1-s11" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s11-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:23:16.970" endtime="20230601 19:23:16.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:16.979" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:16.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:16.983" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f0aca9c847b3
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:23:16.973" endtime="20230601 19:23:16.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:16.985" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f0aca9c847b3
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:23:16.984" endtime="20230601 19:23:16.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:16.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:16.985" endtime="20230601 19:23:16.986"/>
</kw>
<status status="PASS" starttime="20230601 19:23:16.973" endtime="20230601 19:23:16.986"/>
</kw>
<msg timestamp="20230601 19:23:16.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:16.971" endtime="20230601 19:23:16.988"/>
</kw>
<msg timestamp="20230601 19:23:16.988" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f0aca9c847b3
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:23:16.971" endtime="20230601 19:23:16.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:16.989" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f0aca9c847b3
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:23:16.988" endtime="20230601 19:23:16.989"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:23:16.989" endtime="20230601 19:23:16.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:16.994" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:20.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:20.889" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:23:16.991" endtime="20230601 19:23:20.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:20.891" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:23:20.890" endtime="20230601 19:23:20.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:20.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:20.891" endtime="20230601 19:23:20.892"/>
</kw>
<status status="PASS" starttime="20230601 19:23:16.991" endtime="20230601 19:23:20.892"/>
</kw>
<msg timestamp="20230601 19:23:20.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:16.990" endtime="20230601 19:23:20.893"/>
</kw>
<msg timestamp="20230601 19:23:20.893" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:23:16.990" endtime="20230601 19:23:20.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:20.894" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230601 19:23:20.893" endtime="20230601 19:23:20.894"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:23:20.894" endtime="20230601 19:23:20.894"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:23:16.968" endtime="20230601 19:23:20.895"/>
</test>
<test id="s1-s11-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:23:20.897" endtime="20230601 19:23:20.897"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:23:20.898" endtime="20230601 19:23:20.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:23:20.904" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:23:24.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:23:24.627" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:23:20.900" endtime="20230601 19:23:24.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:24.629" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:23:24.628" endtime="20230601 19:23:24.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:23:24.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:23:24.629" endtime="20230601 19:23:24.630"/>
</kw>
<status status="PASS" starttime="20230601 19:23:20.899" endtime="20230601 19:23:24.630"/>
</kw>
<msg timestamp="20230601 19:23:24.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:23:20.899" endtime="20230601 19:23:24.631"/>
</kw>
<msg timestamp="20230601 19:23:24.631" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:23:20.898" endtime="20230601 19:23:24.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:23:24.632" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:23:24.631" endtime="20230601 19:23:24.632"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:23:24.632" endtime="20230601 19:23:24.632"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:23:20.896" endtime="20230601 19:23:24.633"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230601 19:23:16.902" endtime="20230601 19:23:24.635"/>
</suite>
<suite id="s1-s12" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s12-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:40:51.879" endtime="20230601 19:40:51.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:40:51.890" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:40:51.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:40:51.895" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:40:51.881" endtime="20230601 19:40:51.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:51.897" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:40:51.896" endtime="20230601 19:40:51.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:40:51.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:40:51.897" endtime="20230601 19:40:51.898"/>
</kw>
<status status="PASS" starttime="20230601 19:40:51.880" endtime="20230601 19:40:51.898"/>
</kw>
<msg timestamp="20230601 19:40:51.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:40:51.880" endtime="20230601 19:40:51.900"/>
</kw>
<msg timestamp="20230601 19:40:51.901" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:40:51.880" endtime="20230601 19:40:51.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:51.902" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:40:51.901" endtime="20230601 19:40:51.902"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:40:51.902" endtime="20230601 19:40:51.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:40:51.908" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:40:59.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:40:59.487" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:40:51.905" endtime="20230601 19:40:59.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:59.489" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:40:59.488" endtime="20230601 19:40:59.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:40:59.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:40:59.489" endtime="20230601 19:40:59.491"/>
</kw>
<status status="PASS" starttime="20230601 19:40:51.904" endtime="20230601 19:40:59.491"/>
</kw>
<msg timestamp="20230601 19:40:59.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:40:51.904" endtime="20230601 19:40:59.495"/>
</kw>
<msg timestamp="20230601 19:40:59.496" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:40:51.903" endtime="20230601 19:40:59.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:59.497" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:40:59.496" endtime="20230601 19:40:59.497"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:40:59.498" endtime="20230601 19:40:59.499"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:40:51.877" endtime="20230601 19:40:59.499"/>
</test>
<test id="s1-s12-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:40:59.505" endtime="20230601 19:40:59.507"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:40:59.508" endtime="20230601 19:40:59.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:40:59.520" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:05.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:05.749" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:40:59.515" endtime="20230601 19:41:05.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:05.752" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:41:05.750" endtime="20230601 19:41:05.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:05.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:05.752" endtime="20230601 19:41:05.753"/>
</kw>
<status status="PASS" starttime="20230601 19:40:59.513" endtime="20230601 19:41:05.753"/>
</kw>
<msg timestamp="20230601 19:41:05.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:40:59.511" endtime="20230601 19:41:05.754"/>
</kw>
<msg timestamp="20230601 19:41:05.754" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:40:59.509" endtime="20230601 19:41:05.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:05.755" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:41:05.755" endtime="20230601 19:41:05.756"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:41:05.756" endtime="20230601 19:41:05.757"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:40:59.503" endtime="20230601 19:41:05.757"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230601 19:40:51.779" endtime="20230601 19:41:05.759"/>
</suite>
<suite id="s1-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s13-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:41:11.027" level="INFO">${random} = 55103</msg>
<status status="PASS" starttime="20230601 19:41:11.025" endtime="20230601 19:41:11.027"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:11.037" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-55103 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:20.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:20.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:11.030" endtime="20230601 19:41:20.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:20.631" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:20.630" endtime="20230601 19:41:20.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:20.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:20.631" endtime="20230601 19:41:20.632"/>
</kw>
<status status="PASS" starttime="20230601 19:41:11.030" endtime="20230601 19:41:20.632"/>
</kw>
<msg timestamp="20230601 19:41:20.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:11.028" endtime="20230601 19:41:20.633"/>
</kw>
<msg timestamp="20230601 19:41:20.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:11.027" endtime="20230601 19:41:20.634"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:20.634" endtime="20230601 19:41:20.634"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:20.639" level="INFO">Running command 'cat /tmp/key-55103 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:20.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:20.649" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:20.635" endtime="20230601 19:41:20.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:20.650" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:20.649" endtime="20230601 19:41:20.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:20.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:20.650" endtime="20230601 19:41:20.651"/>
</kw>
<msg timestamp="20230601 19:41:20.651" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:20.635" endtime="20230601 19:41:20.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:20.651" endtime="20230601 19:41:20.652"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:20.655" level="INFO">Running command 'rm /tmp/key-55103 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:20.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:20.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:20.653" endtime="20230601 19:41:20.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:20.662" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:20.661" endtime="20230601 19:41:20.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:20.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:20.662" endtime="20230601 19:41:20.664"/>
</kw>
<status status="PASS" starttime="20230601 19:41:20.652" endtime="20230601 19:41:20.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:11.023" endtime="20230601 19:41:20.665"/>
</test>
<test id="s1-s13-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:20.675" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:21.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:21.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:20.671" endtime="20230601 19:41:21.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:21.993" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:21.992" endtime="20230601 19:41:21.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:21.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:21.994" endtime="20230601 19:41:21.995"/>
</kw>
<status status="PASS" starttime="20230601 19:41:20.670" endtime="20230601 19:41:21.995"/>
</kw>
<msg timestamp="20230601 19:41:21.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:20.670" endtime="20230601 19:41:21.996"/>
</kw>
<status status="PASS" starttime="20230601 19:41:20.669" endtime="20230601 19:41:21.996"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:22.000" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:22.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:22.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:21.998" endtime="20230601 19:41:22.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:22.841" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:22.839" endtime="20230601 19:41:22.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:22.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:22.841" endtime="20230601 19:41:22.842"/>
</kw>
<status status="PASS" starttime="20230601 19:41:21.997" endtime="20230601 19:41:22.843"/>
</kw>
<msg timestamp="20230601 19:41:22.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:21.997" endtime="20230601 19:41:22.844"/>
</kw>
<status status="PASS" starttime="20230601 19:41:21.996" endtime="20230601 19:41:22.844"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:22.850" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:23.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:23.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:22.847" endtime="20230601 19:41:23.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:23.656" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:23.655" endtime="20230601 19:41:23.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:23.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:23.657" endtime="20230601 19:41:23.657"/>
</kw>
<status status="PASS" starttime="20230601 19:41:22.846" endtime="20230601 19:41:23.658"/>
</kw>
<msg timestamp="20230601 19:41:23.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:22.846" endtime="20230601 19:41:23.659"/>
</kw>
<status status="PASS" starttime="20230601 19:41:22.845" endtime="20230601 19:41:23.659"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:23.666" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:24.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:24.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:23.662" endtime="20230601 19:41:24.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:24.514" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:24.513" endtime="20230601 19:41:24.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:24.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:24.514" endtime="20230601 19:41:24.515"/>
</kw>
<status status="PASS" starttime="20230601 19:41:23.661" endtime="20230601 19:41:24.516"/>
</kw>
<msg timestamp="20230601 19:41:24.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:23.660" endtime="20230601 19:41:24.516"/>
</kw>
<status status="PASS" starttime="20230601 19:41:23.660" endtime="20230601 19:41:24.517"/>
</kw>
<status status="PASS" starttime="20230601 19:41:20.668" endtime="20230601 19:41:24.517"/>
</kw>
<status status="PASS" starttime="20230601 19:41:20.668" endtime="20230601 19:41:24.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:20.667" endtime="20230601 19:41:24.517"/>
</test>
<test id="s1-s13-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:24.526" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:31.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:31.162" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:25 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:24.523" endtime="20230601 19:41:31.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:31.164" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:25 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:41:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:41:31.163" endtime="20230601 19:41:31.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:31.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:31.165" endtime="20230601 19:41:31.166"/>
</kw>
<msg timestamp="20230601 19:41:31.166" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:25 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:24.522" endtime="20230601 19:41:31.166"/>
</kw>
<msg timestamp="20230601 19:41:31.166" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:25 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:24.521" endtime="20230601 19:41:31.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:31.167" endtime="20230601 19:41:31.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:31.172" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:31.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:31.177" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:31.168" endtime="20230601 19:41:31.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:31.178" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:31.178" endtime="20230601 19:41:31.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:31.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:31.179" endtime="20230601 19:41:31.180"/>
</kw>
<msg timestamp="20230601 19:41:31.180" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:31.168" endtime="20230601 19:41:31.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:31.181" endtime="20230601 19:41:31.181"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:31.185" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:31.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:31.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:31.182" endtime="20230601 19:41:31.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:31.190" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:31.189" endtime="20230601 19:41:31.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:31.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:31.190" endtime="20230601 19:41:31.191"/>
</kw>
<status status="PASS" starttime="20230601 19:41:31.182" endtime="20230601 19:41:31.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:24.519" endtime="20230601 19:41:31.191"/>
</test>
<test id="s1-s13-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:31.197" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:32.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:32.169" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:31.195" endtime="20230601 19:41:32.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:32.171" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:41:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:41:32.170" endtime="20230601 19:41:32.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:32.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:32.171" endtime="20230601 19:41:32.172"/>
</kw>
<msg timestamp="20230601 19:41:32.173" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:31.194" endtime="20230601 19:41:32.173"/>
</kw>
<msg timestamp="20230601 19:41:32.173" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:35:31 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:31.194" endtime="20230601 19:41:32.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:32.174" endtime="20230601 19:41:32.174"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:32.180" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:32.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:32.183" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:41:32.176" endtime="20230601 19:41:32.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:32.184" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:41:32.183" endtime="20230601 19:41:32.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:32.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:32.184" endtime="20230601 19:41:32.186"/>
</kw>
<msg timestamp="20230601 19:41:32.186" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:41:32.175" endtime="20230601 19:41:32.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:32.186" endtime="20230601 19:41:32.187"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:32.191" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:32.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:32.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:32.188" endtime="20230601 19:41:32.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:32.197" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:32.196" endtime="20230601 19:41:32.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:32.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:32.198" endtime="20230601 19:41:32.199"/>
</kw>
<status status="PASS" starttime="20230601 19:41:32.187" endtime="20230601 19:41:32.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:31.193" endtime="20230601 19:41:32.199"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:41:10.868" endtime="20230601 19:41:32.203"/>
</suite>
<suite id="s1-s14" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s14-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:41:37.718" level="INFO">${random} = 55193</msg>
<status status="PASS" starttime="20230601 19:41:37.718" endtime="20230601 19:41:37.718"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:37.727" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-55193 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:46.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:46.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:37.722" endtime="20230601 19:41:46.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:46.921" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:46.920" endtime="20230601 19:41:46.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:46.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:46.921" endtime="20230601 19:41:46.922"/>
</kw>
<status status="PASS" starttime="20230601 19:41:37.721" endtime="20230601 19:41:46.922"/>
</kw>
<msg timestamp="20230601 19:41:46.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:37.720" endtime="20230601 19:41:46.924"/>
</kw>
<msg timestamp="20230601 19:41:46.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:37.719" endtime="20230601 19:41:46.925"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:46.925" endtime="20230601 19:41:46.925"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:46.931" level="INFO">Running command 'cat /tmp/key-55193 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:46.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:46.935" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:46.928" endtime="20230601 19:41:46.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:46.937" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:46.936" endtime="20230601 19:41:46.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:46.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:46.937" endtime="20230601 19:41:46.938"/>
</kw>
<msg timestamp="20230601 19:41:46.938" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:46.926" endtime="20230601 19:41:46.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:46.939" endtime="20230601 19:41:46.939"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:46.943" level="INFO">Running command 'rm /tmp/key-55193 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:46.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:46.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:46.940" endtime="20230601 19:41:46.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:46.950" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:46.949" endtime="20230601 19:41:46.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:46.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:46.951" endtime="20230601 19:41:46.952"/>
</kw>
<status status="PASS" starttime="20230601 19:41:46.939" endtime="20230601 19:41:46.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:37.716" endtime="20230601 19:41:46.953"/>
</test>
<test id="s1-s14-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:46.965" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:47.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:47.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:46.962" endtime="20230601 19:41:47.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:47.818" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:47.816" endtime="20230601 19:41:47.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:47.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:47.818" endtime="20230601 19:41:47.819"/>
</kw>
<status status="PASS" starttime="20230601 19:41:46.961" endtime="20230601 19:41:47.820"/>
</kw>
<msg timestamp="20230601 19:41:47.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:46.960" endtime="20230601 19:41:47.820"/>
</kw>
<status status="PASS" starttime="20230601 19:41:46.960" endtime="20230601 19:41:47.821"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:47.826" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:48.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:48.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:47.822" endtime="20230601 19:41:48.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:48.634" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:48.633" endtime="20230601 19:41:48.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:48.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:48.635" endtime="20230601 19:41:48.636"/>
</kw>
<status status="PASS" starttime="20230601 19:41:47.822" endtime="20230601 19:41:48.637"/>
</kw>
<msg timestamp="20230601 19:41:48.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:47.821" endtime="20230601 19:41:48.637"/>
</kw>
<status status="PASS" starttime="20230601 19:41:47.821" endtime="20230601 19:41:48.638"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:48.644" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:49.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:49.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:48.641" endtime="20230601 19:41:49.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:49.457" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:49.456" endtime="20230601 19:41:49.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:49.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:49.458" endtime="20230601 19:41:49.458"/>
</kw>
<status status="PASS" starttime="20230601 19:41:48.640" endtime="20230601 19:41:49.459"/>
</kw>
<msg timestamp="20230601 19:41:49.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:48.639" endtime="20230601 19:41:49.460"/>
</kw>
<status status="PASS" starttime="20230601 19:41:48.638" endtime="20230601 19:41:49.460"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:49.465" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:50.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:50.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:49.462" endtime="20230601 19:41:50.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:50.353" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:50.352" endtime="20230601 19:41:50.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:50.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:50.354" endtime="20230601 19:41:50.355"/>
</kw>
<status status="PASS" starttime="20230601 19:41:49.461" endtime="20230601 19:41:50.356"/>
</kw>
<msg timestamp="20230601 19:41:50.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:49.461" endtime="20230601 19:41:50.357"/>
</kw>
<status status="PASS" starttime="20230601 19:41:49.460" endtime="20230601 19:41:50.357"/>
</kw>
<status status="PASS" starttime="20230601 19:41:46.959" endtime="20230601 19:41:50.358"/>
</kw>
<status status="PASS" starttime="20230601 19:41:46.958" endtime="20230601 19:41:50.358"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:46.956" endtime="20230601 19:41:50.358"/>
</test>
<test id="s1-s14-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:50.367" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:51.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:51.414" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:50.364" endtime="20230601 19:41:51.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:51.416" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:41:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:41:51.415" endtime="20230601 19:41:51.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:51.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:51.417" endtime="20230601 19:41:51.418"/>
</kw>
<msg timestamp="20230601 19:41:51.418" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:50.363" endtime="20230601 19:41:51.418"/>
</kw>
<msg timestamp="20230601 19:41:51.419" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:50.362" endtime="20230601 19:41:51.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:51.419" endtime="20230601 19:41:51.420"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:51.424" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:51.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:51.429" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:51.421" endtime="20230601 19:41:51.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:51.430" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:51.429" endtime="20230601 19:41:51.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:51.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:51.431" endtime="20230601 19:41:51.431"/>
</kw>
<msg timestamp="20230601 19:41:51.432" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:41:51.420" endtime="20230601 19:41:51.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:51.432" endtime="20230601 19:41:51.433"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:51.440" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:51.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:51.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:51.434" endtime="20230601 19:41:51.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:51.447" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:51.446" endtime="20230601 19:41:51.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:51.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:51.447" endtime="20230601 19:41:51.448"/>
</kw>
<status status="PASS" starttime="20230601 19:41:51.433" endtime="20230601 19:41:51.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:50.360" endtime="20230601 19:41:51.449"/>
</test>
<test id="s1-s14-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:51.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:52.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:52.607" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:51.454" endtime="20230601 19:41:52.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:52.609" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:41:52 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:41:52.608" endtime="20230601 19:41:52.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:52.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:52.609" endtime="20230601 19:41:52.610"/>
</kw>
<msg timestamp="20230601 19:41:52.611" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:51.453" endtime="20230601 19:41:52.611"/>
</kw>
<msg timestamp="20230601 19:41:52.612" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:41:51.452" endtime="20230601 19:41:52.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:52.612" endtime="20230601 19:41:52.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:52.617" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:52.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:52.620" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:41:52.614" endtime="20230601 19:41:52.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:52.622" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:41:52.621" endtime="20230601 19:41:52.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:52.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:52.622" endtime="20230601 19:41:52.623"/>
</kw>
<msg timestamp="20230601 19:41:52.624" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:41:52.613" endtime="20230601 19:41:52.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:41:52.624" endtime="20230601 19:41:52.625"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:52.629" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:41:52.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:41:52.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:52.626" endtime="20230601 19:41:52.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:41:52.635" level="INFO"/>
<status status="PASS" starttime="20230601 19:41:52.634" endtime="20230601 19:41:52.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:41:52.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:41:52.635" endtime="20230601 19:41:52.636"/>
</kw>
<status status="PASS" starttime="20230601 19:41:52.625" endtime="20230601 19:41:52.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:51.451" endtime="20230601 19:41:52.636"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:41:37.568" endtime="20230601 19:41:52.639"/>
</suite>
<suite id="s1-s15" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s15-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:41:58.164" level="INFO">${random} = 16078</msg>
<status status="PASS" starttime="20230601 19:41:58.163" endtime="20230601 19:41:58.164"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:41:58.174" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-16078 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:06.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:06.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:58.169" endtime="20230601 19:42:06.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:06.822" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:06.821" endtime="20230601 19:42:06.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:06.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:06.822" endtime="20230601 19:42:06.823"/>
</kw>
<status status="PASS" starttime="20230601 19:41:58.168" endtime="20230601 19:42:06.824"/>
</kw>
<msg timestamp="20230601 19:42:06.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:41:58.166" endtime="20230601 19:42:06.826"/>
</kw>
<msg timestamp="20230601 19:42:06.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:41:58.165" endtime="20230601 19:42:06.826"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:06.827" endtime="20230601 19:42:06.827"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:06.831" level="INFO">Running command 'cat /tmp/key-16078 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:06.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:06.837" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:42:06.828" endtime="20230601 19:42:06.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:06.839" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:42:06.838" endtime="20230601 19:42:06.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:06.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:06.840" endtime="20230601 19:42:06.841"/>
</kw>
<msg timestamp="20230601 19:42:06.841" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:42:06.827" endtime="20230601 19:42:06.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:06.841" endtime="20230601 19:42:06.842"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:06.846" level="INFO">Running command 'rm /tmp/key-16078 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:06.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:06.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:06.843" endtime="20230601 19:42:06.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:06.853" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:06.852" endtime="20230601 19:42:06.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:06.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:06.854" endtime="20230601 19:42:06.855"/>
</kw>
<status status="PASS" starttime="20230601 19:42:06.842" endtime="20230601 19:42:06.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:41:58.162" endtime="20230601 19:42:06.856"/>
</test>
<test id="s1-s15-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:06.866" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:07.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:07.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:06.862" endtime="20230601 19:42:07.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:07.810" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:07.809" endtime="20230601 19:42:07.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:07.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:07.810" endtime="20230601 19:42:07.811"/>
</kw>
<status status="PASS" starttime="20230601 19:42:06.862" endtime="20230601 19:42:07.811"/>
</kw>
<msg timestamp="20230601 19:42:07.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:06.861" endtime="20230601 19:42:07.812"/>
</kw>
<status status="PASS" starttime="20230601 19:42:06.861" endtime="20230601 19:42:07.813"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:07.818" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:08.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:08.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:07.815" endtime="20230601 19:42:08.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:08.655" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:08.653" endtime="20230601 19:42:08.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:08.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:08.655" endtime="20230601 19:42:08.657"/>
</kw>
<status status="PASS" starttime="20230601 19:42:07.814" endtime="20230601 19:42:08.657"/>
</kw>
<msg timestamp="20230601 19:42:08.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:07.813" endtime="20230601 19:42:08.658"/>
</kw>
<status status="PASS" starttime="20230601 19:42:07.813" endtime="20230601 19:42:08.659"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:08.664" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:09.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:09.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:08.661" endtime="20230601 19:42:09.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:09.499" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:09.496" endtime="20230601 19:42:09.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:09.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:09.499" endtime="20230601 19:42:09.501"/>
</kw>
<status status="PASS" starttime="20230601 19:42:08.660" endtime="20230601 19:42:09.501"/>
</kw>
<msg timestamp="20230601 19:42:09.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:08.660" endtime="20230601 19:42:09.502"/>
</kw>
<status status="PASS" starttime="20230601 19:42:08.659" endtime="20230601 19:42:09.503"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:09.511" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:10.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:10.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:09.506" endtime="20230601 19:42:10.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:10.357" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:10.356" endtime="20230601 19:42:10.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:10.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:10.357" endtime="20230601 19:42:10.358"/>
</kw>
<status status="PASS" starttime="20230601 19:42:09.505" endtime="20230601 19:42:10.359"/>
</kw>
<msg timestamp="20230601 19:42:10.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:09.505" endtime="20230601 19:42:10.359"/>
</kw>
<status status="PASS" starttime="20230601 19:42:09.503" endtime="20230601 19:42:10.360"/>
</kw>
<status status="PASS" starttime="20230601 19:42:06.859" endtime="20230601 19:42:10.360"/>
</kw>
<status status="PASS" starttime="20230601 19:42:06.859" endtime="20230601 19:42:10.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:06.857" endtime="20230601 19:42:10.360"/>
</test>
<test id="s1-s15-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:10.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:11.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:11.425" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:42:10.366" endtime="20230601 19:42:11.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:11.428" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:42:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:42:11.426" endtime="20230601 19:42:11.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:11.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:11.428" endtime="20230601 19:42:11.430"/>
</kw>
<msg timestamp="20230601 19:42:11.431" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:42:10.365" endtime="20230601 19:42:11.431"/>
</kw>
<msg timestamp="20230601 19:42:11.432" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:46 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:42:10.364" endtime="20230601 19:42:11.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:11.432" endtime="20230601 19:42:11.433"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:11.438" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:11.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:11.443" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:42:11.434" endtime="20230601 19:42:11.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:11.444" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:42:11.443" endtime="20230601 19:42:11.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:11.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:11.445" endtime="20230601 19:42:11.446"/>
</kw>
<msg timestamp="20230601 19:42:11.447" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:42:11.433" endtime="20230601 19:42:11.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:11.447" endtime="20230601 19:42:11.448"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:11.452" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:11.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:11.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:11.449" endtime="20230601 19:42:11.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:11.459" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:11.457" endtime="20230601 19:42:11.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:11.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:11.459" endtime="20230601 19:42:11.460"/>
</kw>
<status status="PASS" starttime="20230601 19:42:11.448" endtime="20230601 19:42:11.460"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:10.362" endtime="20230601 19:42:11.461"/>
</test>
<test id="s1-s15-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:11.468" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:12.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:12.494" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:42:11.466" endtime="20230601 19:42:12.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:12.496" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:42:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:42:12.495" endtime="20230601 19:42:12.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:12.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:12.497" endtime="20230601 19:42:12.498"/>
</kw>
<msg timestamp="20230601 19:42:12.499" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:42:11.465" endtime="20230601 19:42:12.499"/>
</kw>
<msg timestamp="20230601 19:42:12.500" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:34:51 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:42:11.464" endtime="20230601 19:42:12.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:12.500" endtime="20230601 19:42:12.501"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:12.506" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:12.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:12.511" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:42:12.502" endtime="20230601 19:42:12.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:12.513" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:42:12.512" endtime="20230601 19:42:12.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:12.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:12.514" endtime="20230601 19:42:12.516"/>
</kw>
<msg timestamp="20230601 19:42:12.516" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:42:12.501" endtime="20230601 19:42:12.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:12.517" endtime="20230601 19:42:12.517"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:12.522" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:12.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:12.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:12.519" endtime="20230601 19:42:12.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:12.529" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:12.528" endtime="20230601 19:42:12.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:12.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:12.530" endtime="20230601 19:42:12.532"/>
</kw>
<status status="PASS" starttime="20230601 19:42:12.518" endtime="20230601 19:42:12.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:11.462" endtime="20230601 19:42:12.534"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:41:57.989" endtime="20230601 19:42:12.537"/>
</suite>
<suite id="s1-s16" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s16-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:18.240" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:23.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:23.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:18.233" endtime="20230601 19:42:23.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:23.971" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:23.969" endtime="20230601 19:42:23.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:23.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:23.971" endtime="20230601 19:42:23.972"/>
</kw>
<status status="PASS" starttime="20230601 19:42:18.232" endtime="20230601 19:42:23.972"/>
</kw>
<msg timestamp="20230601 19:42:23.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:18.232" endtime="20230601 19:42:23.974"/>
</kw>
<msg timestamp="20230601 19:42:23.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:18.230" endtime="20230601 19:42:23.975"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:23.975" endtime="20230601 19:42:23.976"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:23.987" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:29.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:29.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:23.982" endtime="20230601 19:42:29.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:29.827" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:29.825" endtime="20230601 19:42:29.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:29.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:29.827" endtime="20230601 19:42:29.828"/>
</kw>
<status status="PASS" starttime="20230601 19:42:23.981" endtime="20230601 19:42:29.828"/>
</kw>
<msg timestamp="20230601 19:42:29.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:23.978" endtime="20230601 19:42:29.829"/>
</kw>
<msg timestamp="20230601 19:42:29.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:23.976" endtime="20230601 19:42:29.830"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:29.830" endtime="20230601 19:42:29.831"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:18.229" endtime="20230601 19:42:29.832"/>
</test>
<test id="s1-s16-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:29.840" level="INFO">Running command 'echo "new2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:42:29.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:29.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:29.837" endtime="20230601 19:42:29.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:29.846" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:29.845" endtime="20230601 19:42:29.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:29.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:29.846" endtime="20230601 19:42:29.847"/>
</kw>
<status status="PASS" starttime="20230601 19:42:29.836" endtime="20230601 19:42:29.848"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:29.861" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:40.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:40.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:29.851" endtime="20230601 19:42:40.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:40.840" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:40.839" endtime="20230601 19:42:40.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:40.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:40.840" endtime="20230601 19:42:40.841"/>
</kw>
<status status="PASS" starttime="20230601 19:42:29.850" endtime="20230601 19:42:40.841"/>
</kw>
<msg timestamp="20230601 19:42:40.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:29.849" endtime="20230601 19:42:40.842"/>
</kw>
<msg timestamp="20230601 19:42:40.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:29.848" endtime="20230601 19:42:40.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:40.843" endtime="20230601 19:42:40.843"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:40.849" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:40.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:40.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:40.845" endtime="20230601 19:42:40.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:40.859" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:40.857" endtime="20230601 19:42:40.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:40.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:40.859" endtime="20230601 19:42:40.860"/>
</kw>
<status status="PASS" starttime="20230601 19:42:40.843" endtime="20230601 19:42:40.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:29.834" endtime="20230601 19:42:40.861"/>
</test>
<test id="s1-s16-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:40.871" level="INFO">Running command 'ozone sh bucket create /s3v/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:46.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:46.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:40.867" endtime="20230601 19:42:46.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:46.902" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:46.901" endtime="20230601 19:42:46.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:46.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:46.903" endtime="20230601 19:42:46.904"/>
</kw>
<status status="PASS" starttime="20230601 19:42:40.866" endtime="20230601 19:42:46.905"/>
</kw>
<msg timestamp="20230601 19:42:46.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:40.866" endtime="20230601 19:42:46.905"/>
</kw>
<msg timestamp="20230601 19:42:46.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:40.864" endtime="20230601 19:42:46.906"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:46.906" endtime="20230601 19:42:46.907"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:40.863" endtime="20230601 19:42:46.907"/>
</test>
<test id="s1-s16-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:46.917" level="INFO">Running command 'echo "new2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:42:46.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:46.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:46.913" endtime="20230601 19:42:46.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:46.922" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:46.921" endtime="20230601 19:42:46.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:46.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:46.923" endtime="20230601 19:42:46.924"/>
</kw>
<status status="PASS" starttime="20230601 19:42:46.912" endtime="20230601 19:42:46.925"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:46.932" level="INFO">Running command 'ozone sh key put /s3v/new2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:56.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:56.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:46.929" endtime="20230601 19:42:56.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:56.396" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:56.395" endtime="20230601 19:42:56.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:56.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:56.397" endtime="20230601 19:42:56.398"/>
</kw>
<status status="PASS" starttime="20230601 19:42:46.927" endtime="20230601 19:42:56.398"/>
</kw>
<msg timestamp="20230601 19:42:56.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:46.926" endtime="20230601 19:42:56.399"/>
</kw>
<msg timestamp="20230601 19:42:56.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:46.925" endtime="20230601 19:42:56.400"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:42:56.400" endtime="20230601 19:42:56.401"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:56.407" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:56.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:56.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:56.402" endtime="20230601 19:42:56.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:56.413" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:56.412" endtime="20230601 19:42:56.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:56.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:56.413" endtime="20230601 19:42:56.415"/>
</kw>
<status status="PASS" starttime="20230601 19:42:56.401" endtime="20230601 19:42:56.416"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:46.910" endtime="20230601 19:42:56.417"/>
</test>
<test id="s1-s16-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:56.431" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:57.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:57.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:56.426" endtime="20230601 19:42:57.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:57.324" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:57.323" endtime="20230601 19:42:57.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:57.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:57.325" endtime="20230601 19:42:57.326"/>
</kw>
<status status="PASS" starttime="20230601 19:42:56.425" endtime="20230601 19:42:57.326"/>
</kw>
<msg timestamp="20230601 19:42:57.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:56.424" endtime="20230601 19:42:57.327"/>
</kw>
<status status="PASS" starttime="20230601 19:42:56.423" endtime="20230601 19:42:57.328"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:57.334" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:58.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:58.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:57.330" endtime="20230601 19:42:58.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:58.212" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:58.210" endtime="20230601 19:42:58.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:58.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:58.213" endtime="20230601 19:42:58.214"/>
</kw>
<status status="PASS" starttime="20230601 19:42:57.329" endtime="20230601 19:42:58.215"/>
</kw>
<msg timestamp="20230601 19:42:58.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:57.329" endtime="20230601 19:42:58.216"/>
</kw>
<status status="PASS" starttime="20230601 19:42:57.328" endtime="20230601 19:42:58.216"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:58.234" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:42:59.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:42:59.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:58.229" endtime="20230601 19:42:59.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:42:59.147" level="INFO"/>
<status status="PASS" starttime="20230601 19:42:59.144" endtime="20230601 19:42:59.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:42:59.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:42:59.148" endtime="20230601 19:42:59.149"/>
</kw>
<status status="PASS" starttime="20230601 19:42:58.225" endtime="20230601 19:42:59.149"/>
</kw>
<msg timestamp="20230601 19:42:59.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:58.218" endtime="20230601 19:42:59.150"/>
</kw>
<status status="PASS" starttime="20230601 19:42:58.217" endtime="20230601 19:42:59.151"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:42:59.157" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:00.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:00.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:42:59.153" endtime="20230601 19:43:00.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:00.035" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:00.033" endtime="20230601 19:43:00.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:00.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:00.035" endtime="20230601 19:43:00.039"/>
</kw>
<status status="PASS" starttime="20230601 19:42:59.152" endtime="20230601 19:43:00.039"/>
</kw>
<msg timestamp="20230601 19:43:00.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:42:59.152" endtime="20230601 19:43:00.040"/>
</kw>
<status status="PASS" starttime="20230601 19:42:59.151" endtime="20230601 19:43:00.040"/>
</kw>
<status status="PASS" starttime="20230601 19:42:56.422" endtime="20230601 19:43:00.040"/>
</kw>
<status status="PASS" starttime="20230601 19:42:56.421" endtime="20230601 19:43:00.040"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:42:56.419" endtime="20230601 19:43:00.041"/>
</test>
<test id="s1-s16-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:00.056" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:01.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:01.295" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:43:00.051" endtime="20230601 19:43:01.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:01.297" level="INFO">{
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:43:01.295" endtime="20230601 19:43:01.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:01.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:01.297" endtime="20230601 19:43:01.298"/>
</kw>
<status status="PASS" starttime="20230601 19:43:00.050" endtime="20230601 19:43:01.299"/>
</kw>
<msg timestamp="20230601 19:43:01.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:00.050" endtime="20230601 19:43:01.300"/>
</kw>
<msg timestamp="20230601 19:43:01.300" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:43:00.049" endtime="20230601 19:43:01.300"/>
</kw>
<msg timestamp="20230601 19:43:01.301" level="INFO">${result} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:43:00.046" endtime="20230601 19:43:01.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:01.301" endtime="20230601 19:43:01.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:01.302" endtime="20230601 19:43:01.303"/>
</kw>
<msg timestamp="20230601 19:43:01.303" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 19:43:00.044" endtime="20230601 19:43:01.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230601 19:43:01.304" endtime="20230601 19:43:01.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:00.043" endtime="20230601 19:43:01.305"/>
</test>
<test id="s1-s16-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:01.313" level="INFO">Running command 'echo "new2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:43:01.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:01.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:01.309" endtime="20230601 19:43:01.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:01.316" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:01.315" endtime="20230601 19:43:01.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:01.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:01.317" endtime="20230601 19:43:01.320"/>
</kw>
<status status="PASS" starttime="20230601 19:43:01.308" endtime="20230601 19:43:01.320"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:01.328" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:03.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:03.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:01.324" endtime="20230601 19:43:03.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:03.054" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:03.053" endtime="20230601 19:43:03.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:03.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:03.055" endtime="20230601 19:43:03.056"/>
</kw>
<msg timestamp="20230601 19:43:03.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:01.323" endtime="20230601 19:43:03.057"/>
</kw>
<msg timestamp="20230601 19:43:03.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:01.320" endtime="20230601 19:43:03.057"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:03.058" endtime="20230601 19:43:03.058"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:03.067" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:03.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:03.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:03.059" endtime="20230601 19:43:03.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:03.074" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:03.072" endtime="20230601 19:43:03.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:03.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:03.074" endtime="20230601 19:43:03.075"/>
</kw>
<status status="PASS" starttime="20230601 19:43:03.058" endtime="20230601 19:43:03.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:01.307" endtime="20230601 19:43:03.077"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230601 19:42:18.075" endtime="20230601 19:43:03.081"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:43:08.680" level="INFO">${random} = 89735</msg>
<status status="PASS" starttime="20230601 19:43:08.679" endtime="20230601 19:43:08.680"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:08.689" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-89735 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:17.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:17.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:08.684" endtime="20230601 19:43:17.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:17.071" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:17.069" endtime="20230601 19:43:17.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:17.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:17.071" endtime="20230601 19:43:17.072"/>
</kw>
<status status="PASS" starttime="20230601 19:43:08.683" endtime="20230601 19:43:17.073"/>
</kw>
<msg timestamp="20230601 19:43:17.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:08.681" endtime="20230601 19:43:17.075"/>
</kw>
<msg timestamp="20230601 19:43:17.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:08.680" endtime="20230601 19:43:17.076"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:17.076" endtime="20230601 19:43:17.077"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:17.081" level="INFO">Running command 'cat /tmp/key-89735 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:17.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:17.085" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:43:17.078" endtime="20230601 19:43:17.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:17.087" level="INFO">new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:43:17.086" endtime="20230601 19:43:17.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:17.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:17.087" endtime="20230601 19:43:17.088"/>
</kw>
<msg timestamp="20230601 19:43:17.093" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:43:17.077" endtime="20230601 19:43:17.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:17.094" endtime="20230601 19:43:17.096"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:17.101" level="INFO">Running command 'rm /tmp/key-89735 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:17.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:17.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:17.097" endtime="20230601 19:43:17.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:17.107" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:17.106" endtime="20230601 19:43:17.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:17.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:17.107" endtime="20230601 19:43:17.108"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.096" endtime="20230601 19:43:17.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:08.678" endtime="20230601 19:43:17.110"/>
</test>
<test id="s1-s17-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:17.120" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:17.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:17.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:17.117" endtime="20230601 19:43:17.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:17.814" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:17.812" endtime="20230601 19:43:17.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:17.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:17.814" endtime="20230601 19:43:17.815"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.116" endtime="20230601 19:43:17.815"/>
</kw>
<msg timestamp="20230601 19:43:17.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:17.116" endtime="20230601 19:43:17.816"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.115" endtime="20230601 19:43:17.816"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:17.821" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:18.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:18.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:17.818" endtime="20230601 19:43:18.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:18.626" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:18.624" endtime="20230601 19:43:18.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:18.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:18.626" endtime="20230601 19:43:18.627"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.817" endtime="20230601 19:43:18.628"/>
</kw>
<msg timestamp="20230601 19:43:18.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:17.817" endtime="20230601 19:43:18.629"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.816" endtime="20230601 19:43:18.629"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:18.635" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:19.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:19.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:18.631" endtime="20230601 19:43:19.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:19.477" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:19.476" endtime="20230601 19:43:19.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:19.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:19.478" endtime="20230601 19:43:19.479"/>
</kw>
<status status="PASS" starttime="20230601 19:43:18.630" endtime="20230601 19:43:19.479"/>
</kw>
<msg timestamp="20230601 19:43:19.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:18.630" endtime="20230601 19:43:19.480"/>
</kw>
<status status="PASS" starttime="20230601 19:43:18.629" endtime="20230601 19:43:19.480"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:19.486" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:20.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:20.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:19.483" endtime="20230601 19:43:20.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:20.301" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:20.300" endtime="20230601 19:43:20.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:20.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:20.302" endtime="20230601 19:43:20.303"/>
</kw>
<status status="PASS" starttime="20230601 19:43:19.482" endtime="20230601 19:43:20.303"/>
</kw>
<msg timestamp="20230601 19:43:20.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:19.481" endtime="20230601 19:43:20.304"/>
</kw>
<status status="PASS" starttime="20230601 19:43:19.480" endtime="20230601 19:43:20.304"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.114" endtime="20230601 19:43:20.305"/>
</kw>
<status status="PASS" starttime="20230601 19:43:17.114" endtime="20230601 19:43:20.305"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:17.112" endtime="20230601 19:43:20.305"/>
</test>
<test id="s1-s17-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:20.312" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:21.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:21.391" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:42:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:43:20.309" endtime="20230601 19:43:21.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:21.393" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:42:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:43:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:43:21.391" endtime="20230601 19:43:21.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:21.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:21.393" endtime="20230601 19:43:21.394"/>
</kw>
<msg timestamp="20230601 19:43:21.394" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:42:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:43:20.308" endtime="20230601 19:43:21.395"/>
</kw>
<msg timestamp="20230601 19:43:21.395" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:42:55 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:43:20.307" endtime="20230601 19:43:21.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:21.395" endtime="20230601 19:43:21.396"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:21.401" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:21.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:21.405" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:43:21.398" endtime="20230601 19:43:21.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:21.407" level="INFO">new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:43:21.406" endtime="20230601 19:43:21.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:21.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:21.407" endtime="20230601 19:43:21.408"/>
</kw>
<msg timestamp="20230601 19:43:21.408" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:43:21.396" endtime="20230601 19:43:21.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:21.409" endtime="20230601 19:43:21.410"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:21.413" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:21.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:21.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:21.411" endtime="20230601 19:43:21.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:21.420" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:21.419" endtime="20230601 19:43:21.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:21.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:21.420" endtime="20230601 19:43:21.421"/>
</kw>
<status status="PASS" starttime="20230601 19:43:21.410" endtime="20230601 19:43:21.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:20.306" endtime="20230601 19:43:21.422"/>
</test>
<test id="s1-s17-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:21.429" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:22.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:22.488" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:43:02 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:43:21.426" endtime="20230601 19:43:22.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:22.490" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:43:02 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:43:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:43:22.489" endtime="20230601 19:43:22.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:22.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:22.490" endtime="20230601 19:43:22.491"/>
</kw>
<msg timestamp="20230601 19:43:22.492" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:43:02 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:43:21.425" endtime="20230601 19:43:22.492"/>
</kw>
<msg timestamp="20230601 19:43:22.492" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:43:02 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:43:21.424" endtime="20230601 19:43:22.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:22.493" endtime="20230601 19:43:22.493"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:22.498" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:22.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:22.503" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:43:22.495" endtime="20230601 19:43:22.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:22.506" level="INFO">new2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:43:22.504" endtime="20230601 19:43:22.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:22.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:22.507" endtime="20230601 19:43:22.508"/>
</kw>
<msg timestamp="20230601 19:43:22.509" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:43:22.494" endtime="20230601 19:43:22.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:22.509" endtime="20230601 19:43:22.510"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:22.515" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:22.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:22.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:22.512" endtime="20230601 19:43:22.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:22.521" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:22.520" endtime="20230601 19:43:22.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:22.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:22.522" endtime="20230601 19:43:22.523"/>
</kw>
<status status="PASS" starttime="20230601 19:43:22.510" endtime="20230601 19:43:22.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:21.423" endtime="20230601 19:43:22.524"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:43:08.546" endtime="20230601 19:43:22.527"/>
</suite>
<suite id="s1-s18" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s18-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:43:27.972" endtime="20230601 19:43:27.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:27.984" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:27.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:27.988" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:43:27.978" endtime="20230601 19:43:27.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:27.990" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:43:27.989" endtime="20230601 19:43:27.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:27.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:27.990" endtime="20230601 19:43:27.991"/>
</kw>
<status status="PASS" starttime="20230601 19:43:27.978" endtime="20230601 19:43:27.991"/>
</kw>
<msg timestamp="20230601 19:43:27.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:27.977" endtime="20230601 19:43:27.994"/>
</kw>
<msg timestamp="20230601 19:43:27.994" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230601 19:43:27.976" endtime="20230601 19:43:27.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:27.995" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=2a61911b6625
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230601 19:43:27.994" endtime="20230601 19:43:27.995"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:43:27.995" endtime="20230601 19:43:27.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:28.001" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:34.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:34.577" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:27.998" endtime="20230601 19:43:34.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:34.580" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:34.578" endtime="20230601 19:43:34.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:34.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:34.580" endtime="20230601 19:43:34.583"/>
</kw>
<status status="PASS" starttime="20230601 19:43:27.997" endtime="20230601 19:43:34.583"/>
</kw>
<msg timestamp="20230601 19:43:34.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:27.997" endtime="20230601 19:43:34.584"/>
</kw>
<msg timestamp="20230601 19:43:34.585" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:27.996" endtime="20230601 19:43:34.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:34.586" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:34.585" endtime="20230601 19:43:34.586"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:43:34.586" endtime="20230601 19:43:34.586"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:43:27.971" endtime="20230601 19:43:34.587"/>
</test>
<test id="s1-s18-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:43:34.590" endtime="20230601 19:43:34.591"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:43:34.591" endtime="20230601 19:43:34.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:34.599" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:40.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:40.888" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:34.595" endtime="20230601 19:43:40.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:40.890" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:40.889" endtime="20230601 19:43:40.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:40.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:40.890" endtime="20230601 19:43:40.891"/>
</kw>
<status status="PASS" starttime="20230601 19:43:34.594" endtime="20230601 19:43:40.892"/>
</kw>
<msg timestamp="20230601 19:43:40.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:34.593" endtime="20230601 19:43:40.892"/>
</kw>
<msg timestamp="20230601 19:43:40.893" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:34.592" endtime="20230601 19:43:40.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:40.893" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230601 19:43:40.893" endtime="20230601 19:43:40.894"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:43:40.894" endtime="20230601 19:43:40.894"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:43:34.589" endtime="20230601 19:43:40.895"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230601 19:43:27.884" endtime="20230601 19:43:40.897"/>
</suite>
<suite id="s1-s19" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s19-t1" name="Create snapshots" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:46.527" level="INFO">Running command 'ozone sh volume create snapvolume-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:52.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:52.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:46.522" endtime="20230601 19:43:52.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:52.016" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:52.015" endtime="20230601 19:43:52.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:52.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:52.017" endtime="20230601 19:43:52.019"/>
</kw>
<status status="PASS" starttime="20230601 19:43:46.521" endtime="20230601 19:43:52.020"/>
</kw>
<msg timestamp="20230601 19:43:52.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:46.520" endtime="20230601 19:43:52.023"/>
</kw>
<msg timestamp="20230601 19:43:52.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:46.519" endtime="20230601 19:43:52.024"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:52.024" endtime="20230601 19:43:52.025"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-1/snapbucket-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:52.032" level="INFO">Running command 'ozone sh bucket create /snapvolume-1/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:43:57.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:43:57.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:52.028" endtime="20230601 19:43:57.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:43:57.658" level="INFO"/>
<status status="PASS" starttime="20230601 19:43:57.657" endtime="20230601 19:43:57.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:43:57.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:43:57.658" endtime="20230601 19:43:57.660"/>
</kw>
<status status="PASS" starttime="20230601 19:43:52.027" endtime="20230601 19:43:57.660"/>
</kw>
<msg timestamp="20230601 19:43:57.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:52.026" endtime="20230601 19:43:57.661"/>
</kw>
<msg timestamp="20230601 19:43:57.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:52.025" endtime="20230601 19:43:57.661"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:43:57.662" endtime="20230601 19:43:57.662"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-1/snapbucket-1 snapshot1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:43:57.669" level="INFO">Running command 'ozone sh snapshot create /snapvolume-1/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:03.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:03.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:57.665" endtime="20230601 19:44:03.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:03.365" level="INFO"/>
<status status="PASS" starttime="20230601 19:44:03.356" endtime="20230601 19:44:03.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:03.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:03.366" endtime="20230601 19:44:03.371"/>
</kw>
<status status="PASS" starttime="20230601 19:43:57.664" endtime="20230601 19:44:03.373"/>
</kw>
<msg timestamp="20230601 19:44:03.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:43:57.663" endtime="20230601 19:44:03.386"/>
</kw>
<msg timestamp="20230601 19:44:03.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:43:57.663" endtime="20230601 19:44:03.388"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:44:03.413" endtime="20230601 19:44:03.417"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>echo "key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:03.434" level="INFO">Running command 'echo "key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:44:03.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:03.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:44:03.421" endtime="20230601 19:44:03.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:03.442" level="INFO"/>
<status status="PASS" starttime="20230601 19:44:03.440" endtime="20230601 19:44:03.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:03.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:03.442" endtime="20230601 19:44:03.443"/>
</kw>
<status status="PASS" starttime="20230601 19:44:03.418" endtime="20230601 19:44:03.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /snapvolume-1/snapbucket-1/key1 /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:03.489" level="INFO">Running command 'ozone sh key put /snapvolume-1/snapbucket-1/key1 /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:13.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:13.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:44:03.459" endtime="20230601 19:44:13.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:13.268" level="INFO"/>
<status status="PASS" starttime="20230601 19:44:13.267" endtime="20230601 19:44:13.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:13.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:13.268" endtime="20230601 19:44:13.269"/>
</kw>
<status status="PASS" starttime="20230601 19:44:03.458" endtime="20230601 19:44:13.269"/>
</kw>
<msg timestamp="20230601 19:44:13.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:03.453" endtime="20230601 19:44:13.273"/>
</kw>
<status status="PASS" starttime="20230601 19:44:03.450" endtime="20230601 19:44:13.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh snapshot create /snapvolume-1/snapbucket-1 snapshot2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:13.279" level="INFO">Running command 'ozone sh snapshot create /snapvolume-1/snapbucket-1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:19.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:19.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:44:13.275" endtime="20230601 19:44:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:19.098" level="INFO"/>
<status status="PASS" starttime="20230601 19:44:19.097" endtime="20230601 19:44:19.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:19.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:19.098" endtime="20230601 19:44:19.099"/>
</kw>
<status status="PASS" starttime="20230601 19:44:13.274" endtime="20230601 19:44:19.099"/>
</kw>
<msg timestamp="20230601 19:44:19.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:13.274" endtime="20230601 19:44:19.100"/>
</kw>
<status status="PASS" starttime="20230601 19:44:13.273" endtime="20230601 19:44:19.101"/>
</kw>
<tag>finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:43:46.518" endtime="20230601 19:44:19.101"/>
</test>
<test id="s1-s19-t2" name="List snapshots" line="48">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-1/snapbucket-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:19.109" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-1/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:25.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:25.173" level="INFO">${output} = [ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot1",
  "creationTime" : 1685648643126,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "1a4c6705-5dfb-...</msg>
<status status="PASS" starttime="20230601 19:44:19.106" endtime="20230601 19:44:25.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:25.175" level="INFO">[ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot1",
  "creationTime" : 1685648643126,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "1a4c6705-5dfb-497a-b3db-268f62b2e001",
  "snapshotPath" : "snapvolume-1/snapbucket-1",
  "checkpointDir" : "-1a4c6705-5dfb-497a-b3db-268f62b2e001"
}, {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot2",
  "creationTime" : 1685648658953,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "9ea22da4-01a4-42af-8d63-56efad6261e8",
  "snapshotPath" : "snapvolume-1/snapbucket-1",
  "checkpointDir" : "-9ea22da4-01a4-42af-8d63-56efad6261e8"
} ]</msg>
<status status="PASS" starttime="20230601 19:44:25.174" endtime="20230601 19:44:25.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:25.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:25.176" endtime="20230601 19:44:25.177"/>
</kw>
<status status="PASS" starttime="20230601 19:44:19.105" endtime="20230601 19:44:25.177"/>
</kw>
<msg timestamp="20230601 19:44:25.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:19.104" endtime="20230601 19:44:25.178"/>
</kw>
<msg timestamp="20230601 19:44:25.178" level="INFO">${output} = [ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot1",
  "creationTime" : 1685648643126,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "1a4c6705-5dfb-...</msg>
<status status="PASS" starttime="20230601 19:44:19.104" endtime="20230601 19:44:25.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>snapshot1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:44:25.179" endtime="20230601 19:44:25.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>snapshot2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:44:25.179" endtime="20230601 19:44:25.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SNAPSHOT_ACTIVE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:44:25.181" endtime="20230601 19:44:25.181"/>
</kw>
<tag>finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:44:19.102" endtime="20230601 19:44:25.182"/>
</test>
<test id="s1-s19-t3" name="Snapshot Diff" line="60">
<while condition="True">
<iter>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-1/snapbucket-1 snapshot1 snapshot2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:25.192" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-1/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:30.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:30.741" level="INFO">${output} = Snapshot diff job is IN_PROGRESS
Please retry after 60000 ms.</msg>
<status status="PASS" starttime="20230601 19:44:25.188" endtime="20230601 19:44:30.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:30.744" level="INFO">Snapshot diff job is IN_PROGRESS
Please retry after 60000 ms.</msg>
<status status="PASS" starttime="20230601 19:44:30.742" endtime="20230601 19:44:30.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:30.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:30.745" endtime="20230601 19:44:30.747"/>
</kw>
<status status="PASS" starttime="20230601 19:44:25.187" endtime="20230601 19:44:30.747"/>
</kw>
<msg timestamp="20230601 19:44:30.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:25.187" endtime="20230601 19:44:30.748"/>
</kw>
<msg timestamp="20230601 19:44:30.749" level="INFO">${output} = Snapshot diff job is IN_PROGRESS
Please retry after 60000 ms.</msg>
<status status="PASS" starttime="20230601 19:44:25.186" endtime="20230601 19:44:30.749"/>
</kw>
<if>
<branch type="IF" condition="&quot;Snapshot diff job is IN_PROGRESS&quot; in &quot;&quot;&quot;${output}&quot;&quot;&quot;">
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230601 19:44:40.758" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230601 19:44:30.750" endtime="20230601 19:44:40.758"/>
</kw>
<status status="PASS" starttime="20230601 19:44:30.750" endtime="20230601 19:44:40.759"/>
</branch>
<branch type="ELSE">
<break>
<status status="NOT RUN" starttime="20230601 19:44:40.759" endtime="20230601 19:44:40.759"/>
</break>
<status status="NOT RUN" starttime="20230601 19:44:40.759" endtime="20230601 19:44:40.759"/>
</branch>
<status status="PASS" starttime="20230601 19:44:30.749" endtime="20230601 19:44:40.759"/>
</if>
<status status="PASS" starttime="20230601 19:44:25.186" endtime="20230601 19:44:40.759"/>
</iter>
<iter>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-1/snapbucket-1 snapshot1 snapshot2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:40.766" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-1/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:46.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:46.111" level="INFO">${output} = Difference between snapshot: snapshot1 and snapshot: snapshot2
+	./key1</msg>
<status status="PASS" starttime="20230601 19:44:40.762" endtime="20230601 19:44:46.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:46.114" level="INFO">Difference between snapshot: snapshot1 and snapshot: snapshot2
+	./key1</msg>
<status status="PASS" starttime="20230601 19:44:46.112" endtime="20230601 19:44:46.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:46.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:46.114" endtime="20230601 19:44:46.116"/>
</kw>
<status status="PASS" starttime="20230601 19:44:40.761" endtime="20230601 19:44:46.116"/>
</kw>
<msg timestamp="20230601 19:44:46.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:40.761" endtime="20230601 19:44:46.117"/>
</kw>
<msg timestamp="20230601 19:44:46.118" level="INFO">${output} = Difference between snapshot: snapshot1 and snapshot: snapshot2
+	./key1</msg>
<status status="PASS" starttime="20230601 19:44:40.760" endtime="20230601 19:44:46.118"/>
</kw>
<if>
<branch type="IF" condition="&quot;Snapshot diff job is IN_PROGRESS&quot; in &quot;&quot;&quot;${output}&quot;&quot;&quot;">
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230601 19:44:46.119" endtime="20230601 19:44:46.119"/>
</kw>
<status status="NOT RUN" starttime="20230601 19:44:46.118" endtime="20230601 19:44:46.119"/>
</branch>
<branch type="ELSE">
<break>
<status status="PASS" starttime="20230601 19:44:46.119" endtime="20230601 19:44:46.119"/>
</break>
<status status="PASS" starttime="20230601 19:44:46.119" endtime="20230601 19:44:46.119"/>
</branch>
<status status="PASS" starttime="20230601 19:44:46.118" endtime="20230601 19:44:46.119"/>
</if>
<status status="PASS" starttime="20230601 19:44:40.759" endtime="20230601 19:44:46.119"/>
</iter>
<status status="PASS" starttime="20230601 19:44:25.186" endtime="20230601 19:44:46.119"/>
</while>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>+</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:44:46.120" endtime="20230601 19:44:46.120"/>
</kw>
<tag>finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:44:25.185" endtime="20230601 19:44:46.121"/>
</test>
<test id="s1-s19-t4" name="Delete snapshot" line="77">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-1/snapbucket-1 snapshot1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:46.131" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-1/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:51.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:51.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:44:46.127" endtime="20230601 19:44:51.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:51.708" level="INFO"/>
<status status="PASS" starttime="20230601 19:44:51.707" endtime="20230601 19:44:51.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:51.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:51.709" endtime="20230601 19:44:51.710"/>
</kw>
<status status="PASS" starttime="20230601 19:44:46.126" endtime="20230601 19:44:51.710"/>
</kw>
<msg timestamp="20230601 19:44:51.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:46.125" endtime="20230601 19:44:51.712"/>
</kw>
<msg timestamp="20230601 19:44:51.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:44:46.125" endtime="20230601 19:44:51.712"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:44:51.713" endtime="20230601 19:44:51.713"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-1/snapbucket-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:44:51.721" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-1/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:44:57.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:44:57.612" level="INFO">${output} = [ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot2",
  "creationTime" : 1685648658953,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "9ea22da4-01a4-...</msg>
<status status="PASS" starttime="20230601 19:44:51.717" endtime="20230601 19:44:57.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:44:57.614" level="INFO">[ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot2",
  "creationTime" : 1685648658953,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "9ea22da4-01a4-42af-8d63-56efad6261e8",
  "snapshotPath" : "snapvolume-1/snapbucket-1",
  "checkpointDir" : "-9ea22da4-01a4-42af-8d63-56efad6261e8"
} ]</msg>
<status status="PASS" starttime="20230601 19:44:57.613" endtime="20230601 19:44:57.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:44:57.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:44:57.614" endtime="20230601 19:44:57.615"/>
</kw>
<status status="PASS" starttime="20230601 19:44:51.716" endtime="20230601 19:44:57.615"/>
</kw>
<msg timestamp="20230601 19:44:57.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:44:51.715" endtime="20230601 19:44:57.616"/>
</kw>
<msg timestamp="20230601 19:44:57.616" level="INFO">${output} = [ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot2",
  "creationTime" : 1685648658953,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "9ea22da4-01a4-...</msg>
<status status="PASS" starttime="20230601 19:44:51.714" endtime="20230601 19:44:57.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SNAPSHOT_DELETED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230601 19:44:57.617" level="FAIL">'[ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot2",
  "creationTime" : 1685648658953,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "9ea22da4-01a4-42af-8d63-56efad6261e8",
  "snapshotPath" : "snapvolume-1/snapbucket-1",
  "checkpointDir" : "-9ea22da4-01a4-42af-8d63-56efad6261e8"
} ]' does not contain 'SNAPSHOT_DELETED'</msg>
<status status="FAIL" starttime="20230601 19:44:57.616" endtime="20230601 19:44:57.617"/>
</kw>
<tag>finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230601 19:44:46.123" endtime="20230601 19:44:57.618">'[ {
  "volumeName" : "snapvolume-1",
  "bucketName" : "snapbucket-1",
  "name" : "snapshot2",
  "creationTime" : 1685648658953,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotID" : "9ea22da4-01a4-42af-8d63-56efad6261e8",
  "snapshotPath" : "snapvolume-1/snapbucket-1",
  "checkpointDir" : "-9ea22da4-01a4-42af-8d63-56efad6261e8"
} ]' does not contain 'SNAPSHOT_DELETED'</status>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="FAIL" starttime="20230601 19:43:46.426" endtime="20230601 19:44:57.621"/>
</suite>
<suite id="s1-s20" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s20-t1" name="Finalize HDDS" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:39:00.139" endtime="20230601 19:39:00.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:39:00.153" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:40:39.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:40:39.458" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20230601 19:39:00.144" endtime="20230601 19:40:39.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:39.460" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: RATIS_DATASTREAM_PORT_IN_DATANODEDETAILS.
No onFinalize work defined for feature: WEBUI_PORTS_IN_DATANODEDETAILS.
No onFinalize work defined for feature: HADOOP_PRC_PORTS_IN_DATANODEDETAILS.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230601 19:40:39.459" endtime="20230601 19:40:39.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:40:39.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:40:39.463" endtime="20230601 19:40:39.464"/>
</kw>
<status status="PASS" starttime="20230601 19:39:00.143" endtime="20230601 19:40:39.466"/>
</kw>
<msg timestamp="20230601 19:40:39.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:39:00.143" endtime="20230601 19:40:39.470"/>
</kw>
<msg timestamp="20230601 19:40:39.471" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20230601 19:39:00.143" endtime="20230601 19:40:39.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:39.473" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: RATIS_DATASTREAM_PORT_IN_DATANODEDETAILS.
No onFinalize work defined for feature: WEBUI_PORTS_IN_DATANODEDETAILS.
No onFinalize work defined for feature: HADOOP_PRC_PORTS_IN_DATANODEDETAILS.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230601 19:40:39.471" endtime="20230601 19:40:39.474"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:39:00.137" endtime="20230601 19:40:39.474"/>
</test>
<test id="s1-s20-t2" name="Finalize OMs" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:40:39.487" endtime="20230601 19:40:39.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:40:39.504" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:40:46.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:40:46.486" level="INFO">${output} = Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metad...</msg>
<status status="PASS" starttime="20230601 19:40:39.496" endtime="20230601 19:40:46.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:46.488" level="INFO">Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230601 19:40:46.487" endtime="20230601 19:40:46.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:40:46.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:40:46.488" endtime="20230601 19:40:46.489"/>
</kw>
<status status="PASS" starttime="20230601 19:40:39.494" endtime="20230601 19:40:46.490"/>
</kw>
<msg timestamp="20230601 19:40:46.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:40:39.492" endtime="20230601 19:40:46.490"/>
</kw>
<msg timestamp="20230601 19:40:46.491" level="INFO">${result} = Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metad...</msg>
<status status="PASS" starttime="20230601 19:40:39.490" endtime="20230601 19:40:46.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:40:46.491" level="INFO">Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230601 19:40:46.491" endtime="20230601 19:40:46.491"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:40:39.479" endtime="20230601 19:40:46.492"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230601 19:39:00.002" endtime="20230601 19:40:46.494"/>
</suite>
<suite id="s1-s21" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s21-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:18.035" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:28:18.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:18.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:18.029" endtime="20230601 19:28:18.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:18.039" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:18.038" endtime="20230601 19:28:18.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:18.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:18.040" endtime="20230601 19:28:18.041"/>
</kw>
<status status="PASS" starttime="20230601 19:28:18.028" endtime="20230601 19:28:18.042"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:18.048" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:29.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:29.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:18.046" endtime="20230601 19:28:29.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:29.597" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:29.595" endtime="20230601 19:28:29.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:29.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:29.597" endtime="20230601 19:28:29.598"/>
</kw>
<status status="PASS" starttime="20230601 19:28:18.045" endtime="20230601 19:28:29.599"/>
</kw>
<msg timestamp="20230601 19:28:29.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:18.044" endtime="20230601 19:28:29.601"/>
</kw>
<msg timestamp="20230601 19:28:29.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:18.042" endtime="20230601 19:28:29.601"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:29.601" endtime="20230601 19:28:29.602"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:29.610" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:29.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:29.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:29.603" endtime="20230601 19:28:29.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:29.617" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:29.616" endtime="20230601 19:28:29.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:29.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:29.617" endtime="20230601 19:28:29.618"/>
</kw>
<status status="PASS" starttime="20230601 19:28:29.602" endtime="20230601 19:28:29.618"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:18.027" endtime="20230601 19:28:29.619"/>
</test>
<test id="s1-s21-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:29.627" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:28:29.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:29.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:29.623" endtime="20230601 19:28:29.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:29.632" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:29.630" endtime="20230601 19:28:29.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:29.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:29.633" endtime="20230601 19:28:29.634"/>
</kw>
<status status="PASS" starttime="20230601 19:28:29.622" endtime="20230601 19:28:29.634"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:29.638" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:38.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:38.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:29.636" endtime="20230601 19:28:38.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:38.553" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:38.552" endtime="20230601 19:28:38.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:38.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:38.553" endtime="20230601 19:28:38.554"/>
</kw>
<status status="PASS" starttime="20230601 19:28:29.635" endtime="20230601 19:28:38.554"/>
</kw>
<msg timestamp="20230601 19:28:38.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:29.635" endtime="20230601 19:28:38.555"/>
</kw>
<msg timestamp="20230601 19:28:38.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:29.634" endtime="20230601 19:28:38.555"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:38.555" endtime="20230601 19:28:38.556"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:38.559" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:38.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:38.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:38.557" endtime="20230601 19:28:38.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:38.565" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:38.564" endtime="20230601 19:28:38.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:38.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:38.566" endtime="20230601 19:28:38.567"/>
</kw>
<status status="PASS" starttime="20230601 19:28:38.556" endtime="20230601 19:28:38.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:29.621" endtime="20230601 19:28:38.568"/>
</test>
<test id="s1-s21-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:38.577" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:39.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:39.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:38.574" endtime="20230601 19:28:39.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:39.318" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:39.317" endtime="20230601 19:28:39.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:39.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:39.318" endtime="20230601 19:28:39.319"/>
</kw>
<status status="PASS" starttime="20230601 19:28:38.574" endtime="20230601 19:28:39.319"/>
</kw>
<msg timestamp="20230601 19:28:39.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:38.573" endtime="20230601 19:28:39.320"/>
</kw>
<status status="PASS" starttime="20230601 19:28:38.572" endtime="20230601 19:28:39.320"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:39.327" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:40.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:40.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:39.322" endtime="20230601 19:28:40.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:40.079" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:40.078" endtime="20230601 19:28:40.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:40.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:40.079" endtime="20230601 19:28:40.080"/>
</kw>
<status status="PASS" starttime="20230601 19:28:39.321" endtime="20230601 19:28:40.080"/>
</kw>
<msg timestamp="20230601 19:28:40.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:39.321" endtime="20230601 19:28:40.080"/>
</kw>
<status status="PASS" starttime="20230601 19:28:39.320" endtime="20230601 19:28:40.081"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:40.086" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:40.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:40.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:40.083" endtime="20230601 19:28:40.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:40.894" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:40.893" endtime="20230601 19:28:40.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:40.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:40.895" endtime="20230601 19:28:40.896"/>
</kw>
<status status="PASS" starttime="20230601 19:28:40.082" endtime="20230601 19:28:40.896"/>
</kw>
<msg timestamp="20230601 19:28:40.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:40.081" endtime="20230601 19:28:40.897"/>
</kw>
<status status="PASS" starttime="20230601 19:28:40.081" endtime="20230601 19:28:40.897"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:40.903" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:41.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:41.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:40.899" endtime="20230601 19:28:41.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:41.691" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:41.690" endtime="20230601 19:28:41.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:41.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:41.691" endtime="20230601 19:28:41.692"/>
</kw>
<status status="PASS" starttime="20230601 19:28:40.899" endtime="20230601 19:28:41.692"/>
</kw>
<msg timestamp="20230601 19:28:41.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:40.898" endtime="20230601 19:28:41.693"/>
</kw>
<status status="PASS" starttime="20230601 19:28:40.897" endtime="20230601 19:28:41.693"/>
</kw>
<status status="PASS" starttime="20230601 19:28:38.571" endtime="20230601 19:28:41.693"/>
</kw>
<status status="PASS" starttime="20230601 19:28:38.571" endtime="20230601 19:28:41.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:38.570" endtime="20230601 19:28:41.694"/>
</test>
<test id="s1-s21-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:41.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:42.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:42.758" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:28:41.703" endtime="20230601 19:28:42.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:42.760" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:28:42.759" endtime="20230601 19:28:42.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:42.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:42.760" endtime="20230601 19:28:42.762"/>
</kw>
<status status="PASS" starttime="20230601 19:28:41.701" endtime="20230601 19:28:42.762"/>
</kw>
<msg timestamp="20230601 19:28:42.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:41.701" endtime="20230601 19:28:42.763"/>
</kw>
<msg timestamp="20230601 19:28:42.763" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:28:41.700" endtime="20230601 19:28:42.763"/>
</kw>
<msg timestamp="20230601 19:28:42.764" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:28:41.699" endtime="20230601 19:28:42.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:42.764" endtime="20230601 19:28:42.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:42.765" endtime="20230601 19:28:42.766"/>
</kw>
<msg timestamp="20230601 19:28:42.766" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 19:28:41.699" endtime="20230601 19:28:42.766"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230601 19:28:42.766" endtime="20230601 19:28:42.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:41.696" endtime="20230601 19:28:42.768"/>
</test>
<test id="s1-s21-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:42.775" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:28:42.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:42.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:42.772" endtime="20230601 19:28:42.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:42.780" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:42.778" endtime="20230601 19:28:42.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:42.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:42.780" endtime="20230601 19:28:42.782"/>
</kw>
<status status="PASS" starttime="20230601 19:28:42.771" endtime="20230601 19:28:42.782"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:42.787" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:44.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:44.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:42.784" endtime="20230601 19:28:44.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:44.689" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:44.688" endtime="20230601 19:28:44.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:44.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:44.689" endtime="20230601 19:28:44.690"/>
</kw>
<msg timestamp="20230601 19:28:44.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:42.783" endtime="20230601 19:28:44.691"/>
</kw>
<msg timestamp="20230601 19:28:44.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:42.782" endtime="20230601 19:28:44.691"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:44.691" endtime="20230601 19:28:44.692"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:44.697" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:44.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:44.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:44.693" endtime="20230601 19:28:44.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:44.703" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:44.701" endtime="20230601 19:28:44.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:44.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:44.703" endtime="20230601 19:28:44.704"/>
</kw>
<status status="PASS" starttime="20230601 19:28:44.692" endtime="20230601 19:28:44.705"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:42.770" endtime="20230601 19:28:44.705"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230601 19:28:17.891" endtime="20230601 19:28:44.707"/>
</suite>
<suite id="s1-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s22-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:49.773" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:54.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:54.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:49.767" endtime="20230601 19:28:54.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:54.895" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:54.894" endtime="20230601 19:28:54.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:54.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:54.896" endtime="20230601 19:28:54.896"/>
</kw>
<status status="PASS" starttime="20230601 19:28:49.766" endtime="20230601 19:28:54.896"/>
</kw>
<msg timestamp="20230601 19:28:54.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:49.766" endtime="20230601 19:28:54.899"/>
</kw>
<msg timestamp="20230601 19:28:54.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:49.765" endtime="20230601 19:28:54.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:54.901" endtime="20230601 19:28:54.901"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:54.910" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:00.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:00.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:54.906" endtime="20230601 19:29:00.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:00.242" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:00.240" endtime="20230601 19:29:00.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:00.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:00.242" endtime="20230601 19:29:00.243"/>
</kw>
<status status="PASS" starttime="20230601 19:28:54.904" endtime="20230601 19:29:00.244"/>
</kw>
<msg timestamp="20230601 19:29:00.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:54.904" endtime="20230601 19:29:00.245"/>
</kw>
<msg timestamp="20230601 19:29:00.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:54.902" endtime="20230601 19:29:00.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:00.246" endtime="20230601 19:29:00.247"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:49.764" endtime="20230601 19:29:00.247"/>
</test>
<test id="s1-s22-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:00.255" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:29:00.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:00.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:00.252" endtime="20230601 19:29:00.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:00.262" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:00.261" endtime="20230601 19:29:00.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:00.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:00.263" endtime="20230601 19:29:00.264"/>
</kw>
<status status="PASS" starttime="20230601 19:29:00.250" endtime="20230601 19:29:00.264"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:00.270" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:09.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:09.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:00.267" endtime="20230601 19:29:09.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:09.617" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:09.615" endtime="20230601 19:29:09.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:09.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:09.617" endtime="20230601 19:29:09.624"/>
</kw>
<status status="PASS" starttime="20230601 19:29:00.266" endtime="20230601 19:29:09.624"/>
</kw>
<msg timestamp="20230601 19:29:09.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:00.265" endtime="20230601 19:29:09.626"/>
</kw>
<msg timestamp="20230601 19:29:09.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:00.264" endtime="20230601 19:29:09.627"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:09.627" endtime="20230601 19:29:09.628"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:09.635" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:09.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:09.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:09.631" endtime="20230601 19:29:09.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:09.640" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:09.639" endtime="20230601 19:29:09.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:09.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:09.640" endtime="20230601 19:29:09.641"/>
</kw>
<status status="PASS" starttime="20230601 19:29:09.628" endtime="20230601 19:29:09.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:00.249" endtime="20230601 19:29:09.642"/>
</test>
<test id="s1-s22-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:09.649" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:14.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:14.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:09.646" endtime="20230601 19:29:14.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:14.318" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:14.317" endtime="20230601 19:29:14.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:14.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:14.318" endtime="20230601 19:29:14.319"/>
</kw>
<status status="PASS" starttime="20230601 19:29:09.646" endtime="20230601 19:29:14.322"/>
</kw>
<msg timestamp="20230601 19:29:14.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:09.645" endtime="20230601 19:29:14.324"/>
</kw>
<msg timestamp="20230601 19:29:14.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:09.645" endtime="20230601 19:29:14.324"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:14.325" endtime="20230601 19:29:14.326"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:09.643" endtime="20230601 19:29:14.327"/>
</test>
<test id="s1-s22-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:14.336" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:29:14.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:14.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:14.332" endtime="20230601 19:29:14.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:14.342" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:14.340" endtime="20230601 19:29:14.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:14.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:14.342" endtime="20230601 19:29:14.344"/>
</kw>
<status status="PASS" starttime="20230601 19:29:14.331" endtime="20230601 19:29:14.344"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:14.353" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:22.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:22.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:14.348" endtime="20230601 19:29:22.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:22.654" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:22.653" endtime="20230601 19:29:22.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:22.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:22.655" endtime="20230601 19:29:22.656"/>
</kw>
<status status="PASS" starttime="20230601 19:29:14.346" endtime="20230601 19:29:22.656"/>
</kw>
<msg timestamp="20230601 19:29:22.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:14.346" endtime="20230601 19:29:22.657"/>
</kw>
<msg timestamp="20230601 19:29:22.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:14.345" endtime="20230601 19:29:22.658"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:22.658" endtime="20230601 19:29:22.659"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:22.665" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:22.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:22.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:22.660" endtime="20230601 19:29:22.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:22.671" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:22.669" endtime="20230601 19:29:22.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:22.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:22.672" endtime="20230601 19:29:22.673"/>
</kw>
<status status="PASS" starttime="20230601 19:29:22.659" endtime="20230601 19:29:22.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:14.330" endtime="20230601 19:29:22.674"/>
</test>
<test id="s1-s22-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:22.683" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:23.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:23.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:22.680" endtime="20230601 19:29:23.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:23.490" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:23.489" endtime="20230601 19:29:23.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:23.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:23.491" endtime="20230601 19:29:23.491"/>
</kw>
<status status="PASS" starttime="20230601 19:29:22.679" endtime="20230601 19:29:23.492"/>
</kw>
<msg timestamp="20230601 19:29:23.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:22.679" endtime="20230601 19:29:23.493"/>
</kw>
<status status="PASS" starttime="20230601 19:29:22.679" endtime="20230601 19:29:23.493"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:23.500" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:24.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:24.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:23.496" endtime="20230601 19:29:24.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:24.250" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:24.247" endtime="20230601 19:29:24.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:24.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:24.251" endtime="20230601 19:29:24.253"/>
</kw>
<status status="PASS" starttime="20230601 19:29:23.496" endtime="20230601 19:29:24.253"/>
</kw>
<msg timestamp="20230601 19:29:24.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:23.495" endtime="20230601 19:29:24.254"/>
</kw>
<status status="PASS" starttime="20230601 19:29:23.494" endtime="20230601 19:29:24.254"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:24.260" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:25.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:25.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:24.257" endtime="20230601 19:29:25.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:25.043" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:25.042" endtime="20230601 19:29:25.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:25.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:25.044" endtime="20230601 19:29:25.044"/>
</kw>
<status status="PASS" starttime="20230601 19:29:24.256" endtime="20230601 19:29:25.045"/>
</kw>
<msg timestamp="20230601 19:29:25.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:24.255" endtime="20230601 19:29:25.045"/>
</kw>
<status status="PASS" starttime="20230601 19:29:24.255" endtime="20230601 19:29:25.046"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:25.051" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:25.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:25.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:25.048" endtime="20230601 19:29:25.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:25.806" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:25.805" endtime="20230601 19:29:25.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:25.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:25.806" endtime="20230601 19:29:25.808"/>
</kw>
<status status="PASS" starttime="20230601 19:29:25.047" endtime="20230601 19:29:25.809"/>
</kw>
<msg timestamp="20230601 19:29:25.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:25.047" endtime="20230601 19:29:25.810"/>
</kw>
<status status="PASS" starttime="20230601 19:29:25.046" endtime="20230601 19:29:25.810"/>
</kw>
<status status="PASS" starttime="20230601 19:29:22.678" endtime="20230601 19:29:25.810"/>
</kw>
<status status="PASS" starttime="20230601 19:29:22.678" endtime="20230601 19:29:25.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:22.676" endtime="20230601 19:29:25.811"/>
</test>
<test id="s1-s22-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:25.821" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:26.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:26.728" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:29:25.818" endtime="20230601 19:29:26.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:26.730" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:29:26.729" endtime="20230601 19:29:26.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:26.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:26.730" endtime="20230601 19:29:26.731"/>
</kw>
<status status="PASS" starttime="20230601 19:29:25.818" endtime="20230601 19:29:26.732"/>
</kw>
<msg timestamp="20230601 19:29:26.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:25.817" endtime="20230601 19:29:26.733"/>
</kw>
<msg timestamp="20230601 19:29:26.733" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:29:25.817" endtime="20230601 19:29:26.733"/>
</kw>
<msg timestamp="20230601 19:29:26.734" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230601 19:29:25.816" endtime="20230601 19:29:26.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:26.734" endtime="20230601 19:29:26.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:26.735" endtime="20230601 19:29:26.736"/>
</kw>
<msg timestamp="20230601 19:29:26.736" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 19:29:25.815" endtime="20230601 19:29:26.736"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230601 19:29:26.736" endtime="20230601 19:29:26.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:25.813" endtime="20230601 19:29:26.737"/>
</test>
<test id="s1-s22-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:26.744" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230601 19:29:26.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:26.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:26.741" endtime="20230601 19:29:26.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:26.749" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:26.747" endtime="20230601 19:29:26.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:26.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:26.749" endtime="20230601 19:29:26.750"/>
</kw>
<status status="PASS" starttime="20230601 19:29:26.740" endtime="20230601 19:29:26.750"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:26.756" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:28.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:28.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:26.754" endtime="20230601 19:29:28.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:28.081" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:28.080" endtime="20230601 19:29:28.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:28.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:28.082" endtime="20230601 19:29:28.083"/>
</kw>
<msg timestamp="20230601 19:29:28.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:26.752" endtime="20230601 19:29:28.084"/>
</kw>
<msg timestamp="20230601 19:29:28.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:26.751" endtime="20230601 19:29:28.084"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:28.085" endtime="20230601 19:29:28.086"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:28.095" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:28.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:28.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:28.090" endtime="20230601 19:29:28.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:28.102" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:28.101" endtime="20230601 19:29:28.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:28.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:28.103" endtime="20230601 19:29:28.104"/>
</kw>
<status status="PASS" starttime="20230601 19:29:28.086" endtime="20230601 19:29:28.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:26.739" endtime="20230601 19:29:28.105"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230601 19:28:49.630" endtime="20230601 19:29:28.109"/>
</suite>
<suite id="s1-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s23-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:29:33.634" level="INFO">${random} = 05985</msg>
<status status="PASS" starttime="20230601 19:29:33.634" endtime="20230601 19:29:33.634"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:33.643" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-05985 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:42.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:42.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:33.638" endtime="20230601 19:29:42.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:42.067" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:42.066" endtime="20230601 19:29:42.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:42.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:42.068" endtime="20230601 19:29:42.069"/>
</kw>
<status status="PASS" starttime="20230601 19:29:33.637" endtime="20230601 19:29:42.069"/>
</kw>
<msg timestamp="20230601 19:29:42.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:33.636" endtime="20230601 19:29:42.071"/>
</kw>
<msg timestamp="20230601 19:29:42.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:33.635" endtime="20230601 19:29:42.071"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:42.072" endtime="20230601 19:29:42.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:42.076" level="INFO">Running command 'cat /tmp/key-05985 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:42.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:42.079" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:29:42.073" endtime="20230601 19:29:42.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:42.080" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:29:42.080" endtime="20230601 19:29:42.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:42.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:42.081" endtime="20230601 19:29:42.081"/>
</kw>
<msg timestamp="20230601 19:29:42.082" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:29:42.072" endtime="20230601 19:29:42.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:42.082" endtime="20230601 19:29:42.083"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:42.087" level="INFO">Running command 'rm /tmp/key-05985 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:42.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:42.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:42.084" endtime="20230601 19:29:42.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:42.092" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:42.092" endtime="20230601 19:29:42.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:42.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:42.093" endtime="20230601 19:29:42.095"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.083" endtime="20230601 19:29:42.096"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:33.631" endtime="20230601 19:29:42.096"/>
</test>
<test id="s1-s23-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:42.106" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:42.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:42.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:42.103" endtime="20230601 19:29:42.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:42.974" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:42.973" endtime="20230601 19:29:42.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:42.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:42.974" endtime="20230601 19:29:42.976"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.102" endtime="20230601 19:29:42.977"/>
</kw>
<msg timestamp="20230601 19:29:42.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:42.102" endtime="20230601 19:29:42.978"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.101" endtime="20230601 19:29:42.978"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:42.989" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:43.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:43.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:42.980" endtime="20230601 19:29:43.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:43.858" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:43.857" endtime="20230601 19:29:43.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:43.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:43.859" endtime="20230601 19:29:43.859"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.979" endtime="20230601 19:29:43.860"/>
</kw>
<msg timestamp="20230601 19:29:43.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:42.979" endtime="20230601 19:29:43.861"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.978" endtime="20230601 19:29:43.861"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:43.868" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:44.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:44.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:43.864" endtime="20230601 19:29:44.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:44.709" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:44.708" endtime="20230601 19:29:44.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:44.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:44.710" endtime="20230601 19:29:44.710"/>
</kw>
<status status="PASS" starttime="20230601 19:29:43.862" endtime="20230601 19:29:44.711"/>
</kw>
<msg timestamp="20230601 19:29:44.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:43.862" endtime="20230601 19:29:44.712"/>
</kw>
<status status="PASS" starttime="20230601 19:29:43.861" endtime="20230601 19:29:44.712"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:44.716" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:45.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:45.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:44.714" endtime="20230601 19:29:45.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:45.454" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:45.453" endtime="20230601 19:29:45.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:45.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:45.455" endtime="20230601 19:29:45.456"/>
</kw>
<status status="PASS" starttime="20230601 19:29:44.713" endtime="20230601 19:29:45.456"/>
</kw>
<msg timestamp="20230601 19:29:45.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:44.713" endtime="20230601 19:29:45.457"/>
</kw>
<status status="PASS" starttime="20230601 19:29:44.712" endtime="20230601 19:29:45.457"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.100" endtime="20230601 19:29:45.458"/>
</kw>
<status status="PASS" starttime="20230601 19:29:42.100" endtime="20230601 19:29:45.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:42.099" endtime="20230601 19:29:45.458"/>
</test>
<test id="s1-s23-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:45.466" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:46.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:46.508" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:29:45.463" endtime="20230601 19:29:46.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:46.510" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:29:46 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:29:46.509" endtime="20230601 19:29:46.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:46.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:46.511" endtime="20230601 19:29:46.512"/>
</kw>
<msg timestamp="20230601 19:29:46.512" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:29:45.462" endtime="20230601 19:29:46.512"/>
</kw>
<msg timestamp="20230601 19:29:46.513" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:29:45.461" endtime="20230601 19:29:46.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:46.513" endtime="20230601 19:29:46.514"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:46.520" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:46.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:46.524" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:29:46.516" endtime="20230601 19:29:46.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:46.527" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:29:46.526" endtime="20230601 19:29:46.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:46.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:46.527" endtime="20230601 19:29:46.528"/>
</kw>
<msg timestamp="20230601 19:29:46.529" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:29:46.514" endtime="20230601 19:29:46.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:46.529" endtime="20230601 19:29:46.530"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:46.535" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:46.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:46.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:46.531" endtime="20230601 19:29:46.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:46.542" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:46.541" endtime="20230601 19:29:46.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:46.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:46.543" endtime="20230601 19:29:46.543"/>
</kw>
<status status="PASS" starttime="20230601 19:29:46.530" endtime="20230601 19:29:46.544"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:45.460" endtime="20230601 19:29:46.544"/>
</test>
<test id="s1-s23-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:46.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:47.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:47.492" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:29:46.549" endtime="20230601 19:29:47.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:47.494" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:29:47 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:29:47.493" endtime="20230601 19:29:47.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:47.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:47.495" endtime="20230601 19:29:47.496"/>
</kw>
<msg timestamp="20230601 19:29:47.496" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:29:46.548" endtime="20230601 19:29:47.496"/>
</kw>
<msg timestamp="20230601 19:29:47.497" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:29:27 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:29:46.548" endtime="20230601 19:29:47.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:47.497" endtime="20230601 19:29:47.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:47.502" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:47.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:47.506" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:29:47.498" endtime="20230601 19:29:47.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:47.507" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:29:47.506" endtime="20230601 19:29:47.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:47.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:47.507" endtime="20230601 19:29:47.508"/>
</kw>
<msg timestamp="20230601 19:29:47.509" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:29:47.498" endtime="20230601 19:29:47.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:29:47.509" endtime="20230601 19:29:47.510"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:47.513" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:47.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:47.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:29:47.511" endtime="20230601 19:29:47.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:47.519" level="INFO"/>
<status status="PASS" starttime="20230601 19:29:47.519" endtime="20230601 19:29:47.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:47.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:47.520" endtime="20230601 19:29:47.520"/>
</kw>
<status status="PASS" starttime="20230601 19:29:47.510" endtime="20230601 19:29:47.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:29:46.546" endtime="20230601 19:29:47.521"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:29:33.502" endtime="20230601 19:29:47.524"/>
</suite>
<suite id="s1-s24" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s24-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:29:52.650" endtime="20230601 19:29:52.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:52.658" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:29:58.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:29:58.326" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:29:52.653" endtime="20230601 19:29:58.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:58.328" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:29:58.327" endtime="20230601 19:29:58.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:29:58.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:29:58.329" endtime="20230601 19:29:58.330"/>
</kw>
<status status="PASS" starttime="20230601 19:29:52.652" endtime="20230601 19:29:58.330"/>
</kw>
<msg timestamp="20230601 19:29:58.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:52.652" endtime="20230601 19:29:58.332"/>
</kw>
<msg timestamp="20230601 19:29:58.332" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:29:52.651" endtime="20230601 19:29:58.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:29:58.333" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:29:58.333" endtime="20230601 19:29:58.334"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:29:58.334" endtime="20230601 19:29:58.334"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:29:52.649" endtime="20230601 19:29:58.335"/>
</test>
<test id="s1-s24-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:29:58.337" endtime="20230601 19:29:58.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:29:58.344" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:03.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:30:03.909" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:29:58.340" endtime="20230601 19:30:03.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:03.911" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:30:03.910" endtime="20230601 19:30:03.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:30:03.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:30:03.911" endtime="20230601 19:30:03.912"/>
</kw>
<status status="PASS" starttime="20230601 19:29:58.339" endtime="20230601 19:30:03.913"/>
</kw>
<msg timestamp="20230601 19:30:03.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:29:58.339" endtime="20230601 19:30:03.916"/>
</kw>
<msg timestamp="20230601 19:30:03.917" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:29:58.338" endtime="20230601 19:30:03.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:03.918" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230601 19:30:03.917" endtime="20230601 19:30:03.918"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230601 19:30:03.918" endtime="20230601 19:30:03.919"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230601 19:29:58.336" endtime="20230601 19:30:03.919"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230601 19:29:52.571" endtime="20230601 19:30:03.922"/>
</suite>
<suite id="s1-s25" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s25-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="39">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:09.028" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:13.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:30:13.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:30:09.022" endtime="20230601 19:30:13.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:13.955" level="INFO"/>
<status status="PASS" starttime="20230601 19:30:13.953" endtime="20230601 19:30:13.955"/>
</kw>
<msg timestamp="20230601 19:30:13.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:30:09.021" endtime="20230601 19:30:13.955"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:13.956" endtime="20230601 19:30:13.956"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:13.960" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:18.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:30:18.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:30:13.957" endtime="20230601 19:30:18.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:18.872" level="INFO"/>
<status status="PASS" starttime="20230601 19:30:18.870" endtime="20230601 19:30:18.872"/>
</kw>
<msg timestamp="20230601 19:30:18.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:30:13.956" endtime="20230601 19:30:18.873"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:18.874" endtime="20230601 19:30:18.875"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:18.880" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:23.808" level="INFO">${rc} = 255</msg>
<msg timestamp="20230601 19:30:23.808" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230601 19:30:18.877" endtime="20230601 19:30:23.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:23.810" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230601 19:30:23.809" endtime="20230601 19:30:23.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:30:23.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:30:23.811" endtime="20230601 19:30:23.811"/>
</kw>
<msg timestamp="20230601 19:30:23.812" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230601 19:30:18.875" endtime="20230601 19:30:23.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:23.813" endtime="20230601 19:30:23.813"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:30:09.018" endtime="20230601 19:30:23.814"/>
</test>
<test id="s1-s25-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="55">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:23.820" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:28.790" level="INFO">${rc} = 255</msg>
<msg timestamp="20230601 19:30:28.790" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230601 19:30:23.817" endtime="20230601 19:30:28.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:28.792" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230601 19:30:28.791" endtime="20230601 19:30:28.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:30:28.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:30:28.792" endtime="20230601 19:30:28.794"/>
</kw>
<msg timestamp="20230601 19:30:28.794" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230601 19:30:23.817" endtime="20230601 19:30:28.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:28.794" endtime="20230601 19:30:28.795"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:30:23.815" endtime="20230601 19:30:28.795"/>
</test>
<test id="s1-s25-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="72">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:28.803" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:33.807" level="INFO">${rc} = 255</msg>
<msg timestamp="20230601 19:30:33.808" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230601 19:30:28.800" endtime="20230601 19:30:33.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:33.810" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230601 19:30:33.809" endtime="20230601 19:30:33.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:30:33.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:30:33.810" endtime="20230601 19:30:33.811"/>
</kw>
<msg timestamp="20230601 19:30:33.812" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230601 19:30:28.799" endtime="20230601 19:30:33.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:33.812" endtime="20230601 19:30:33.813"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:30:28.798" endtime="20230601 19:30:33.813"/>
</test>
<test id="s1-s25-t4" name="Attempt to delete when snapshot feature is disabled" line="84">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:33.822" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:38.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20230601 19:30:38.642" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230601 19:30:33.817" endtime="20230601 19:30:38.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:38.644" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230601 19:30:38.643" endtime="20230601 19:30:38.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:30:38.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:30:38.644" endtime="20230601 19:30:38.645"/>
</kw>
<msg timestamp="20230601 19:30:38.646" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230601 19:30:33.817" endtime="20230601 19:30:38.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:38.647" endtime="20230601 19:30:38.647"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:30:33.815" endtime="20230601 19:30:38.648"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20230601 19:30:08.895" endtime="20230601 19:30:38.649"/>
</suite>
<suite id="s1-s26" name="Prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s26-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230601 19:30:43.846" endtime="20230601 19:30:43.847"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230601 19:30:43.848" endtime="20230601 19:30:43.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:30:43.855" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:30:54.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:30:54.633" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230601 19:30:43.849" endtime="20230601 19:30:54.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:30:54.636" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230601 19:30:54.634" endtime="20230601 19:30:54.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:30:54.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:30:54.637" endtime="20230601 19:30:54.639"/>
</kw>
<status status="PASS" starttime="20230601 19:30:43.849" endtime="20230601 19:30:54.641"/>
</kw>
<msg timestamp="20230601 19:30:54.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:30:43.849" endtime="20230601 19:30:54.644"/>
</kw>
<msg timestamp="20230601 19:30:54.645" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230601 19:30:43.848" endtime="20230601 19:30:54.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:30:54.647" endtime="20230601 19:30:54.648"/>
</kw>
<status status="PASS" starttime="20230601 19:30:54.646" endtime="20230601 19:30:54.648"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:30:43.844" endtime="20230601 19:30:54.649"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230601 19:30:43.771" endtime="20230601 19:30:54.651"/>
</suite>
<suite id="s1-s27" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s27-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230601 19:27:49.180" level="INFO">${random} = 89485</msg>
<status status="PASS" starttime="20230601 19:27:49.179" endtime="20230601 19:27:49.180"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:27:49.190" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-89485 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:00.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:00.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:27:49.184" endtime="20230601 19:28:00.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:00.400" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:00.399" endtime="20230601 19:28:00.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:00.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:00.401" endtime="20230601 19:28:00.401"/>
</kw>
<status status="PASS" starttime="20230601 19:27:49.183" endtime="20230601 19:28:00.402"/>
</kw>
<msg timestamp="20230601 19:28:00.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:27:49.181" endtime="20230601 19:28:00.404"/>
</kw>
<msg timestamp="20230601 19:28:00.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:27:49.180" endtime="20230601 19:28:00.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:00.405" endtime="20230601 19:28:00.406"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:00.411" level="INFO">Running command 'cat /tmp/key-89485 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:00.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:00.415" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:28:00.407" endtime="20230601 19:28:00.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:00.416" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:28:00.415" endtime="20230601 19:28:00.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:00.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:00.417" endtime="20230601 19:28:00.418"/>
</kw>
<msg timestamp="20230601 19:28:00.419" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:28:00.406" endtime="20230601 19:28:00.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:00.419" endtime="20230601 19:28:00.420"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:00.424" level="INFO">Running command 'rm /tmp/key-89485 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:00.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:00.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:00.421" endtime="20230601 19:28:00.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:00.430" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:00.429" endtime="20230601 19:28:00.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:00.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:00.430" endtime="20230601 19:28:00.431"/>
</kw>
<status status="PASS" starttime="20230601 19:28:00.420" endtime="20230601 19:28:00.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:27:49.177" endtime="20230601 19:28:00.432"/>
</test>
<test id="s1-s27-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:00.442" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:01.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:01.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:00.439" endtime="20230601 19:28:01.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:01.607" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:01.605" endtime="20230601 19:28:01.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:01.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:01.607" endtime="20230601 19:28:01.608"/>
</kw>
<status status="PASS" starttime="20230601 19:28:00.438" endtime="20230601 19:28:01.609"/>
</kw>
<msg timestamp="20230601 19:28:01.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:00.438" endtime="20230601 19:28:01.610"/>
</kw>
<status status="PASS" starttime="20230601 19:28:00.437" endtime="20230601 19:28:01.610"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:01.616" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:02.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:02.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:01.612" endtime="20230601 19:28:02.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:02.444" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:02.442" endtime="20230601 19:28:02.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:02.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:02.445" endtime="20230601 19:28:02.446"/>
</kw>
<status status="PASS" starttime="20230601 19:28:01.612" endtime="20230601 19:28:02.447"/>
</kw>
<msg timestamp="20230601 19:28:02.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:01.611" endtime="20230601 19:28:02.448"/>
</kw>
<status status="PASS" starttime="20230601 19:28:01.611" endtime="20230601 19:28:02.448"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:02.455" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:03.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:03.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:02.451" endtime="20230601 19:28:03.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:03.305" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:03.304" endtime="20230601 19:28:03.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:03.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:03.306" endtime="20230601 19:28:03.307"/>
</kw>
<status status="PASS" starttime="20230601 19:28:02.450" endtime="20230601 19:28:03.307"/>
</kw>
<msg timestamp="20230601 19:28:03.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:02.449" endtime="20230601 19:28:03.309"/>
</kw>
<status status="PASS" starttime="20230601 19:28:02.448" endtime="20230601 19:28:03.309"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:03.316" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:04.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:04.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:03.312" endtime="20230601 19:28:04.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:04.151" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:04.149" endtime="20230601 19:28:04.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:04.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:04.151" endtime="20230601 19:28:04.152"/>
</kw>
<status status="PASS" starttime="20230601 19:28:03.311" endtime="20230601 19:28:04.153"/>
</kw>
<msg timestamp="20230601 19:28:04.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230601 19:28:03.311" endtime="20230601 19:28:04.165"/>
</kw>
<status status="PASS" starttime="20230601 19:28:03.309" endtime="20230601 19:28:04.166"/>
</kw>
<status status="PASS" starttime="20230601 19:28:00.436" endtime="20230601 19:28:04.166"/>
</kw>
<status status="PASS" starttime="20230601 19:28:00.436" endtime="20230601 19:28:04.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:00.434" endtime="20230601 19:28:04.169"/>
</test>
<test id="s1-s27-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:04.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:11.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:11.718" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:28:04.176" endtime="20230601 19:28:11.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:11.738" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:28:05 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:28:11.719" endtime="20230601 19:28:11.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:11.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:11.739" endtime="20230601 19:28:11.741"/>
</kw>
<msg timestamp="20230601 19:28:11.742" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:28:04.175" endtime="20230601 19:28:11.742"/>
</kw>
<msg timestamp="20230601 19:28:11.743" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:23:58 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:28:04.174" endtime="20230601 19:28:11.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:11.744" endtime="20230601 19:28:11.745"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:11.753" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:11.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:11.758" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:28:11.746" endtime="20230601 19:28:11.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:11.761" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:28:11.759" endtime="20230601 19:28:11.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:11.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:11.761" endtime="20230601 19:28:11.762"/>
</kw>
<msg timestamp="20230601 19:28:11.762" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230601 19:28:11.745" endtime="20230601 19:28:11.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:11.763" endtime="20230601 19:28:11.764"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:11.769" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:11.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:11.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:11.766" endtime="20230601 19:28:11.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:11.776" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:11.775" endtime="20230601 19:28:11.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:11.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:11.776" endtime="20230601 19:28:11.777"/>
</kw>
<status status="PASS" starttime="20230601 19:28:11.765" endtime="20230601 19:28:11.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:04.172" endtime="20230601 19:28:11.778"/>
</test>
<test id="s1-s27-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:11.786" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:12.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:12.769" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:28:11.784" endtime="20230601 19:28:12.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:12.771" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 01 Jun 2023 19:28:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230601 19:28:12.770" endtime="20230601 19:28:12.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:12.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:12.772" endtime="20230601 19:28:12.773"/>
</kw>
<msg timestamp="20230601 19:28:12.773" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:28:11.783" endtime="20230601 19:28:12.773"/>
</kw>
<msg timestamp="20230601 19:28:12.774" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 01 Jun 2023 19:24:07 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230601 19:28:11.782" endtime="20230601 19:28:12.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:12.774" endtime="20230601 19:28:12.775"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:12.779" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:12.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:12.783" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:28:12.776" endtime="20230601 19:28:12.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:12.785" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:28:12.784" endtime="20230601 19:28:12.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:12.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:12.785" endtime="20230601 19:28:12.786"/>
</kw>
<msg timestamp="20230601 19:28:12.787" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230601 19:28:12.775" endtime="20230601 19:28:12.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230601 19:28:12.787" endtime="20230601 19:28:12.788"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230601 19:28:12.792" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230601 19:28:12.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230601 19:28:12.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230601 19:28:12.789" endtime="20230601 19:28:12.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 19:28:12.800" level="INFO"/>
<status status="PASS" starttime="20230601 19:28:12.799" endtime="20230601 19:28:12.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230601 19:28:12.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:28:12.801" endtime="20230601 19:28:12.802"/>
</kw>
<status status="PASS" starttime="20230601 19:28:12.788" endtime="20230601 19:28:12.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230601 19:28:11.781" endtime="20230601 19:28:12.803"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230601 19:27:48.948" endtime="20230601 19:28:12.805"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="638216"/>
</suite>
<statistics>
<total>
<stat pass="100" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="8" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="1" skip="0">finalized-snapshot-tests</stat>
<stat pass="5" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="5" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="100" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s8" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s11" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="2" fail="0" skip="0" id="s1-s12" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s13" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s14" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s16" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s18" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="3" fail="1" skip="0" id="s1-s19" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="2" fail="0" skip="0" id="s1-s20" name="Finalize">upgrade.Finalize</stat>
<stat pass="5" fail="0" skip="0" id="s1-s21" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s22" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s23" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s24" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s25" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Prepare">upgrade.Prepare</stat>
<stat pass="4" fail="0" skip="0" id="s1-s27" name="Validate">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
