<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230615 17:03:56.177" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:42.979" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:46.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:46.242" level="INFO">${output} = 2023-06-15 16:57:46,131 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230615 16:57:42.974" endtime="20230615 16:57:46.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:46.244" level="INFO">2023-06-15 16:57:46,131 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230615 16:57:46.243" endtime="20230615 16:57:46.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:46.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:46.244" endtime="20230615 16:57:46.246"/>
</kw>
<status status="PASS" starttime="20230615 16:57:42.974" endtime="20230615 16:57:46.247"/>
</kw>
<msg timestamp="20230615 16:57:46.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:42.973" endtime="20230615 16:57:46.248"/>
</kw>
<msg timestamp="20230615 16:57:46.248" level="INFO">${output} = 2023-06-15 16:57:46,131 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230615 16:57:42.973" endtime="20230615 16:57:46.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:57:46.248" endtime="20230615 16:57:46.249"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:46.253" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:48.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:48.832" level="INFO">${output} = 2023-06-15 16:57:48,765 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230615 16:57:46.250" endtime="20230615 16:57:48.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:48.834" level="INFO">2023-06-15 16:57:48,765 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230615 16:57:48.833" endtime="20230615 16:57:48.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:48.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:48.834" endtime="20230615 16:57:48.835"/>
</kw>
<status status="PASS" starttime="20230615 16:57:46.250" endtime="20230615 16:57:48.836"/>
</kw>
<msg timestamp="20230615 16:57:48.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:46.250" endtime="20230615 16:57:48.836"/>
</kw>
<msg timestamp="20230615 16:57:48.837" level="INFO">${output} = 2023-06-15 16:57:48,765 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230615 16:57:46.249" endtime="20230615 16:57:48.837"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:57:48.837" endtime="20230615 16:57:48.838"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:57:42.972" endtime="20230615 16:57:48.838"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:48.843" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230615 16:57:48.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:48.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:57:48.840" endtime="20230615 16:57:48.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:48.846" level="INFO"/>
<status status="PASS" starttime="20230615 16:57:48.846" endtime="20230615 16:57:48.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:48.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:48.847" endtime="20230615 16:57:48.847"/>
</kw>
<status status="PASS" starttime="20230615 16:57:48.840" endtime="20230615 16:57:48.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:48.851" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:54.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:54.894" level="INFO">${output} = 2023-06-15 16:57:52,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:57:52,613 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230615 16:57:48.849" endtime="20230615 16:57:54.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:54.895" level="INFO">2023-06-15 16:57:52,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:57:52,613 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-15 16:57:52,613 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-15 16:57:52,939 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230615 16:57:54.894" endtime="20230615 16:57:54.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:54.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:54.895" endtime="20230615 16:57:54.896"/>
</kw>
<status status="PASS" starttime="20230615 16:57:48.848" endtime="20230615 16:57:54.896"/>
</kw>
<msg timestamp="20230615 16:57:54.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:48.848" endtime="20230615 16:57:54.897"/>
</kw>
<msg timestamp="20230615 16:57:54.897" level="INFO">${output} = 2023-06-15 16:57:52,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:57:52,613 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230615 16:57:48.848" endtime="20230615 16:57:54.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:57:54.897" endtime="20230615 16:57:54.897"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:54.901" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:54.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:54.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:57:54.898" endtime="20230615 16:57:54.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:54.904" level="INFO"/>
<status status="PASS" starttime="20230615 16:57:54.904" endtime="20230615 16:57:54.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:54.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:54.905" endtime="20230615 16:57:54.905"/>
</kw>
<status status="PASS" starttime="20230615 16:57:54.898" endtime="20230615 16:57:54.906"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:57:48.839" endtime="20230615 16:57:54.906"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:54.912" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:57.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:57.928" level="INFO">${output} = 2023-06-15 16:57:57,877 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230615 16:57:54.910" endtime="20230615 16:57:57.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:57.930" level="INFO">2023-06-15 16:57:57,877 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230615 16:57:57.929" endtime="20230615 16:57:57.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:57.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:57.930" endtime="20230615 16:57:57.931"/>
</kw>
<status status="PASS" starttime="20230615 16:57:54.909" endtime="20230615 16:57:57.931"/>
</kw>
<msg timestamp="20230615 16:57:57.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:54.909" endtime="20230615 16:57:57.932"/>
</kw>
<msg timestamp="20230615 16:57:57.932" level="INFO">${output} = 2023-06-15 16:57:57,877 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230615 16:57:54.908" endtime="20230615 16:57:57.932"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:57:57.932" endtime="20230615 16:57:57.933"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:57:54.907" endtime="20230615 16:57:57.933"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:57.938" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230615 16:57:57.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:57.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:57:57.935" endtime="20230615 16:57:57.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:57.941" level="INFO"/>
<status status="PASS" starttime="20230615 16:57:57.940" endtime="20230615 16:57:57.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:57.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:57.941" endtime="20230615 16:57:57.942"/>
</kw>
<status status="PASS" starttime="20230615 16:57:57.935" endtime="20230615 16:57:57.942"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:57.946" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:03.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:03.495" level="INFO">${output} = 2023-06-15 16:58:01,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:58:01,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230615 16:57:57.944" endtime="20230615 16:58:03.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:03.497" level="INFO">2023-06-15 16:58:01,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:58:01,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-15 16:58:01,888 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-06-15 16:58:02,182 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230615 16:58:03.496" endtime="20230615 16:58:03.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:03.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:03.497" endtime="20230615 16:58:03.498"/>
</kw>
<status status="PASS" starttime="20230615 16:57:57.943" endtime="20230615 16:58:03.498"/>
</kw>
<msg timestamp="20230615 16:58:03.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:57.943" endtime="20230615 16:58:03.499"/>
</kw>
<msg timestamp="20230615 16:58:03.499" level="INFO">${output} = 2023-06-15 16:58:01,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:58:01,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230615 16:57:57.942" endtime="20230615 16:58:03.499"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:03.499" endtime="20230615 16:58:03.500"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:03.503" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:03.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:03.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:03.500" endtime="20230615 16:58:03.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:03.508" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:03.507" endtime="20230615 16:58:03.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:03.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:03.508" endtime="20230615 16:58:03.508"/>
</kw>
<status status="PASS" starttime="20230615 16:58:03.500" endtime="20230615 16:58:03.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:57:57.934" endtime="20230615 16:58:03.509"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:03.515" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:04.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:04.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:03.513" endtime="20230615 16:58:04.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:04.183" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:04.182" endtime="20230615 16:58:04.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:04.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:04.183" endtime="20230615 16:58:04.184"/>
</kw>
<status status="PASS" starttime="20230615 16:58:03.512" endtime="20230615 16:58:04.184"/>
</kw>
<msg timestamp="20230615 16:58:04.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:03.512" endtime="20230615 16:58:04.184"/>
</kw>
<status status="PASS" starttime="20230615 16:58:03.512" endtime="20230615 16:58:04.185"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:04.189" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:04.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:04.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:04.186" endtime="20230615 16:58:04.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:04.747" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:04.746" endtime="20230615 16:58:04.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:04.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:04.747" endtime="20230615 16:58:04.748"/>
</kw>
<status status="PASS" starttime="20230615 16:58:04.186" endtime="20230615 16:58:04.748"/>
</kw>
<msg timestamp="20230615 16:58:04.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:04.185" endtime="20230615 16:58:04.749"/>
</kw>
<status status="PASS" starttime="20230615 16:58:04.185" endtime="20230615 16:58:04.749"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:04.753" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:05.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:05.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:04.750" endtime="20230615 16:58:05.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:05.243" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:05.242" endtime="20230615 16:58:05.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:05.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:05.243" endtime="20230615 16:58:05.243"/>
</kw>
<status status="PASS" starttime="20230615 16:58:04.750" endtime="20230615 16:58:05.244"/>
</kw>
<msg timestamp="20230615 16:58:05.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:04.749" endtime="20230615 16:58:05.244"/>
</kw>
<status status="PASS" starttime="20230615 16:58:04.749" endtime="20230615 16:58:05.244"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:05.248" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:05.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:05.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:05.246" endtime="20230615 16:58:05.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:05.755" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:05.755" endtime="20230615 16:58:05.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:05.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:05.756" endtime="20230615 16:58:05.756"/>
</kw>
<status status="PASS" starttime="20230615 16:58:05.245" endtime="20230615 16:58:05.757"/>
</kw>
<msg timestamp="20230615 16:58:05.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:05.245" endtime="20230615 16:58:05.757"/>
</kw>
<status status="PASS" starttime="20230615 16:58:05.244" endtime="20230615 16:58:05.757"/>
</kw>
<status status="PASS" starttime="20230615 16:58:03.511" endtime="20230615 16:58:05.758"/>
</kw>
<status status="PASS" starttime="20230615 16:58:03.511" endtime="20230615 16:58:05.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:03.510" endtime="20230615 16:58:05.758"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:05.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:07.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:07.885" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230615 16:58:05.762" endtime="20230615 16:58:07.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:07.887" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230615 16:58:07.886" endtime="20230615 16:58:07.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:07.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:07.887" endtime="20230615 16:58:07.888"/>
</kw>
<status status="PASS" starttime="20230615 16:58:05.762" endtime="20230615 16:58:07.888"/>
</kw>
<msg timestamp="20230615 16:58:07.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:05.761" endtime="20230615 16:58:07.889"/>
</kw>
<msg timestamp="20230615 16:58:07.889" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230615 16:58:05.761" endtime="20230615 16:58:07.889"/>
</kw>
<msg timestamp="20230615 16:58:07.889" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230615 16:58:05.760" endtime="20230615 16:58:07.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:07.890" endtime="20230615 16:58:07.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:07.890" endtime="20230615 16:58:07.891"/>
</kw>
<msg timestamp="20230615 16:58:07.891" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230615 16:58:05.760" endtime="20230615 16:58:07.891"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230615 16:58:07.891" endtime="20230615 16:58:07.891"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:05.759" endtime="20230615 16:58:07.892"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:07.898" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230615 16:58:07.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:07.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:07.895" endtime="20230615 16:58:07.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:07.901" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:07.901" endtime="20230615 16:58:07.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:07.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:07.902" endtime="20230615 16:58:07.902"/>
</kw>
<status status="PASS" starttime="20230615 16:58:07.895" endtime="20230615 16:58:07.903"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:07.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:09.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:09.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:07.904" endtime="20230615 16:58:09.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:09.616" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:09.615" endtime="20230615 16:58:09.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:09.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:09.617" endtime="20230615 16:58:09.617"/>
</kw>
<msg timestamp="20230615 16:58:09.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:07.903" endtime="20230615 16:58:09.617"/>
</kw>
<msg timestamp="20230615 16:58:09.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:07.903" endtime="20230615 16:58:09.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:09.618" endtime="20230615 16:58:09.618"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:09.622" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:09.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:09.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:09.619" endtime="20230615 16:58:09.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:09.626" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:09.625" endtime="20230615 16:58:09.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:09.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:09.627" endtime="20230615 16:58:09.627"/>
</kw>
<status status="PASS" starttime="20230615 16:58:09.618" endtime="20230615 16:58:09.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:07.894" endtime="20230615 16:58:09.628"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230615 16:57:42.890" endtime="20230615 16:58:09.629"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230615 16:58:13.674" level="INFO">${random} = 64502</msg>
<status status="PASS" starttime="20230615 16:58:13.674" endtime="20230615 16:58:13.674"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:13.683" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-64502 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:18.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:18.508" level="INFO">${output} = 2023-06-15 16:58:17,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:58:17,260 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230615 16:58:13.677" endtime="20230615 16:58:18.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:18.509" level="INFO">2023-06-15 16:58:17,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:58:17,260 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-06-15 16:58:17,260 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230615 16:58:18.508" endtime="20230615 16:58:18.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:18.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:18.509" endtime="20230615 16:58:18.510"/>
</kw>
<status status="PASS" starttime="20230615 16:58:13.676" endtime="20230615 16:58:18.510"/>
</kw>
<msg timestamp="20230615 16:58:18.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:13.675" endtime="20230615 16:58:18.512"/>
</kw>
<msg timestamp="20230615 16:58:18.512" level="INFO">${output} = 2023-06-15 16:58:17,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-06-15 16:58:17,260 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230615 16:58:13.675" endtime="20230615 16:58:18.512"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:18.512" endtime="20230615 16:58:18.512"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:18.516" level="INFO">Running command 'cat /tmp/key-64502 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:18.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:18.518" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230615 16:58:18.513" endtime="20230615 16:58:18.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:18.519" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230615 16:58:18.519" endtime="20230615 16:58:18.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:18.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:18.520" endtime="20230615 16:58:18.520"/>
</kw>
<msg timestamp="20230615 16:58:18.520" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230615 16:58:18.512" endtime="20230615 16:58:18.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:18.521" endtime="20230615 16:58:18.521"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:18.524" level="INFO">Running command 'rm /tmp/key-64502 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:18.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:18.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:18.522" endtime="20230615 16:58:18.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:18.527" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:18.527" endtime="20230615 16:58:18.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:18.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:18.528" endtime="20230615 16:58:18.528"/>
</kw>
<status status="PASS" starttime="20230615 16:58:18.521" endtime="20230615 16:58:18.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:13.673" endtime="20230615 16:58:18.529"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:18.534" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:19.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:19.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:18.532" endtime="20230615 16:58:19.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:19.036" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:19.036" endtime="20230615 16:58:19.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:19.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:19.037" endtime="20230615 16:58:19.037"/>
</kw>
<status status="PASS" starttime="20230615 16:58:18.532" endtime="20230615 16:58:19.038"/>
</kw>
<msg timestamp="20230615 16:58:19.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:18.532" endtime="20230615 16:58:19.038"/>
</kw>
<status status="PASS" starttime="20230615 16:58:18.531" endtime="20230615 16:58:19.038"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:19.042" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:19.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:19.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:19.040" endtime="20230615 16:58:19.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:19.566" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:19.565" endtime="20230615 16:58:19.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:19.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:19.566" endtime="20230615 16:58:19.567"/>
</kw>
<status status="PASS" starttime="20230615 16:58:19.039" endtime="20230615 16:58:19.567"/>
</kw>
<msg timestamp="20230615 16:58:19.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:19.039" endtime="20230615 16:58:19.573"/>
</kw>
<status status="PASS" starttime="20230615 16:58:19.038" endtime="20230615 16:58:19.573"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:19.577" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:20.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:20.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:19.575" endtime="20230615 16:58:20.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:20.087" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:20.086" endtime="20230615 16:58:20.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:20.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:20.087" endtime="20230615 16:58:20.088"/>
</kw>
<status status="PASS" starttime="20230615 16:58:19.574" endtime="20230615 16:58:20.088"/>
</kw>
<msg timestamp="20230615 16:58:20.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:19.574" endtime="20230615 16:58:20.089"/>
</kw>
<status status="PASS" starttime="20230615 16:58:19.573" endtime="20230615 16:58:20.089"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:20.094" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:20.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:20.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:20.090" endtime="20230615 16:58:20.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:20.593" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:20.592" endtime="20230615 16:58:20.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:20.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:20.594" endtime="20230615 16:58:20.594"/>
</kw>
<status status="PASS" starttime="20230615 16:58:20.090" endtime="20230615 16:58:20.594"/>
</kw>
<msg timestamp="20230615 16:58:20.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:58:20.089" endtime="20230615 16:58:20.595"/>
</kw>
<status status="PASS" starttime="20230615 16:58:20.089" endtime="20230615 16:58:20.596"/>
</kw>
<status status="PASS" starttime="20230615 16:58:18.531" endtime="20230615 16:58:20.596"/>
</kw>
<status status="PASS" starttime="20230615 16:58:18.530" endtime="20230615 16:58:20.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:18.530" endtime="20230615 16:58:20.596"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:20.602" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:21.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:21.416" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230615 16:58:20.599" endtime="20230615 16:58:21.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:21.418" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 15 Jun 2023 16:58:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230615 16:58:21.417" endtime="20230615 16:58:21.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:21.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:21.418" endtime="20230615 16:58:21.418"/>
</kw>
<msg timestamp="20230615 16:58:21.419" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230615 16:58:20.599" endtime="20230615 16:58:21.419"/>
</kw>
<msg timestamp="20230615 16:58:21.419" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230615 16:58:20.598" endtime="20230615 16:58:21.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:21.419" endtime="20230615 16:58:21.420"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:21.423" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:21.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:21.425" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230615 16:58:21.420" endtime="20230615 16:58:21.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:21.426" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230615 16:58:21.426" endtime="20230615 16:58:21.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:21.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:21.427" endtime="20230615 16:58:21.427"/>
</kw>
<msg timestamp="20230615 16:58:21.428" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230615 16:58:21.420" endtime="20230615 16:58:21.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:21.428" endtime="20230615 16:58:21.428"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:21.431" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:21.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:21.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:21.429" endtime="20230615 16:58:21.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:21.434" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:21.434" endtime="20230615 16:58:21.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:21.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:21.434" endtime="20230615 16:58:21.435"/>
</kw>
<status status="PASS" starttime="20230615 16:58:21.428" endtime="20230615 16:58:21.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:20.597" endtime="20230615 16:58:21.435"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:21.440" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:22.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:22.132" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230615 16:58:21.439" endtime="20230615 16:58:22.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:22.133" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 15 Jun 2023 16:58:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230615 16:58:22.132" endtime="20230615 16:58:22.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:22.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:22.133" endtime="20230615 16:58:22.134"/>
</kw>
<msg timestamp="20230615 16:58:22.134" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230615 16:58:21.438" endtime="20230615 16:58:22.134"/>
</kw>
<msg timestamp="20230615 16:58:22.135" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 15 Jun 2023 16:58:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230615 16:58:21.437" endtime="20230615 16:58:22.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:22.135" endtime="20230615 16:58:22.135"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:22.138" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:22.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:22.141" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230615 16:58:22.136" endtime="20230615 16:58:22.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:22.142" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230615 16:58:22.141" endtime="20230615 16:58:22.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:22.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:22.142" endtime="20230615 16:58:22.143"/>
</kw>
<msg timestamp="20230615 16:58:22.143" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230615 16:58:22.135" endtime="20230615 16:58:22.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230615 16:58:22.143" endtime="20230615 16:58:22.144"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:22.146" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:58:22.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:58:22.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230615 16:58:22.145" endtime="20230615 16:58:22.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:58:22.150" level="INFO"/>
<status status="PASS" starttime="20230615 16:58:22.149" endtime="20230615 16:58:22.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:58:22.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:58:22.150" endtime="20230615 16:58:22.151"/>
</kw>
<status status="PASS" starttime="20230615 16:58:22.144" endtime="20230615 16:58:22.151"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230615 16:58:21.436" endtime="20230615 16:58:22.151"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230615 16:58:13.597" endtime="20230615 16:58:22.152"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230615 16:58:26.130" endtime="20230615 16:58:26.131"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230615 16:58:26.131" endtime="20230615 16:58:26.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:58:26.136" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 17:03:26.130" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230615 16:58:26.132" endtime="20230615 17:03:26.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230615 17:03:26.131" endtime="20230615 17:03:26.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230615 17:03:26.131" endtime="20230615 17:03:26.131"/>
</kw>
<status status="FAIL" starttime="20230615 16:58:26.132" endtime="20230615 17:03:26.132"/>
</kw>
<msg timestamp="20230615 17:03:26.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230615 16:58:26.132" endtime="20230615 17:03:26.133"/>
</kw>
<status status="FAIL" starttime="20230615 16:58:26.131" endtime="20230615 17:03:26.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230615 17:03:26.134" endtime="20230615 17:03:26.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230615 16:58:26.129" endtime="20230615 17:03:26.135">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230615 16:58:26.082" endtime="20230615 17:03:26.136"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230615 16:57:32.848" endtime="20230615 16:57:32.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:32.855" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:32.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:32.857" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=120f40094cc0
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230615 16:57:32.850" endtime="20230615 16:57:32.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:32.858" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=120f40094cc0
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230615 16:57:32.858" endtime="20230615 16:57:32.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:32.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:32.859" endtime="20230615 16:57:32.859"/>
</kw>
<status status="PASS" starttime="20230615 16:57:32.849" endtime="20230615 16:57:32.859"/>
</kw>
<msg timestamp="20230615 16:57:32.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:32.849" endtime="20230615 16:57:32.861"/>
</kw>
<msg timestamp="20230615 16:57:32.861" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=120f40094cc0
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230615 16:57:32.849" endtime="20230615 16:57:32.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:32.861" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=120f40094cc0
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230615 16:57:32.861" endtime="20230615 16:57:32.862"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230615 16:57:32.862" endtime="20230615 16:57:32.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:32.865" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:35.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:35.698" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230615 16:57:32.863" endtime="20230615 16:57:35.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:35.700" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230615 16:57:35.699" endtime="20230615 16:57:35.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:35.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:35.700" endtime="20230615 16:57:35.700"/>
</kw>
<status status="PASS" starttime="20230615 16:57:32.863" endtime="20230615 16:57:35.701"/>
</kw>
<msg timestamp="20230615 16:57:35.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:32.863" endtime="20230615 16:57:35.701"/>
</kw>
<msg timestamp="20230615 16:57:35.702" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230615 16:57:32.862" endtime="20230615 16:57:35.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:35.702" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230615 16:57:35.702" endtime="20230615 16:57:35.702"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230615 16:57:35.702" endtime="20230615 16:57:35.703"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230615 16:57:32.847" endtime="20230615 16:57:35.703"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230615 16:57:35.705" endtime="20230615 16:57:35.705"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230615 16:57:35.705" endtime="20230615 16:57:35.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230615 16:57:35.710" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230615 16:57:38.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230615 16:57:38.955" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230615 16:57:35.707" endtime="20230615 16:57:38.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:38.957" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230615 16:57:38.956" endtime="20230615 16:57:38.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230615 16:57:38.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230615 16:57:38.957" endtime="20230615 16:57:38.957"/>
</kw>
<status status="PASS" starttime="20230615 16:57:35.707" endtime="20230615 16:57:38.958"/>
</kw>
<msg timestamp="20230615 16:57:38.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230615 16:57:35.706" endtime="20230615 16:57:38.958"/>
</kw>
<msg timestamp="20230615 16:57:38.958" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230615 16:57:35.706" endtime="20230615 16:57:38.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230615 16:57:38.959" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230615 16:57:38.959" endtime="20230615 16:57:38.959"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230615 16:57:38.959" endtime="20230615 16:57:38.959"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230615 16:57:35.703" endtime="20230615 16:57:38.960"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230615 16:57:32.787" endtime="20230615 16:57:38.961"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="341522"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
