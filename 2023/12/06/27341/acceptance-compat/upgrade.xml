<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231206 16:18:10.611" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:13.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:13.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:13.609" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:13.605" endtime="20231206 16:03:13.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:13.609" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:13.609" endtime="20231206 16:03:13.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:13.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:13.609" endtime="20231206 16:03:13.610"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.604" endtime="20231206 16:03:13.610"/>
</kw>
<msg timestamp="20231206 16:03:13.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:13.604" endtime="20231206 16:03:13.611"/>
</kw>
<msg timestamp="20231206 16:03:13.611" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:13.604" endtime="20231206 16:03:13.611"/>
</kw>
<msg timestamp="20231206 16:03:13.612" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:13.603" endtime="20231206 16:03:13.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:13.612" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:13.612" endtime="20231206 16:03:13.612"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:13.614" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:13.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:13.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:13.613" endtime="20231206 16:03:13.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:13.650" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:13.649" endtime="20231206 16:03:13.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:13.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:13.650" endtime="20231206 16:03:13.650"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.613" endtime="20231206 16:03:13.650"/>
</kw>
<msg timestamp="20231206 16:03:13.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:13.613" endtime="20231206 16:03:13.651"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.612" endtime="20231206 16:03:13.651"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.612" endtime="20231206 16:03:13.651"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.603" endtime="20231206 16:03:13.651"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.603" endtime="20231206 16:03:13.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:13.653" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:13.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:13.655" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231206 16:03:13.652" endtime="20231206 16:03:13.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:13.655" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231206 16:03:13.655" endtime="20231206 16:03:13.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:13.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:13.656" endtime="20231206 16:03:13.656"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.652" endtime="20231206 16:03:13.656"/>
</kw>
<msg timestamp="20231206 16:03:13.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:13.652" endtime="20231206 16:03:13.656"/>
</kw>
<msg timestamp="20231206 16:03:13.657" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231206 16:03:13.651" endtime="20231206 16:03:13.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:13.657" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231206 16:03:13.657" endtime="20231206 16:03:13.657"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:03:13.657" endtime="20231206 16:03:13.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:13.660" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:16.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:16.011" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:03:13.659" endtime="20231206 16:03:16.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:16.011" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:03:16.011" endtime="20231206 16:03:16.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:16.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:16.012" endtime="20231206 16:03:16.012"/>
</kw>
<status status="PASS" starttime="20231206 16:03:13.658" endtime="20231206 16:03:16.012"/>
</kw>
<msg timestamp="20231206 16:03:16.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:13.658" endtime="20231206 16:03:16.013"/>
</kw>
<msg timestamp="20231206 16:03:16.013" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:03:13.658" endtime="20231206 16:03:16.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:16.013" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:03:16.013" endtime="20231206 16:03:16.013"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231206 16:03:16.013" endtime="20231206 16:03:16.014"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231206 16:03:13.602" endtime="20231206 16:03:16.014"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:16.018" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:16.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:16.020" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:16.017" endtime="20231206 16:03:16.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:16.020" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:16.020" endtime="20231206 16:03:16.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:16.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:16.021" endtime="20231206 16:03:16.021"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.016" endtime="20231206 16:03:16.021"/>
</kw>
<msg timestamp="20231206 16:03:16.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:16.016" endtime="20231206 16:03:16.022"/>
</kw>
<msg timestamp="20231206 16:03:16.022" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:16.016" endtime="20231206 16:03:16.022"/>
</kw>
<msg timestamp="20231206 16:03:16.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:16.016" endtime="20231206 16:03:16.022"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:16.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:16.022" endtime="20231206 16:03:16.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:16.025" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:16.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:16.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:16.024" endtime="20231206 16:03:16.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:16.038" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:16.037" endtime="20231206 16:03:16.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:16.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:16.038" endtime="20231206 16:03:16.038"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.023" endtime="20231206 16:03:16.038"/>
</kw>
<msg timestamp="20231206 16:03:16.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:16.023" endtime="20231206 16:03:16.039"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.023" endtime="20231206 16:03:16.039"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.023" endtime="20231206 16:03:16.039"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.015" endtime="20231206 16:03:16.039"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.015" endtime="20231206 16:03:16.039"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:03:16.039" endtime="20231206 16:03:16.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:16.042" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:18.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:18.146" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:03:16.041" endtime="20231206 16:03:18.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:18.147" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:03:18.147" endtime="20231206 16:03:18.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:18.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:18.147" endtime="20231206 16:03:18.148"/>
</kw>
<status status="PASS" starttime="20231206 16:03:16.040" endtime="20231206 16:03:18.148"/>
</kw>
<msg timestamp="20231206 16:03:18.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:16.040" endtime="20231206 16:03:18.148"/>
</kw>
<msg timestamp="20231206 16:03:18.148" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:03:16.040" endtime="20231206 16:03:18.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:18.149" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:03:18.149" endtime="20231206 16:03:18.149"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231206 16:03:18.149" endtime="20231206 16:03:18.149"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231206 16:03:16.014" endtime="20231206 16:03:18.149"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231206 16:03:13.566" endtime="20231206 16:03:18.150"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:21.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:21.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:21.168" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:21.163" endtime="20231206 16:03:21.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:21.169" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:21.168" endtime="20231206 16:03:21.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:21.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:21.169" endtime="20231206 16:03:21.169"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.162" endtime="20231206 16:03:21.169"/>
</kw>
<msg timestamp="20231206 16:03:21.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:21.161" endtime="20231206 16:03:21.170"/>
</kw>
<msg timestamp="20231206 16:03:21.171" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:21.161" endtime="20231206 16:03:21.171"/>
</kw>
<msg timestamp="20231206 16:03:21.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:21.161" endtime="20231206 16:03:21.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:21.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:21.171" endtime="20231206 16:03:21.171"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:21.173" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:21.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:21.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:21.172" endtime="20231206 16:03:21.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:21.187" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:21.187" endtime="20231206 16:03:21.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:21.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:21.188" endtime="20231206 16:03:21.188"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.172" endtime="20231206 16:03:21.188"/>
</kw>
<msg timestamp="20231206 16:03:21.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:21.172" endtime="20231206 16:03:21.189"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.172" endtime="20231206 16:03:21.189"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.171" endtime="20231206 16:03:21.189"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.160" endtime="20231206 16:03:21.189"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.160" endtime="20231206 16:03:21.189"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:21.193" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:23.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:23.431" level="INFO">${output} = 2023-12-06 16:03:23,340 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231206 16:03:21.191" endtime="20231206 16:03:23.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:23.432" level="INFO">2023-12-06 16:03:23,340 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231206 16:03:23.432" endtime="20231206 16:03:23.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:23.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:23.433" endtime="20231206 16:03:23.433"/>
</kw>
<status status="PASS" starttime="20231206 16:03:21.191" endtime="20231206 16:03:23.434"/>
</kw>
<msg timestamp="20231206 16:03:23.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:21.191" endtime="20231206 16:03:23.435"/>
</kw>
<msg timestamp="20231206 16:03:23.435" level="INFO">${output} = 2023-12-06 16:03:23,340 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231206 16:03:21.190" endtime="20231206 16:03:23.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:23.435" endtime="20231206 16:03:23.436"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:23.440" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:25.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:25.600" level="INFO">${output} = 2023-12-06 16:03:25,553 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231206 16:03:23.438" endtime="20231206 16:03:25.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:25.601" level="INFO">2023-12-06 16:03:25,553 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231206 16:03:25.600" endtime="20231206 16:03:25.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:25.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:25.601" endtime="20231206 16:03:25.601"/>
</kw>
<status status="PASS" starttime="20231206 16:03:23.437" endtime="20231206 16:03:25.602"/>
</kw>
<msg timestamp="20231206 16:03:25.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:23.437" endtime="20231206 16:03:25.602"/>
</kw>
<msg timestamp="20231206 16:03:25.602" level="INFO">${output} = 2023-12-06 16:03:25,553 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231206 16:03:23.436" endtime="20231206 16:03:25.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:25.602" endtime="20231206 16:03:25.603"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:21.190" endtime="20231206 16:03:25.603"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:25.605" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:03:25.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:25.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:25.604" endtime="20231206 16:03:25.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:25.607" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:25.607" endtime="20231206 16:03:25.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:25.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:25.607" endtime="20231206 16:03:25.608"/>
</kw>
<status status="PASS" starttime="20231206 16:03:25.604" endtime="20231206 16:03:25.608"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:25.612" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:29.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:29.993" level="INFO">${output} = 2023-12-06 16:03:28,364 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:28,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:03:25.610" endtime="20231206 16:03:29.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:29.996" level="INFO">2023-12-06 16:03:28,364 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:28,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:03:28,437 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-06 16:03:28,621 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231206 16:03:29.994" endtime="20231206 16:03:29.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:29.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:29.996" endtime="20231206 16:03:29.997"/>
</kw>
<status status="PASS" starttime="20231206 16:03:25.609" endtime="20231206 16:03:29.998"/>
</kw>
<msg timestamp="20231206 16:03:29.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:25.609" endtime="20231206 16:03:29.999"/>
</kw>
<msg timestamp="20231206 16:03:29.999" level="INFO">${output} = 2023-12-06 16:03:28,364 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:28,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:03:25.608" endtime="20231206 16:03:29.999"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:30.000" endtime="20231206 16:03:30.000"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:30.007" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:30.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:30.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:30.001" endtime="20231206 16:03:30.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:30.011" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:30.010" endtime="20231206 16:03:30.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:30.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:30.011" endtime="20231206 16:03:30.012"/>
</kw>
<status status="PASS" starttime="20231206 16:03:30.001" endtime="20231206 16:03:30.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:25.603" endtime="20231206 16:03:30.012"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:30.016" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:32.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:32.310" level="INFO">${output} = 2023-12-06 16:03:32,274 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231206 16:03:30.014" endtime="20231206 16:03:32.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:32.310" level="INFO">2023-12-06 16:03:32,274 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231206 16:03:32.310" endtime="20231206 16:03:32.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:32.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:32.311" endtime="20231206 16:03:32.311"/>
</kw>
<status status="PASS" starttime="20231206 16:03:30.014" endtime="20231206 16:03:32.311"/>
</kw>
<msg timestamp="20231206 16:03:32.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:30.014" endtime="20231206 16:03:32.312"/>
</kw>
<msg timestamp="20231206 16:03:32.312" level="INFO">${output} = 2023-12-06 16:03:32,274 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231206 16:03:30.013" endtime="20231206 16:03:32.312"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:32.312" endtime="20231206 16:03:32.312"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:30.013" endtime="20231206 16:03:32.312"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:32.315" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:03:32.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:32.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:32.314" endtime="20231206 16:03:32.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:32.317" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:32.317" endtime="20231206 16:03:32.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:32.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:32.317" endtime="20231206 16:03:32.318"/>
</kw>
<status status="PASS" starttime="20231206 16:03:32.314" endtime="20231206 16:03:32.318"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:32.320" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:36.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:36.578" level="INFO">${output} = 2023-12-06 16:03:35,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:35,109 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:03:32.319" endtime="20231206 16:03:36.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:36.579" level="INFO">2023-12-06 16:03:35,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:35,109 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:03:35,109 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-06 16:03:35,374 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231206 16:03:36.578" endtime="20231206 16:03:36.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:36.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:36.579" endtime="20231206 16:03:36.579"/>
</kw>
<status status="PASS" starttime="20231206 16:03:32.319" endtime="20231206 16:03:36.579"/>
</kw>
<msg timestamp="20231206 16:03:36.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:32.318" endtime="20231206 16:03:36.580"/>
</kw>
<msg timestamp="20231206 16:03:36.580" level="INFO">${output} = 2023-12-06 16:03:35,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:35,109 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:03:32.318" endtime="20231206 16:03:36.580"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:36.580" endtime="20231206 16:03:36.580"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:36.582" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:36.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:36.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:36.581" endtime="20231206 16:03:36.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:36.585" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:36.584" endtime="20231206 16:03:36.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:36.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:36.585" endtime="20231206 16:03:36.585"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.581" endtime="20231206 16:03:36.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:32.313" endtime="20231206 16:03:36.586"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:36.590" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:36.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:36.592" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:36.589" endtime="20231206 16:03:36.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:36.592" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:36.592" endtime="20231206 16:03:36.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:36.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:36.593" endtime="20231206 16:03:36.593"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.588" endtime="20231206 16:03:36.593"/>
</kw>
<msg timestamp="20231206 16:03:36.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:36.588" endtime="20231206 16:03:36.594"/>
</kw>
<msg timestamp="20231206 16:03:36.594" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:36.588" endtime="20231206 16:03:36.594"/>
</kw>
<msg timestamp="20231206 16:03:36.594" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:36.588" endtime="20231206 16:03:36.594"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:36.595" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:36.594" endtime="20231206 16:03:36.595"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:36.597" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:36.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:36.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:36.596" endtime="20231206 16:03:36.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:36.619" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:36.618" endtime="20231206 16:03:36.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:36.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:36.619" endtime="20231206 16:03:36.619"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.596" endtime="20231206 16:03:36.620"/>
</kw>
<msg timestamp="20231206 16:03:36.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:36.596" endtime="20231206 16:03:36.620"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.595" endtime="20231206 16:03:36.621"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.595" endtime="20231206 16:03:36.621"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.587" endtime="20231206 16:03:36.621"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.587" endtime="20231206 16:03:36.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:36.624" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:38.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:38.474" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:36.622" endtime="20231206 16:03:38.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:38.475" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:38.474" endtime="20231206 16:03:38.475"/>
</kw>
<msg timestamp="20231206 16:03:38.475" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:36.622" endtime="20231206 16:03:38.475"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:03:38.476" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:03:38.476" endtime="20231206 16:03:38.476"/>
</kw>
<msg timestamp="20231206 16:03:38.477" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:03:38.476" endtime="20231206 16:03:38.477"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:03:38.477" endtime="20231206 16:03:38.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:03:38.477" endtime="20231206 16:03:38.477"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:03:38.477" endtime="20231206 16:03:38.477"/>
</branch>
<status status="PASS" starttime="20231206 16:03:38.477" endtime="20231206 16:03:38.477"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:03:38.478" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:03:38.477" endtime="20231206 16:03:38.478"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:03:38.478" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:03:38.478" endtime="20231206 16:03:38.478"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:03:38.479" level="INFO">${secret} = ['6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e']</msg>
<status status="PASS" starttime="20231206 16:03:38.478" endtime="20231206 16:03:38.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:03:38.480" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:38.479" endtime="20231206 16:03:38.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:03:38.480" level="INFO">${secret} = 6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:38.480" endtime="20231206 16:03:38.480"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:38.483" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:38.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:38.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:38.481" endtime="20231206 16:03:38.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:38.880" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:38.879" endtime="20231206 16:03:38.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:38.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:38.880" endtime="20231206 16:03:38.881"/>
</kw>
<status status="PASS" starttime="20231206 16:03:38.481" endtime="20231206 16:03:38.881"/>
</kw>
<msg timestamp="20231206 16:03:38.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:38.481" endtime="20231206 16:03:38.881"/>
</kw>
<status status="PASS" starttime="20231206 16:03:38.481" endtime="20231206 16:03:38.881"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:38.884" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:39.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:39.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:38.883" endtime="20231206 16:03:39.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:39.262" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:39.262" endtime="20231206 16:03:39.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:39.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:39.263" endtime="20231206 16:03:39.263"/>
</kw>
<status status="PASS" starttime="20231206 16:03:38.882" endtime="20231206 16:03:39.263"/>
</kw>
<msg timestamp="20231206 16:03:39.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:38.882" endtime="20231206 16:03:39.264"/>
</kw>
<status status="PASS" starttime="20231206 16:03:38.882" endtime="20231206 16:03:39.264"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:39.267" level="INFO">Running command 'aws configure set aws_secret_access_key 6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:39.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:39.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:39.265" endtime="20231206 16:03:39.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:39.626" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:39.625" endtime="20231206 16:03:39.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:39.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:39.626" endtime="20231206 16:03:39.626"/>
</kw>
<status status="PASS" starttime="20231206 16:03:39.265" endtime="20231206 16:03:39.626"/>
</kw>
<msg timestamp="20231206 16:03:39.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:39.265" endtime="20231206 16:03:39.627"/>
</kw>
<status status="PASS" starttime="20231206 16:03:39.264" endtime="20231206 16:03:39.627"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:39.629" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:39.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:39.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:39.628" endtime="20231206 16:03:39.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:39.992" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:39.991" endtime="20231206 16:03:39.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:39.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:39.992" endtime="20231206 16:03:39.992"/>
</kw>
<status status="PASS" starttime="20231206 16:03:39.628" endtime="20231206 16:03:39.993"/>
</kw>
<msg timestamp="20231206 16:03:39.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:39.628" endtime="20231206 16:03:39.993"/>
</kw>
<status status="PASS" starttime="20231206 16:03:39.627" endtime="20231206 16:03:39.993"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:39.996" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:40.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:40.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:39.994" endtime="20231206 16:03:40.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:40.359" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:40.359" endtime="20231206 16:03:40.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:40.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:40.360" endtime="20231206 16:03:40.360"/>
</kw>
<status status="PASS" starttime="20231206 16:03:39.994" endtime="20231206 16:03:40.360"/>
</kw>
<msg timestamp="20231206 16:03:40.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:39.994" endtime="20231206 16:03:40.361"/>
</kw>
<status status="PASS" starttime="20231206 16:03:39.993" endtime="20231206 16:03:40.361"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.621" endtime="20231206 16:03:40.361"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.621" endtime="20231206 16:03:40.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:03:40.361" endtime="20231206 16:03:40.362"/>
</kw>
<status status="PASS" starttime="20231206 16:03:36.587" endtime="20231206 16:03:40.362"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:03:40.363" level="INFO">${randStr} = 8789097268</msg>
<status status="PASS" starttime="20231206 16:03:40.362" endtime="20231206 16:03:40.363"/>
</kw>
<msg timestamp="20231206 16:03:40.363" level="INFO">${random} = ozone-test-8789097268</msg>
<status status="PASS" starttime="20231206 16:03:40.362" endtime="20231206 16:03:40.363"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:40.367" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-8789097268 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:41.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:41.829" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8789097268"
}</msg>
<status status="PASS" starttime="20231206 16:03:40.365" endtime="20231206 16:03:41.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:41.830" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8789097268"
}</msg>
<status status="PASS" starttime="20231206 16:03:41.830" endtime="20231206 16:03:41.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:41.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:41.830" endtime="20231206 16:03:41.831"/>
</kw>
<status status="PASS" starttime="20231206 16:03:40.365" endtime="20231206 16:03:41.831"/>
</kw>
<msg timestamp="20231206 16:03:41.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:40.364" endtime="20231206 16:03:41.831"/>
</kw>
<msg timestamp="20231206 16:03:41.832" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8789097268"
}</msg>
<status status="PASS" starttime="20231206 16:03:40.364" endtime="20231206 16:03:41.832"/>
</kw>
<msg timestamp="20231206 16:03:41.832" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8789097268"
}</msg>
<status status="PASS" starttime="20231206 16:03:40.364" endtime="20231206 16:03:41.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:41.832" endtime="20231206 16:03:41.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:41.832" endtime="20231206 16:03:41.833"/>
</kw>
<msg timestamp="20231206 16:03:41.833" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231206 16:03:40.363" endtime="20231206 16:03:41.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231206 16:03:41.833" endtime="20231206 16:03:41.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:36.586" endtime="20231206 16:03:41.833"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:41.836" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:03:41.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:41.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:41.835" endtime="20231206 16:03:41.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:41.838" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:41.838" endtime="20231206 16:03:41.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:41.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:41.838" endtime="20231206 16:03:41.839"/>
</kw>
<status status="PASS" starttime="20231206 16:03:41.834" endtime="20231206 16:03:41.839"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:41.841" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:43.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:43.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:41.840" endtime="20231206 16:03:43.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:43.038" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:43.038" endtime="20231206 16:03:43.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:43.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:43.038" endtime="20231206 16:03:43.039"/>
</kw>
<msg timestamp="20231206 16:03:43.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:41.839" endtime="20231206 16:03:43.039"/>
</kw>
<msg timestamp="20231206 16:03:43.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:41.839" endtime="20231206 16:03:43.039"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:43.039" endtime="20231206 16:03:43.040"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:43.041" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:43.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:43.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:43.040" endtime="20231206 16:03:43.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:43.044" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:43.043" endtime="20231206 16:03:43.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:43.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:43.044" endtime="20231206 16:03:43.044"/>
</kw>
<status status="PASS" starttime="20231206 16:03:43.040" endtime="20231206 16:03:43.044"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:41.834" endtime="20231206 16:03:43.045"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231206 16:03:21.100" endtime="20231206 16:03:43.046"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:46.125" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:46.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:46.127" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:46.123" endtime="20231206 16:03:46.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:46.128" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:46.127" endtime="20231206 16:03:46.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:46.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:46.128" endtime="20231206 16:03:46.128"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.122" endtime="20231206 16:03:46.128"/>
</kw>
<msg timestamp="20231206 16:03:46.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:46.122" endtime="20231206 16:03:46.129"/>
</kw>
<msg timestamp="20231206 16:03:46.130" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:46.121" endtime="20231206 16:03:46.130"/>
</kw>
<msg timestamp="20231206 16:03:46.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:46.121" endtime="20231206 16:03:46.130"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:46.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:46.130" endtime="20231206 16:03:46.130"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:46.133" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:46.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:46.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:46.131" endtime="20231206 16:03:46.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:46.146" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:46.145" endtime="20231206 16:03:46.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:46.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:46.146" endtime="20231206 16:03:46.146"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.131" endtime="20231206 16:03:46.147"/>
</kw>
<msg timestamp="20231206 16:03:46.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:46.131" endtime="20231206 16:03:46.147"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.131" endtime="20231206 16:03:46.147"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.130" endtime="20231206 16:03:46.147"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.121" endtime="20231206 16:03:46.147"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.120" endtime="20231206 16:03:46.147"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:03:46.149" level="INFO">${random} = 56521</msg>
<status status="PASS" starttime="20231206 16:03:46.148" endtime="20231206 16:03:46.149"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:46.151" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-56521 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:50.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:50.182" level="INFO">${output} = 2023-12-06 16:03:49,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:49,128 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:03:46.150" endtime="20231206 16:03:50.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:50.183" level="INFO">2023-12-06 16:03:49,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:49,128 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:03:49,128 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231206 16:03:50.182" endtime="20231206 16:03:50.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:50.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:50.183" endtime="20231206 16:03:50.184"/>
</kw>
<status status="PASS" starttime="20231206 16:03:46.150" endtime="20231206 16:03:50.184"/>
</kw>
<msg timestamp="20231206 16:03:50.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:46.149" endtime="20231206 16:03:50.184"/>
</kw>
<msg timestamp="20231206 16:03:50.184" level="INFO">${output} = 2023-12-06 16:03:49,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:03:49,128 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:03:46.149" endtime="20231206 16:03:50.184"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:50.184" endtime="20231206 16:03:50.185"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:50.187" level="INFO">Running command 'cat /tmp/key-56521 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:50.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:50.188" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:03:50.185" endtime="20231206 16:03:50.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:50.189" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:03:50.189" endtime="20231206 16:03:50.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:50.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:50.189" endtime="20231206 16:03:50.189"/>
</kw>
<msg timestamp="20231206 16:03:50.190" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:03:50.185" endtime="20231206 16:03:50.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:50.190" endtime="20231206 16:03:50.190"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:50.192" level="INFO">Running command 'rm /tmp/key-56521 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:50.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:50.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:50.191" endtime="20231206 16:03:50.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:50.194" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:50.194" endtime="20231206 16:03:50.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:50.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:50.194" endtime="20231206 16:03:50.194"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.190" endtime="20231206 16:03:50.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:46.148" endtime="20231206 16:03:50.195"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:50.199" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:50.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:50.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:50.198" endtime="20231206 16:03:50.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:50.202" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:50.201" endtime="20231206 16:03:50.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:50.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:50.202" endtime="20231206 16:03:50.202"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.198" endtime="20231206 16:03:50.202"/>
</kw>
<msg timestamp="20231206 16:03:50.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:50.198" endtime="20231206 16:03:50.203"/>
</kw>
<msg timestamp="20231206 16:03:50.203" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:50.197" endtime="20231206 16:03:50.203"/>
</kw>
<msg timestamp="20231206 16:03:50.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:50.197" endtime="20231206 16:03:50.203"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:50.204" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:50.203" endtime="20231206 16:03:50.204"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:50.206" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:50.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:50.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:50.205" endtime="20231206 16:03:50.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:50.223" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:50.223" endtime="20231206 16:03:50.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:50.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:50.224" endtime="20231206 16:03:50.224"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.205" endtime="20231206 16:03:50.224"/>
</kw>
<msg timestamp="20231206 16:03:50.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:50.205" endtime="20231206 16:03:50.225"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.204" endtime="20231206 16:03:50.225"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.204" endtime="20231206 16:03:50.225"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.196" endtime="20231206 16:03:50.225"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.196" endtime="20231206 16:03:50.225"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:50.227" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:51.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:51.991" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:50.226" endtime="20231206 16:03:51.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:51.992" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:51.991" endtime="20231206 16:03:51.992"/>
</kw>
<msg timestamp="20231206 16:03:51.992" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:50.226" endtime="20231206 16:03:51.992"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:03:51.993" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:03:51.993" endtime="20231206 16:03:51.993"/>
</kw>
<msg timestamp="20231206 16:03:51.993" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:03:51.992" endtime="20231206 16:03:51.993"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:03:51.994" endtime="20231206 16:03:51.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:03:51.994" endtime="20231206 16:03:51.994"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:03:51.994" endtime="20231206 16:03:51.994"/>
</branch>
<status status="PASS" starttime="20231206 16:03:51.994" endtime="20231206 16:03:51.994"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:03:51.995" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:03:51.994" endtime="20231206 16:03:51.995"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:03:51.995" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:03:51.995" endtime="20231206 16:03:51.995"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:03:51.996" level="INFO">${secret} = ['6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e']</msg>
<status status="PASS" starttime="20231206 16:03:51.995" endtime="20231206 16:03:51.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:03:51.997" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:51.996" endtime="20231206 16:03:51.997"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:03:51.998" level="INFO">${secret} = 6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:51.997" endtime="20231206 16:03:51.998"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:52.000" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:52.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:52.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:51.999" endtime="20231206 16:03:52.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:52.356" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:52.355" endtime="20231206 16:03:52.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:52.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:52.356" endtime="20231206 16:03:52.356"/>
</kw>
<status status="PASS" starttime="20231206 16:03:51.998" endtime="20231206 16:03:52.357"/>
</kw>
<msg timestamp="20231206 16:03:52.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:51.998" endtime="20231206 16:03:52.357"/>
</kw>
<status status="PASS" starttime="20231206 16:03:51.998" endtime="20231206 16:03:52.357"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:52.360" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:52.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:52.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:52.358" endtime="20231206 16:03:52.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:52.710" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:52.710" endtime="20231206 16:03:52.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:52.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:52.711" endtime="20231206 16:03:52.711"/>
</kw>
<status status="PASS" starttime="20231206 16:03:52.358" endtime="20231206 16:03:52.711"/>
</kw>
<msg timestamp="20231206 16:03:52.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:52.358" endtime="20231206 16:03:52.712"/>
</kw>
<status status="PASS" starttime="20231206 16:03:52.357" endtime="20231206 16:03:52.712"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:52.715" level="INFO">Running command 'aws configure set aws_secret_access_key 6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:53.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:53.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:52.713" endtime="20231206 16:03:53.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:53.072" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:53.071" endtime="20231206 16:03:53.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:53.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:53.072" endtime="20231206 16:03:53.072"/>
</kw>
<status status="PASS" starttime="20231206 16:03:52.713" endtime="20231206 16:03:53.073"/>
</kw>
<msg timestamp="20231206 16:03:53.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:52.712" endtime="20231206 16:03:53.073"/>
</kw>
<status status="PASS" starttime="20231206 16:03:52.712" endtime="20231206 16:03:53.073"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:53.076" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:53.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:53.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:53.075" endtime="20231206 16:03:53.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:53.444" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:53.443" endtime="20231206 16:03:53.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:53.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:53.444" endtime="20231206 16:03:53.445"/>
</kw>
<status status="PASS" starttime="20231206 16:03:53.074" endtime="20231206 16:03:53.445"/>
</kw>
<msg timestamp="20231206 16:03:53.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:53.074" endtime="20231206 16:03:53.445"/>
</kw>
<status status="PASS" starttime="20231206 16:03:53.073" endtime="20231206 16:03:53.446"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:53.448" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:53.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:53.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:53.447" endtime="20231206 16:03:53.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:53.799" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:53.798" endtime="20231206 16:03:53.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:53.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:53.799" endtime="20231206 16:03:53.799"/>
</kw>
<status status="PASS" starttime="20231206 16:03:53.446" endtime="20231206 16:03:53.799"/>
</kw>
<msg timestamp="20231206 16:03:53.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:53.446" endtime="20231206 16:03:53.800"/>
</kw>
<status status="PASS" starttime="20231206 16:03:53.446" endtime="20231206 16:03:53.800"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.225" endtime="20231206 16:03:53.800"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.225" endtime="20231206 16:03:53.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:03:53.800" endtime="20231206 16:03:53.801"/>
</kw>
<status status="PASS" starttime="20231206 16:03:50.196" endtime="20231206 16:03:53.801"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:53.803" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:54.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:54.363" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:03:53.802" endtime="20231206 16:03:54.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:54.364" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:03:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:03:54.363" endtime="20231206 16:03:54.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:54.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:54.364" endtime="20231206 16:03:54.364"/>
</kw>
<msg timestamp="20231206 16:03:54.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:03:53.801" endtime="20231206 16:03:54.365"/>
</kw>
<msg timestamp="20231206 16:03:54.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:03:53.801" endtime="20231206 16:03:54.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:54.365" endtime="20231206 16:03:54.365"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:54.367" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:54.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:54.369" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:03:54.366" endtime="20231206 16:03:54.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:54.369" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:03:54.369" endtime="20231206 16:03:54.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:54.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:54.370" endtime="20231206 16:03:54.370"/>
</kw>
<msg timestamp="20231206 16:03:54.370" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:03:54.365" endtime="20231206 16:03:54.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:54.371" endtime="20231206 16:03:54.371"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:54.372" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:54.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:54.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:54.371" endtime="20231206 16:03:54.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:54.375" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:54.374" endtime="20231206 16:03:54.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:54.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:54.375" endtime="20231206 16:03:54.375"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.371" endtime="20231206 16:03:54.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:50.195" endtime="20231206 16:03:54.376"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:54.380" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:54.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:54.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:03:54.379" endtime="20231206 16:03:54.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:54.382" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:03:54.382" endtime="20231206 16:03:54.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:54.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:54.383" endtime="20231206 16:03:54.383"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.378" endtime="20231206 16:03:54.383"/>
</kw>
<msg timestamp="20231206 16:03:54.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:54.378" endtime="20231206 16:03:54.384"/>
</kw>
<msg timestamp="20231206 16:03:54.384" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:03:54.378" endtime="20231206 16:03:54.384"/>
</kw>
<msg timestamp="20231206 16:03:54.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:54.378" endtime="20231206 16:03:54.384"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:03:54.385" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:54.384" endtime="20231206 16:03:54.385"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:54.387" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:54.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:54.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:54.386" endtime="20231206 16:03:54.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:54.408" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:54.408" endtime="20231206 16:03:54.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:54.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:54.409" endtime="20231206 16:03:54.409"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.386" endtime="20231206 16:03:54.409"/>
</kw>
<msg timestamp="20231206 16:03:54.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:54.385" endtime="20231206 16:03:54.410"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.385" endtime="20231206 16:03:54.410"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.385" endtime="20231206 16:03:54.410"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.377" endtime="20231206 16:03:54.410"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.377" endtime="20231206 16:03:54.410"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:54.412" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:56.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:56.216" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:54.411" endtime="20231206 16:03:56.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:56.216" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:56.216" endtime="20231206 16:03:56.216"/>
</kw>
<msg timestamp="20231206 16:03:56.217" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:54.411" endtime="20231206 16:03:56.217"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:03:56.218" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:03:56.217" endtime="20231206 16:03:56.218"/>
</kw>
<msg timestamp="20231206 16:03:56.218" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:03:56.217" endtime="20231206 16:03:56.218"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:03:56.219" endtime="20231206 16:03:56.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:03:56.219" endtime="20231206 16:03:56.219"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:03:56.218" endtime="20231206 16:03:56.219"/>
</branch>
<status status="PASS" starttime="20231206 16:03:56.218" endtime="20231206 16:03:56.219"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:03:56.219" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:03:56.219" endtime="20231206 16:03:56.219"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:03:56.220" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:03:56.219" endtime="20231206 16:03:56.220"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:03:56.220" level="INFO">${secret} = ['6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e']</msg>
<status status="PASS" starttime="20231206 16:03:56.220" endtime="20231206 16:03:56.220"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:03:56.221" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:03:56.220" endtime="20231206 16:03:56.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:03:56.222" level="INFO">${secret} = 6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e</msg>
<status status="PASS" starttime="20231206 16:03:56.221" endtime="20231206 16:03:56.222"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:56.225" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:56.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:56.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:56.223" endtime="20231206 16:03:56.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:56.592" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:56.591" endtime="20231206 16:03:56.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:56.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:56.592" endtime="20231206 16:03:56.592"/>
</kw>
<status status="PASS" starttime="20231206 16:03:56.223" endtime="20231206 16:03:56.592"/>
</kw>
<msg timestamp="20231206 16:03:56.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:56.222" endtime="20231206 16:03:56.593"/>
</kw>
<status status="PASS" starttime="20231206 16:03:56.222" endtime="20231206 16:03:56.593"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:56.595" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:56.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:56.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:56.594" endtime="20231206 16:03:56.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:56.943" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:56.943" endtime="20231206 16:03:56.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:56.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:56.943" endtime="20231206 16:03:56.944"/>
</kw>
<status status="PASS" starttime="20231206 16:03:56.594" endtime="20231206 16:03:56.944"/>
</kw>
<msg timestamp="20231206 16:03:56.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:56.593" endtime="20231206 16:03:56.944"/>
</kw>
<status status="PASS" starttime="20231206 16:03:56.593" endtime="20231206 16:03:56.945"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:56.947" level="INFO">Running command 'aws configure set aws_secret_access_key 6213a1202e87d9cee4615f0e626e6d09dc2116dab3afe14346b4df1570e47a4e 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:57.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:57.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:56.946" endtime="20231206 16:03:57.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:57.300" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:57.299" endtime="20231206 16:03:57.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:57.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:57.300" endtime="20231206 16:03:57.301"/>
</kw>
<status status="PASS" starttime="20231206 16:03:56.945" endtime="20231206 16:03:57.301"/>
</kw>
<msg timestamp="20231206 16:03:57.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:56.945" endtime="20231206 16:03:57.301"/>
</kw>
<status status="PASS" starttime="20231206 16:03:56.945" endtime="20231206 16:03:57.302"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:57.304" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:57.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:57.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:57.303" endtime="20231206 16:03:57.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:57.652" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:57.651" endtime="20231206 16:03:57.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:57.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:57.652" endtime="20231206 16:03:57.653"/>
</kw>
<status status="PASS" starttime="20231206 16:03:57.302" endtime="20231206 16:03:57.653"/>
</kw>
<msg timestamp="20231206 16:03:57.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:57.302" endtime="20231206 16:03:57.653"/>
</kw>
<status status="PASS" starttime="20231206 16:03:57.302" endtime="20231206 16:03:57.653"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:57.656" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:58.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:58.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:57.654" endtime="20231206 16:03:58.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:58.011" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:58.010" endtime="20231206 16:03:58.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:58.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:58.011" endtime="20231206 16:03:58.011"/>
</kw>
<status status="PASS" starttime="20231206 16:03:57.654" endtime="20231206 16:03:58.012"/>
</kw>
<msg timestamp="20231206 16:03:58.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:03:57.654" endtime="20231206 16:03:58.012"/>
</kw>
<status status="PASS" starttime="20231206 16:03:57.653" endtime="20231206 16:03:58.012"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.410" endtime="20231206 16:03:58.012"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.410" endtime="20231206 16:03:58.012"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:03:58.012" endtime="20231206 16:03:58.013"/>
</kw>
<status status="PASS" starttime="20231206 16:03:54.377" endtime="20231206 16:03:58.013"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:58.015" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:58.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:58.496" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:03:58.014" endtime="20231206 16:03:58.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:58.497" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:03:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:03:58.497" endtime="20231206 16:03:58.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:58.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:58.498" endtime="20231206 16:03:58.498"/>
</kw>
<msg timestamp="20231206 16:03:58.498" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:03:58.013" endtime="20231206 16:03:58.498"/>
</kw>
<msg timestamp="20231206 16:03:58.499" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:03:58.013" endtime="20231206 16:03:58.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:58.499" endtime="20231206 16:03:58.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:58.501" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:58.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:58.503" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:03:58.500" endtime="20231206 16:03:58.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:58.503" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:03:58.503" endtime="20231206 16:03:58.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:58.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:58.503" endtime="20231206 16:03:58.504"/>
</kw>
<msg timestamp="20231206 16:03:58.504" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:03:58.499" endtime="20231206 16:03:58.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:03:58.504" endtime="20231206 16:03:58.505"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:03:58.506" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:03:58.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:03:58.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:03:58.505" endtime="20231206 16:03:58.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:03:58.508" level="INFO"/>
<status status="PASS" starttime="20231206 16:03:58.508" endtime="20231206 16:03:58.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:03:58.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:03:58.508" endtime="20231206 16:03:58.509"/>
</kw>
<status status="PASS" starttime="20231206 16:03:58.505" endtime="20231206 16:03:58.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:03:54.376" endtime="20231206 16:03:58.509"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231206 16:03:46.032" endtime="20231206 16:03:58.510"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:04:01.525" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:04:01.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:04:01.527" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:04:01.522" endtime="20231206 16:04:01.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:04:01.528" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:04:01.527" endtime="20231206 16:04:01.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:04:01.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:04:01.528" endtime="20231206 16:04:01.528"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.522" endtime="20231206 16:04:01.529"/>
</kw>
<msg timestamp="20231206 16:04:01.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:04:01.522" endtime="20231206 16:04:01.529"/>
</kw>
<msg timestamp="20231206 16:04:01.530" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:04:01.521" endtime="20231206 16:04:01.530"/>
</kw>
<msg timestamp="20231206 16:04:01.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:04:01.521" endtime="20231206 16:04:01.530"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:04:01.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:04:01.530" endtime="20231206 16:04:01.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:04:01.533" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:04:01.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:04:01.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:04:01.532" endtime="20231206 16:04:01.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:04:01.545" level="INFO"/>
<status status="PASS" starttime="20231206 16:04:01.545" endtime="20231206 16:04:01.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:04:01.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:04:01.545" endtime="20231206 16:04:01.546"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.531" endtime="20231206 16:04:01.546"/>
</kw>
<msg timestamp="20231206 16:04:01.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:04:01.531" endtime="20231206 16:04:01.546"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.531" endtime="20231206 16:04:01.547"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.530" endtime="20231206 16:04:01.547"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.521" endtime="20231206 16:04:01.547"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.520" endtime="20231206 16:04:01.547"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:04:01.547" endtime="20231206 16:04:01.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:04:01.549" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:04:08.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:04:08.948" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231206 16:04:01.548" endtime="20231206 16:04:08.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:04:08.949" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [29]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231206 16:04:08.948" endtime="20231206 16:04:08.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:04:08.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:04:08.949" endtime="20231206 16:04:08.949"/>
</kw>
<status status="PASS" starttime="20231206 16:04:01.548" endtime="20231206 16:04:08.950"/>
</kw>
<msg timestamp="20231206 16:04:08.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:04:01.548" endtime="20231206 16:04:08.950"/>
</kw>
<msg timestamp="20231206 16:04:08.950" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [29].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20231206 16:04:01.547" endtime="20231206 16:04:08.950"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:04:08.951" endtime="20231206 16:04:08.951"/>
</kw>
<status status="PASS" starttime="20231206 16:04:08.950" endtime="20231206 16:04:08.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:04:01.520" endtime="20231206 16:04:08.951"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231206 16:04:01.481" endtime="20231206 16:04:08.952"/>
</suite>
<suite id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:52.314" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:52.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:52.318" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:05:52.312" endtime="20231206 16:05:52.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:52.319" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:05:52.319" endtime="20231206 16:05:52.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:52.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:52.319" endtime="20231206 16:05:52.320"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.312" endtime="20231206 16:05:52.320"/>
</kw>
<msg timestamp="20231206 16:05:52.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:05:52.311" endtime="20231206 16:05:52.320"/>
</kw>
<msg timestamp="20231206 16:05:52.320" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:05:52.311" endtime="20231206 16:05:52.320"/>
</kw>
<msg timestamp="20231206 16:05:52.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:05:52.311" endtime="20231206 16:05:52.321"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:05:52.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:05:52.321" endtime="20231206 16:05:52.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:52.325" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:52.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:52.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:05:52.323" endtime="20231206 16:05:52.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:52.339" level="INFO"/>
<status status="PASS" starttime="20231206 16:05:52.339" endtime="20231206 16:05:52.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:52.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:52.340" endtime="20231206 16:05:52.340"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.323" endtime="20231206 16:05:52.340"/>
</kw>
<msg timestamp="20231206 16:05:52.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:05:52.322" endtime="20231206 16:05:52.340"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.322" endtime="20231206 16:05:52.341"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.321" endtime="20231206 16:05:52.341"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.310" endtime="20231206 16:05:52.341"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.310" endtime="20231206 16:05:52.341"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:05:52.343" level="INFO">${random} = 43639</msg>
<status status="PASS" starttime="20231206 16:05:52.342" endtime="20231206 16:05:52.343"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:52.347" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-43639 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:58.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:58.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:05:52.345" endtime="20231206 16:05:58.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:58.167" level="INFO"/>
<status status="PASS" starttime="20231206 16:05:58.166" endtime="20231206 16:05:58.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:58.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:58.167" endtime="20231206 16:05:58.168"/>
</kw>
<status status="PASS" starttime="20231206 16:05:52.344" endtime="20231206 16:05:58.168"/>
</kw>
<msg timestamp="20231206 16:05:58.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:05:52.344" endtime="20231206 16:05:58.168"/>
</kw>
<msg timestamp="20231206 16:05:58.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:05:52.343" endtime="20231206 16:05:58.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:05:58.168" endtime="20231206 16:05:58.169"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:58.171" level="INFO">Running command 'cat /tmp/key-43639 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:58.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:58.173" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:05:58.169" endtime="20231206 16:05:58.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:58.174" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:05:58.173" endtime="20231206 16:05:58.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:58.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:58.174" endtime="20231206 16:05:58.175"/>
</kw>
<msg timestamp="20231206 16:05:58.175" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:05:58.169" endtime="20231206 16:05:58.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:05:58.175" endtime="20231206 16:05:58.175"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:58.177" level="INFO">Running command 'rm /tmp/key-43639 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:58.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:58.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:05:58.176" endtime="20231206 16:05:58.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:58.180" level="INFO"/>
<status status="PASS" starttime="20231206 16:05:58.179" endtime="20231206 16:05:58.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:58.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:58.180" endtime="20231206 16:05:58.180"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.175" endtime="20231206 16:05:58.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:05:52.341" endtime="20231206 16:05:58.181"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:58.185" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:58.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:58.188" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:05:58.184" endtime="20231206 16:05:58.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:58.189" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:05:58.188" endtime="20231206 16:05:58.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:58.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:58.189" endtime="20231206 16:05:58.189"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.184" endtime="20231206 16:05:58.189"/>
</kw>
<msg timestamp="20231206 16:05:58.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:05:58.184" endtime="20231206 16:05:58.190"/>
</kw>
<msg timestamp="20231206 16:05:58.190" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:05:58.183" endtime="20231206 16:05:58.190"/>
</kw>
<msg timestamp="20231206 16:05:58.190" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:05:58.183" endtime="20231206 16:05:58.190"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:05:58.191" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:05:58.190" endtime="20231206 16:05:58.191"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:58.194" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:05:58.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:05:58.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:05:58.192" endtime="20231206 16:05:58.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:05:58.216" level="INFO"/>
<status status="PASS" starttime="20231206 16:05:58.215" endtime="20231206 16:05:58.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:05:58.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:05:58.216" endtime="20231206 16:05:58.217"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.192" endtime="20231206 16:05:58.217"/>
</kw>
<msg timestamp="20231206 16:05:58.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:05:58.192" endtime="20231206 16:05:58.217"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.191" endtime="20231206 16:05:58.217"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.191" endtime="20231206 16:05:58.217"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.183" endtime="20231206 16:05:58.217"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.182" endtime="20231206 16:05:58.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:05:58.220" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:01.460" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:06:01.460" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:05:58.219" endtime="20231206 16:06:01.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:01.461" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:01.460" endtime="20231206 16:06:01.461"/>
</kw>
<msg timestamp="20231206 16:06:01.461" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:05:58.218" endtime="20231206 16:06:01.461"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:01.462" endtime="20231206 16:06:01.462"/>
</kw>
<msg timestamp="20231206 16:06:01.462" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231206 16:06:01.461" endtime="20231206 16:06:01.463"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:01.466" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:04.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:04.530" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:06:01.465" endtime="20231206 16:06:04.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:04.531" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:06:04.530" endtime="20231206 16:06:04.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:04.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:04.531" endtime="20231206 16:06:04.532"/>
</kw>
<status status="PASS" starttime="20231206 16:06:01.464" endtime="20231206 16:06:04.532"/>
</kw>
<msg timestamp="20231206 16:06:04.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:01.464" endtime="20231206 16:06:04.532"/>
</kw>
<status status="PASS" starttime="20231206 16:06:01.463" endtime="20231206 16:06:04.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:04.535" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:07.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:07.205" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9144d55e925c96c791649aeaa674261ac6ea337d993e91f678072f84df38c26c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:04.533" endtime="20231206 16:06:07.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:07.206" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9144d55e925c96c791649aeaa674261ac6ea337d993e91f678072f84df38c26c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:07.205" endtime="20231206 16:06:07.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:07.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:07.206" endtime="20231206 16:06:07.207"/>
</kw>
<status status="PASS" starttime="20231206 16:06:04.533" endtime="20231206 16:06:07.207"/>
</kw>
<msg timestamp="20231206 16:06:07.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:04.533" endtime="20231206 16:06:07.207"/>
</kw>
<msg timestamp="20231206 16:06:07.207" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9144d55e925c96c791649aeaa674261ac6ea337d993e91f678072f84df38c26c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:04.532" endtime="20231206 16:06:07.207"/>
</kw>
<status status="PASS" starttime="20231206 16:06:01.463" endtime="20231206 16:06:07.207"/>
</branch>
<status status="PASS" starttime="20231206 16:06:01.463" endtime="20231206 16:06:07.207"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:06:07.208" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:06:07.208" endtime="20231206 16:06:07.208"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:06:07.209" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:06:07.208" endtime="20231206 16:06:07.209"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:06:07.209" level="INFO">${secret} = ['9144d55e925c96c791649aeaa674261ac6ea337d993e91f678072f84df38c26c']</msg>
<status status="PASS" starttime="20231206 16:06:07.209" endtime="20231206 16:06:07.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:06:07.210" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:07.209" endtime="20231206 16:06:07.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:06:07.211" level="INFO">${secret} = 9144d55e925c96c791649aeaa674261ac6ea337d993e91f678072f84df38c26c</msg>
<status status="PASS" starttime="20231206 16:06:07.210" endtime="20231206 16:06:07.211"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:07.214" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:07.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:07.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:07.213" endtime="20231206 16:06:07.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:07.640" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:07.639" endtime="20231206 16:06:07.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:07.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:07.640" endtime="20231206 16:06:07.640"/>
</kw>
<status status="PASS" starttime="20231206 16:06:07.212" endtime="20231206 16:06:07.640"/>
</kw>
<msg timestamp="20231206 16:06:07.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:07.212" endtime="20231206 16:06:07.641"/>
</kw>
<status status="PASS" starttime="20231206 16:06:07.211" endtime="20231206 16:06:07.641"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:07.644" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:08.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:08.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:07.642" endtime="20231206 16:06:08.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:08.033" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:08.032" endtime="20231206 16:06:08.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:08.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:08.033" endtime="20231206 16:06:08.033"/>
</kw>
<status status="PASS" starttime="20231206 16:06:07.642" endtime="20231206 16:06:08.033"/>
</kw>
<msg timestamp="20231206 16:06:08.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:07.641" endtime="20231206 16:06:08.034"/>
</kw>
<status status="PASS" starttime="20231206 16:06:07.641" endtime="20231206 16:06:08.034"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:08.037" level="INFO">Running command 'aws configure set aws_secret_access_key 9144d55e925c96c791649aeaa674261ac6ea337d993e91f678072f84df38c26c 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:08.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:08.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:08.035" endtime="20231206 16:06:08.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:08.436" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:08.435" endtime="20231206 16:06:08.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:08.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:08.436" endtime="20231206 16:06:08.437"/>
</kw>
<status status="PASS" starttime="20231206 16:06:08.035" endtime="20231206 16:06:08.437"/>
</kw>
<msg timestamp="20231206 16:06:08.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:08.034" endtime="20231206 16:06:08.437"/>
</kw>
<status status="PASS" starttime="20231206 16:06:08.034" endtime="20231206 16:06:08.437"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:08.440" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:08.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:08.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:08.438" endtime="20231206 16:06:08.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:08.852" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:08.851" endtime="20231206 16:06:08.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:08.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:08.852" endtime="20231206 16:06:08.852"/>
</kw>
<status status="PASS" starttime="20231206 16:06:08.438" endtime="20231206 16:06:08.852"/>
</kw>
<msg timestamp="20231206 16:06:08.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:08.438" endtime="20231206 16:06:08.853"/>
</kw>
<status status="PASS" starttime="20231206 16:06:08.437" endtime="20231206 16:06:08.853"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:08.856" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:09.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:09.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:08.854" endtime="20231206 16:06:09.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:09.308" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:09.308" endtime="20231206 16:06:09.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:09.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:09.309" endtime="20231206 16:06:09.309"/>
</kw>
<status status="PASS" starttime="20231206 16:06:08.854" endtime="20231206 16:06:09.310"/>
</kw>
<msg timestamp="20231206 16:06:09.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:08.853" endtime="20231206 16:06:09.310"/>
</kw>
<status status="PASS" starttime="20231206 16:06:08.853" endtime="20231206 16:06:09.310"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.218" endtime="20231206 16:06:09.310"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.217" endtime="20231206 16:06:09.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:06:09.310" endtime="20231206 16:06:09.310"/>
</kw>
<status status="PASS" starttime="20231206 16:05:58.182" endtime="20231206 16:06:09.311"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:09.313" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:12.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:12.336" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:06:09.312" endtime="20231206 16:06:12.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:12.337" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:06:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:06:12.336" endtime="20231206 16:06:12.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:12.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:12.337" endtime="20231206 16:06:12.337"/>
</kw>
<msg timestamp="20231206 16:06:12.337" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:06:09.311" endtime="20231206 16:06:12.337"/>
</kw>
<msg timestamp="20231206 16:06:12.338" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:36 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:06:09.311" endtime="20231206 16:06:12.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:12.338" endtime="20231206 16:06:12.338"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:12.341" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:12.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:12.342" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:06:12.339" endtime="20231206 16:06:12.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:12.343" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:06:12.343" endtime="20231206 16:06:12.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:12.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:12.343" endtime="20231206 16:06:12.344"/>
</kw>
<msg timestamp="20231206 16:06:12.344" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:06:12.338" endtime="20231206 16:06:12.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:12.344" endtime="20231206 16:06:12.345"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:12.347" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:12.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:12.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:12.345" endtime="20231206 16:06:12.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:12.349" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:12.349" endtime="20231206 16:06:12.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:12.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:12.349" endtime="20231206 16:06:12.350"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.345" endtime="20231206 16:06:12.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:05:58.181" endtime="20231206 16:06:12.350"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:12.355" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:12.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:12.357" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:06:12.354" endtime="20231206 16:06:12.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:12.358" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:06:12.358" endtime="20231206 16:06:12.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:12.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:12.358" endtime="20231206 16:06:12.359"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.353" endtime="20231206 16:06:12.359"/>
</kw>
<msg timestamp="20231206 16:06:12.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:12.353" endtime="20231206 16:06:12.359"/>
</kw>
<msg timestamp="20231206 16:06:12.359" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:06:12.353" endtime="20231206 16:06:12.359"/>
</kw>
<msg timestamp="20231206 16:06:12.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:12.352" endtime="20231206 16:06:12.359"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:06:12.360" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:12.360" endtime="20231206 16:06:12.360"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:12.363" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:12.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:12.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:12.362" endtime="20231206 16:06:12.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:12.377" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:12.377" endtime="20231206 16:06:12.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:12.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:12.377" endtime="20231206 16:06:12.378"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.361" endtime="20231206 16:06:12.378"/>
</kw>
<msg timestamp="20231206 16:06:12.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:12.361" endtime="20231206 16:06:12.378"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.360" endtime="20231206 16:06:12.378"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.360" endtime="20231206 16:06:12.378"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.352" endtime="20231206 16:06:12.378"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.352" endtime="20231206 16:06:12.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:12.381" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:14.985" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:06:14.985" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:12.380" endtime="20231206 16:06:14.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:14.986" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:14.986" endtime="20231206 16:06:14.986"/>
</kw>
<msg timestamp="20231206 16:06:14.987" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:12.379" endtime="20231206 16:06:14.987"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:14.987" endtime="20231206 16:06:14.988"/>
</kw>
<msg timestamp="20231206 16:06:14.988" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231206 16:06:14.987" endtime="20231206 16:06:14.988"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:14.991" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:17.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:17.633" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:06:14.989" endtime="20231206 16:06:17.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:17.634" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:06:17.634" endtime="20231206 16:06:17.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:17.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:17.635" endtime="20231206 16:06:17.635"/>
</kw>
<status status="PASS" starttime="20231206 16:06:14.989" endtime="20231206 16:06:17.635"/>
</kw>
<msg timestamp="20231206 16:06:17.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:14.989" endtime="20231206 16:06:17.635"/>
</kw>
<status status="PASS" starttime="20231206 16:06:14.988" endtime="20231206 16:06:17.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:17.638" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:20.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:20.547" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=77dcb5078623acb8be0cc3c819c20e7d55bdd6e31cca48cc9f5fd9135626daa4
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:17.637" endtime="20231206 16:06:20.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:20.548" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=77dcb5078623acb8be0cc3c819c20e7d55bdd6e31cca48cc9f5fd9135626daa4
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:20.547" endtime="20231206 16:06:20.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:20.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:20.548" endtime="20231206 16:06:20.548"/>
</kw>
<status status="PASS" starttime="20231206 16:06:17.636" endtime="20231206 16:06:20.549"/>
</kw>
<msg timestamp="20231206 16:06:20.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:17.636" endtime="20231206 16:06:20.549"/>
</kw>
<msg timestamp="20231206 16:06:20.549" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=77dcb5078623acb8be0cc3c819c20e7d55bdd6e31cca48cc9f5fd9135626daa4
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:17.636" endtime="20231206 16:06:20.549"/>
</kw>
<status status="PASS" starttime="20231206 16:06:14.988" endtime="20231206 16:06:20.549"/>
</branch>
<status status="PASS" starttime="20231206 16:06:14.988" endtime="20231206 16:06:20.549"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:06:20.550" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:06:20.549" endtime="20231206 16:06:20.550"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:06:20.551" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:06:20.550" endtime="20231206 16:06:20.551"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:06:20.551" level="INFO">${secret} = ['77dcb5078623acb8be0cc3c819c20e7d55bdd6e31cca48cc9f5fd9135626daa4']</msg>
<status status="PASS" starttime="20231206 16:06:20.551" endtime="20231206 16:06:20.551"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:06:20.553" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:20.552" endtime="20231206 16:06:20.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:06:20.555" level="INFO">${secret} = 77dcb5078623acb8be0cc3c819c20e7d55bdd6e31cca48cc9f5fd9135626daa4</msg>
<status status="PASS" starttime="20231206 16:06:20.553" endtime="20231206 16:06:20.555"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:20.564" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:20.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:20.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:20.557" endtime="20231206 16:06:20.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:20.994" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:20.994" endtime="20231206 16:06:20.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:20.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:20.995" endtime="20231206 16:06:20.995"/>
</kw>
<status status="PASS" starttime="20231206 16:06:20.556" endtime="20231206 16:06:20.995"/>
</kw>
<msg timestamp="20231206 16:06:20.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:20.556" endtime="20231206 16:06:20.995"/>
</kw>
<status status="PASS" starttime="20231206 16:06:20.555" endtime="20231206 16:06:20.996"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:20.999" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:21.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:21.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:20.997" endtime="20231206 16:06:21.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:21.442" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:21.441" endtime="20231206 16:06:21.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:21.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:21.442" endtime="20231206 16:06:21.442"/>
</kw>
<status status="PASS" starttime="20231206 16:06:20.996" endtime="20231206 16:06:21.443"/>
</kw>
<msg timestamp="20231206 16:06:21.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:20.996" endtime="20231206 16:06:21.443"/>
</kw>
<status status="PASS" starttime="20231206 16:06:20.996" endtime="20231206 16:06:21.443"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:21.446" level="INFO">Running command 'aws configure set aws_secret_access_key 77dcb5078623acb8be0cc3c819c20e7d55bdd6e31cca48cc9f5fd9135626daa4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:21.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:21.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:21.444" endtime="20231206 16:06:21.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:21.852" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:21.851" endtime="20231206 16:06:21.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:21.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:21.852" endtime="20231206 16:06:21.852"/>
</kw>
<status status="PASS" starttime="20231206 16:06:21.444" endtime="20231206 16:06:21.853"/>
</kw>
<msg timestamp="20231206 16:06:21.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:21.444" endtime="20231206 16:06:21.853"/>
</kw>
<status status="PASS" starttime="20231206 16:06:21.443" endtime="20231206 16:06:21.853"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:21.856" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:22.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:22.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:21.854" endtime="20231206 16:06:22.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:22.256" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:22.255" endtime="20231206 16:06:22.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:22.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:22.256" endtime="20231206 16:06:22.256"/>
</kw>
<status status="PASS" starttime="20231206 16:06:21.854" endtime="20231206 16:06:22.257"/>
</kw>
<msg timestamp="20231206 16:06:22.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:21.853" endtime="20231206 16:06:22.257"/>
</kw>
<status status="PASS" starttime="20231206 16:06:21.853" endtime="20231206 16:06:22.257"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:22.260" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:22.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:22.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:22.259" endtime="20231206 16:06:22.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:22.673" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:22.672" endtime="20231206 16:06:22.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:22.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:22.673" endtime="20231206 16:06:22.674"/>
</kw>
<status status="PASS" starttime="20231206 16:06:22.258" endtime="20231206 16:06:22.674"/>
</kw>
<msg timestamp="20231206 16:06:22.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:22.257" endtime="20231206 16:06:22.674"/>
</kw>
<status status="PASS" starttime="20231206 16:06:22.257" endtime="20231206 16:06:22.674"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.379" endtime="20231206 16:06:22.674"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.378" endtime="20231206 16:06:22.674"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:06:22.674" endtime="20231206 16:06:22.675"/>
</kw>
<status status="PASS" starttime="20231206 16:06:12.351" endtime="20231206 16:06:22.675"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:22.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:23.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:23.476" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:06:22.676" endtime="20231206 16:06:23.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:23.477" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:06:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:06:23.477" endtime="20231206 16:06:23.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:23.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:23.478" endtime="20231206 16:06:23.478"/>
</kw>
<msg timestamp="20231206 16:06:23.479" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:06:22.675" endtime="20231206 16:06:23.479"/>
</kw>
<msg timestamp="20231206 16:06:23.479" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:03:42 GMT",
    "ContentLength": 31,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:06:22.675" endtime="20231206 16:06:23.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:23.479" endtime="20231206 16:06:23.479"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:23.482" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:23.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:23.485" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:06:23.480" endtime="20231206 16:06:23.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:23.486" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:06:23.485" endtime="20231206 16:06:23.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:23.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:23.486" endtime="20231206 16:06:23.487"/>
</kw>
<msg timestamp="20231206 16:06:23.487" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:06:23.480" endtime="20231206 16:06:23.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:23.487" endtime="20231206 16:06:23.488"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:23.490" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:23.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:23.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:23.488" endtime="20231206 16:06:23.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:23.492" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:23.492" endtime="20231206 16:06:23.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:23.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:23.493" endtime="20231206 16:06:23.493"/>
</kw>
<status status="PASS" starttime="20231206 16:06:23.488" endtime="20231206 16:06:23.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:06:12.351" endtime="20231206 16:06:23.493"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231206 16:05:52.232" endtime="20231206 16:06:23.494"/>
</suite>
<suite id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:26.909" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:26.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:26.912" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:06:26.906" endtime="20231206 16:06:26.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:26.913" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:06:26.912" endtime="20231206 16:06:26.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:26.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:26.913" endtime="20231206 16:06:26.913"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.906" endtime="20231206 16:06:26.914"/>
</kw>
<msg timestamp="20231206 16:06:26.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:26.906" endtime="20231206 16:06:26.914"/>
</kw>
<msg timestamp="20231206 16:06:26.914" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:06:26.905" endtime="20231206 16:06:26.914"/>
</kw>
<msg timestamp="20231206 16:06:26.918" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:26.905" endtime="20231206 16:06:26.918"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:06:26.920" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:26.918" endtime="20231206 16:06:26.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:26.926" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:26.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:26.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:26.924" endtime="20231206 16:06:26.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:26.941" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:26.941" endtime="20231206 16:06:26.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:26.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:26.941" endtime="20231206 16:06:26.942"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.924" endtime="20231206 16:06:26.942"/>
</kw>
<msg timestamp="20231206 16:06:26.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:26.923" endtime="20231206 16:06:26.942"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.922" endtime="20231206 16:06:26.942"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.920" endtime="20231206 16:06:26.943"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.904" endtime="20231206 16:06:26.943"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.904" endtime="20231206 16:06:26.943"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:26.946" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:06:26.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:26.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:26.944" endtime="20231206 16:06:26.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:26.948" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:26.947" endtime="20231206 16:06:26.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:26.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:26.948" endtime="20231206 16:06:26.948"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.944" endtime="20231206 16:06:26.949"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:26.951" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:33.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:33.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:26.950" endtime="20231206 16:06:33.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:33.090" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:33.089" endtime="20231206 16:06:33.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:33.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:33.090" endtime="20231206 16:06:33.090"/>
</kw>
<status status="PASS" starttime="20231206 16:06:26.949" endtime="20231206 16:06:33.091"/>
</kw>
<msg timestamp="20231206 16:06:33.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:26.949" endtime="20231206 16:06:33.091"/>
</kw>
<msg timestamp="20231206 16:06:33.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:26.949" endtime="20231206 16:06:33.091"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:33.091" endtime="20231206 16:06:33.091"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:33.093" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:33.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:33.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:33.092" endtime="20231206 16:06:33.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:33.096" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:33.096" endtime="20231206 16:06:33.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:33.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:33.096" endtime="20231206 16:06:33.097"/>
</kw>
<status status="PASS" starttime="20231206 16:06:33.091" endtime="20231206 16:06:33.097"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:06:26.943" endtime="20231206 16:06:33.097"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:33.100" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:06:33.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:33.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:33.099" endtime="20231206 16:06:33.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:33.102" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:33.101" endtime="20231206 16:06:33.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:33.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:33.102" endtime="20231206 16:06:33.103"/>
</kw>
<status status="PASS" starttime="20231206 16:06:33.098" endtime="20231206 16:06:33.103"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:33.105" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:38.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:38.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:33.104" endtime="20231206 16:06:38.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:38.480" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:38.479" endtime="20231206 16:06:38.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:38.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:38.480" endtime="20231206 16:06:38.481"/>
</kw>
<status status="PASS" starttime="20231206 16:06:33.104" endtime="20231206 16:06:38.481"/>
</kw>
<msg timestamp="20231206 16:06:38.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:33.103" endtime="20231206 16:06:38.481"/>
</kw>
<msg timestamp="20231206 16:06:38.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:33.103" endtime="20231206 16:06:38.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:38.482" endtime="20231206 16:06:38.482"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:38.485" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:38.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:38.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:38.483" endtime="20231206 16:06:38.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:38.488" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:38.488" endtime="20231206 16:06:38.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:38.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:38.488" endtime="20231206 16:06:38.489"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.482" endtime="20231206 16:06:38.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:06:33.098" endtime="20231206 16:06:38.490"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:38.496" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:38.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:38.504" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:06:38.495" endtime="20231206 16:06:38.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:38.505" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:06:38.505" endtime="20231206 16:06:38.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:38.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:38.506" endtime="20231206 16:06:38.506"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.494" endtime="20231206 16:06:38.506"/>
</kw>
<msg timestamp="20231206 16:06:38.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:38.494" endtime="20231206 16:06:38.507"/>
</kw>
<msg timestamp="20231206 16:06:38.507" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:06:38.493" endtime="20231206 16:06:38.507"/>
</kw>
<msg timestamp="20231206 16:06:38.507" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:38.493" endtime="20231206 16:06:38.507"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:06:38.508" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:38.508" endtime="20231206 16:06:38.508"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:38.512" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:38.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:38.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:38.510" endtime="20231206 16:06:38.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:38.550" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:38.549" endtime="20231206 16:06:38.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:38.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:38.550" endtime="20231206 16:06:38.551"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.510" endtime="20231206 16:06:38.551"/>
</kw>
<msg timestamp="20231206 16:06:38.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:38.509" endtime="20231206 16:06:38.551"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.509" endtime="20231206 16:06:38.551"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.508" endtime="20231206 16:06:38.551"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.492" endtime="20231206 16:06:38.551"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.492" endtime="20231206 16:06:38.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:38.555" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:41.131" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:06:41.131" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:38.553" endtime="20231206 16:06:41.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:41.132" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:41.132" endtime="20231206 16:06:41.132"/>
</kw>
<msg timestamp="20231206 16:06:41.132" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:06:38.553" endtime="20231206 16:06:41.132"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:41.133" endtime="20231206 16:06:41.133"/>
</kw>
<msg timestamp="20231206 16:06:41.133" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231206 16:06:41.133" endtime="20231206 16:06:41.133"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:41.137" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:43.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:43.616" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:06:41.135" endtime="20231206 16:06:43.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:43.617" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:06:43.616" endtime="20231206 16:06:43.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:43.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:43.617" endtime="20231206 16:06:43.617"/>
</kw>
<status status="PASS" starttime="20231206 16:06:41.134" endtime="20231206 16:06:43.618"/>
</kw>
<msg timestamp="20231206 16:06:43.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:41.134" endtime="20231206 16:06:43.618"/>
</kw>
<status status="PASS" starttime="20231206 16:06:41.134" endtime="20231206 16:06:43.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:43.621" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:46.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:46.158" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2b098d24bf35850381cc56759da3775161fea1fd623450472744f8afbaae3f43
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:43.619" endtime="20231206 16:06:46.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:46.159" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2b098d24bf35850381cc56759da3775161fea1fd623450472744f8afbaae3f43
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:46.159" endtime="20231206 16:06:46.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:46.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:46.159" endtime="20231206 16:06:46.160"/>
</kw>
<status status="PASS" starttime="20231206 16:06:43.619" endtime="20231206 16:06:46.160"/>
</kw>
<msg timestamp="20231206 16:06:46.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:43.619" endtime="20231206 16:06:46.160"/>
</kw>
<msg timestamp="20231206 16:06:46.160" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2b098d24bf35850381cc56759da3775161fea1fd623450472744f8afbaae3f43
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:06:43.618" endtime="20231206 16:06:46.160"/>
</kw>
<status status="PASS" starttime="20231206 16:06:41.134" endtime="20231206 16:06:46.160"/>
</branch>
<status status="PASS" starttime="20231206 16:06:41.133" endtime="20231206 16:06:46.161"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:06:46.161" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:06:46.161" endtime="20231206 16:06:46.161"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:06:46.162" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:06:46.161" endtime="20231206 16:06:46.162"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:06:46.162" level="INFO">${secret} = ['2b098d24bf35850381cc56759da3775161fea1fd623450472744f8afbaae3f43']</msg>
<status status="PASS" starttime="20231206 16:06:46.162" endtime="20231206 16:06:46.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:06:46.163" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:46.163" endtime="20231206 16:06:46.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:06:46.164" level="INFO">${secret} = 2b098d24bf35850381cc56759da3775161fea1fd623450472744f8afbaae3f43</msg>
<status status="PASS" starttime="20231206 16:06:46.164" endtime="20231206 16:06:46.164"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:46.167" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:46.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:46.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:46.166" endtime="20231206 16:06:46.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:46.579" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:46.578" endtime="20231206 16:06:46.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:46.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:46.579" endtime="20231206 16:06:46.580"/>
</kw>
<status status="PASS" starttime="20231206 16:06:46.165" endtime="20231206 16:06:46.580"/>
</kw>
<msg timestamp="20231206 16:06:46.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:46.165" endtime="20231206 16:06:46.580"/>
</kw>
<status status="PASS" starttime="20231206 16:06:46.165" endtime="20231206 16:06:46.580"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:46.583" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:46.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:46.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:46.581" endtime="20231206 16:06:46.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:46.987" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:46.986" endtime="20231206 16:06:46.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:46.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:46.987" endtime="20231206 16:06:46.988"/>
</kw>
<status status="PASS" starttime="20231206 16:06:46.581" endtime="20231206 16:06:46.988"/>
</kw>
<msg timestamp="20231206 16:06:46.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:46.581" endtime="20231206 16:06:46.988"/>
</kw>
<status status="PASS" starttime="20231206 16:06:46.580" endtime="20231206 16:06:46.988"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:46.991" level="INFO">Running command 'aws configure set aws_secret_access_key 2b098d24bf35850381cc56759da3775161fea1fd623450472744f8afbaae3f43 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:47.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:47.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:46.989" endtime="20231206 16:06:47.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:47.400" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:47.399" endtime="20231206 16:06:47.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:47.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:47.400" endtime="20231206 16:06:47.401"/>
</kw>
<status status="PASS" starttime="20231206 16:06:46.989" endtime="20231206 16:06:47.401"/>
</kw>
<msg timestamp="20231206 16:06:47.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:46.989" endtime="20231206 16:06:47.401"/>
</kw>
<status status="PASS" starttime="20231206 16:06:46.988" endtime="20231206 16:06:47.401"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:47.404" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:47.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:47.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:47.402" endtime="20231206 16:06:47.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:47.825" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:47.825" endtime="20231206 16:06:47.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:47.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:47.826" endtime="20231206 16:06:47.826"/>
</kw>
<status status="PASS" starttime="20231206 16:06:47.402" endtime="20231206 16:06:47.826"/>
</kw>
<msg timestamp="20231206 16:06:47.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:47.401" endtime="20231206 16:06:47.826"/>
</kw>
<status status="PASS" starttime="20231206 16:06:47.401" endtime="20231206 16:06:47.827"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:47.830" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:48.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:48.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:47.828" endtime="20231206 16:06:48.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:48.253" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:48.253" endtime="20231206 16:06:48.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:48.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:48.253" endtime="20231206 16:06:48.254"/>
</kw>
<status status="PASS" starttime="20231206 16:06:47.828" endtime="20231206 16:06:48.254"/>
</kw>
<msg timestamp="20231206 16:06:48.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:47.827" endtime="20231206 16:06:48.254"/>
</kw>
<status status="PASS" starttime="20231206 16:06:47.827" endtime="20231206 16:06:48.254"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.552" endtime="20231206 16:06:48.254"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.552" endtime="20231206 16:06:48.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:06:48.255" endtime="20231206 16:06:48.255"/>
</kw>
<status status="PASS" starttime="20231206 16:06:38.491" endtime="20231206 16:06:48.255"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:06:48.256" level="INFO">${randStr} = 4973955106</msg>
<status status="PASS" starttime="20231206 16:06:48.255" endtime="20231206 16:06:48.256"/>
</kw>
<msg timestamp="20231206 16:06:48.256" level="INFO">${random} = ozone-test-4973955106</msg>
<status status="PASS" starttime="20231206 16:06:48.255" endtime="20231206 16:06:48.256"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:48.260" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-4973955106 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:48.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:48.849" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4973955106"
}</msg>
<status status="PASS" starttime="20231206 16:06:48.258" endtime="20231206 16:06:48.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:48.850" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4973955106"
}</msg>
<status status="PASS" starttime="20231206 16:06:48.849" endtime="20231206 16:06:48.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:48.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:48.850" endtime="20231206 16:06:48.851"/>
</kw>
<status status="PASS" starttime="20231206 16:06:48.258" endtime="20231206 16:06:48.851"/>
</kw>
<msg timestamp="20231206 16:06:48.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:48.257" endtime="20231206 16:06:48.851"/>
</kw>
<msg timestamp="20231206 16:06:48.851" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4973955106"
}</msg>
<status status="PASS" starttime="20231206 16:06:48.257" endtime="20231206 16:06:48.851"/>
</kw>
<msg timestamp="20231206 16:06:48.852" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4973955106"
}</msg>
<status status="PASS" starttime="20231206 16:06:48.257" endtime="20231206 16:06:48.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:48.852" endtime="20231206 16:06:48.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:48.852" endtime="20231206 16:06:48.852"/>
</kw>
<msg timestamp="20231206 16:06:48.852" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231206 16:06:48.256" endtime="20231206 16:06:48.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231206 16:06:48.853" endtime="20231206 16:06:48.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:06:38.490" endtime="20231206 16:06:48.853"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:48.857" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:06:48.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:48.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:48.855" endtime="20231206 16:06:48.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:48.859" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:48.859" endtime="20231206 16:06:48.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:48.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:48.859" endtime="20231206 16:06:48.860"/>
</kw>
<status status="PASS" starttime="20231206 16:06:48.854" endtime="20231206 16:06:48.860"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:48.862" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:50.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:50.194" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231206 16:06:48.861" endtime="20231206 16:06:50.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:50.195" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231206 16:06:50.194" endtime="20231206 16:06:50.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:50.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:50.195" endtime="20231206 16:06:50.196"/>
</kw>
<msg timestamp="20231206 16:06:50.196" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231206 16:06:48.860" endtime="20231206 16:06:50.196"/>
</kw>
<msg timestamp="20231206 16:06:50.196" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20231206 16:06:48.860" endtime="20231206 16:06:50.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:50.196" endtime="20231206 16:06:50.196"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:50.199" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:50.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:50.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:50.197" endtime="20231206 16:06:50.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:50.201" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:50.201" endtime="20231206 16:06:50.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:50.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:50.201" endtime="20231206 16:06:50.202"/>
</kw>
<status status="PASS" starttime="20231206 16:06:50.197" endtime="20231206 16:06:50.202"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:06:48.854" endtime="20231206 16:06:50.202"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231206 16:06:26.832" endtime="20231206 16:06:50.203"/>
</suite>
<suite id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:53.590" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:53.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:53.592" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:06:53.588" endtime="20231206 16:06:53.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:53.593" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:06:53.592" endtime="20231206 16:06:53.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:53.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:53.593" endtime="20231206 16:06:53.593"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.588" endtime="20231206 16:06:53.594"/>
</kw>
<msg timestamp="20231206 16:06:53.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:53.588" endtime="20231206 16:06:53.594"/>
</kw>
<msg timestamp="20231206 16:06:53.594" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:06:53.587" endtime="20231206 16:06:53.594"/>
</kw>
<msg timestamp="20231206 16:06:53.594" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:53.587" endtime="20231206 16:06:53.594"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:06:53.595" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:06:53.594" endtime="20231206 16:06:53.595"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:53.597" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:53.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:53.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:53.596" endtime="20231206 16:06:53.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:53.613" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:53.613" endtime="20231206 16:06:53.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:53.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:53.613" endtime="20231206 16:06:53.613"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.596" endtime="20231206 16:06:53.614"/>
</kw>
<msg timestamp="20231206 16:06:53.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:53.596" endtime="20231206 16:06:53.614"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.595" endtime="20231206 16:06:53.614"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.595" endtime="20231206 16:06:53.614"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.587" endtime="20231206 16:06:53.614"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.586" endtime="20231206 16:06:53.614"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:53.617" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:06:56.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:06:56.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:53.616" endtime="20231206 16:06:56.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:06:56.825" level="INFO"/>
<status status="PASS" starttime="20231206 16:06:56.824" endtime="20231206 16:06:56.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:06:56.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:06:56.825" endtime="20231206 16:06:56.825"/>
</kw>
<status status="PASS" starttime="20231206 16:06:53.616" endtime="20231206 16:06:56.826"/>
</kw>
<msg timestamp="20231206 16:06:56.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:53.615" endtime="20231206 16:06:56.826"/>
</kw>
<msg timestamp="20231206 16:06:56.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:53.615" endtime="20231206 16:06:56.826"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:06:56.826" endtime="20231206 16:06:56.827"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:06:56.831" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:00.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:00.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:56.828" endtime="20231206 16:07:00.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:00.207" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:00.206" endtime="20231206 16:07:00.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:00.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:00.207" endtime="20231206 16:07:00.207"/>
</kw>
<status status="PASS" starttime="20231206 16:06:56.828" endtime="20231206 16:07:00.208"/>
</kw>
<msg timestamp="20231206 16:07:00.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:06:56.827" endtime="20231206 16:07:00.208"/>
</kw>
<msg timestamp="20231206 16:07:00.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:06:56.827" endtime="20231206 16:07:00.208"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:00.208" endtime="20231206 16:07:00.208"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:06:53.614" endtime="20231206 16:07:00.208"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:00.212" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:07:00.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:00.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:00.210" endtime="20231206 16:07:00.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:00.214" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:00.213" endtime="20231206 16:07:00.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:00.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:00.214" endtime="20231206 16:07:00.214"/>
</kw>
<status status="PASS" starttime="20231206 16:07:00.210" endtime="20231206 16:07:00.214"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:00.217" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:05.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:05.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:00.216" endtime="20231206 16:07:05.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:05.140" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:05.140" endtime="20231206 16:07:05.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:05.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:05.140" endtime="20231206 16:07:05.141"/>
</kw>
<status status="PASS" starttime="20231206 16:07:00.215" endtime="20231206 16:07:05.141"/>
</kw>
<msg timestamp="20231206 16:07:05.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:00.215" endtime="20231206 16:07:05.141"/>
</kw>
<msg timestamp="20231206 16:07:05.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:00.215" endtime="20231206 16:07:05.141"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:05.141" endtime="20231206 16:07:05.142"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:05.144" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:05.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:05.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:05.142" endtime="20231206 16:07:05.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:05.147" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:05.146" endtime="20231206 16:07:05.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:05.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:05.147" endtime="20231206 16:07:05.147"/>
</kw>
<status status="PASS" starttime="20231206 16:07:05.142" endtime="20231206 16:07:05.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:00.209" endtime="20231206 16:07:05.148"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:05.152" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:08.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:08.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:05.151" endtime="20231206 16:07:08.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:08.380" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:08.380" endtime="20231206 16:07:08.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:08.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:08.381" endtime="20231206 16:07:08.381"/>
</kw>
<status status="PASS" starttime="20231206 16:07:05.150" endtime="20231206 16:07:08.381"/>
</kw>
<msg timestamp="20231206 16:07:08.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:05.149" endtime="20231206 16:07:08.381"/>
</kw>
<msg timestamp="20231206 16:07:08.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:05.149" endtime="20231206 16:07:08.382"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:08.382" endtime="20231206 16:07:08.382"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:05.148" endtime="20231206 16:07:08.382"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:08.386" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:07:08.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:08.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:08.384" endtime="20231206 16:07:08.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:08.388" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:08.387" endtime="20231206 16:07:08.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:08.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:08.388" endtime="20231206 16:07:08.388"/>
</kw>
<status status="PASS" starttime="20231206 16:07:08.383" endtime="20231206 16:07:08.388"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:08.391" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:13.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:13.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:08.390" endtime="20231206 16:07:13.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:13.529" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:13.529" endtime="20231206 16:07:13.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:13.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:13.529" endtime="20231206 16:07:13.530"/>
</kw>
<status status="PASS" starttime="20231206 16:07:08.389" endtime="20231206 16:07:13.530"/>
</kw>
<msg timestamp="20231206 16:07:13.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:08.389" endtime="20231206 16:07:13.530"/>
</kw>
<msg timestamp="20231206 16:07:13.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:08.388" endtime="20231206 16:07:13.531"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:13.531" endtime="20231206 16:07:13.531"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:13.534" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:13.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:13.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:13.532" endtime="20231206 16:07:13.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:13.537" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:13.537" endtime="20231206 16:07:13.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:13.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:13.538" endtime="20231206 16:07:13.538"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.531" endtime="20231206 16:07:13.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:08.383" endtime="20231206 16:07:13.539"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:13.545" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:13.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:13.548" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:07:13.544" endtime="20231206 16:07:13.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:13.549" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:07:13.548" endtime="20231206 16:07:13.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:13.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:13.549" endtime="20231206 16:07:13.549"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.543" endtime="20231206 16:07:13.549"/>
</kw>
<msg timestamp="20231206 16:07:13.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:13.543" endtime="20231206 16:07:13.550"/>
</kw>
<msg timestamp="20231206 16:07:13.550" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:07:13.542" endtime="20231206 16:07:13.550"/>
</kw>
<msg timestamp="20231206 16:07:13.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:13.542" endtime="20231206 16:07:13.550"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:07:13.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:13.550" endtime="20231206 16:07:13.550"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:13.554" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:13.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:13.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:13.552" endtime="20231206 16:07:13.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:13.590" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:13.590" endtime="20231206 16:07:13.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:13.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:13.590" endtime="20231206 16:07:13.591"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.552" endtime="20231206 16:07:13.591"/>
</kw>
<msg timestamp="20231206 16:07:13.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:13.551" endtime="20231206 16:07:13.591"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.551" endtime="20231206 16:07:13.591"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.551" endtime="20231206 16:07:13.591"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.541" endtime="20231206 16:07:13.591"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.541" endtime="20231206 16:07:13.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:13.594" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:16.057" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:07:16.057" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:13.593" endtime="20231206 16:07:16.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:16.058" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:16.057" endtime="20231206 16:07:16.058"/>
</kw>
<msg timestamp="20231206 16:07:16.058" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:13.592" endtime="20231206 16:07:16.058"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:16.059" endtime="20231206 16:07:16.059"/>
</kw>
<msg timestamp="20231206 16:07:16.059" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231206 16:07:16.058" endtime="20231206 16:07:16.059"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:16.063" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:18.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:18.776" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:07:16.061" endtime="20231206 16:07:18.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:18.778" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:07:18.777" endtime="20231206 16:07:18.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:18.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:18.778" endtime="20231206 16:07:18.778"/>
</kw>
<status status="PASS" starttime="20231206 16:07:16.061" endtime="20231206 16:07:18.779"/>
</kw>
<msg timestamp="20231206 16:07:18.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:16.060" endtime="20231206 16:07:18.779"/>
</kw>
<status status="PASS" starttime="20231206 16:07:16.060" endtime="20231206 16:07:18.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:18.782" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:21.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:21.516" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=19f069ff21834bd7f6805ed5e628f99d138d1df8d6b68e3b0be4b963ceb9da09
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:18.780" endtime="20231206 16:07:21.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:21.517" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=19f069ff21834bd7f6805ed5e628f99d138d1df8d6b68e3b0be4b963ceb9da09
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:21.516" endtime="20231206 16:07:21.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:21.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:21.517" endtime="20231206 16:07:21.517"/>
</kw>
<status status="PASS" starttime="20231206 16:07:18.780" endtime="20231206 16:07:21.517"/>
</kw>
<msg timestamp="20231206 16:07:21.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:18.779" endtime="20231206 16:07:21.518"/>
</kw>
<msg timestamp="20231206 16:07:21.518" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=19f069ff21834bd7f6805ed5e628f99d138d1df8d6b68e3b0be4b963ceb9da09
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:18.779" endtime="20231206 16:07:21.518"/>
</kw>
<status status="PASS" starttime="20231206 16:07:16.059" endtime="20231206 16:07:21.518"/>
</branch>
<status status="PASS" starttime="20231206 16:07:16.059" endtime="20231206 16:07:21.518"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:07:21.519" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:07:21.518" endtime="20231206 16:07:21.519"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:07:21.519" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:07:21.519" endtime="20231206 16:07:21.519"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:07:21.520" level="INFO">${secret} = ['19f069ff21834bd7f6805ed5e628f99d138d1df8d6b68e3b0be4b963ceb9da09']</msg>
<status status="PASS" starttime="20231206 16:07:21.519" endtime="20231206 16:07:21.520"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:07:21.521" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:21.520" endtime="20231206 16:07:21.521"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:07:21.522" level="INFO">${secret} = 19f069ff21834bd7f6805ed5e628f99d138d1df8d6b68e3b0be4b963ceb9da09</msg>
<status status="PASS" starttime="20231206 16:07:21.521" endtime="20231206 16:07:21.522"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:21.525" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:21.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:21.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:21.523" endtime="20231206 16:07:21.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:21.921" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:21.920" endtime="20231206 16:07:21.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:21.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:21.921" endtime="20231206 16:07:21.922"/>
</kw>
<status status="PASS" starttime="20231206 16:07:21.523" endtime="20231206 16:07:21.922"/>
</kw>
<msg timestamp="20231206 16:07:21.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:21.523" endtime="20231206 16:07:21.922"/>
</kw>
<status status="PASS" starttime="20231206 16:07:21.522" endtime="20231206 16:07:21.922"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:21.925" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:22.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:22.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:21.924" endtime="20231206 16:07:22.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:22.339" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:22.339" endtime="20231206 16:07:22.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:22.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:22.339" endtime="20231206 16:07:22.340"/>
</kw>
<status status="PASS" starttime="20231206 16:07:21.923" endtime="20231206 16:07:22.340"/>
</kw>
<msg timestamp="20231206 16:07:22.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:21.923" endtime="20231206 16:07:22.340"/>
</kw>
<status status="PASS" starttime="20231206 16:07:21.922" endtime="20231206 16:07:22.340"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:22.343" level="INFO">Running command 'aws configure set aws_secret_access_key 19f069ff21834bd7f6805ed5e628f99d138d1df8d6b68e3b0be4b963ceb9da09 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:22.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:22.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:22.342" endtime="20231206 16:07:22.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:22.735" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:22.735" endtime="20231206 16:07:22.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:22.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:22.735" endtime="20231206 16:07:22.736"/>
</kw>
<status status="PASS" starttime="20231206 16:07:22.341" endtime="20231206 16:07:22.736"/>
</kw>
<msg timestamp="20231206 16:07:22.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:22.341" endtime="20231206 16:07:22.736"/>
</kw>
<status status="PASS" starttime="20231206 16:07:22.340" endtime="20231206 16:07:22.736"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:22.740" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:23.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:23.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:22.738" endtime="20231206 16:07:23.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:23.148" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:23.148" endtime="20231206 16:07:23.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:23.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:23.149" endtime="20231206 16:07:23.149"/>
</kw>
<status status="PASS" starttime="20231206 16:07:22.737" endtime="20231206 16:07:23.149"/>
</kw>
<msg timestamp="20231206 16:07:23.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:22.737" endtime="20231206 16:07:23.149"/>
</kw>
<status status="PASS" starttime="20231206 16:07:22.736" endtime="20231206 16:07:23.149"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:23.153" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:23.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:23.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:23.151" endtime="20231206 16:07:23.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:23.553" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:23.553" endtime="20231206 16:07:23.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:23.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:23.553" endtime="20231206 16:07:23.554"/>
</kw>
<status status="PASS" starttime="20231206 16:07:23.150" endtime="20231206 16:07:23.554"/>
</kw>
<msg timestamp="20231206 16:07:23.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:23.150" endtime="20231206 16:07:23.554"/>
</kw>
<status status="PASS" starttime="20231206 16:07:23.150" endtime="20231206 16:07:23.554"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.592" endtime="20231206 16:07:23.555"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.592" endtime="20231206 16:07:23.555"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:07:23.555" endtime="20231206 16:07:23.555"/>
</kw>
<status status="PASS" starttime="20231206 16:07:13.540" endtime="20231206 16:07:23.555"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:07:23.556" level="INFO">${randStr} = 9711994266</msg>
<status status="PASS" starttime="20231206 16:07:23.556" endtime="20231206 16:07:23.556"/>
</kw>
<msg timestamp="20231206 16:07:23.556" level="INFO">${random} = ozone-test-9711994266</msg>
<status status="PASS" starttime="20231206 16:07:23.555" endtime="20231206 16:07:23.556"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:23.560" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-9711994266 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:24.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:24.087" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-9711994266"
}</msg>
<status status="PASS" starttime="20231206 16:07:23.558" endtime="20231206 16:07:24.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:24.087" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-9711994266"
}</msg>
<status status="PASS" starttime="20231206 16:07:24.087" endtime="20231206 16:07:24.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:24.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:24.088" endtime="20231206 16:07:24.088"/>
</kw>
<status status="PASS" starttime="20231206 16:07:23.558" endtime="20231206 16:07:24.088"/>
</kw>
<msg timestamp="20231206 16:07:24.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:23.558" endtime="20231206 16:07:24.089"/>
</kw>
<msg timestamp="20231206 16:07:24.089" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-9711994266"
}</msg>
<status status="PASS" starttime="20231206 16:07:23.557" endtime="20231206 16:07:24.089"/>
</kw>
<msg timestamp="20231206 16:07:24.089" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-9711994266"
}</msg>
<status status="PASS" starttime="20231206 16:07:23.557" endtime="20231206 16:07:24.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:24.089" endtime="20231206 16:07:24.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:24.090" endtime="20231206 16:07:24.090"/>
</kw>
<msg timestamp="20231206 16:07:24.090" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231206 16:07:23.556" endtime="20231206 16:07:24.090"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231206 16:07:24.090" endtime="20231206 16:07:24.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:13.540" endtime="20231206 16:07:24.091"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:24.094" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:07:24.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:24.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:24.092" endtime="20231206 16:07:24.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:24.096" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:24.096" endtime="20231206 16:07:24.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:24.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:24.096" endtime="20231206 16:07:24.097"/>
</kw>
<status status="PASS" starttime="20231206 16:07:24.092" endtime="20231206 16:07:24.097"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:24.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:24.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:24.795" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231206 16:07:24.098" endtime="20231206 16:07:24.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:24.796" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231206 16:07:24.795" endtime="20231206 16:07:24.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:24.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:24.797" endtime="20231206 16:07:24.797"/>
</kw>
<msg timestamp="20231206 16:07:24.797" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231206 16:07:24.097" endtime="20231206 16:07:24.797"/>
</kw>
<msg timestamp="20231206 16:07:24.797" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20231206 16:07:24.097" endtime="20231206 16:07:24.797"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:24.798" endtime="20231206 16:07:24.798"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:24.800" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:24.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:24.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:24.798" endtime="20231206 16:07:24.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:24.803" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:24.802" endtime="20231206 16:07:24.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:24.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:24.803" endtime="20231206 16:07:24.803"/>
</kw>
<status status="PASS" starttime="20231206 16:07:24.798" endtime="20231206 16:07:24.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:24.091" endtime="20231206 16:07:24.804"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231206 16:06:53.512" endtime="20231206 16:07:24.805"/>
</suite>
<suite id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:28.198" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:28.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:28.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:07:28.197" endtime="20231206 16:07:28.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:28.201" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:07:28.201" endtime="20231206 16:07:28.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:28.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:28.201" endtime="20231206 16:07:28.202"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.196" endtime="20231206 16:07:28.202"/>
</kw>
<msg timestamp="20231206 16:07:28.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:28.196" endtime="20231206 16:07:28.202"/>
</kw>
<msg timestamp="20231206 16:07:28.202" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:07:28.196" endtime="20231206 16:07:28.202"/>
</kw>
<msg timestamp="20231206 16:07:28.202" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:28.196" endtime="20231206 16:07:28.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:07:28.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:28.203" endtime="20231206 16:07:28.203"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:28.205" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:28.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:28.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:28.204" endtime="20231206 16:07:28.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:28.231" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:28.231" endtime="20231206 16:07:28.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:28.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:28.231" endtime="20231206 16:07:28.231"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.204" endtime="20231206 16:07:28.232"/>
</kw>
<msg timestamp="20231206 16:07:28.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:28.204" endtime="20231206 16:07:28.232"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.203" endtime="20231206 16:07:28.232"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.203" endtime="20231206 16:07:28.232"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.195" endtime="20231206 16:07:28.232"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.195" endtime="20231206 16:07:28.232"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:07:28.233" level="INFO">${random} = 49813</msg>
<status status="PASS" starttime="20231206 16:07:28.233" endtime="20231206 16:07:28.233"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:28.236" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-49813 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:33.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:33.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:28.235" endtime="20231206 16:07:33.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:33.148" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:33.147" endtime="20231206 16:07:33.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:33.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:33.148" endtime="20231206 16:07:33.148"/>
</kw>
<status status="PASS" starttime="20231206 16:07:28.234" endtime="20231206 16:07:33.148"/>
</kw>
<msg timestamp="20231206 16:07:33.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:28.234" endtime="20231206 16:07:33.149"/>
</kw>
<msg timestamp="20231206 16:07:33.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:28.233" endtime="20231206 16:07:33.149"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:33.149" endtime="20231206 16:07:33.149"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:33.152" level="INFO">Running command 'cat /tmp/key-49813 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:33.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:33.154" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:07:33.150" endtime="20231206 16:07:33.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:33.154" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:07:33.154" endtime="20231206 16:07:33.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:33.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:33.155" endtime="20231206 16:07:33.155"/>
</kw>
<msg timestamp="20231206 16:07:33.155" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:07:33.149" endtime="20231206 16:07:33.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:33.155" endtime="20231206 16:07:33.156"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:33.158" level="INFO">Running command 'rm /tmp/key-49813 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:33.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:33.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:33.156" endtime="20231206 16:07:33.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:33.160" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:33.160" endtime="20231206 16:07:33.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:33.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:33.160" endtime="20231206 16:07:33.161"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.156" endtime="20231206 16:07:33.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:28.232" endtime="20231206 16:07:33.161"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:33.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:33.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:33.168" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:07:33.164" endtime="20231206 16:07:33.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:33.169" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:07:33.168" endtime="20231206 16:07:33.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:33.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:33.169" endtime="20231206 16:07:33.169"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.164" endtime="20231206 16:07:33.169"/>
</kw>
<msg timestamp="20231206 16:07:33.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:33.164" endtime="20231206 16:07:33.170"/>
</kw>
<msg timestamp="20231206 16:07:33.170" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:07:33.164" endtime="20231206 16:07:33.170"/>
</kw>
<msg timestamp="20231206 16:07:33.170" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:33.163" endtime="20231206 16:07:33.170"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:07:33.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:33.170" endtime="20231206 16:07:33.171"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:33.173" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:33.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:33.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:33.172" endtime="20231206 16:07:33.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:33.188" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:33.188" endtime="20231206 16:07:33.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:33.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:33.188" endtime="20231206 16:07:33.189"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.172" endtime="20231206 16:07:33.189"/>
</kw>
<msg timestamp="20231206 16:07:33.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:33.172" endtime="20231206 16:07:33.189"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.171" endtime="20231206 16:07:33.189"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.171" endtime="20231206 16:07:33.189"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.163" endtime="20231206 16:07:33.189"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.162" endtime="20231206 16:07:33.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:33.192" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:35.681" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:07:35.681" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:33.191" endtime="20231206 16:07:35.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:35.682" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:35.681" endtime="20231206 16:07:35.682"/>
</kw>
<msg timestamp="20231206 16:07:35.682" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:33.190" endtime="20231206 16:07:35.682"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:35.683" endtime="20231206 16:07:35.683"/>
</kw>
<msg timestamp="20231206 16:07:35.683" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231206 16:07:35.682" endtime="20231206 16:07:35.683"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:35.686" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:38.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:38.208" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:07:35.685" endtime="20231206 16:07:38.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:38.209" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:07:38.208" endtime="20231206 16:07:38.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:38.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:38.209" endtime="20231206 16:07:38.210"/>
</kw>
<status status="PASS" starttime="20231206 16:07:35.684" endtime="20231206 16:07:38.210"/>
</kw>
<msg timestamp="20231206 16:07:38.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:35.684" endtime="20231206 16:07:38.210"/>
</kw>
<status status="PASS" starttime="20231206 16:07:35.683" endtime="20231206 16:07:38.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:38.213" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:40.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:40.725" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3255fe86e88588712221ca682f4535c9d4d72341b5080cc39b7f04a3f7f78dd9
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:38.211" endtime="20231206 16:07:40.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:40.726" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3255fe86e88588712221ca682f4535c9d4d72341b5080cc39b7f04a3f7f78dd9
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:40.726" endtime="20231206 16:07:40.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:40.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:40.727" endtime="20231206 16:07:40.727"/>
</kw>
<status status="PASS" starttime="20231206 16:07:38.211" endtime="20231206 16:07:40.727"/>
</kw>
<msg timestamp="20231206 16:07:40.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:38.211" endtime="20231206 16:07:40.727"/>
</kw>
<msg timestamp="20231206 16:07:40.728" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3255fe86e88588712221ca682f4535c9d4d72341b5080cc39b7f04a3f7f78dd9
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:38.210" endtime="20231206 16:07:40.728"/>
</kw>
<status status="PASS" starttime="20231206 16:07:35.683" endtime="20231206 16:07:40.728"/>
</branch>
<status status="PASS" starttime="20231206 16:07:35.683" endtime="20231206 16:07:40.728"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:07:40.729" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:07:40.728" endtime="20231206 16:07:40.729"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:07:40.729" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:07:40.729" endtime="20231206 16:07:40.729"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:07:40.730" level="INFO">${secret} = ['3255fe86e88588712221ca682f4535c9d4d72341b5080cc39b7f04a3f7f78dd9']</msg>
<status status="PASS" starttime="20231206 16:07:40.729" endtime="20231206 16:07:40.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:07:40.731" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:40.730" endtime="20231206 16:07:40.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:07:40.732" level="INFO">${secret} = 3255fe86e88588712221ca682f4535c9d4d72341b5080cc39b7f04a3f7f78dd9</msg>
<status status="PASS" starttime="20231206 16:07:40.731" endtime="20231206 16:07:40.732"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:40.735" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:41.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:41.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:40.733" endtime="20231206 16:07:41.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:41.153" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:41.152" endtime="20231206 16:07:41.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:41.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:41.153" endtime="20231206 16:07:41.153"/>
</kw>
<status status="PASS" starttime="20231206 16:07:40.733" endtime="20231206 16:07:41.153"/>
</kw>
<msg timestamp="20231206 16:07:41.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:40.733" endtime="20231206 16:07:41.154"/>
</kw>
<status status="PASS" starttime="20231206 16:07:40.732" endtime="20231206 16:07:41.154"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:41.157" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:41.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:41.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:41.155" endtime="20231206 16:07:41.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:41.560" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:41.559" endtime="20231206 16:07:41.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:41.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:41.560" endtime="20231206 16:07:41.561"/>
</kw>
<status status="PASS" starttime="20231206 16:07:41.155" endtime="20231206 16:07:41.561"/>
</kw>
<msg timestamp="20231206 16:07:41.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:41.154" endtime="20231206 16:07:41.561"/>
</kw>
<status status="PASS" starttime="20231206 16:07:41.154" endtime="20231206 16:07:41.561"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:41.564" level="INFO">Running command 'aws configure set aws_secret_access_key 3255fe86e88588712221ca682f4535c9d4d72341b5080cc39b7f04a3f7f78dd9 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:41.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:41.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:41.562" endtime="20231206 16:07:41.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:41.988" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:41.988" endtime="20231206 16:07:41.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:41.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:41.988" endtime="20231206 16:07:41.989"/>
</kw>
<status status="PASS" starttime="20231206 16:07:41.562" endtime="20231206 16:07:41.989"/>
</kw>
<msg timestamp="20231206 16:07:41.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:41.562" endtime="20231206 16:07:41.989"/>
</kw>
<status status="PASS" starttime="20231206 16:07:41.561" endtime="20231206 16:07:41.989"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:41.992" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:42.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:42.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:41.991" endtime="20231206 16:07:42.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:42.419" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:42.419" endtime="20231206 16:07:42.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:42.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:42.419" endtime="20231206 16:07:42.420"/>
</kw>
<status status="PASS" starttime="20231206 16:07:41.990" endtime="20231206 16:07:42.420"/>
</kw>
<msg timestamp="20231206 16:07:42.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:41.990" endtime="20231206 16:07:42.420"/>
</kw>
<status status="PASS" starttime="20231206 16:07:41.990" endtime="20231206 16:07:42.420"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:42.423" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:42.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:42.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:42.421" endtime="20231206 16:07:42.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:42.844" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:42.844" endtime="20231206 16:07:42.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:42.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:42.844" endtime="20231206 16:07:42.845"/>
</kw>
<status status="PASS" starttime="20231206 16:07:42.421" endtime="20231206 16:07:42.845"/>
</kw>
<msg timestamp="20231206 16:07:42.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:42.421" endtime="20231206 16:07:42.845"/>
</kw>
<status status="PASS" starttime="20231206 16:07:42.420" endtime="20231206 16:07:42.846"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.190" endtime="20231206 16:07:42.846"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.189" endtime="20231206 16:07:42.846"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:07:42.846" endtime="20231206 16:07:42.846"/>
</kw>
<status status="PASS" starttime="20231206 16:07:33.162" endtime="20231206 16:07:42.846"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:42.849" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:43.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:43.494" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:07:42.847" endtime="20231206 16:07:43.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:43.495" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:07:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:07:43.495" endtime="20231206 16:07:43.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:43.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:43.496" endtime="20231206 16:07:43.496"/>
</kw>
<msg timestamp="20231206 16:07:43.496" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:07:42.847" endtime="20231206 16:07:43.496"/>
</kw>
<msg timestamp="20231206 16:07:43.496" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20231206 16:07:42.847" endtime="20231206 16:07:43.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:43.497" endtime="20231206 16:07:43.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:43.500" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:43.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:43.502" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:07:43.498" endtime="20231206 16:07:43.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:43.502" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:07:43.502" endtime="20231206 16:07:43.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:43.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:43.503" endtime="20231206 16:07:43.503"/>
</kw>
<msg timestamp="20231206 16:07:43.503" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:07:43.497" endtime="20231206 16:07:43.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:43.503" endtime="20231206 16:07:43.504"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:43.506" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:43.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:43.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:43.504" endtime="20231206 16:07:43.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:43.508" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:43.508" endtime="20231206 16:07:43.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:43.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:43.508" endtime="20231206 16:07:43.509"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.504" endtime="20231206 16:07:43.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:33.161" endtime="20231206 16:07:43.509"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:43.514" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:43.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:43.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:07:43.513" endtime="20231206 16:07:43.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:43.517" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:07:43.517" endtime="20231206 16:07:43.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:43.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:43.517" endtime="20231206 16:07:43.518"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.513" endtime="20231206 16:07:43.518"/>
</kw>
<msg timestamp="20231206 16:07:43.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:43.512" endtime="20231206 16:07:43.518"/>
</kw>
<msg timestamp="20231206 16:07:43.518" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:07:43.512" endtime="20231206 16:07:43.518"/>
</kw>
<msg timestamp="20231206 16:07:43.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:43.512" endtime="20231206 16:07:43.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:07:43.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:43.518" endtime="20231206 16:07:43.519"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:43.522" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:43.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:43.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:43.521" endtime="20231206 16:07:43.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:43.536" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:43.535" endtime="20231206 16:07:43.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:43.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:43.536" endtime="20231206 16:07:43.537"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.520" endtime="20231206 16:07:43.537"/>
</kw>
<msg timestamp="20231206 16:07:43.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:43.520" endtime="20231206 16:07:43.537"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.519" endtime="20231206 16:07:43.537"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.519" endtime="20231206 16:07:43.537"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.511" endtime="20231206 16:07:43.537"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.511" endtime="20231206 16:07:43.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:43.540" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:46.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:07:46.110" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:43.539" endtime="20231206 16:07:46.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:46.111" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:46.110" endtime="20231206 16:07:46.111"/>
</kw>
<msg timestamp="20231206 16:07:46.111" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20231206 16:07:43.538" endtime="20231206 16:07:46.111"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:46.111" endtime="20231206 16:07:46.112"/>
</kw>
<msg timestamp="20231206 16:07:46.112" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20231206 16:07:46.111" endtime="20231206 16:07:46.112"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:46.115" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:48.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:48.575" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:07:46.113" endtime="20231206 16:07:48.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:48.576" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231206 16:07:48.576" endtime="20231206 16:07:48.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:48.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:48.577" endtime="20231206 16:07:48.577"/>
</kw>
<status status="PASS" starttime="20231206 16:07:46.113" endtime="20231206 16:07:48.577"/>
</kw>
<msg timestamp="20231206 16:07:48.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:46.113" endtime="20231206 16:07:48.577"/>
</kw>
<status status="PASS" starttime="20231206 16:07:46.112" endtime="20231206 16:07:48.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:48.581" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:51.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:51.311" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:48.579" endtime="20231206 16:07:51.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:51.312" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:51.311" endtime="20231206 16:07:51.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:51.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:51.312" endtime="20231206 16:07:51.312"/>
</kw>
<status status="PASS" starttime="20231206 16:07:48.578" endtime="20231206 16:07:51.312"/>
</kw>
<msg timestamp="20231206 16:07:51.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:48.578" endtime="20231206 16:07:51.313"/>
</kw>
<msg timestamp="20231206 16:07:51.313" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231206 16:07:48.578" endtime="20231206 16:07:51.313"/>
</kw>
<status status="PASS" starttime="20231206 16:07:46.112" endtime="20231206 16:07:51.313"/>
</branch>
<status status="PASS" starttime="20231206 16:07:46.112" endtime="20231206 16:07:51.313"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:07:51.314" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:07:51.313" endtime="20231206 16:07:51.314"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:07:51.314" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:07:51.314" endtime="20231206 16:07:51.314"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:07:51.315" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:07:51.314" endtime="20231206 16:07:51.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:07:51.316" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:51.315" endtime="20231206 16:07:51.316"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:07:51.317" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:07:51.316" endtime="20231206 16:07:51.317"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:51.320" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:51.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:51.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:51.318" endtime="20231206 16:07:51.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:51.705" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:51.704" endtime="20231206 16:07:51.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:51.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:51.705" endtime="20231206 16:07:51.705"/>
</kw>
<status status="PASS" starttime="20231206 16:07:51.318" endtime="20231206 16:07:51.705"/>
</kw>
<msg timestamp="20231206 16:07:51.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:51.318" endtime="20231206 16:07:51.706"/>
</kw>
<status status="PASS" starttime="20231206 16:07:51.317" endtime="20231206 16:07:51.706"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:51.709" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:52.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:52.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:51.707" endtime="20231206 16:07:52.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:52.106" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:52.105" endtime="20231206 16:07:52.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:52.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:52.106" endtime="20231206 16:07:52.107"/>
</kw>
<status status="PASS" starttime="20231206 16:07:51.707" endtime="20231206 16:07:52.107"/>
</kw>
<msg timestamp="20231206 16:07:52.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:51.706" endtime="20231206 16:07:52.107"/>
</kw>
<status status="PASS" starttime="20231206 16:07:51.706" endtime="20231206 16:07:52.107"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:52.110" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:52.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:52.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:52.108" endtime="20231206 16:07:52.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:52.518" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:52.518" endtime="20231206 16:07:52.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:52.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:52.519" endtime="20231206 16:07:52.519"/>
</kw>
<status status="PASS" starttime="20231206 16:07:52.108" endtime="20231206 16:07:52.519"/>
</kw>
<msg timestamp="20231206 16:07:52.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:52.108" endtime="20231206 16:07:52.519"/>
</kw>
<status status="PASS" starttime="20231206 16:07:52.107" endtime="20231206 16:07:52.520"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:52.532" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:52.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:52.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:52.521" endtime="20231206 16:07:52.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:52.944" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:52.943" endtime="20231206 16:07:52.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:52.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:52.944" endtime="20231206 16:07:52.945"/>
</kw>
<status status="PASS" starttime="20231206 16:07:52.521" endtime="20231206 16:07:52.945"/>
</kw>
<msg timestamp="20231206 16:07:52.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:52.520" endtime="20231206 16:07:52.945"/>
</kw>
<status status="PASS" starttime="20231206 16:07:52.520" endtime="20231206 16:07:52.945"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:52.949" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:53.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:53.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:52.947" endtime="20231206 16:07:53.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:53.355" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:53.355" endtime="20231206 16:07:53.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:53.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:53.356" endtime="20231206 16:07:53.356"/>
</kw>
<status status="PASS" starttime="20231206 16:07:52.946" endtime="20231206 16:07:53.356"/>
</kw>
<msg timestamp="20231206 16:07:53.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:52.946" endtime="20231206 16:07:53.357"/>
</kw>
<status status="PASS" starttime="20231206 16:07:52.945" endtime="20231206 16:07:53.357"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.538" endtime="20231206 16:07:53.357"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.537" endtime="20231206 16:07:53.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:07:53.357" endtime="20231206 16:07:53.357"/>
</kw>
<status status="PASS" starttime="20231206 16:07:43.510" endtime="20231206 16:07:53.357"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:53.361" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:53.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:53.930" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231206 16:07:53.359" endtime="20231206 16:07:53.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:53.931" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:07:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:07:53.930" endtime="20231206 16:07:53.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:53.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:53.931" endtime="20231206 16:07:53.931"/>
</kw>
<msg timestamp="20231206 16:07:53.932" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231206 16:07:53.358" endtime="20231206 16:07:53.932"/>
</kw>
<msg timestamp="20231206 16:07:53.932" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231206 16:07:53.358" endtime="20231206 16:07:53.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:53.932" endtime="20231206 16:07:53.932"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:53.935" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:53.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:53.936" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:07:53.933" endtime="20231206 16:07:53.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:53.937" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:07:53.937" endtime="20231206 16:07:53.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:53.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:53.937" endtime="20231206 16:07:53.938"/>
</kw>
<msg timestamp="20231206 16:07:53.938" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:07:53.932" endtime="20231206 16:07:53.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:07:53.938" endtime="20231206 16:07:53.939"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:53.940" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:53.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:53.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:53.939" endtime="20231206 16:07:53.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:53.943" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:53.942" endtime="20231206 16:07:53.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:53.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:53.943" endtime="20231206 16:07:53.943"/>
</kw>
<status status="PASS" starttime="20231206 16:07:53.939" endtime="20231206 16:07:53.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:07:43.510" endtime="20231206 16:07:53.944"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231206 16:07:28.124" endtime="20231206 16:07:53.945"/>
</suite>
<suite id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s9-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:57.382" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:57.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:57.384" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:07:57.380" endtime="20231206 16:07:57.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:57.385" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:07:57.385" endtime="20231206 16:07:57.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:57.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:57.386" endtime="20231206 16:07:57.386"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.379" endtime="20231206 16:07:57.386"/>
</kw>
<msg timestamp="20231206 16:07:57.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:57.379" endtime="20231206 16:07:57.386"/>
</kw>
<msg timestamp="20231206 16:07:57.387" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:07:57.378" endtime="20231206 16:07:57.387"/>
</kw>
<msg timestamp="20231206 16:07:57.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:57.378" endtime="20231206 16:07:57.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:07:57.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:07:57.387" endtime="20231206 16:07:57.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:57.391" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:07:57.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:07:57.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:07:57.389" endtime="20231206 16:07:57.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:07:57.406" level="INFO"/>
<status status="PASS" starttime="20231206 16:07:57.405" endtime="20231206 16:07:57.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:07:57.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:07:57.406" endtime="20231206 16:07:57.407"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.389" endtime="20231206 16:07:57.407"/>
</kw>
<msg timestamp="20231206 16:07:57.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:57.388" endtime="20231206 16:07:57.407"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.388" endtime="20231206 16:07:57.407"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.387" endtime="20231206 16:07:57.407"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.378" endtime="20231206 16:07:57.407"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.377" endtime="20231206 16:07:57.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:07:57.410" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:00.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:00.354" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:07:57.409" endtime="20231206 16:08:00.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:00.354" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:08:00.354" endtime="20231206 16:08:00.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:00.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:00.355" endtime="20231206 16:08:00.355"/>
</kw>
<status status="PASS" starttime="20231206 16:07:57.408" endtime="20231206 16:08:00.356"/>
</kw>
<msg timestamp="20231206 16:08:00.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:07:57.408" endtime="20231206 16:08:00.356"/>
</kw>
<msg timestamp="20231206 16:08:00.356" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:07:57.407" endtime="20231206 16:08:00.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:00.356" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:08:00.356" endtime="20231206 16:08:00.356"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231206 16:08:00.357" endtime="20231206 16:08:00.357"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231206 16:07:57.376" endtime="20231206 16:08:00.357"/>
</test>
<test id="s1-s9-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:00.362" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:00.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:00.365" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:08:00.361" endtime="20231206 16:08:00.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:00.365" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:08:00.365" endtime="20231206 16:08:00.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:00.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:00.366" endtime="20231206 16:08:00.366"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.360" endtime="20231206 16:08:00.366"/>
</kw>
<msg timestamp="20231206 16:08:00.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:00.360" endtime="20231206 16:08:00.366"/>
</kw>
<msg timestamp="20231206 16:08:00.367" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:08:00.360" endtime="20231206 16:08:00.367"/>
</kw>
<msg timestamp="20231206 16:08:00.367" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:08:00.359" endtime="20231206 16:08:00.367"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:08:00.367" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:08:00.367" endtime="20231206 16:08:00.367"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:00.370" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:00.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:00.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:00.369" endtime="20231206 16:08:00.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:00.386" level="INFO"/>
<status status="PASS" starttime="20231206 16:08:00.386" endtime="20231206 16:08:00.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:00.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:00.387" endtime="20231206 16:08:00.387"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.369" endtime="20231206 16:08:00.387"/>
</kw>
<msg timestamp="20231206 16:08:00.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:00.368" endtime="20231206 16:08:00.387"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.368" endtime="20231206 16:08:00.388"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.368" endtime="20231206 16:08:00.388"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.359" endtime="20231206 16:08:00.388"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.358" endtime="20231206 16:08:00.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:00.391" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:03.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:03.157" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:08:00.389" endtime="20231206 16:08:03.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:03.158" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:08:03.158" endtime="20231206 16:08:03.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:03.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:03.158" endtime="20231206 16:08:03.159"/>
</kw>
<status status="PASS" starttime="20231206 16:08:00.389" endtime="20231206 16:08:03.159"/>
</kw>
<msg timestamp="20231206 16:08:03.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:00.388" endtime="20231206 16:08:03.159"/>
</kw>
<msg timestamp="20231206 16:08:03.159" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:08:00.388" endtime="20231206 16:08:03.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:03.160" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20231206 16:08:03.160" endtime="20231206 16:08:03.160"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231206 16:08:03.160" endtime="20231206 16:08:03.160"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231206 16:08:00.358" endtime="20231206 16:08:03.161"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231206 16:07:57.321" endtime="20231206 16:08:03.162"/>
</suite>
<suite id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:06.470" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:06.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:06.473" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:08:06.469" endtime="20231206 16:08:06.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:06.474" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:08:06.473" endtime="20231206 16:08:06.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:06.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:06.474" endtime="20231206 16:08:06.474"/>
</kw>
<status status="PASS" starttime="20231206 16:08:06.469" endtime="20231206 16:08:06.474"/>
</kw>
<msg timestamp="20231206 16:08:06.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:06.468" endtime="20231206 16:08:06.475"/>
</kw>
<msg timestamp="20231206 16:08:06.475" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:08:06.468" endtime="20231206 16:08:06.475"/>
</kw>
<msg timestamp="20231206 16:08:06.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:08:06.468" endtime="20231206 16:08:06.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:08:06.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:08:06.475" endtime="20231206 16:08:06.476"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:06.478" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:06.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:06.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:06.477" endtime="20231206 16:08:06.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:06.519" level="INFO"/>
<status status="PASS" starttime="20231206 16:08:06.519" endtime="20231206 16:08:06.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:06.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:06.519" endtime="20231206 16:08:06.520"/>
</kw>
<status status="PASS" starttime="20231206 16:08:06.477" endtime="20231206 16:08:06.520"/>
</kw>
<msg timestamp="20231206 16:08:06.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:06.476" endtime="20231206 16:08:06.520"/>
</kw>
<status status="PASS" starttime="20231206 16:08:06.476" endtime="20231206 16:08:06.520"/>
</kw>
<status status="PASS" starttime="20231206 16:08:06.476" endtime="20231206 16:08:06.520"/>
</kw>
<status status="PASS" starttime="20231206 16:08:06.467" endtime="20231206 16:08:06.520"/>
</kw>
<status status="PASS" starttime="20231206 16:08:06.467" endtime="20231206 16:08:06.520"/>
</kw>
<test id="s1-s10-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:06.523" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:09.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:09.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:06.522" endtime="20231206 16:08:09.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:09.750" level="INFO"/>
<status status="PASS" starttime="20231206 16:08:09.749" endtime="20231206 16:08:09.750"/>
</kw>
<msg timestamp="20231206 16:08:09.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:06.521" endtime="20231206 16:08:09.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:09.754" endtime="20231206 16:08:09.755"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:09.758" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:12.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:12.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:09.756" endtime="20231206 16:08:12.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:12.690" level="INFO"/>
<status status="PASS" starttime="20231206 16:08:12.689" endtime="20231206 16:08:12.690"/>
</kw>
<msg timestamp="20231206 16:08:12.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:09.755" endtime="20231206 16:08:12.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:12.690" endtime="20231206 16:08:12.690"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:12.693" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:15.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:08:15.793" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231206 16:08:12.691" endtime="20231206 16:08:15.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:15.794" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231206 16:08:15.794" endtime="20231206 16:08:15.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:15.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:15.795" endtime="20231206 16:08:15.795"/>
</kw>
<msg timestamp="20231206 16:08:15.795" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231206 16:08:12.691" endtime="20231206 16:08:15.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:15.796" endtime="20231206 16:08:15.796"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:08:06.521" endtime="20231206 16:08:15.796"/>
</test>
<test id="s1-s10-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="37">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:15.800" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:18.879" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:08:18.880" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231206 16:08:15.798" endtime="20231206 16:08:18.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:18.880" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231206 16:08:18.880" endtime="20231206 16:08:18.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:18.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:18.881" endtime="20231206 16:08:18.881"/>
</kw>
<msg timestamp="20231206 16:08:18.881" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231206 16:08:15.797" endtime="20231206 16:08:18.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:18.882" endtime="20231206 16:08:18.882"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:08:15.797" endtime="20231206 16:08:18.882"/>
</test>
<test id="s1-s10-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="41">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:18.885" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:21.978" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:08:21.978" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231206 16:08:18.884" endtime="20231206 16:08:21.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:21.979" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231206 16:08:21.979" endtime="20231206 16:08:21.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:21.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:21.979" endtime="20231206 16:08:21.980"/>
</kw>
<msg timestamp="20231206 16:08:21.980" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20231206 16:08:18.883" endtime="20231206 16:08:21.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:21.980" endtime="20231206 16:08:21.981"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:08:18.882" endtime="20231206 16:08:21.981"/>
</test>
<test id="s1-s10-t4" name="Attempt to delete when snapshot feature is disabled" line="45">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:21.984" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:25.066" level="INFO">${rc} = 255</msg>
<msg timestamp="20231206 16:08:25.066" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231206 16:08:21.983" endtime="20231206 16:08:25.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:25.067" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20231206 16:08:25.066" endtime="20231206 16:08:25.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:25.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:25.067" endtime="20231206 16:08:25.067"/>
</kw>
<msg timestamp="20231206 16:08:25.068" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20231206 16:08:21.982" endtime="20231206 16:08:25.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:25.068" endtime="20231206 16:08:25.068"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:08:21.981" endtime="20231206 16:08:25.068"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20231206 16:08:06.423" endtime="20231206 16:08:25.069"/>
</suite>
<suite id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s11-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:28.435" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:28.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:28.437" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:08:28.433" endtime="20231206 16:08:28.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:28.438" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:08:28.438" endtime="20231206 16:08:28.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:28.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:28.438" endtime="20231206 16:08:28.439"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.433" endtime="20231206 16:08:28.439"/>
</kw>
<msg timestamp="20231206 16:08:28.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:28.433" endtime="20231206 16:08:28.439"/>
</kw>
<msg timestamp="20231206 16:08:28.439" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:08:28.432" endtime="20231206 16:08:28.439"/>
</kw>
<msg timestamp="20231206 16:08:28.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:08:28.432" endtime="20231206 16:08:28.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:08:28.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:08:28.440" endtime="20231206 16:08:28.440"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:28.443" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:28.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:28.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:08:28.442" endtime="20231206 16:08:28.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:28.482" level="INFO"/>
<status status="PASS" starttime="20231206 16:08:28.482" endtime="20231206 16:08:28.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:28.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:28.482" endtime="20231206 16:08:28.483"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.441" endtime="20231206 16:08:28.483"/>
</kw>
<msg timestamp="20231206 16:08:28.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:28.441" endtime="20231206 16:08:28.483"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.441" endtime="20231206 16:08:28.483"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.440" endtime="20231206 16:08:28.483"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.432" endtime="20231206 16:08:28.483"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.431" endtime="20231206 16:08:28.483"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:08:28.483" endtime="20231206 16:08:28.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:08:28.486" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:08:36.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:08:36.651" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231206 16:08:28.485" endtime="20231206 16:08:36.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:08:36.652" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231206 16:08:36.651" endtime="20231206 16:08:36.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:08:36.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:08:36.652" endtime="20231206 16:08:36.653"/>
</kw>
<status status="PASS" starttime="20231206 16:08:28.485" endtime="20231206 16:08:36.653"/>
</kw>
<msg timestamp="20231206 16:08:36.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:08:28.484" endtime="20231206 16:08:36.653"/>
</kw>
<msg timestamp="20231206 16:08:36.653" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231206 16:08:28.484" endtime="20231206 16:08:36.653"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:08:36.654" endtime="20231206 16:08:36.654"/>
</kw>
<status status="PASS" starttime="20231206 16:08:36.653" endtime="20231206 16:08:36.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:08:28.431" endtime="20231206 16:08:36.654"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20231206 16:08:28.388" endtime="20231206 16:08:36.655"/>
</suite>
<suite id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s12-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:08.428" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:08.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:08.430" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:08.425" endtime="20231206 16:10:08.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:08.431" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:08.430" endtime="20231206 16:10:08.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:08.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:08.431" endtime="20231206 16:10:08.431"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.425" endtime="20231206 16:10:08.432"/>
</kw>
<msg timestamp="20231206 16:10:08.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:08.425" endtime="20231206 16:10:08.432"/>
</kw>
<msg timestamp="20231206 16:10:08.433" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:08.425" endtime="20231206 16:10:08.433"/>
</kw>
<msg timestamp="20231206 16:10:08.433" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:08.424" endtime="20231206 16:10:08.433"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:08.433" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:08.433" endtime="20231206 16:10:08.433"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:08.436" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:08.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:08.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:08.435" endtime="20231206 16:10:08.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:08.460" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:08.459" endtime="20231206 16:10:08.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:08.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:08.460" endtime="20231206 16:10:08.460"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.434" endtime="20231206 16:10:08.461"/>
</kw>
<msg timestamp="20231206 16:10:08.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:08.434" endtime="20231206 16:10:08.461"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.434" endtime="20231206 16:10:08.461"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.433" endtime="20231206 16:10:08.461"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.424" endtime="20231206 16:10:08.461"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.424" endtime="20231206 16:10:08.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:08.464" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:08.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:08.465" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231206 16:10:08.462" endtime="20231206 16:10:08.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:08.466" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231206 16:10:08.466" endtime="20231206 16:10:08.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:08.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:08.466" endtime="20231206 16:10:08.467"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.462" endtime="20231206 16:10:08.467"/>
</kw>
<msg timestamp="20231206 16:10:08.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:08.462" endtime="20231206 16:10:08.467"/>
</kw>
<msg timestamp="20231206 16:10:08.467" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231206 16:10:08.462" endtime="20231206 16:10:08.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:08.468" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231206 16:10:08.468" endtime="20231206 16:10:08.468"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:10:08.468" endtime="20231206 16:10:08.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:08.470" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:11.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:11.036" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:10:08.469" endtime="20231206 16:10:11.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:11.037" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:10:11.037" endtime="20231206 16:10:11.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:11.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:11.038" endtime="20231206 16:10:11.038"/>
</kw>
<status status="PASS" starttime="20231206 16:10:08.469" endtime="20231206 16:10:11.038"/>
</kw>
<msg timestamp="20231206 16:10:11.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:08.469" endtime="20231206 16:10:11.039"/>
</kw>
<msg timestamp="20231206 16:10:11.039" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:10:08.468" endtime="20231206 16:10:11.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:11.039" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231206 16:10:11.039" endtime="20231206 16:10:11.039"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231206 16:10:11.039" endtime="20231206 16:10:11.040"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231206 16:10:08.423" endtime="20231206 16:10:11.040"/>
</test>
<test id="s1-s12-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:11.045" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:11.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:11.047" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:11.043" endtime="20231206 16:10:11.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:11.047" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:11.047" endtime="20231206 16:10:11.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:11.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:11.047" endtime="20231206 16:10:11.048"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.043" endtime="20231206 16:10:11.048"/>
</kw>
<msg timestamp="20231206 16:10:11.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:11.043" endtime="20231206 16:10:11.048"/>
</kw>
<msg timestamp="20231206 16:10:11.049" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:11.042" endtime="20231206 16:10:11.049"/>
</kw>
<msg timestamp="20231206 16:10:11.049" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:11.042" endtime="20231206 16:10:11.049"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:11.049" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:11.049" endtime="20231206 16:10:11.049"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:11.052" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:11.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:11.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:11.051" endtime="20231206 16:10:11.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:11.066" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:11.066" endtime="20231206 16:10:11.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:11.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:11.066" endtime="20231206 16:10:11.067"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.050" endtime="20231206 16:10:11.067"/>
</kw>
<msg timestamp="20231206 16:10:11.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:11.050" endtime="20231206 16:10:11.067"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.050" endtime="20231206 16:10:11.068"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.050" endtime="20231206 16:10:11.068"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.041" endtime="20231206 16:10:11.068"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.041" endtime="20231206 16:10:11.068"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:10:11.068" endtime="20231206 16:10:11.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:11.070" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:13.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:13.165" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:10:11.069" endtime="20231206 16:10:13.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:13.166" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:10:13.166" endtime="20231206 16:10:13.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:13.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:13.166" endtime="20231206 16:10:13.167"/>
</kw>
<status status="PASS" starttime="20231206 16:10:11.069" endtime="20231206 16:10:13.167"/>
</kw>
<msg timestamp="20231206 16:10:13.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:11.069" endtime="20231206 16:10:13.167"/>
</kw>
<msg timestamp="20231206 16:10:13.168" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:10:11.068" endtime="20231206 16:10:13.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:13.168" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231206 16:10:13.168" endtime="20231206 16:10:13.168"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231206 16:10:13.168" endtime="20231206 16:10:13.168"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231206 16:10:11.040" endtime="20231206 16:10:13.169"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231206 16:10:08.385" endtime="20231206 16:10:13.169"/>
</suite>
<suite id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:16.237" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:16.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:16.239" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:16.234" endtime="20231206 16:10:16.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:16.239" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:16.239" endtime="20231206 16:10:16.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:16.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:16.239" endtime="20231206 16:10:16.240"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.234" endtime="20231206 16:10:16.240"/>
</kw>
<msg timestamp="20231206 16:10:16.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:16.233" endtime="20231206 16:10:16.241"/>
</kw>
<msg timestamp="20231206 16:10:16.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:16.233" endtime="20231206 16:10:16.241"/>
</kw>
<msg timestamp="20231206 16:10:16.241" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:16.233" endtime="20231206 16:10:16.241"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:16.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:16.241" endtime="20231206 16:10:16.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:16.244" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:16.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:16.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:16.243" endtime="20231206 16:10:16.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:16.257" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:16.256" endtime="20231206 16:10:16.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:16.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:16.257" endtime="20231206 16:10:16.257"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.243" endtime="20231206 16:10:16.257"/>
</kw>
<msg timestamp="20231206 16:10:16.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:16.242" endtime="20231206 16:10:16.258"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.242" endtime="20231206 16:10:16.258"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.242" endtime="20231206 16:10:16.258"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.233" endtime="20231206 16:10:16.258"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.232" endtime="20231206 16:10:16.258"/>
</kw>
<test id="s1-s13-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:10:16.260" level="INFO">${random} = 48926</msg>
<status status="PASS" starttime="20231206 16:10:16.259" endtime="20231206 16:10:16.260"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:16.262" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-48926 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:20.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:20.351" level="INFO">${output} = 2023-12-06 16:10:19,084 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:19,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:10:16.261" endtime="20231206 16:10:20.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:20.352" level="INFO">2023-12-06 16:10:19,084 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:19,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:10:19,166 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231206 16:10:20.351" endtime="20231206 16:10:20.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:20.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:20.352" endtime="20231206 16:10:20.352"/>
</kw>
<status status="PASS" starttime="20231206 16:10:16.260" endtime="20231206 16:10:20.353"/>
</kw>
<msg timestamp="20231206 16:10:20.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:16.260" endtime="20231206 16:10:20.353"/>
</kw>
<msg timestamp="20231206 16:10:20.353" level="INFO">${output} = 2023-12-06 16:10:19,084 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:19,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:10:16.260" endtime="20231206 16:10:20.353"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:20.353" endtime="20231206 16:10:20.354"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:20.356" level="INFO">Running command 'cat /tmp/key-48926 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:20.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:20.357" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:20.354" endtime="20231206 16:10:20.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:20.358" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:20.357" endtime="20231206 16:10:20.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:20.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:20.358" endtime="20231206 16:10:20.358"/>
</kw>
<msg timestamp="20231206 16:10:20.359" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:20.354" endtime="20231206 16:10:20.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:20.359" endtime="20231206 16:10:20.359"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:20.361" level="INFO">Running command 'rm /tmp/key-48926 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:20.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:20.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:20.360" endtime="20231206 16:10:20.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:20.363" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:20.362" endtime="20231206 16:10:20.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:20.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:20.363" endtime="20231206 16:10:20.363"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.359" endtime="20231206 16:10:20.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:16.258" endtime="20231206 16:10:20.364"/>
</test>
<test id="s1-s13-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:20.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:20.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:20.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:20.367" endtime="20231206 16:10:20.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:20.371" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:20.371" endtime="20231206 16:10:20.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:20.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:20.371" endtime="20231206 16:10:20.371"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.367" endtime="20231206 16:10:20.372"/>
</kw>
<msg timestamp="20231206 16:10:20.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:20.367" endtime="20231206 16:10:20.372"/>
</kw>
<msg timestamp="20231206 16:10:20.372" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:20.366" endtime="20231206 16:10:20.372"/>
</kw>
<msg timestamp="20231206 16:10:20.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:20.366" endtime="20231206 16:10:20.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:20.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:20.373" endtime="20231206 16:10:20.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:20.376" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:20.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:20.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:20.375" endtime="20231206 16:10:20.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:20.391" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:20.390" endtime="20231206 16:10:20.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:20.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:20.391" endtime="20231206 16:10:20.391"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.374" endtime="20231206 16:10:20.391"/>
</kw>
<msg timestamp="20231206 16:10:20.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:20.374" endtime="20231206 16:10:20.392"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.374" endtime="20231206 16:10:20.392"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.373" endtime="20231206 16:10:20.392"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.366" endtime="20231206 16:10:20.392"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.365" endtime="20231206 16:10:20.392"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:20.395" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:22.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:22.420" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:20.393" endtime="20231206 16:10:22.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:22.421" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:22.420" endtime="20231206 16:10:22.421"/>
</kw>
<msg timestamp="20231206 16:10:22.422" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:20.393" endtime="20231206 16:10:22.422"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:10:22.424" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:10:22.423" endtime="20231206 16:10:22.424"/>
</kw>
<msg timestamp="20231206 16:10:22.424" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:10:22.422" endtime="20231206 16:10:22.424"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:22.425" endtime="20231206 16:10:22.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:22.427" endtime="20231206 16:10:22.427"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:10:22.425" endtime="20231206 16:10:22.427"/>
</branch>
<status status="PASS" starttime="20231206 16:10:22.424" endtime="20231206 16:10:22.427"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:22.428" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:22.427" endtime="20231206 16:10:22.428"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:10:22.429" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:22.429" endtime="20231206 16:10:22.429"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:22.430" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:10:22.429" endtime="20231206 16:10:22.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:22.432" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:22.430" endtime="20231206 16:10:22.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:22.434" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:22.433" endtime="20231206 16:10:22.434"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:22.440" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:22.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:22.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:22.437" endtime="20231206 16:10:22.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:22.849" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:22.848" endtime="20231206 16:10:22.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:22.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:22.849" endtime="20231206 16:10:22.849"/>
</kw>
<status status="PASS" starttime="20231206 16:10:22.435" endtime="20231206 16:10:22.849"/>
</kw>
<msg timestamp="20231206 16:10:22.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:22.435" endtime="20231206 16:10:22.850"/>
</kw>
<status status="PASS" starttime="20231206 16:10:22.434" endtime="20231206 16:10:22.850"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:22.852" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:23.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:23.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:22.851" endtime="20231206 16:10:23.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:23.247" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:23.247" endtime="20231206 16:10:23.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:23.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:23.247" endtime="20231206 16:10:23.248"/>
</kw>
<status status="PASS" starttime="20231206 16:10:22.851" endtime="20231206 16:10:23.248"/>
</kw>
<msg timestamp="20231206 16:10:23.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:22.850" endtime="20231206 16:10:23.249"/>
</kw>
<status status="PASS" starttime="20231206 16:10:22.850" endtime="20231206 16:10:23.249"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:23.251" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:23.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:23.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:23.250" endtime="20231206 16:10:23.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:23.646" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:23.645" endtime="20231206 16:10:23.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:23.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:23.646" endtime="20231206 16:10:23.646"/>
</kw>
<status status="PASS" starttime="20231206 16:10:23.249" endtime="20231206 16:10:23.646"/>
</kw>
<msg timestamp="20231206 16:10:23.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:23.249" endtime="20231206 16:10:23.647"/>
</kw>
<status status="PASS" starttime="20231206 16:10:23.249" endtime="20231206 16:10:23.647"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:23.649" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:24.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:24.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:23.648" endtime="20231206 16:10:24.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:24.032" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:24.031" endtime="20231206 16:10:24.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:24.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:24.032" endtime="20231206 16:10:24.032"/>
</kw>
<status status="PASS" starttime="20231206 16:10:23.648" endtime="20231206 16:10:24.033"/>
</kw>
<msg timestamp="20231206 16:10:24.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:23.647" endtime="20231206 16:10:24.033"/>
</kw>
<status status="PASS" starttime="20231206 16:10:23.647" endtime="20231206 16:10:24.033"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:24.036" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:24.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:24.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:24.034" endtime="20231206 16:10:24.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:24.458" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:24.457" endtime="20231206 16:10:24.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:24.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:24.458" endtime="20231206 16:10:24.459"/>
</kw>
<status status="PASS" starttime="20231206 16:10:24.034" endtime="20231206 16:10:24.459"/>
</kw>
<msg timestamp="20231206 16:10:24.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:24.034" endtime="20231206 16:10:24.459"/>
</kw>
<status status="PASS" starttime="20231206 16:10:24.033" endtime="20231206 16:10:24.460"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.393" endtime="20231206 16:10:24.460"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.392" endtime="20231206 16:10:24.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:10:24.460" endtime="20231206 16:10:24.460"/>
</kw>
<status status="PASS" starttime="20231206 16:10:20.365" endtime="20231206 16:10:24.460"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:24.463" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:26.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:26.780" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:24.462" endtime="20231206 16:10:26.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:26.781" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:10:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:10:26.781" endtime="20231206 16:10:26.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:26.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:26.781" endtime="20231206 16:10:26.782"/>
</kw>
<msg timestamp="20231206 16:10:26.782" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:24.461" endtime="20231206 16:10:26.782"/>
</kw>
<msg timestamp="20231206 16:10:26.782" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:38 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:24.461" endtime="20231206 16:10:26.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:26.782" endtime="20231206 16:10:26.783"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:26.785" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:26.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:26.787" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:26.783" endtime="20231206 16:10:26.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:26.788" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:26.787" endtime="20231206 16:10:26.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:26.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:26.788" endtime="20231206 16:10:26.788"/>
</kw>
<msg timestamp="20231206 16:10:26.788" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:26.783" endtime="20231206 16:10:26.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:26.788" endtime="20231206 16:10:26.789"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:26.791" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:26.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:26.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:26.789" endtime="20231206 16:10:26.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:26.793" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:26.793" endtime="20231206 16:10:26.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:26.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:26.793" endtime="20231206 16:10:26.794"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.789" endtime="20231206 16:10:26.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:20.364" endtime="20231206 16:10:26.794"/>
</test>
<test id="s1-s13-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:26.799" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:26.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:26.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:26.798" endtime="20231206 16:10:26.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:26.802" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:26.802" endtime="20231206 16:10:26.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:26.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:26.802" endtime="20231206 16:10:26.803"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.797" endtime="20231206 16:10:26.803"/>
</kw>
<msg timestamp="20231206 16:10:26.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:26.797" endtime="20231206 16:10:26.804"/>
</kw>
<msg timestamp="20231206 16:10:26.804" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:26.797" endtime="20231206 16:10:26.804"/>
</kw>
<msg timestamp="20231206 16:10:26.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:26.796" endtime="20231206 16:10:26.804"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:26.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:26.804" endtime="20231206 16:10:26.804"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:26.807" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:26.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:26.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:26.806" endtime="20231206 16:10:26.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:26.822" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:26.822" endtime="20231206 16:10:26.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:26.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:26.823" endtime="20231206 16:10:26.823"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.805" endtime="20231206 16:10:26.823"/>
</kw>
<msg timestamp="20231206 16:10:26.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:26.805" endtime="20231206 16:10:26.824"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.805" endtime="20231206 16:10:26.824"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.805" endtime="20231206 16:10:26.824"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.796" endtime="20231206 16:10:26.824"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.796" endtime="20231206 16:10:26.824"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:26.827" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:28.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:28.801" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:26.825" endtime="20231206 16:10:28.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:28.802" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:28.802" endtime="20231206 16:10:28.802"/>
</kw>
<msg timestamp="20231206 16:10:28.803" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:26.825" endtime="20231206 16:10:28.803"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:10:28.805" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:10:28.804" endtime="20231206 16:10:28.805"/>
</kw>
<msg timestamp="20231206 16:10:28.805" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:10:28.803" endtime="20231206 16:10:28.805"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:28.806" endtime="20231206 16:10:28.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:28.806" endtime="20231206 16:10:28.806"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:10:28.806" endtime="20231206 16:10:28.806"/>
</branch>
<status status="PASS" starttime="20231206 16:10:28.805" endtime="20231206 16:10:28.806"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:28.807" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:28.806" endtime="20231206 16:10:28.807"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:10:28.808" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:28.807" endtime="20231206 16:10:28.808"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:28.808" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:10:28.808" endtime="20231206 16:10:28.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:28.810" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:28.809" endtime="20231206 16:10:28.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:28.812" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:28.810" endtime="20231206 16:10:28.812"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:28.815" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:29.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:29.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:28.813" endtime="20231206 16:10:29.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:29.219" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:29.219" endtime="20231206 16:10:29.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:29.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:29.219" endtime="20231206 16:10:29.220"/>
</kw>
<status status="PASS" starttime="20231206 16:10:28.813" endtime="20231206 16:10:29.220"/>
</kw>
<msg timestamp="20231206 16:10:29.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:28.812" endtime="20231206 16:10:29.221"/>
</kw>
<status status="PASS" starttime="20231206 16:10:28.812" endtime="20231206 16:10:29.221"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:29.223" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:29.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:29.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:29.222" endtime="20231206 16:10:29.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:29.605" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:29.605" endtime="20231206 16:10:29.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:29.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:29.606" endtime="20231206 16:10:29.606"/>
</kw>
<status status="PASS" starttime="20231206 16:10:29.221" endtime="20231206 16:10:29.606"/>
</kw>
<msg timestamp="20231206 16:10:29.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:29.221" endtime="20231206 16:10:29.607"/>
</kw>
<status status="PASS" starttime="20231206 16:10:29.221" endtime="20231206 16:10:29.607"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:29.609" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:29.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:29.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:29.608" endtime="20231206 16:10:29.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:29.991" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:29.991" endtime="20231206 16:10:29.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:29.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:29.991" endtime="20231206 16:10:29.992"/>
</kw>
<status status="PASS" starttime="20231206 16:10:29.608" endtime="20231206 16:10:29.992"/>
</kw>
<msg timestamp="20231206 16:10:29.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:29.607" endtime="20231206 16:10:29.993"/>
</kw>
<status status="PASS" starttime="20231206 16:10:29.607" endtime="20231206 16:10:29.993"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:29.995" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:30.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:30.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:29.994" endtime="20231206 16:10:30.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:30.365" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:30.365" endtime="20231206 16:10:30.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:30.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:30.365" endtime="20231206 16:10:30.366"/>
</kw>
<status status="PASS" starttime="20231206 16:10:29.993" endtime="20231206 16:10:30.366"/>
</kw>
<msg timestamp="20231206 16:10:30.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:29.993" endtime="20231206 16:10:30.367"/>
</kw>
<status status="PASS" starttime="20231206 16:10:29.993" endtime="20231206 16:10:30.367"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:30.369" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:30.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:30.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:30.368" endtime="20231206 16:10:30.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:30.750" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:30.749" endtime="20231206 16:10:30.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:30.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:30.750" endtime="20231206 16:10:30.750"/>
</kw>
<status status="PASS" starttime="20231206 16:10:30.367" endtime="20231206 16:10:30.750"/>
</kw>
<msg timestamp="20231206 16:10:30.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:30.367" endtime="20231206 16:10:30.751"/>
</kw>
<status status="PASS" starttime="20231206 16:10:30.367" endtime="20231206 16:10:30.751"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.825" endtime="20231206 16:10:30.751"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.824" endtime="20231206 16:10:30.751"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:10:30.751" endtime="20231206 16:10:30.752"/>
</kw>
<status status="PASS" starttime="20231206 16:10:26.795" endtime="20231206 16:10:30.752"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:30.754" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:31.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:31.507" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:30.753" endtime="20231206 16:10:31.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:31.508" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:10:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:10:31.507" endtime="20231206 16:10:31.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:31.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:31.508" endtime="20231206 16:10:31.508"/>
</kw>
<msg timestamp="20231206 16:10:31.509" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:30.752" endtime="20231206 16:10:31.509"/>
</kw>
<msg timestamp="20231206 16:10:31.509" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:06:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:30.752" endtime="20231206 16:10:31.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:31.509" endtime="20231206 16:10:31.509"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:31.512" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:31.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:31.513" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:10:31.510" endtime="20231206 16:10:31.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:31.514" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:10:31.513" endtime="20231206 16:10:31.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:31.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:31.514" endtime="20231206 16:10:31.515"/>
</kw>
<msg timestamp="20231206 16:10:31.515" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:10:31.509" endtime="20231206 16:10:31.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:31.515" endtime="20231206 16:10:31.515"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:31.517" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:31.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:31.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:31.516" endtime="20231206 16:10:31.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:31.520" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:31.519" endtime="20231206 16:10:31.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:31.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:31.520" endtime="20231206 16:10:31.520"/>
</kw>
<status status="PASS" starttime="20231206 16:10:31.516" endtime="20231206 16:10:31.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:26.795" endtime="20231206 16:10:31.521"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231206 16:10:16.168" endtime="20231206 16:10:31.522"/>
</suite>
<suite id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:34.647" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:34.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:34.649" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:34.644" endtime="20231206 16:10:34.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:34.649" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:34.649" endtime="20231206 16:10:34.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:34.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:34.650" endtime="20231206 16:10:34.650"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.643" endtime="20231206 16:10:34.650"/>
</kw>
<msg timestamp="20231206 16:10:34.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:34.643" endtime="20231206 16:10:34.651"/>
</kw>
<msg timestamp="20231206 16:10:34.651" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:34.643" endtime="20231206 16:10:34.651"/>
</kw>
<msg timestamp="20231206 16:10:34.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:34.642" endtime="20231206 16:10:34.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:34.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:34.652" endtime="20231206 16:10:34.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:34.655" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:34.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:34.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:34.653" endtime="20231206 16:10:34.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:34.670" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:34.670" endtime="20231206 16:10:34.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:34.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:34.671" endtime="20231206 16:10:34.671"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.653" endtime="20231206 16:10:34.671"/>
</kw>
<msg timestamp="20231206 16:10:34.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:34.653" endtime="20231206 16:10:34.672"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.653" endtime="20231206 16:10:34.672"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.652" endtime="20231206 16:10:34.672"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.642" endtime="20231206 16:10:34.672"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.642" endtime="20231206 16:10:34.672"/>
</kw>
<test id="s1-s14-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:10:34.674" level="INFO">${random} = 27905</msg>
<status status="PASS" starttime="20231206 16:10:34.673" endtime="20231206 16:10:34.674"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:34.677" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-27905 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:38.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:38.474" level="INFO">${output} = 2023-12-06 16:10:37,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:37,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:10:34.675" endtime="20231206 16:10:38.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:38.475" level="INFO">2023-12-06 16:10:37,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:37,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:10:37,383 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231206 16:10:38.475" endtime="20231206 16:10:38.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:38.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:38.475" endtime="20231206 16:10:38.476"/>
</kw>
<status status="PASS" starttime="20231206 16:10:34.675" endtime="20231206 16:10:38.476"/>
</kw>
<msg timestamp="20231206 16:10:38.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:34.675" endtime="20231206 16:10:38.476"/>
</kw>
<msg timestamp="20231206 16:10:38.477" level="INFO">${output} = 2023-12-06 16:10:37,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:37,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:10:34.674" endtime="20231206 16:10:38.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:38.477" endtime="20231206 16:10:38.477"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:38.479" level="INFO">Running command 'cat /tmp/key-27905 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:38.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:38.481" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:38.478" endtime="20231206 16:10:38.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:38.482" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:38.481" endtime="20231206 16:10:38.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:38.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:38.482" endtime="20231206 16:10:38.482"/>
</kw>
<msg timestamp="20231206 16:10:38.483" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:38.477" endtime="20231206 16:10:38.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:38.483" endtime="20231206 16:10:38.483"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:38.485" level="INFO">Running command 'rm /tmp/key-27905 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:38.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:38.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:38.484" endtime="20231206 16:10:38.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:38.487" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:38.487" endtime="20231206 16:10:38.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:38.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:38.488" endtime="20231206 16:10:38.488"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.483" endtime="20231206 16:10:38.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:34.673" endtime="20231206 16:10:38.488"/>
</test>
<test id="s1-s14-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:38.494" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:38.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:38.496" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:38.492" endtime="20231206 16:10:38.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:38.497" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:38.496" endtime="20231206 16:10:38.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:38.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:38.497" endtime="20231206 16:10:38.497"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.492" endtime="20231206 16:10:38.497"/>
</kw>
<msg timestamp="20231206 16:10:38.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:38.492" endtime="20231206 16:10:38.498"/>
</kw>
<msg timestamp="20231206 16:10:38.498" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:38.491" endtime="20231206 16:10:38.498"/>
</kw>
<msg timestamp="20231206 16:10:38.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:38.491" endtime="20231206 16:10:38.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:38.499" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:38.499" endtime="20231206 16:10:38.499"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:38.502" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:38.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:38.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:38.500" endtime="20231206 16:10:38.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:38.518" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:38.518" endtime="20231206 16:10:38.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:38.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:38.518" endtime="20231206 16:10:38.519"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.500" endtime="20231206 16:10:38.519"/>
</kw>
<msg timestamp="20231206 16:10:38.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:38.500" endtime="20231206 16:10:38.520"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.499" endtime="20231206 16:10:38.520"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.499" endtime="20231206 16:10:38.520"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.490" endtime="20231206 16:10:38.520"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.490" endtime="20231206 16:10:38.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:38.523" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:40.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:40.512" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:38.521" endtime="20231206 16:10:40.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:40.513" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:40.513" endtime="20231206 16:10:40.513"/>
</kw>
<msg timestamp="20231206 16:10:40.514" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:38.521" endtime="20231206 16:10:40.514"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:10:40.515" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:10:40.514" endtime="20231206 16:10:40.515"/>
</kw>
<msg timestamp="20231206 16:10:40.515" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:10:40.514" endtime="20231206 16:10:40.515"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:40.516" endtime="20231206 16:10:40.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:40.516" endtime="20231206 16:10:40.516"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:10:40.515" endtime="20231206 16:10:40.516"/>
</branch>
<status status="PASS" starttime="20231206 16:10:40.515" endtime="20231206 16:10:40.516"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:40.517" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:40.516" endtime="20231206 16:10:40.517"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:10:40.517" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:40.517" endtime="20231206 16:10:40.517"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:40.518" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:10:40.517" endtime="20231206 16:10:40.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:40.519" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:40.518" endtime="20231206 16:10:40.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:40.520" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:40.519" endtime="20231206 16:10:40.520"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:40.523" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:40.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:40.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:40.521" endtime="20231206 16:10:40.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:40.920" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:40.920" endtime="20231206 16:10:40.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:40.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:40.921" endtime="20231206 16:10:40.921"/>
</kw>
<status status="PASS" starttime="20231206 16:10:40.520" endtime="20231206 16:10:40.921"/>
</kw>
<msg timestamp="20231206 16:10:40.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:40.520" endtime="20231206 16:10:40.922"/>
</kw>
<status status="PASS" starttime="20231206 16:10:40.520" endtime="20231206 16:10:40.922"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:40.924" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:41.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:41.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:40.923" endtime="20231206 16:10:41.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:41.306" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:41.306" endtime="20231206 16:10:41.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:41.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:41.307" endtime="20231206 16:10:41.307"/>
</kw>
<status status="PASS" starttime="20231206 16:10:40.922" endtime="20231206 16:10:41.307"/>
</kw>
<msg timestamp="20231206 16:10:41.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:40.922" endtime="20231206 16:10:41.308"/>
</kw>
<status status="PASS" starttime="20231206 16:10:40.922" endtime="20231206 16:10:41.308"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:41.310" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:41.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:41.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:41.309" endtime="20231206 16:10:41.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:41.696" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:41.696" endtime="20231206 16:10:41.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:41.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:41.697" endtime="20231206 16:10:41.697"/>
</kw>
<status status="PASS" starttime="20231206 16:10:41.308" endtime="20231206 16:10:41.697"/>
</kw>
<msg timestamp="20231206 16:10:41.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:41.308" endtime="20231206 16:10:41.698"/>
</kw>
<status status="PASS" starttime="20231206 16:10:41.308" endtime="20231206 16:10:41.698"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:41.700" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:42.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:42.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:41.699" endtime="20231206 16:10:42.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:42.070" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:42.070" endtime="20231206 16:10:42.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:42.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:42.070" endtime="20231206 16:10:42.071"/>
</kw>
<status status="PASS" starttime="20231206 16:10:41.698" endtime="20231206 16:10:42.071"/>
</kw>
<msg timestamp="20231206 16:10:42.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:41.698" endtime="20231206 16:10:42.072"/>
</kw>
<status status="PASS" starttime="20231206 16:10:41.698" endtime="20231206 16:10:42.072"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:42.074" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:42.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:42.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:42.073" endtime="20231206 16:10:42.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:42.460" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:42.460" endtime="20231206 16:10:42.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:42.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:42.461" endtime="20231206 16:10:42.461"/>
</kw>
<status status="PASS" starttime="20231206 16:10:42.073" endtime="20231206 16:10:42.461"/>
</kw>
<msg timestamp="20231206 16:10:42.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:42.073" endtime="20231206 16:10:42.462"/>
</kw>
<status status="PASS" starttime="20231206 16:10:42.072" endtime="20231206 16:10:42.462"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.520" endtime="20231206 16:10:42.462"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.520" endtime="20231206 16:10:42.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:10:42.462" endtime="20231206 16:10:42.462"/>
</kw>
<status status="PASS" starttime="20231206 16:10:38.490" endtime="20231206 16:10:42.463"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:42.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:43.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:43.008" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:42.464" endtime="20231206 16:10:43.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:43.009" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:10:42 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:10:43.009" endtime="20231206 16:10:43.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:43.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:43.009" endtime="20231206 16:10:43.010"/>
</kw>
<msg timestamp="20231206 16:10:43.010" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:42.463" endtime="20231206 16:10:43.010"/>
</kw>
<msg timestamp="20231206 16:10:43.010" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:42.463" endtime="20231206 16:10:43.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:43.010" endtime="20231206 16:10:43.011"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:43.013" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:43.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:43.015" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:43.011" endtime="20231206 16:10:43.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:43.015" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:43.015" endtime="20231206 16:10:43.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:43.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:43.015" endtime="20231206 16:10:43.016"/>
</kw>
<msg timestamp="20231206 16:10:43.016" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:10:43.011" endtime="20231206 16:10:43.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:43.016" endtime="20231206 16:10:43.017"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:43.019" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:43.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:43.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:43.017" endtime="20231206 16:10:43.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:43.021" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:43.020" endtime="20231206 16:10:43.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:43.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:43.021" endtime="20231206 16:10:43.021"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.017" endtime="20231206 16:10:43.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:38.489" endtime="20231206 16:10:43.022"/>
</test>
<test id="s1-s14-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:43.027" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:43.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:43.029" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:43.025" endtime="20231206 16:10:43.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:43.029" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:43.029" endtime="20231206 16:10:43.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:43.029" endtime="20231206 16:10:43.030"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.025" endtime="20231206 16:10:43.030"/>
</kw>
<msg timestamp="20231206 16:10:43.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:43.025" endtime="20231206 16:10:43.031"/>
</kw>
<msg timestamp="20231206 16:10:43.031" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:43.024" endtime="20231206 16:10:43.031"/>
</kw>
<msg timestamp="20231206 16:10:43.031" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:43.024" endtime="20231206 16:10:43.031"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:43.032" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:43.031" endtime="20231206 16:10:43.032"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:43.034" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:43.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:43.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:43.033" endtime="20231206 16:10:43.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:43.051" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:43.050" endtime="20231206 16:10:43.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:43.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:43.051" endtime="20231206 16:10:43.052"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.033" endtime="20231206 16:10:43.052"/>
</kw>
<msg timestamp="20231206 16:10:43.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:43.032" endtime="20231206 16:10:43.052"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.032" endtime="20231206 16:10:43.052"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.032" endtime="20231206 16:10:43.052"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.024" endtime="20231206 16:10:43.053"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.023" endtime="20231206 16:10:43.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:43.055" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:44.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:44.901" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:43.054" endtime="20231206 16:10:44.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:44.902" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:44.901" endtime="20231206 16:10:44.902"/>
</kw>
<msg timestamp="20231206 16:10:44.902" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:43.053" endtime="20231206 16:10:44.902"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:10:44.903" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:10:44.902" endtime="20231206 16:10:44.903"/>
</kw>
<msg timestamp="20231206 16:10:44.903" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:10:44.902" endtime="20231206 16:10:44.903"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:44.904" endtime="20231206 16:10:44.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:10:44.904" endtime="20231206 16:10:44.904"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:10:44.904" endtime="20231206 16:10:44.904"/>
</branch>
<status status="PASS" starttime="20231206 16:10:44.904" endtime="20231206 16:10:44.904"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:44.904" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:44.904" endtime="20231206 16:10:44.904"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:10:44.905" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:10:44.905" endtime="20231206 16:10:44.905"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:10:44.905" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:10:44.905" endtime="20231206 16:10:44.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:44.906" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:44.905" endtime="20231206 16:10:44.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:10:44.907" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:10:44.907" endtime="20231206 16:10:44.907"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:44.910" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:45.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:45.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:44.908" endtime="20231206 16:10:45.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:45.290" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:45.289" endtime="20231206 16:10:45.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:45.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:45.290" endtime="20231206 16:10:45.290"/>
</kw>
<status status="PASS" starttime="20231206 16:10:44.908" endtime="20231206 16:10:45.290"/>
</kw>
<msg timestamp="20231206 16:10:45.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:44.908" endtime="20231206 16:10:45.291"/>
</kw>
<status status="PASS" starttime="20231206 16:10:44.907" endtime="20231206 16:10:45.291"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:45.293" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:45.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:45.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:45.292" endtime="20231206 16:10:45.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:45.674" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:45.673" endtime="20231206 16:10:45.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:45.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:45.674" endtime="20231206 16:10:45.674"/>
</kw>
<status status="PASS" starttime="20231206 16:10:45.292" endtime="20231206 16:10:45.674"/>
</kw>
<msg timestamp="20231206 16:10:45.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:45.291" endtime="20231206 16:10:45.675"/>
</kw>
<status status="PASS" starttime="20231206 16:10:45.291" endtime="20231206 16:10:45.675"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:45.678" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:46.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:46.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:45.676" endtime="20231206 16:10:46.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:46.062" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:46.061" endtime="20231206 16:10:46.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:46.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:46.062" endtime="20231206 16:10:46.062"/>
</kw>
<status status="PASS" starttime="20231206 16:10:45.676" endtime="20231206 16:10:46.063"/>
</kw>
<msg timestamp="20231206 16:10:46.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:45.676" endtime="20231206 16:10:46.063"/>
</kw>
<status status="PASS" starttime="20231206 16:10:45.675" endtime="20231206 16:10:46.063"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:46.066" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:46.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:46.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:46.064" endtime="20231206 16:10:46.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:46.434" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:46.433" endtime="20231206 16:10:46.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:46.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:46.434" endtime="20231206 16:10:46.434"/>
</kw>
<status status="PASS" starttime="20231206 16:10:46.064" endtime="20231206 16:10:46.435"/>
</kw>
<msg timestamp="20231206 16:10:46.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:46.064" endtime="20231206 16:10:46.435"/>
</kw>
<status status="PASS" starttime="20231206 16:10:46.063" endtime="20231206 16:10:46.435"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:46.438" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:46.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:46.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:46.436" endtime="20231206 16:10:46.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:46.809" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:46.809" endtime="20231206 16:10:46.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:46.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:46.809" endtime="20231206 16:10:46.810"/>
</kw>
<status status="PASS" starttime="20231206 16:10:46.436" endtime="20231206 16:10:46.810"/>
</kw>
<msg timestamp="20231206 16:10:46.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:46.436" endtime="20231206 16:10:46.810"/>
</kw>
<status status="PASS" starttime="20231206 16:10:46.435" endtime="20231206 16:10:46.811"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.053" endtime="20231206 16:10:46.811"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.053" endtime="20231206 16:10:46.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:10:46.811" endtime="20231206 16:10:46.811"/>
</kw>
<status status="PASS" starttime="20231206 16:10:43.023" endtime="20231206 16:10:46.811"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:46.814" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:47.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:47.292" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:46.813" endtime="20231206 16:10:47.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:47.293" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:10:47 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:10:47.293" endtime="20231206 16:10:47.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:47.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:47.293" endtime="20231206 16:10:47.294"/>
</kw>
<msg timestamp="20231206 16:10:47.294" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:46.812" endtime="20231206 16:10:47.294"/>
</kw>
<msg timestamp="20231206 16:10:47.294" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:07:24 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:10:46.811" endtime="20231206 16:10:47.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:47.294" endtime="20231206 16:10:47.295"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:47.297" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:47.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:47.298" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:10:47.295" endtime="20231206 16:10:47.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:47.299" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:10:47.299" endtime="20231206 16:10:47.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:47.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:47.299" endtime="20231206 16:10:47.299"/>
</kw>
<msg timestamp="20231206 16:10:47.300" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:10:47.295" endtime="20231206 16:10:47.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:47.300" endtime="20231206 16:10:47.300"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:47.302" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:47.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:47.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:47.301" endtime="20231206 16:10:47.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:47.304" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:47.304" endtime="20231206 16:10:47.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:47.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:47.304" endtime="20231206 16:10:47.305"/>
</kw>
<status status="PASS" starttime="20231206 16:10:47.300" endtime="20231206 16:10:47.305"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:43.022" endtime="20231206 16:10:47.305"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231206 16:10:34.580" endtime="20231206 16:10:47.306"/>
</suite>
<suite id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:50.390" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:50.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:50.392" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:10:50.388" endtime="20231206 16:10:50.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:50.393" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:10:50.393" endtime="20231206 16:10:50.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:50.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:50.393" endtime="20231206 16:10:50.393"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.387" endtime="20231206 16:10:50.394"/>
</kw>
<msg timestamp="20231206 16:10:50.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:50.387" endtime="20231206 16:10:50.395"/>
</kw>
<msg timestamp="20231206 16:10:50.395" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:10:50.386" endtime="20231206 16:10:50.395"/>
</kw>
<msg timestamp="20231206 16:10:50.395" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:50.386" endtime="20231206 16:10:50.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:10:50.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:10:50.395" endtime="20231206 16:10:50.396"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:50.398" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:50.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:50.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:50.397" endtime="20231206 16:10:50.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:50.412" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:50.412" endtime="20231206 16:10:50.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:50.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:50.413" endtime="20231206 16:10:50.413"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.397" endtime="20231206 16:10:50.413"/>
</kw>
<msg timestamp="20231206 16:10:50.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:50.397" endtime="20231206 16:10:50.414"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.396" endtime="20231206 16:10:50.414"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.396" endtime="20231206 16:10:50.414"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.386" endtime="20231206 16:10:50.414"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.385" endtime="20231206 16:10:50.414"/>
</kw>
<test id="s1-s15-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:50.418" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:52.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:52.786" level="INFO">${output} = 2023-12-06 16:10:52,724 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231206 16:10:50.416" endtime="20231206 16:10:52.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:52.787" level="INFO">2023-12-06 16:10:52,724 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231206 16:10:52.786" endtime="20231206 16:10:52.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:52.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:52.787" endtime="20231206 16:10:52.787"/>
</kw>
<status status="PASS" starttime="20231206 16:10:50.416" endtime="20231206 16:10:52.788"/>
</kw>
<msg timestamp="20231206 16:10:52.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:50.416" endtime="20231206 16:10:52.788"/>
</kw>
<msg timestamp="20231206 16:10:52.789" level="INFO">${output} = 2023-12-06 16:10:52,724 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231206 16:10:50.415" endtime="20231206 16:10:52.789"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:52.789" endtime="20231206 16:10:52.789"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:52.792" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:55.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:55.093" level="INFO">${output} = 2023-12-06 16:10:55,037 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231206 16:10:52.791" endtime="20231206 16:10:55.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:55.094" level="INFO">2023-12-06 16:10:55,037 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231206 16:10:55.094" endtime="20231206 16:10:55.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:55.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:55.094" endtime="20231206 16:10:55.095"/>
</kw>
<status status="PASS" starttime="20231206 16:10:52.790" endtime="20231206 16:10:55.095"/>
</kw>
<msg timestamp="20231206 16:10:55.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:52.790" endtime="20231206 16:10:55.095"/>
</kw>
<msg timestamp="20231206 16:10:55.096" level="INFO">${output} = 2023-12-06 16:10:55,037 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231206 16:10:52.789" endtime="20231206 16:10:55.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:55.096" endtime="20231206 16:10:55.096"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:50.414" endtime="20231206 16:10:55.096"/>
</test>
<test id="s1-s15-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:55.099" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:10:55.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:55.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:55.098" endtime="20231206 16:10:55.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:55.101" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:55.101" endtime="20231206 16:10:55.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:55.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:55.101" endtime="20231206 16:10:55.102"/>
</kw>
<status status="PASS" starttime="20231206 16:10:55.097" endtime="20231206 16:10:55.102"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:55.105" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:59.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:59.756" level="INFO">${output} = 2023-12-06 16:10:58,012 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:58,098 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:10:55.104" endtime="20231206 16:10:59.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:59.757" level="INFO">2023-12-06 16:10:58,012 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:58,098 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:10:58,098 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-06 16:10:58,325 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231206 16:10:59.756" endtime="20231206 16:10:59.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:59.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:59.757" endtime="20231206 16:10:59.757"/>
</kw>
<status status="PASS" starttime="20231206 16:10:55.103" endtime="20231206 16:10:59.757"/>
</kw>
<msg timestamp="20231206 16:10:59.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:55.103" endtime="20231206 16:10:59.758"/>
</kw>
<msg timestamp="20231206 16:10:59.758" level="INFO">${output} = 2023-12-06 16:10:58,012 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:10:58,098 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:10:55.102" endtime="20231206 16:10:59.758"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:10:59.758" endtime="20231206 16:10:59.758"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:59.760" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:10:59.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:10:59.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:10:59.759" endtime="20231206 16:10:59.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:10:59.763" level="INFO"/>
<status status="PASS" starttime="20231206 16:10:59.762" endtime="20231206 16:10:59.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:10:59.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:10:59.763" endtime="20231206 16:10:59.763"/>
</kw>
<status status="PASS" starttime="20231206 16:10:59.759" endtime="20231206 16:10:59.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:55.097" endtime="20231206 16:10:59.764"/>
</test>
<test id="s1-s15-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:10:59.767" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:02.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:02.025" level="INFO">${output} = 2023-12-06 16:11:01,992 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231206 16:10:59.766" endtime="20231206 16:11:02.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:02.025" level="INFO">2023-12-06 16:11:01,992 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231206 16:11:02.025" endtime="20231206 16:11:02.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:02.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:02.026" endtime="20231206 16:11:02.026"/>
</kw>
<status status="PASS" starttime="20231206 16:10:59.766" endtime="20231206 16:11:02.026"/>
</kw>
<msg timestamp="20231206 16:11:02.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:10:59.765" endtime="20231206 16:11:02.027"/>
</kw>
<msg timestamp="20231206 16:11:02.027" level="INFO">${output} = 2023-12-06 16:11:01,992 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231206 16:10:59.765" endtime="20231206 16:11:02.027"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:02.027" endtime="20231206 16:11:02.027"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:10:59.764" endtime="20231206 16:11:02.027"/>
</test>
<test id="s1-s15-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:02.031" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:11:02.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:02.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:02.029" endtime="20231206 16:11:02.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:02.033" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:02.032" endtime="20231206 16:11:02.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:02.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:02.033" endtime="20231206 16:11:02.033"/>
</kw>
<status status="PASS" starttime="20231206 16:11:02.029" endtime="20231206 16:11:02.033"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:02.036" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:06.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:06.332" level="INFO">${output} = 2023-12-06 16:11:04,690 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:04,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:02.035" endtime="20231206 16:11:06.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:06.333" level="INFO">2023-12-06 16:11:04,690 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:04,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:11:04,771 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-06 16:11:05,007 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231206 16:11:06.333" endtime="20231206 16:11:06.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:06.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:06.333" endtime="20231206 16:11:06.334"/>
</kw>
<status status="PASS" starttime="20231206 16:11:02.034" endtime="20231206 16:11:06.334"/>
</kw>
<msg timestamp="20231206 16:11:06.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:02.034" endtime="20231206 16:11:06.334"/>
</kw>
<msg timestamp="20231206 16:11:06.335" level="INFO">${output} = 2023-12-06 16:11:04,690 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:04,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:02.033" endtime="20231206 16:11:06.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:06.335" endtime="20231206 16:11:06.335"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:06.338" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:06.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:06.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:06.336" endtime="20231206 16:11:06.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:06.340" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:06.340" endtime="20231206 16:11:06.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:06.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:06.340" endtime="20231206 16:11:06.341"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.335" endtime="20231206 16:11:06.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:02.028" endtime="20231206 16:11:06.341"/>
</test>
<test id="s1-s15-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:06.346" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:06.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:06.348" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:06.344" endtime="20231206 16:11:06.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:06.348" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:06.348" endtime="20231206 16:11:06.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:06.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:06.349" endtime="20231206 16:11:06.349"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.344" endtime="20231206 16:11:06.349"/>
</kw>
<msg timestamp="20231206 16:11:06.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:06.344" endtime="20231206 16:11:06.350"/>
</kw>
<msg timestamp="20231206 16:11:06.350" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:06.344" endtime="20231206 16:11:06.350"/>
</kw>
<msg timestamp="20231206 16:11:06.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:06.343" endtime="20231206 16:11:06.350"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:06.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:06.350" endtime="20231206 16:11:06.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:06.353" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:06.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:06.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:06.352" endtime="20231206 16:11:06.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:06.367" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:06.367" endtime="20231206 16:11:06.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:06.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:06.367" endtime="20231206 16:11:06.368"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.352" endtime="20231206 16:11:06.368"/>
</kw>
<msg timestamp="20231206 16:11:06.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:06.352" endtime="20231206 16:11:06.368"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.351" endtime="20231206 16:11:06.368"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.351" endtime="20231206 16:11:06.369"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.343" endtime="20231206 16:11:06.369"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.343" endtime="20231206 16:11:06.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:06.371" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:08.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:08.356" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:06.370" endtime="20231206 16:11:08.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:08.357" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:08.357" endtime="20231206 16:11:08.357"/>
</kw>
<msg timestamp="20231206 16:11:08.358" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:06.369" endtime="20231206 16:11:08.358"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:11:08.359" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:11:08.358" endtime="20231206 16:11:08.359"/>
</kw>
<msg timestamp="20231206 16:11:08.359" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:11:08.358" endtime="20231206 16:11:08.359"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:08.359" endtime="20231206 16:11:08.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:08.360" endtime="20231206 16:11:08.360"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:11:08.359" endtime="20231206 16:11:08.360"/>
</branch>
<status status="PASS" starttime="20231206 16:11:08.359" endtime="20231206 16:11:08.360"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:08.360" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:08.360" endtime="20231206 16:11:08.360"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:11:08.361" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:08.360" endtime="20231206 16:11:08.361"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:08.361" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:11:08.361" endtime="20231206 16:11:08.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:08.362" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:08.361" endtime="20231206 16:11:08.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:08.363" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:08.362" endtime="20231206 16:11:08.363"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:08.366" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:08.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:08.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:08.364" endtime="20231206 16:11:08.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:08.753" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:08.752" endtime="20231206 16:11:08.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:08.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:08.753" endtime="20231206 16:11:08.753"/>
</kw>
<status status="PASS" starttime="20231206 16:11:08.364" endtime="20231206 16:11:08.753"/>
</kw>
<msg timestamp="20231206 16:11:08.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:08.364" endtime="20231206 16:11:08.754"/>
</kw>
<status status="PASS" starttime="20231206 16:11:08.363" endtime="20231206 16:11:08.754"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:08.757" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:09.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:09.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:08.755" endtime="20231206 16:11:09.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:09.143" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:09.142" endtime="20231206 16:11:09.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:09.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:09.143" endtime="20231206 16:11:09.143"/>
</kw>
<status status="PASS" starttime="20231206 16:11:08.755" endtime="20231206 16:11:09.143"/>
</kw>
<msg timestamp="20231206 16:11:09.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:08.754" endtime="20231206 16:11:09.144"/>
</kw>
<status status="PASS" starttime="20231206 16:11:08.754" endtime="20231206 16:11:09.144"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:09.147" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:09.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:09.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:09.145" endtime="20231206 16:11:09.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:09.527" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:09.527" endtime="20231206 16:11:09.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:09.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:09.528" endtime="20231206 16:11:09.528"/>
</kw>
<status status="PASS" starttime="20231206 16:11:09.145" endtime="20231206 16:11:09.528"/>
</kw>
<msg timestamp="20231206 16:11:09.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:09.145" endtime="20231206 16:11:09.529"/>
</kw>
<status status="PASS" starttime="20231206 16:11:09.144" endtime="20231206 16:11:09.529"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:09.531" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:09.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:09.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:09.530" endtime="20231206 16:11:09.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:09.911" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:09.910" endtime="20231206 16:11:09.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:09.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:09.911" endtime="20231206 16:11:09.911"/>
</kw>
<status status="PASS" starttime="20231206 16:11:09.529" endtime="20231206 16:11:09.912"/>
</kw>
<msg timestamp="20231206 16:11:09.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:09.529" endtime="20231206 16:11:09.912"/>
</kw>
<status status="PASS" starttime="20231206 16:11:09.529" endtime="20231206 16:11:09.912"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:09.915" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:10.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:10.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:09.913" endtime="20231206 16:11:10.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:10.279" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:10.279" endtime="20231206 16:11:10.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:10.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:10.279" endtime="20231206 16:11:10.280"/>
</kw>
<status status="PASS" starttime="20231206 16:11:09.913" endtime="20231206 16:11:10.280"/>
</kw>
<msg timestamp="20231206 16:11:10.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:09.913" endtime="20231206 16:11:10.281"/>
</kw>
<status status="PASS" starttime="20231206 16:11:09.912" endtime="20231206 16:11:10.281"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.369" endtime="20231206 16:11:10.281"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.369" endtime="20231206 16:11:10.281"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:11:10.281" endtime="20231206 16:11:10.281"/>
</kw>
<status status="PASS" starttime="20231206 16:11:06.342" endtime="20231206 16:11:10.282"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:11:10.283" level="INFO">${randStr} = 3088271567</msg>
<status status="PASS" starttime="20231206 16:11:10.282" endtime="20231206 16:11:10.283"/>
</kw>
<msg timestamp="20231206 16:11:10.283" level="INFO">${random} = ozone-test-3088271567</msg>
<status status="PASS" starttime="20231206 16:11:10.282" endtime="20231206 16:11:10.283"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:10.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket-ozone-test-3088271567 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:10.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:10.810" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3088271567"
}</msg>
<status status="PASS" starttime="20231206 16:11:10.285" endtime="20231206 16:11:10.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:10.811" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3088271567"
}</msg>
<status status="PASS" starttime="20231206 16:11:10.810" endtime="20231206 16:11:10.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:10.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:10.811" endtime="20231206 16:11:10.811"/>
</kw>
<status status="PASS" starttime="20231206 16:11:10.284" endtime="20231206 16:11:10.811"/>
</kw>
<msg timestamp="20231206 16:11:10.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:10.284" endtime="20231206 16:11:10.812"/>
</kw>
<msg timestamp="20231206 16:11:10.812" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3088271567"
}</msg>
<status status="PASS" starttime="20231206 16:11:10.284" endtime="20231206 16:11:10.812"/>
</kw>
<msg timestamp="20231206 16:11:10.812" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-3088271567"
}</msg>
<status status="PASS" starttime="20231206 16:11:10.283" endtime="20231206 16:11:10.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:10.813" endtime="20231206 16:11:10.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:10.813" endtime="20231206 16:11:10.813"/>
</kw>
<msg timestamp="20231206 16:11:10.813" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231206 16:11:10.283" endtime="20231206 16:11:10.813"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231206 16:11:10.813" endtime="20231206 16:11:10.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:06.342" endtime="20231206 16:11:10.814"/>
</test>
<test id="s1-s15-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:10.817" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:11:10.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:10.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:10.816" endtime="20231206 16:11:10.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:10.819" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:10.819" endtime="20231206 16:11:10.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:10.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:10.819" endtime="20231206 16:11:10.820"/>
</kw>
<status status="PASS" starttime="20231206 16:11:10.815" endtime="20231206 16:11:10.820"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:10.822" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:11.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:11.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:10.821" endtime="20231206 16:11:11.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:11.586" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:11.585" endtime="20231206 16:11:11.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:11.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:11.586" endtime="20231206 16:11:11.587"/>
</kw>
<msg timestamp="20231206 16:11:11.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:10.821" endtime="20231206 16:11:11.587"/>
</kw>
<msg timestamp="20231206 16:11:11.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:10.820" endtime="20231206 16:11:11.587"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:11.587" endtime="20231206 16:11:11.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:11.590" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:11.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:11.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:11.588" endtime="20231206 16:11:11.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:11.592" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:11.592" endtime="20231206 16:11:11.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:11.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:11.592" endtime="20231206 16:11:11.592"/>
</kw>
<status status="PASS" starttime="20231206 16:11:11.588" endtime="20231206 16:11:11.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:10.814" endtime="20231206 16:11:11.593"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231206 16:10:50.322" endtime="20231206 16:11:11.594"/>
</suite>
<suite id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:14.697" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:14.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:14.699" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:14.694" endtime="20231206 16:11:14.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:14.699" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:14.699" endtime="20231206 16:11:14.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:14.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:14.700" endtime="20231206 16:11:14.700"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.693" endtime="20231206 16:11:14.700"/>
</kw>
<msg timestamp="20231206 16:11:14.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:14.693" endtime="20231206 16:11:14.701"/>
</kw>
<msg timestamp="20231206 16:11:14.701" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:14.693" endtime="20231206 16:11:14.701"/>
</kw>
<msg timestamp="20231206 16:11:14.702" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:14.692" endtime="20231206 16:11:14.702"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:14.702" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:14.702" endtime="20231206 16:11:14.703"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:14.706" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:14.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:14.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:14.704" endtime="20231206 16:11:14.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:14.721" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:14.721" endtime="20231206 16:11:14.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:14.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:14.722" endtime="20231206 16:11:14.722"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.704" endtime="20231206 16:11:14.722"/>
</kw>
<msg timestamp="20231206 16:11:14.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:14.703" endtime="20231206 16:11:14.723"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.703" endtime="20231206 16:11:14.723"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.703" endtime="20231206 16:11:14.723"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.692" endtime="20231206 16:11:14.723"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.691" endtime="20231206 16:11:14.723"/>
</kw>
<test id="s1-s16-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:11:14.725" level="INFO">${random} = 68915</msg>
<status status="PASS" starttime="20231206 16:11:14.725" endtime="20231206 16:11:14.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:14.728" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-68915 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:18.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:18.611" level="INFO">${output} = 2023-12-06 16:11:17,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:17,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:14.726" endtime="20231206 16:11:18.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:18.612" level="INFO">2023-12-06 16:11:17,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:17,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:11:17,455 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231206 16:11:18.612" endtime="20231206 16:11:18.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:18.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:18.613" endtime="20231206 16:11:18.613"/>
</kw>
<status status="PASS" starttime="20231206 16:11:14.726" endtime="20231206 16:11:18.613"/>
</kw>
<msg timestamp="20231206 16:11:18.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:14.726" endtime="20231206 16:11:18.613"/>
</kw>
<msg timestamp="20231206 16:11:18.614" level="INFO">${output} = 2023-12-06 16:11:17,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:17,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:14.725" endtime="20231206 16:11:18.614"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:18.614" endtime="20231206 16:11:18.614"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:18.616" level="INFO">Running command 'cat /tmp/key-68915 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:18.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:18.618" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:11:18.615" endtime="20231206 16:11:18.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:18.619" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:11:18.618" endtime="20231206 16:11:18.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:18.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:18.619" endtime="20231206 16:11:18.619"/>
</kw>
<msg timestamp="20231206 16:11:18.619" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:11:18.614" endtime="20231206 16:11:18.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:18.619" endtime="20231206 16:11:18.620"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:18.621" level="INFO">Running command 'rm /tmp/key-68915 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:18.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:18.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:18.620" endtime="20231206 16:11:18.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:18.624" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:18.623" endtime="20231206 16:11:18.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:18.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:18.624" endtime="20231206 16:11:18.624"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.620" endtime="20231206 16:11:18.625"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:14.724" endtime="20231206 16:11:18.625"/>
</test>
<test id="s1-s16-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:18.629" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:18.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:18.631" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:18.628" endtime="20231206 16:11:18.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:18.632" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:18.632" endtime="20231206 16:11:18.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:18.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:18.632" endtime="20231206 16:11:18.632"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.628" endtime="20231206 16:11:18.633"/>
</kw>
<msg timestamp="20231206 16:11:18.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:18.628" endtime="20231206 16:11:18.633"/>
</kw>
<msg timestamp="20231206 16:11:18.633" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:18.627" endtime="20231206 16:11:18.633"/>
</kw>
<msg timestamp="20231206 16:11:18.634" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:18.627" endtime="20231206 16:11:18.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:18.634" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:18.634" endtime="20231206 16:11:18.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:18.637" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:18.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:18.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:18.636" endtime="20231206 16:11:18.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:18.652" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:18.652" endtime="20231206 16:11:18.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:18.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:18.652" endtime="20231206 16:11:18.653"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.635" endtime="20231206 16:11:18.653"/>
</kw>
<msg timestamp="20231206 16:11:18.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:18.635" endtime="20231206 16:11:18.653"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.635" endtime="20231206 16:11:18.653"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.634" endtime="20231206 16:11:18.653"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.627" endtime="20231206 16:11:18.654"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.626" endtime="20231206 16:11:18.654"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:18.656" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:20.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:20.503" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:18.655" endtime="20231206 16:11:20.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:20.503" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:20.503" endtime="20231206 16:11:20.503"/>
</kw>
<msg timestamp="20231206 16:11:20.504" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:18.654" endtime="20231206 16:11:20.504"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:11:20.505" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:11:20.504" endtime="20231206 16:11:20.505"/>
</kw>
<msg timestamp="20231206 16:11:20.505" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:11:20.504" endtime="20231206 16:11:20.505"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:20.505" endtime="20231206 16:11:20.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:20.505" endtime="20231206 16:11:20.505"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:11:20.505" endtime="20231206 16:11:20.505"/>
</branch>
<status status="PASS" starttime="20231206 16:11:20.505" endtime="20231206 16:11:20.505"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:20.506" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:20.505" endtime="20231206 16:11:20.506"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:11:20.507" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:20.506" endtime="20231206 16:11:20.507"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:20.507" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:11:20.507" endtime="20231206 16:11:20.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:20.508" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:20.507" endtime="20231206 16:11:20.508"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:20.509" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:20.508" endtime="20231206 16:11:20.509"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:20.512" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:20.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:20.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:20.510" endtime="20231206 16:11:20.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:20.912" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:20.912" endtime="20231206 16:11:20.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:20.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:20.912" endtime="20231206 16:11:20.913"/>
</kw>
<status status="PASS" starttime="20231206 16:11:20.510" endtime="20231206 16:11:20.913"/>
</kw>
<msg timestamp="20231206 16:11:20.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:20.510" endtime="20231206 16:11:20.914"/>
</kw>
<status status="PASS" starttime="20231206 16:11:20.509" endtime="20231206 16:11:20.914"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:20.916" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:21.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:21.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:20.915" endtime="20231206 16:11:21.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:21.291" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:21.291" endtime="20231206 16:11:21.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:21.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:21.292" endtime="20231206 16:11:21.292"/>
</kw>
<status status="PASS" starttime="20231206 16:11:20.915" endtime="20231206 16:11:21.292"/>
</kw>
<msg timestamp="20231206 16:11:21.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:20.914" endtime="20231206 16:11:21.293"/>
</kw>
<status status="PASS" starttime="20231206 16:11:20.914" endtime="20231206 16:11:21.293"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:21.295" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:21.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:21.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:21.294" endtime="20231206 16:11:21.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:21.689" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:21.689" endtime="20231206 16:11:21.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:21.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:21.690" endtime="20231206 16:11:21.691"/>
</kw>
<status status="PASS" starttime="20231206 16:11:21.294" endtime="20231206 16:11:21.691"/>
</kw>
<msg timestamp="20231206 16:11:21.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:21.293" endtime="20231206 16:11:21.692"/>
</kw>
<status status="PASS" starttime="20231206 16:11:21.293" endtime="20231206 16:11:21.692"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:21.697" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:22.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:22.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:21.695" endtime="20231206 16:11:22.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:22.151" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:22.151" endtime="20231206 16:11:22.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:22.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:22.151" endtime="20231206 16:11:22.152"/>
</kw>
<status status="PASS" starttime="20231206 16:11:21.694" endtime="20231206 16:11:22.152"/>
</kw>
<msg timestamp="20231206 16:11:22.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:21.693" endtime="20231206 16:11:22.153"/>
</kw>
<status status="PASS" starttime="20231206 16:11:21.693" endtime="20231206 16:11:22.153"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:22.155" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:22.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:22.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:22.154" endtime="20231206 16:11:22.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:22.534" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:22.533" endtime="20231206 16:11:22.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:22.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:22.534" endtime="20231206 16:11:22.534"/>
</kw>
<status status="PASS" starttime="20231206 16:11:22.154" endtime="20231206 16:11:22.534"/>
</kw>
<msg timestamp="20231206 16:11:22.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:22.153" endtime="20231206 16:11:22.535"/>
</kw>
<status status="PASS" starttime="20231206 16:11:22.153" endtime="20231206 16:11:22.535"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.654" endtime="20231206 16:11:22.535"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.654" endtime="20231206 16:11:22.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:11:22.535" endtime="20231206 16:11:22.536"/>
</kw>
<status status="PASS" starttime="20231206 16:11:18.626" endtime="20231206 16:11:22.536"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:22.538" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:23.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:23.077" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:11:22.537" endtime="20231206 16:11:23.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:23.077" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:11:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:11:23.077" endtime="20231206 16:11:23.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:23.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:23.078" endtime="20231206 16:11:23.078"/>
</kw>
<msg timestamp="20231206 16:11:23.078" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:11:22.536" endtime="20231206 16:11:23.078"/>
</kw>
<msg timestamp="20231206 16:11:23.079" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:11:22.536" endtime="20231206 16:11:23.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:23.079" endtime="20231206 16:11:23.079"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:23.081" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:23.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:23.083" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:11:23.080" endtime="20231206 16:11:23.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:23.083" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:11:23.083" endtime="20231206 16:11:23.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:23.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:23.084" endtime="20231206 16:11:23.084"/>
</kw>
<msg timestamp="20231206 16:11:23.084" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231206 16:11:23.079" endtime="20231206 16:11:23.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:23.084" endtime="20231206 16:11:23.085"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:23.086" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:23.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:23.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:23.085" endtime="20231206 16:11:23.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:23.088" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:23.088" endtime="20231206 16:11:23.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:23.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:23.089" endtime="20231206 16:11:23.089"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.085" endtime="20231206 16:11:23.089"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:18.625" endtime="20231206 16:11:23.090"/>
</test>
<test id="s1-s16-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:23.095" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:23.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:23.097" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:23.093" endtime="20231206 16:11:23.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:23.097" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:23.097" endtime="20231206 16:11:23.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:23.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:23.098" endtime="20231206 16:11:23.098"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.093" endtime="20231206 16:11:23.098"/>
</kw>
<msg timestamp="20231206 16:11:23.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:23.092" endtime="20231206 16:11:23.099"/>
</kw>
<msg timestamp="20231206 16:11:23.099" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:23.092" endtime="20231206 16:11:23.099"/>
</kw>
<msg timestamp="20231206 16:11:23.099" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:23.092" endtime="20231206 16:11:23.099"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:23.100" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:23.099" endtime="20231206 16:11:23.100"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:23.103" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:23.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:23.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:23.101" endtime="20231206 16:11:23.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:23.117" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:23.117" endtime="20231206 16:11:23.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:23.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:23.117" endtime="20231206 16:11:23.118"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.101" endtime="20231206 16:11:23.118"/>
</kw>
<msg timestamp="20231206 16:11:23.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:23.101" endtime="20231206 16:11:23.119"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.100" endtime="20231206 16:11:23.119"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.100" endtime="20231206 16:11:23.119"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.091" endtime="20231206 16:11:23.119"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.091" endtime="20231206 16:11:23.119"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:23.122" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:25.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:25.048" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:23.120" endtime="20231206 16:11:25.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:25.049" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:25.049" endtime="20231206 16:11:25.049"/>
</kw>
<msg timestamp="20231206 16:11:25.050" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:23.120" endtime="20231206 16:11:25.050"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:11:25.051" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:11:25.050" endtime="20231206 16:11:25.051"/>
</kw>
<msg timestamp="20231206 16:11:25.051" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:11:25.050" endtime="20231206 16:11:25.051"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:25.052" endtime="20231206 16:11:25.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:25.052" endtime="20231206 16:11:25.052"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:11:25.051" endtime="20231206 16:11:25.052"/>
</branch>
<status status="PASS" starttime="20231206 16:11:25.051" endtime="20231206 16:11:25.052"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:25.052" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:25.052" endtime="20231206 16:11:25.052"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:11:25.053" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:25.052" endtime="20231206 16:11:25.053"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:25.053" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:11:25.053" endtime="20231206 16:11:25.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:25.054" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:25.053" endtime="20231206 16:11:25.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:25.055" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:25.054" endtime="20231206 16:11:25.055"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:25.058" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:25.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:25.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:25.056" endtime="20231206 16:11:25.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:25.441" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:25.441" endtime="20231206 16:11:25.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:25.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:25.441" endtime="20231206 16:11:25.442"/>
</kw>
<status status="PASS" starttime="20231206 16:11:25.056" endtime="20231206 16:11:25.442"/>
</kw>
<msg timestamp="20231206 16:11:25.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:25.056" endtime="20231206 16:11:25.442"/>
</kw>
<status status="PASS" starttime="20231206 16:11:25.055" endtime="20231206 16:11:25.443"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:25.445" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:25.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:25.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:25.444" endtime="20231206 16:11:25.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:25.816" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:25.816" endtime="20231206 16:11:25.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:25.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:25.817" endtime="20231206 16:11:25.817"/>
</kw>
<status status="PASS" starttime="20231206 16:11:25.443" endtime="20231206 16:11:25.817"/>
</kw>
<msg timestamp="20231206 16:11:25.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:25.443" endtime="20231206 16:11:25.818"/>
</kw>
<status status="PASS" starttime="20231206 16:11:25.443" endtime="20231206 16:11:25.818"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:25.820" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:26.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:26.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:25.819" endtime="20231206 16:11:26.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:26.221" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:26.220" endtime="20231206 16:11:26.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:26.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:26.221" endtime="20231206 16:11:26.221"/>
</kw>
<status status="PASS" starttime="20231206 16:11:25.819" endtime="20231206 16:11:26.222"/>
</kw>
<msg timestamp="20231206 16:11:26.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:25.818" endtime="20231206 16:11:26.222"/>
</kw>
<status status="PASS" starttime="20231206 16:11:25.818" endtime="20231206 16:11:26.222"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:26.225" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:26.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:26.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:26.223" endtime="20231206 16:11:26.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:26.608" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:26.607" endtime="20231206 16:11:26.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:26.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:26.608" endtime="20231206 16:11:26.608"/>
</kw>
<status status="PASS" starttime="20231206 16:11:26.223" endtime="20231206 16:11:26.609"/>
</kw>
<msg timestamp="20231206 16:11:26.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:26.223" endtime="20231206 16:11:26.609"/>
</kw>
<status status="PASS" starttime="20231206 16:11:26.222" endtime="20231206 16:11:26.609"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:26.612" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:27.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:27.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:26.610" endtime="20231206 16:11:27.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:27.038" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:27.037" endtime="20231206 16:11:27.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:27.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:27.038" endtime="20231206 16:11:27.038"/>
</kw>
<status status="PASS" starttime="20231206 16:11:26.610" endtime="20231206 16:11:27.038"/>
</kw>
<msg timestamp="20231206 16:11:27.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:26.610" endtime="20231206 16:11:27.039"/>
</kw>
<status status="PASS" starttime="20231206 16:11:26.609" endtime="20231206 16:11:27.039"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.120" endtime="20231206 16:11:27.039"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.119" endtime="20231206 16:11:27.039"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:11:27.039" endtime="20231206 16:11:27.040"/>
</kw>
<status status="PASS" starttime="20231206 16:11:23.091" endtime="20231206 16:11:27.040"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:27.042" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:27.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:27.513" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:11:27.041" endtime="20231206 16:11:27.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:27.514" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 06 Dec 2023 16:11:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231206 16:11:27.513" endtime="20231206 16:11:27.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:27.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:27.514" endtime="20231206 16:11:27.515"/>
</kw>
<msg timestamp="20231206 16:11:27.515" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:11:27.040" endtime="20231206 16:11:27.515"/>
</kw>
<msg timestamp="20231206 16:11:27.515" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 06 Dec 2023 16:11:11 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231206 16:11:27.040" endtime="20231206 16:11:27.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:27.516" endtime="20231206 16:11:27.516"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:27.519" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:27.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:27.520" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:11:27.517" endtime="20231206 16:11:27.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:27.521" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:11:27.520" endtime="20231206 16:11:27.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:27.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:27.521" endtime="20231206 16:11:27.522"/>
</kw>
<msg timestamp="20231206 16:11:27.522" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20231206 16:11:27.516" endtime="20231206 16:11:27.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:27.522" endtime="20231206 16:11:27.523"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:27.525" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:27.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:27.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:27.524" endtime="20231206 16:11:27.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:27.528" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:27.527" endtime="20231206 16:11:27.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:27.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:27.528" endtime="20231206 16:11:27.529"/>
</kw>
<status status="PASS" starttime="20231206 16:11:27.523" endtime="20231206 16:11:27.529"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:23.090" endtime="20231206 16:11:27.529"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231206 16:11:14.629" endtime="20231206 16:11:27.530"/>
</suite>
<suite id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:30.692" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:30.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:30.695" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:30.689" endtime="20231206 16:11:30.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:30.696" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:30.696" endtime="20231206 16:11:30.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:30.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:30.696" endtime="20231206 16:11:30.696"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.688" endtime="20231206 16:11:30.697"/>
</kw>
<msg timestamp="20231206 16:11:30.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:30.688" endtime="20231206 16:11:30.698"/>
</kw>
<msg timestamp="20231206 16:11:30.698" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:30.688" endtime="20231206 16:11:30.698"/>
</kw>
<msg timestamp="20231206 16:11:30.698" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:30.688" endtime="20231206 16:11:30.698"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:30.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:30.698" endtime="20231206 16:11:30.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:30.702" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:30.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:30.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:30.700" endtime="20231206 16:11:30.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:30.717" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:30.717" endtime="20231206 16:11:30.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:30.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:30.717" endtime="20231206 16:11:30.718"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.700" endtime="20231206 16:11:30.718"/>
</kw>
<msg timestamp="20231206 16:11:30.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:30.699" endtime="20231206 16:11:30.718"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.699" endtime="20231206 16:11:30.718"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.699" endtime="20231206 16:11:30.718"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.687" endtime="20231206 16:11:30.719"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.686" endtime="20231206 16:11:30.719"/>
</kw>
<test id="s1-s17-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:30.722" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:11:30.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:30.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:30.721" endtime="20231206 16:11:30.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:30.724" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:30.724" endtime="20231206 16:11:30.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:30.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:30.725" endtime="20231206 16:11:30.725"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.720" endtime="20231206 16:11:30.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:30.728" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:34.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:34.709" level="INFO">${output} = 2023-12-06 16:11:33,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:33,473 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:30.727" endtime="20231206 16:11:34.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:34.709" level="INFO">2023-12-06 16:11:33,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:33,473 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:11:33,474 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-06 16:11:33,679 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231206 16:11:34.709" endtime="20231206 16:11:34.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:34.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:34.710" endtime="20231206 16:11:34.710"/>
</kw>
<status status="PASS" starttime="20231206 16:11:30.726" endtime="20231206 16:11:34.710"/>
</kw>
<msg timestamp="20231206 16:11:34.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:30.726" endtime="20231206 16:11:34.711"/>
</kw>
<msg timestamp="20231206 16:11:34.711" level="INFO">${output} = 2023-12-06 16:11:33,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:33,473 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:30.725" endtime="20231206 16:11:34.711"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:34.711" endtime="20231206 16:11:34.711"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:34.713" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:34.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:34.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:34.712" endtime="20231206 16:11:34.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:34.716" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:34.716" endtime="20231206 16:11:34.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:34.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:34.716" endtime="20231206 16:11:34.717"/>
</kw>
<status status="PASS" starttime="20231206 16:11:34.711" endtime="20231206 16:11:34.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:30.719" endtime="20231206 16:11:34.717"/>
</test>
<test id="s1-s17-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:34.720" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:11:34.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:34.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:34.719" endtime="20231206 16:11:34.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:34.722" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:34.721" endtime="20231206 16:11:34.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:34.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:34.722" endtime="20231206 16:11:34.722"/>
</kw>
<status status="PASS" starttime="20231206 16:11:34.718" endtime="20231206 16:11:34.723"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:34.725" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:38.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:38.941" level="INFO">${output} = 2023-12-06 16:11:37,636 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:37,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:34.724" endtime="20231206 16:11:38.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:38.942" level="INFO">2023-12-06 16:11:37,636 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:37,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-06 16:11:37,710 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-06 16:11:37,922 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231206 16:11:38.941" endtime="20231206 16:11:38.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:38.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:38.942" endtime="20231206 16:11:38.943"/>
</kw>
<status status="PASS" starttime="20231206 16:11:34.723" endtime="20231206 16:11:38.943"/>
</kw>
<msg timestamp="20231206 16:11:38.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:34.723" endtime="20231206 16:11:38.943"/>
</kw>
<msg timestamp="20231206 16:11:38.943" level="INFO">${output} = 2023-12-06 16:11:37,636 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-06 16:11:37,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231206 16:11:34.723" endtime="20231206 16:11:38.944"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:38.944" endtime="20231206 16:11:38.944"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:38.946" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:38.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:38.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:38.944" endtime="20231206 16:11:38.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:38.948" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:38.948" endtime="20231206 16:11:38.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:38.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:38.949" endtime="20231206 16:11:38.949"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.944" endtime="20231206 16:11:38.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:34.718" endtime="20231206 16:11:38.949"/>
</test>
<test id="s1-s17-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:38.954" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:38.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:38.956" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:38.953" endtime="20231206 16:11:38.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:38.957" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:38.956" endtime="20231206 16:11:38.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:38.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:38.957" endtime="20231206 16:11:38.957"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.952" endtime="20231206 16:11:38.957"/>
</kw>
<msg timestamp="20231206 16:11:38.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:38.952" endtime="20231206 16:11:38.958"/>
</kw>
<msg timestamp="20231206 16:11:38.958" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:38.952" endtime="20231206 16:11:38.958"/>
</kw>
<msg timestamp="20231206 16:11:38.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:38.952" endtime="20231206 16:11:38.958"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:38.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:38.959" endtime="20231206 16:11:38.959"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:38.962" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:38.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:38.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:38.960" endtime="20231206 16:11:38.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:38.977" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:38.977" endtime="20231206 16:11:38.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:38.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:38.977" endtime="20231206 16:11:38.978"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.960" endtime="20231206 16:11:38.979"/>
</kw>
<msg timestamp="20231206 16:11:38.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:38.960" endtime="20231206 16:11:38.979"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.959" endtime="20231206 16:11:38.980"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.959" endtime="20231206 16:11:38.980"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.951" endtime="20231206 16:11:38.980"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.951" endtime="20231206 16:11:38.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:38.982" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:40.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:40.793" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:38.981" endtime="20231206 16:11:40.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:40.794" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:40.794" endtime="20231206 16:11:40.794"/>
</kw>
<msg timestamp="20231206 16:11:40.794" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:38.981" endtime="20231206 16:11:40.794"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231206 16:11:40.796" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231206 16:11:40.795" endtime="20231206 16:11:40.796"/>
</kw>
<msg timestamp="20231206 16:11:40.796" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231206 16:11:40.795" endtime="20231206 16:11:40.796"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:40.796" endtime="20231206 16:11:40.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231206 16:11:40.797" endtime="20231206 16:11:40.797"/>
</kw>
<status status="NOT RUN" starttime="20231206 16:11:40.796" endtime="20231206 16:11:40.797"/>
</branch>
<status status="PASS" starttime="20231206 16:11:40.796" endtime="20231206 16:11:40.797"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:40.797" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:40.797" endtime="20231206 16:11:40.797"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231206 16:11:40.798" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231206 16:11:40.797" endtime="20231206 16:11:40.798"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231206 16:11:40.798" level="INFO">${secret} = ['cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d']</msg>
<status status="PASS" starttime="20231206 16:11:40.798" endtime="20231206 16:11:40.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:40.800" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:40.798" endtime="20231206 16:11:40.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231206 16:11:40.800" level="INFO">${secret} = cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d</msg>
<status status="PASS" starttime="20231206 16:11:40.800" endtime="20231206 16:11:40.800"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:40.803" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:41.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:41.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:40.802" endtime="20231206 16:11:41.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:41.174" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:41.173" endtime="20231206 16:11:41.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:41.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:41.174" endtime="20231206 16:11:41.175"/>
</kw>
<status status="PASS" starttime="20231206 16:11:40.801" endtime="20231206 16:11:41.175"/>
</kw>
<msg timestamp="20231206 16:11:41.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:40.801" endtime="20231206 16:11:41.175"/>
</kw>
<status status="PASS" starttime="20231206 16:11:40.801" endtime="20231206 16:11:41.175"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:41.178" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:41.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:41.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:41.177" endtime="20231206 16:11:41.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:41.544" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:41.544" endtime="20231206 16:11:41.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:41.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:41.544" endtime="20231206 16:11:41.545"/>
</kw>
<status status="PASS" starttime="20231206 16:11:41.176" endtime="20231206 16:11:41.545"/>
</kw>
<msg timestamp="20231206 16:11:41.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:41.176" endtime="20231206 16:11:41.545"/>
</kw>
<status status="PASS" starttime="20231206 16:11:41.176" endtime="20231206 16:11:41.546"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:41.548" level="INFO">Running command 'aws configure set aws_secret_access_key cbef6e8538e59a2dd457fefcc8d168b32c23aa9e1bf223521bb8e42fa76e2e5d 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:41.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:41.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:41.547" endtime="20231206 16:11:41.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:41.914" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:41.913" endtime="20231206 16:11:41.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:41.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:41.914" endtime="20231206 16:11:41.915"/>
</kw>
<status status="PASS" starttime="20231206 16:11:41.546" endtime="20231206 16:11:41.915"/>
</kw>
<msg timestamp="20231206 16:11:41.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:41.546" endtime="20231206 16:11:41.915"/>
</kw>
<status status="PASS" starttime="20231206 16:11:41.546" endtime="20231206 16:11:41.915"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:41.918" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:42.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:42.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:41.916" endtime="20231206 16:11:42.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:42.280" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:42.279" endtime="20231206 16:11:42.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:42.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:42.280" endtime="20231206 16:11:42.280"/>
</kw>
<status status="PASS" starttime="20231206 16:11:41.916" endtime="20231206 16:11:42.280"/>
</kw>
<msg timestamp="20231206 16:11:42.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:41.916" endtime="20231206 16:11:42.281"/>
</kw>
<status status="PASS" starttime="20231206 16:11:41.915" endtime="20231206 16:11:42.281"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:42.284" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:42.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:42.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:42.282" endtime="20231206 16:11:42.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:42.637" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:42.637" endtime="20231206 16:11:42.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:42.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:42.637" endtime="20231206 16:11:42.638"/>
</kw>
<status status="PASS" starttime="20231206 16:11:42.282" endtime="20231206 16:11:42.638"/>
</kw>
<msg timestamp="20231206 16:11:42.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:42.282" endtime="20231206 16:11:42.638"/>
</kw>
<status status="PASS" starttime="20231206 16:11:42.281" endtime="20231206 16:11:42.638"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.980" endtime="20231206 16:11:42.639"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.980" endtime="20231206 16:11:42.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231206 16:11:42.639" endtime="20231206 16:11:42.639"/>
</kw>
<status status="PASS" starttime="20231206 16:11:38.951" endtime="20231206 16:11:42.639"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231206 16:11:42.640" level="INFO">${randStr} = 3319085337</msg>
<status status="PASS" starttime="20231206 16:11:42.640" endtime="20231206 16:11:42.640"/>
</kw>
<msg timestamp="20231206 16:11:42.640" level="INFO">${random} = ozone-test-3319085337</msg>
<status status="PASS" starttime="20231206 16:11:42.639" endtime="20231206 16:11:42.640"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:42.644" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-3319085337 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:43.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:43.109" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3319085337"
}</msg>
<status status="PASS" starttime="20231206 16:11:42.642" endtime="20231206 16:11:43.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:43.110" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3319085337"
}</msg>
<status status="PASS" starttime="20231206 16:11:43.110" endtime="20231206 16:11:43.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:43.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:43.110" endtime="20231206 16:11:43.111"/>
</kw>
<status status="PASS" starttime="20231206 16:11:42.642" endtime="20231206 16:11:43.111"/>
</kw>
<msg timestamp="20231206 16:11:43.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:42.641" endtime="20231206 16:11:43.112"/>
</kw>
<msg timestamp="20231206 16:11:43.112" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3319085337"
}</msg>
<status status="PASS" starttime="20231206 16:11:42.641" endtime="20231206 16:11:43.112"/>
</kw>
<msg timestamp="20231206 16:11:43.112" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3319085337"
}</msg>
<status status="PASS" starttime="20231206 16:11:42.641" endtime="20231206 16:11:43.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:43.112" endtime="20231206 16:11:43.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:43.113" endtime="20231206 16:11:43.113"/>
</kw>
<msg timestamp="20231206 16:11:43.113" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231206 16:11:42.640" endtime="20231206 16:11:43.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231206 16:11:43.113" endtime="20231206 16:11:43.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:38.950" endtime="20231206 16:11:43.114"/>
</test>
<test id="s1-s17-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:43.117" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231206 16:11:43.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:43.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:43.115" endtime="20231206 16:11:43.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:43.119" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:43.118" endtime="20231206 16:11:43.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:43.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:43.119" endtime="20231206 16:11:43.119"/>
</kw>
<status status="PASS" starttime="20231206 16:11:43.115" endtime="20231206 16:11:43.120"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:43.122" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:43.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:43.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:43.121" endtime="20231206 16:11:43.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:43.673" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:43.672" endtime="20231206 16:11:43.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:43.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:43.673" endtime="20231206 16:11:43.673"/>
</kw>
<msg timestamp="20231206 16:11:43.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:43.120" endtime="20231206 16:11:43.673"/>
</kw>
<msg timestamp="20231206 16:11:43.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:43.120" endtime="20231206 16:11:43.674"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231206 16:11:43.674" endtime="20231206 16:11:43.674"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:43.676" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:43.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:43.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:43.674" endtime="20231206 16:11:43.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:43.678" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:43.678" endtime="20231206 16:11:43.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:43.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:43.678" endtime="20231206 16:11:43.679"/>
</kw>
<status status="PASS" starttime="20231206 16:11:43.674" endtime="20231206 16:11:43.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231206 16:11:43.114" endtime="20231206 16:11:43.679"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231206 16:11:30.618" endtime="20231206 16:11:43.680"/>
</suite>
<suite id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s18-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:46.695" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:46.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:46.698" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231206 16:11:46.693" endtime="20231206 16:11:46.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:46.698" level="INFO">scm</msg>
<status status="PASS" starttime="20231206 16:11:46.698" endtime="20231206 16:11:46.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:46.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:46.698" endtime="20231206 16:11:46.699"/>
</kw>
<status status="PASS" starttime="20231206 16:11:46.692" endtime="20231206 16:11:46.699"/>
</kw>
<msg timestamp="20231206 16:11:46.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:46.692" endtime="20231206 16:11:46.700"/>
</kw>
<msg timestamp="20231206 16:11:46.700" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231206 16:11:46.692" endtime="20231206 16:11:46.700"/>
</kw>
<msg timestamp="20231206 16:11:46.701" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:46.691" endtime="20231206 16:11:46.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231206 16:11:46.701" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231206 16:11:46.701" endtime="20231206 16:11:46.701"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:46.704" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:11:46.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20231206 16:11:46.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231206 16:11:46.703" endtime="20231206 16:11:46.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231206 16:11:46.717" level="INFO"/>
<status status="PASS" starttime="20231206 16:11:46.716" endtime="20231206 16:11:46.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231206 16:11:46.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231206 16:11:46.717" endtime="20231206 16:11:46.718"/>
</kw>
<status status="PASS" starttime="20231206 16:11:46.702" endtime="20231206 16:11:46.718"/>
</kw>
<msg timestamp="20231206 16:11:46.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231206 16:11:46.702" endtime="20231206 16:11:46.718"/>
</kw>
<status status="PASS" starttime="20231206 16:11:46.701" endtime="20231206 16:11:46.719"/>
</kw>
<status status="PASS" starttime="20231206 16:11:46.701" endtime="20231206 16:11:46.719"/>
</kw>
<status status="PASS" starttime="20231206 16:11:46.691" endtime="20231206 16:11:46.719"/>
</kw>
<status status="PASS" starttime="20231206 16:11:46.691" endtime="20231206 16:11:46.719"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231206 16:11:46.719" endtime="20231206 16:11:46.719"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231206 16:11:46.722" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231206 16:16:46.690" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231206 16:11:46.720" endtime="20231206 16:16:46.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231206 16:16:46.691" endtime="20231206 16:16:46.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231206 16:16:46.691" endtime="20231206 16:16:46.691"/>
</kw>
<status status="FAIL" starttime="20231206 16:11:46.720" endtime="20231206 16:16:46.692"/>
</kw>
<msg timestamp="20231206 16:16:46.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231206 16:11:46.720" endtime="20231206 16:16:46.692"/>
</kw>
<status status="FAIL" starttime="20231206 16:11:46.719" endtime="20231206 16:16:46.692"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231206 16:16:46.692" endtime="20231206 16:16:46.693"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231206 16:11:46.690" endtime="20231206 16:16:46.693">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231206 16:11:46.649" endtime="20231206 16:16:46.694"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="571124"/>
</suite>
<statistics>
<total>
<stat pass="56" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="56" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.3.0-1.4.0-2-pre-finalized-validate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.3.0-1.4.0-2-pre-finalized-generate-old1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.3.0-1.4.0-2-pre-finalized-generate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.3.0-1.4.0-2-pre-finalized-validate-new1">upgrade.1.3.0-1.4.0-2-pre-finalized-validate-new1</stat>
<stat pass="2" fail="0" skip="0" id="s1-s9" name="1.3.0-1.4.0-2-pre-finalized-check-finalization">upgrade.1.3.0-1.4.0-2-pre-finalized-check-finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10" name="1.3.0-1.4.0-2-pre-finalized-snapshot">upgrade.1.3.0-1.4.0-2-pre-finalized-snapshot</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="1.3.0-1.4.0-2-pre-finalized-prepare">upgrade.1.3.0-1.4.0-2-pre-finalized-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s12" name="1.3.0-1.4.0-3-downgraded-check-finalization">upgrade.1.3.0-1.4.0-3-downgraded-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s13" name="1.3.0-1.4.0-3-downgraded-validate-old1">upgrade.1.3.0-1.4.0-3-downgraded-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14" name="1.3.0-1.4.0-3-downgraded-validate-new1">upgrade.1.3.0-1.4.0-3-downgraded-validate-new1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s15" name="1.3.0-1.4.0-3-downgraded-generate-old2">upgrade.1.3.0-1.4.0-3-downgraded-generate-old2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s16" name="1.3.0-1.4.0-3-downgraded-validate-old2">upgrade.1.3.0-1.4.0-3-downgraded-validate-old2</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="1.3.0-1.4.0-3-downgraded-generate-old1">upgrade.1.3.0-1.4.0-3-downgraded-generate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s18" name="1.3.0-1.4.0-3-downgraded-prepare">upgrade.1.3.0-1.4.0-3-downgraded-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
