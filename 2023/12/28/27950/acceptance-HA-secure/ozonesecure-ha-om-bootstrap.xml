<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231228 14:39:05.200" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-om-bootstrap">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:39.484" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:39.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:39.487" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:36:39.482" endtime="20231228 14:36:39.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:39.488" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:36:39.487" endtime="20231228 14:36:39.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:39.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:39.488" endtime="20231228 14:36:39.488"/>
</kw>
<status status="PASS" starttime="20231228 14:36:39.481" endtime="20231228 14:36:39.488"/>
</kw>
<msg timestamp="20231228 14:36:39.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:39.481" endtime="20231228 14:36:39.489"/>
</kw>
<msg timestamp="20231228 14:36:39.489" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:36:39.481" endtime="20231228 14:36:39.489"/>
</kw>
<msg timestamp="20231228 14:36:39.489" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:36:39.480" endtime="20231228 14:36:39.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:36:39.490" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:36:39.489" endtime="20231228 14:36:39.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:39.492" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:39.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:39.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:36:39.491" endtime="20231228 14:36:39.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:39.547" level="INFO"/>
<status status="PASS" starttime="20231228 14:36:39.547" endtime="20231228 14:36:39.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:39.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:39.547" endtime="20231228 14:36:39.548"/>
</kw>
<status status="PASS" starttime="20231228 14:36:39.491" endtime="20231228 14:36:39.548"/>
</kw>
<msg timestamp="20231228 14:36:39.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:39.490" endtime="20231228 14:36:39.548"/>
</kw>
<status status="PASS" starttime="20231228 14:36:39.490" endtime="20231228 14:36:39.548"/>
</kw>
<status status="PASS" starttime="20231228 14:36:39.490" endtime="20231228 14:36:39.548"/>
</kw>
<status status="PASS" starttime="20231228 14:36:39.480" endtime="20231228 14:36:39.548"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231228 14:36:39.479" endtime="20231228 14:36:39.548"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231228 14:36:39.433" endtime="20231228 14:36:39.549"/>
</suite>
<suite id="s1-s2" name="Data-Creation-Before-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-creation-before-om-bootstrap.robot">
<test id="s1-s2-t1" name="Volume-bucket init" line="77">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:44.528" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:44.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:44.530" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:36:44.526" endtime="20231228 14:36:44.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:44.531" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:36:44.531" endtime="20231228 14:36:44.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:44.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:44.531" endtime="20231228 14:36:44.532"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.526" endtime="20231228 14:36:44.532"/>
</kw>
<msg timestamp="20231228 14:36:44.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:44.525" endtime="20231228 14:36:44.532"/>
</kw>
<msg timestamp="20231228 14:36:44.532" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:36:44.525" endtime="20231228 14:36:44.532"/>
</kw>
<msg timestamp="20231228 14:36:44.532" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:36:44.525" endtime="20231228 14:36:44.533"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:36:44.533" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:36:44.533" endtime="20231228 14:36:44.533"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:44.536" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:44.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:44.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:36:44.535" endtime="20231228 14:36:44.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:44.550" level="INFO"/>
<status status="PASS" starttime="20231228 14:36:44.550" endtime="20231228 14:36:44.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:44.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:44.551" endtime="20231228 14:36:44.551"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.534" endtime="20231228 14:36:44.551"/>
</kw>
<msg timestamp="20231228 14:36:44.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:44.534" endtime="20231228 14:36:44.552"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.534" endtime="20231228 14:36:44.552"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.533" endtime="20231228 14:36:44.552"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.524" endtime="20231228 14:36:44.552"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.524" endtime="20231228 14:36:44.552"/>
</kw>
<kw name="Create volume and bucket">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${vol_res}</var>
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:44.555" level="INFO">Running command 'ozone sh volume create /vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:48.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:48.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:36:44.553" endtime="20231228 14:36:48.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:48.861" level="INFO"/>
<status status="PASS" starttime="20231228 14:36:48.861" endtime="20231228 14:36:48.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:48.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:48.862" endtime="20231228 14:36:48.862"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.553" endtime="20231228 14:36:48.862"/>
</kw>
<msg timestamp="20231228 14:36:48.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:44.553" endtime="20231228 14:36:48.862"/>
</kw>
<msg timestamp="20231228 14:36:48.863" level="INFO">${vol_res} = </msg>
<status status="PASS" starttime="20231228 14:36:44.552" endtime="20231228 14:36:48.863"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${vol_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:36:48.863" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:36:48.863" endtime="20231228 14:36:48.863"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_res}</var>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:48.866" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:53.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:53.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:36:48.865" endtime="20231228 14:36:53.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:53.394" level="INFO"/>
<status status="PASS" starttime="20231228 14:36:53.393" endtime="20231228 14:36:53.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:53.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:53.395" endtime="20231228 14:36:53.396"/>
</kw>
<status status="PASS" starttime="20231228 14:36:48.864" endtime="20231228 14:36:53.396"/>
</kw>
<msg timestamp="20231228 14:36:53.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:48.864" endtime="20231228 14:36:53.396"/>
</kw>
<msg timestamp="20231228 14:36:53.396" level="INFO">${bucket_res} = </msg>
<status status="PASS" starttime="20231228 14:36:48.863" endtime="20231228 14:36:53.396"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${bucket_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:36:53.397" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:36:53.397" endtime="20231228 14:36:53.397"/>
</kw>
<status status="PASS" starttime="20231228 14:36:44.552" endtime="20231228 14:36:53.397"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:36:44.523" endtime="20231228 14:36:53.398"/>
</test>
<test id="s1-s2-t2" name="Create 100 metadata keys under /vol1/bucket1" line="80">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:53.414" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:53.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:53.414" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:36:53.404" endtime="20231228 14:36:53.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:53.417" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:36:53.416" endtime="20231228 14:36:53.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:53.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:53.417" endtime="20231228 14:36:53.418"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.403" endtime="20231228 14:36:53.418"/>
</kw>
<msg timestamp="20231228 14:36:53.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:53.403" endtime="20231228 14:36:53.418"/>
</kw>
<msg timestamp="20231228 14:36:53.419" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:36:53.402" endtime="20231228 14:36:53.419"/>
</kw>
<msg timestamp="20231228 14:36:53.419" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:36:53.401" endtime="20231228 14:36:53.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:36:53.420" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:36:53.419" endtime="20231228 14:36:53.420"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:53.425" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:36:53.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:36:53.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:36:53.423" endtime="20231228 14:36:53.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:36:53.484" level="INFO"/>
<status status="PASS" starttime="20231228 14:36:53.484" endtime="20231228 14:36:53.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:36:53.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:36:53.484" endtime="20231228 14:36:53.485"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.422" endtime="20231228 14:36:53.485"/>
</kw>
<msg timestamp="20231228 14:36:53.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:53.422" endtime="20231228 14:36:53.485"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.421" endtime="20231228 14:36:53.485"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.420" endtime="20231228 14:36:53.485"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.401" endtime="20231228 14:36:53.485"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.400" endtime="20231228 14:36:53.485"/>
</kw>
<kw name="Create metadata keys">
<arg>10</arg>
<arg>100</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${freon_res}</var>
<arg>ozone freon omkg -t ${threads} -n ${key_num} -v ${volume} -b ${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:36:53.489" level="INFO">Running command 'ozone freon omkg -t 10 -n 100 -v vol1 -b bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:00.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:00.977" level="INFO">${output} = 2023-12-28 14:36:55,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-28 14:36:55,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231228 14:36:53.487" endtime="20231228 14:37:00.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:00.978" level="INFO">2023-12-28 14:36:55,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-28 14:36:55,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-28 14:36:55,693 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-28 14:36:55,785 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ovgmge5gdm and number-of-tests 100
2023-12-28 14:36:55,861 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-28 14:36:56,096 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-28 14:36:56,878 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-28 14:36:57,089 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-28 14:36:57,610 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2023-12-28 14:36:57,879 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-28 14:36:58,879 [Thread-5] INFO freon.ProgressBar: Progress: 13.00 % (13 out of 100)
2023-12-28 14:36:59,880 [Thread-5] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2023-12-28 14:37:00,880 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-28 14:37:00,919 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=114.598139, max=1057.445553, mean=292.4554278287005, stddev=219.1280638543044, median=208.929624, p75=302.950807, p95=890.549308, p98=993.907961, p99=1010.716874, p999=1057.445553, mean_rate=30.278785538101964, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-28 14:37:00,920 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-12-28 14:37:00,920 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-28 14:37:00,920 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231228 14:37:00.977" endtime="20231228 14:37:00.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:00.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:00.978" endtime="20231228 14:37:00.979"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.487" endtime="20231228 14:37:00.979"/>
</kw>
<msg timestamp="20231228 14:37:00.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:36:53.487" endtime="20231228 14:37:00.980"/>
</kw>
<msg timestamp="20231228 14:37:00.980" level="INFO">${freon_res} = 2023-12-28 14:36:55,540 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-28 14:36:55,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231228 14:36:53.486" endtime="20231228 14:37:00.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${freon_res}</arg>
<arg>Successful executions: ${key_num}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:37:00.980" endtime="20231228 14:37:00.981"/>
</kw>
<status status="PASS" starttime="20231228 14:36:53.486" endtime="20231228 14:37:00.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:36:53.399" endtime="20231228 14:37:00.981"/>
</test>
<test id="s1-s2-t3" name="Create snapshot 'snap1'" line="83">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:00.988" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:00.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:00.991" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:37:00.986" endtime="20231228 14:37:00.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:00.991" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:37:00.991" endtime="20231228 14:37:00.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:00.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:00.992" endtime="20231228 14:37:00.992"/>
</kw>
<status status="PASS" starttime="20231228 14:37:00.985" endtime="20231228 14:37:00.992"/>
</kw>
<msg timestamp="20231228 14:37:00.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:00.984" endtime="20231228 14:37:00.992"/>
</kw>
<msg timestamp="20231228 14:37:00.993" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:37:00.984" endtime="20231228 14:37:00.993"/>
</kw>
<msg timestamp="20231228 14:37:00.993" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:00.984" endtime="20231228 14:37:00.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:37:00.993" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:00.993" endtime="20231228 14:37:00.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:00.996" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:01.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:01.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:00.995" endtime="20231228 14:37:01.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:01.035" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:01.035" endtime="20231228 14:37:01.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:01.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:01.035" endtime="20231228 14:37:01.036"/>
</kw>
<status status="PASS" starttime="20231228 14:37:00.995" endtime="20231228 14:37:01.036"/>
</kw>
<msg timestamp="20231228 14:37:01.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:00.994" endtime="20231228 14:37:01.036"/>
</kw>
<status status="PASS" starttime="20231228 14:37:00.994" endtime="20231228 14:37:01.036"/>
</kw>
<status status="PASS" starttime="20231228 14:37:00.994" endtime="20231228 14:37:01.036"/>
</kw>
<status status="PASS" starttime="20231228 14:37:00.983" endtime="20231228 14:37:01.036"/>
</kw>
<status status="PASS" starttime="20231228 14:37:00.983" endtime="20231228 14:37:01.036"/>
</kw>
<kw name="Create snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<kw name="Execute" library="os">
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:01.040" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:01.038" endtime="20231228 14:37:05.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.203" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:05.202" endtime="20231228 14:37:05.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.203" endtime="20231228 14:37:05.204"/>
</kw>
<status status="PASS" starttime="20231228 14:37:01.038" endtime="20231228 14:37:05.204"/>
</kw>
<msg timestamp="20231228 14:37:05.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:01.038" endtime="20231228 14:37:05.204"/>
</kw>
<msg timestamp="20231228 14:37:05.204" level="INFO">${snap_res} = </msg>
<status status="PASS" starttime="20231228 14:37:01.037" endtime="20231228 14:37:05.205"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:37:05.205" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:37:05.205" endtime="20231228 14:37:05.205"/>
</kw>
<status status="PASS" starttime="20231228 14:37:01.037" endtime="20231228 14:37:05.205"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:37:00.982" endtime="20231228 14:37:05.205"/>
</test>
<test id="s1-s2-t4" name="Create tmp file to be used for key creation" line="86">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.212" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.215" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:37:05.210" endtime="20231228 14:37:05.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.215" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:37:05.215" endtime="20231228 14:37:05.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.216" endtime="20231228 14:37:05.216"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.209" endtime="20231228 14:37:05.217"/>
</kw>
<msg timestamp="20231228 14:37:05.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.209" endtime="20231228 14:37:05.217"/>
</kw>
<msg timestamp="20231228 14:37:05.217" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:37:05.209" endtime="20231228 14:37:05.217"/>
</kw>
<msg timestamp="20231228 14:37:05.218" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:05.208" endtime="20231228 14:37:05.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:37:05.218" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:05.218" endtime="20231228 14:37:05.218"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.221" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:05.220" endtime="20231228 14:37:05.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.252" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:05.251" endtime="20231228 14:37:05.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.252" endtime="20231228 14:37:05.253"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.220" endtime="20231228 14:37:05.253"/>
</kw>
<msg timestamp="20231228 14:37:05.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.219" endtime="20231228 14:37:05.253"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.219" endtime="20231228 14:37:05.254"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.218" endtime="20231228 14:37:05.254"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.208" endtime="20231228 14:37:05.254"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.207" endtime="20231228 14:37:05.254"/>
</kw>
<kw name="Create tmp file">
<arg>${TMP_FILE}</arg>
<kw name="Execute" library="os">
<var>${create_res}</var>
<arg>touch ${file_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.259" level="INFO">Running command 'touch tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:05.257" endtime="20231228 14:37:05.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.263" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:05.263" endtime="20231228 14:37:05.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.263" endtime="20231228 14:37:05.264"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.256" endtime="20231228 14:37:05.264"/>
</kw>
<msg timestamp="20231228 14:37:05.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.256" endtime="20231228 14:37:05.264"/>
</kw>
<msg timestamp="20231228 14:37:05.264" level="INFO">${create_res} = </msg>
<status status="PASS" starttime="20231228 14:37:05.255" endtime="20231228 14:37:05.264"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${create_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:37:05.265" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:37:05.265" endtime="20231228 14:37:05.265"/>
</kw>
<kw name="Execute" library="os">
<var>${ls_grep_res}</var>
<arg>ls -lah | grep '${file_name}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.269" level="INFO">Running command 'ls -lah | grep 'tmp.txt' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.275" level="INFO">${output} = -rw-r--r--  1 hadoop hadoop    0 Dec 28 14:37 tmp.txt</msg>
<status status="PASS" starttime="20231228 14:37:05.267" endtime="20231228 14:37:05.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.276" level="INFO">-rw-r--r--  1 hadoop hadoop    0 Dec 28 14:37 tmp.txt</msg>
<status status="PASS" starttime="20231228 14:37:05.275" endtime="20231228 14:37:05.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.276" endtime="20231228 14:37:05.277"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.266" endtime="20231228 14:37:05.277"/>
</kw>
<msg timestamp="20231228 14:37:05.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.266" endtime="20231228 14:37:05.277"/>
</kw>
<msg timestamp="20231228 14:37:05.277" level="INFO">${ls_grep_res} = -rw-r--r--  1 hadoop hadoop    0 Dec 28 14:37 tmp.txt</msg>
<status status="PASS" starttime="20231228 14:37:05.265" endtime="20231228 14:37:05.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${ls_grep_res}</arg>
<arg>${file_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:37:05.278" endtime="20231228 14:37:05.278"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.254" endtime="20231228 14:37:05.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:37:05.206" endtime="20231228 14:37:05.279"/>
</test>
<test id="s1-s2-t5" name="Create 2 actual keys with prefix 'sn', key contents the same as the key name" line="89">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.289" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.291" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:37:05.286" endtime="20231228 14:37:05.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.292" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:37:05.292" endtime="20231228 14:37:05.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.293" endtime="20231228 14:37:05.293"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.285" endtime="20231228 14:37:05.294"/>
</kw>
<msg timestamp="20231228 14:37:05.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.285" endtime="20231228 14:37:05.294"/>
</kw>
<msg timestamp="20231228 14:37:05.294" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:37:05.284" endtime="20231228 14:37:05.294"/>
</kw>
<msg timestamp="20231228 14:37:05.295" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:05.283" endtime="20231228 14:37:05.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:37:05.295" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:05.295" endtime="20231228 14:37:05.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.300" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:05.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:05.298" endtime="20231228 14:37:05.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.325" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:05.324" endtime="20231228 14:37:05.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.325" endtime="20231228 14:37:05.325"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.297" endtime="20231228 14:37:05.326"/>
</kw>
<msg timestamp="20231228 14:37:05.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.297" endtime="20231228 14:37:05.326"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.296" endtime="20231228 14:37:05.326"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.296" endtime="20231228 14:37:05.326"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.282" endtime="20231228 14:37:05.326"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.282" endtime="20231228 14:37:05.326"/>
</kw>
<kw name="Create actual keys">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<arg>${TMP_FILE}</arg>
<kw name="Create a key and set contents same as the keyName">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_1}</arg>
<arg>${tmp_file}</arg>
<kw name="Execute" library="os">
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.330" level="INFO">Running command 'echo "sn/key1" &gt; tmp.txt'.</msg>
<msg timestamp="20231228 14:37:05.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:05.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:05.329" endtime="20231228 14:37:05.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:05.332" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:05.332" endtime="20231228 14:37:05.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:05.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:05.332" endtime="20231228 14:37:05.333"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.328" endtime="20231228 14:37:05.333"/>
</kw>
<msg timestamp="20231228 14:37:05.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.328" endtime="20231228 14:37:05.333"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.327" endtime="20231228 14:37:05.333"/>
</kw>
<kw name="Execute" library="os">
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:05.336" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key1 tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:12.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:12.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:05.334" endtime="20231228 14:37:12.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:12.459" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:12.459" endtime="20231228 14:37:12.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:12.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:12.459" endtime="20231228 14:37:12.460"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.334" endtime="20231228 14:37:12.460"/>
</kw>
<msg timestamp="20231228 14:37:12.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:05.334" endtime="20231228 14:37:12.460"/>
</kw>
<msg timestamp="20231228 14:37:12.460" level="INFO">${key_res} = </msg>
<status status="PASS" starttime="20231228 14:37:05.333" endtime="20231228 14:37:12.460"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:37:12.461" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:37:12.460" endtime="20231228 14:37:12.461"/>
</kw>
<kw name="Execute" library="os">
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:12.464" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:18.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:18.262" level="INFO">${output} = sn/key1</msg>
<status status="PASS" starttime="20231228 14:37:12.462" endtime="20231228 14:37:18.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:18.263" level="INFO">sn/key1</msg>
<status status="PASS" starttime="20231228 14:37:18.263" endtime="20231228 14:37:18.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:18.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:18.263" endtime="20231228 14:37:18.264"/>
</kw>
<status status="PASS" starttime="20231228 14:37:12.462" endtime="20231228 14:37:18.264"/>
</kw>
<msg timestamp="20231228 14:37:18.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:12.461" endtime="20231228 14:37:18.264"/>
</kw>
<msg timestamp="20231228 14:37:18.265" level="INFO">${key_cat_res} = sn/key1</msg>
<status status="PASS" starttime="20231228 14:37:12.461" endtime="20231228 14:37:18.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:37:18.265" endtime="20231228 14:37:18.265"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.327" endtime="20231228 14:37:18.265"/>
</kw>
<kw name="Create a key and set contents same as the keyName">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_2}</arg>
<arg>${tmp_file}</arg>
<kw name="Execute" library="os">
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:18.269" level="INFO">Running command 'echo "sn/key2" &gt; tmp.txt'.</msg>
<msg timestamp="20231228 14:37:18.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:18.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:18.267" endtime="20231228 14:37:18.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:18.271" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:18.271" endtime="20231228 14:37:18.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:18.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:18.271" endtime="20231228 14:37:18.272"/>
</kw>
<status status="PASS" starttime="20231228 14:37:18.267" endtime="20231228 14:37:18.272"/>
</kw>
<msg timestamp="20231228 14:37:18.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:18.267" endtime="20231228 14:37:18.272"/>
</kw>
<status status="PASS" starttime="20231228 14:37:18.266" endtime="20231228 14:37:18.272"/>
</kw>
<kw name="Execute" library="os">
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:18.275" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key2 tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:24.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:24.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:18.273" endtime="20231228 14:37:24.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:24.286" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:24.286" endtime="20231228 14:37:24.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:24.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:24.287" endtime="20231228 14:37:24.287"/>
</kw>
<status status="PASS" starttime="20231228 14:37:18.273" endtime="20231228 14:37:24.287"/>
</kw>
<msg timestamp="20231228 14:37:24.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:18.273" endtime="20231228 14:37:24.287"/>
</kw>
<msg timestamp="20231228 14:37:24.287" level="INFO">${key_res} = </msg>
<status status="PASS" starttime="20231228 14:37:18.272" endtime="20231228 14:37:24.287"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:37:24.288" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:37:24.288" endtime="20231228 14:37:24.288"/>
</kw>
<kw name="Execute" library="os">
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:24.291" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:29.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:29.912" level="INFO">${output} = sn/key2</msg>
<status status="PASS" starttime="20231228 14:37:24.289" endtime="20231228 14:37:29.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:29.913" level="INFO">sn/key2</msg>
<status status="PASS" starttime="20231228 14:37:29.912" endtime="20231228 14:37:29.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:29.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:29.913" endtime="20231228 14:37:29.913"/>
</kw>
<status status="PASS" starttime="20231228 14:37:24.289" endtime="20231228 14:37:29.914"/>
</kw>
<msg timestamp="20231228 14:37:29.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:24.289" endtime="20231228 14:37:29.914"/>
</kw>
<msg timestamp="20231228 14:37:29.914" level="INFO">${key_cat_res} = sn/key2</msg>
<status status="PASS" starttime="20231228 14:37:24.288" endtime="20231228 14:37:29.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:37:29.914" endtime="20231228 14:37:29.915"/>
</kw>
<status status="PASS" starttime="20231228 14:37:18.265" endtime="20231228 14:37:29.915"/>
</kw>
<status status="PASS" starttime="20231228 14:37:05.326" endtime="20231228 14:37:29.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:37:05.281" endtime="20231228 14:37:29.915"/>
</test>
<test id="s1-s2-t6" name="Create snapshot 'snap2'" line="92">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:29.920" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:29.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:29.922" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:37:29.918" endtime="20231228 14:37:29.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:29.923" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:37:29.922" endtime="20231228 14:37:29.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:29.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:29.923" endtime="20231228 14:37:29.923"/>
</kw>
<status status="PASS" starttime="20231228 14:37:29.918" endtime="20231228 14:37:29.923"/>
</kw>
<msg timestamp="20231228 14:37:29.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:29.918" endtime="20231228 14:37:29.924"/>
</kw>
<msg timestamp="20231228 14:37:29.924" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:37:29.917" endtime="20231228 14:37:29.924"/>
</kw>
<msg timestamp="20231228 14:37:29.924" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:29.917" endtime="20231228 14:37:29.924"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:37:29.924" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:29.924" endtime="20231228 14:37:29.924"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:29.927" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:30.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:30.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:29.926" endtime="20231228 14:37:30.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:30.011" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:30.010" endtime="20231228 14:37:30.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:30.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:30.011" endtime="20231228 14:37:30.012"/>
</kw>
<status status="PASS" starttime="20231228 14:37:29.926" endtime="20231228 14:37:30.012"/>
</kw>
<msg timestamp="20231228 14:37:30.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:29.925" endtime="20231228 14:37:30.012"/>
</kw>
<status status="PASS" starttime="20231228 14:37:29.925" endtime="20231228 14:37:30.012"/>
</kw>
<status status="PASS" starttime="20231228 14:37:29.925" endtime="20231228 14:37:30.012"/>
</kw>
<status status="PASS" starttime="20231228 14:37:29.916" endtime="20231228 14:37:30.012"/>
</kw>
<status status="PASS" starttime="20231228 14:37:29.916" endtime="20231228 14:37:30.012"/>
</kw>
<kw name="Create snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<kw name="Execute" library="os">
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:30.016" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:34.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:34.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:30.014" endtime="20231228 14:37:34.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:34.054" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:34.054" endtime="20231228 14:37:34.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:34.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:34.054" endtime="20231228 14:37:34.055"/>
</kw>
<status status="PASS" starttime="20231228 14:37:30.014" endtime="20231228 14:37:34.055"/>
</kw>
<msg timestamp="20231228 14:37:34.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:30.013" endtime="20231228 14:37:34.055"/>
</kw>
<msg timestamp="20231228 14:37:34.055" level="INFO">${snap_res} = </msg>
<status status="PASS" starttime="20231228 14:37:30.013" endtime="20231228 14:37:34.055"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231228 14:37:34.056" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231228 14:37:34.055" endtime="20231228 14:37:34.056"/>
</kw>
<status status="PASS" starttime="20231228 14:37:30.012" endtime="20231228 14:37:34.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:37:29.915" endtime="20231228 14:37:34.056"/>
</test>
<test id="s1-s2-t7" name="Cleanup tmp file" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:34.061" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:34.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:34.063" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:37:34.059" endtime="20231228 14:37:34.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:34.063" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:37:34.063" endtime="20231228 14:37:34.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:34.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:34.064" endtime="20231228 14:37:34.064"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.059" endtime="20231228 14:37:34.064"/>
</kw>
<msg timestamp="20231228 14:37:34.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:34.058" endtime="20231228 14:37:34.064"/>
</kw>
<msg timestamp="20231228 14:37:34.064" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:37:34.058" endtime="20231228 14:37:34.064"/>
</kw>
<msg timestamp="20231228 14:37:34.065" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:34.058" endtime="20231228 14:37:34.065"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:37:34.065" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:37:34.065" endtime="20231228 14:37:34.065"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:34.068" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:34.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:34.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:34.067" endtime="20231228 14:37:34.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:34.082" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:34.082" endtime="20231228 14:37:34.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:34.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:34.082" endtime="20231228 14:37:34.083"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.066" endtime="20231228 14:37:34.083"/>
</kw>
<msg timestamp="20231228 14:37:34.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:34.066" endtime="20231228 14:37:34.083"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.066" endtime="20231228 14:37:34.083"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.065" endtime="20231228 14:37:34.083"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.057" endtime="20231228 14:37:34.083"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.057" endtime="20231228 14:37:34.083"/>
</kw>
<kw name="Delete tmp file">
<arg>${TMP_FILE}</arg>
<kw name="Execute" library="os">
<arg>rm ${file_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:34.086" level="INFO">Running command 'rm tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:34.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:34.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:37:34.085" endtime="20231228 14:37:34.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:34.088" level="INFO"/>
<status status="PASS" starttime="20231228 14:37:34.088" endtime="20231228 14:37:34.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:34.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:34.089" endtime="20231228 14:37:34.089"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.084" endtime="20231228 14:37:34.089"/>
</kw>
<msg timestamp="20231228 14:37:34.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:34.084" endtime="20231228 14:37:34.089"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.084" endtime="20231228 14:37:34.089"/>
</kw>
<kw name="Execute" library="os">
<var>${file_exists}</var>
<arg>[[ -f ${file_name} ]] &amp;&amp; echo "File exists" || echo "File doesn't exist"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:37:34.092" level="INFO">Running command '[[ -f tmp.txt ]] &amp;&amp; echo "File exists" || echo "File doesn't exist" 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:37:34.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:37:34.093" level="INFO">${output} = File doesn't exist</msg>
<status status="PASS" starttime="20231228 14:37:34.091" endtime="20231228 14:37:34.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:37:34.094" level="INFO">File doesn't exist</msg>
<status status="PASS" starttime="20231228 14:37:34.093" endtime="20231228 14:37:34.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:37:34.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:37:34.094" endtime="20231228 14:37:34.094"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.090" endtime="20231228 14:37:34.094"/>
</kw>
<msg timestamp="20231228 14:37:34.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:37:34.090" endtime="20231228 14:37:34.094"/>
</kw>
<msg timestamp="20231228 14:37:34.095" level="INFO">${file_exists} = File doesn't exist</msg>
<status status="PASS" starttime="20231228 14:37:34.089" endtime="20231228 14:37:34.095"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file_exists}</arg>
<arg>File doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:37:34.095" endtime="20231228 14:37:34.095"/>
</kw>
<status status="PASS" starttime="20231228 14:37:34.083" endtime="20231228 14:37:34.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:37:34.056" endtime="20231228 14:37:34.095"/>
</test>
<doc>Smoke test for creating data needed for om bootstrap load test.</doc>
<status status="PASS" starttime="20231228 14:36:44.477" endtime="20231228 14:37:34.096"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:01.220" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:01.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:01.222" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:38:01.219" endtime="20231228 14:38:01.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:01.223" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:38:01.223" endtime="20231228 14:38:01.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:01.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:01.223" endtime="20231228 14:38:01.224"/>
</kw>
<status status="PASS" starttime="20231228 14:38:01.218" endtime="20231228 14:38:01.224"/>
</kw>
<msg timestamp="20231228 14:38:01.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:01.218" endtime="20231228 14:38:01.224"/>
</kw>
<msg timestamp="20231228 14:38:01.224" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:38:01.217" endtime="20231228 14:38:01.224"/>
</kw>
<msg timestamp="20231228 14:38:01.224" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:01.217" endtime="20231228 14:38:01.224"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:38:01.225" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:01.225" endtime="20231228 14:38:01.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:01.228" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:01.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:01.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:38:01.227" endtime="20231228 14:38:01.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:01.253" level="INFO"/>
<status status="PASS" starttime="20231228 14:38:01.252" endtime="20231228 14:38:01.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:01.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:01.253" endtime="20231228 14:38:01.253"/>
</kw>
<status status="PASS" starttime="20231228 14:38:01.226" endtime="20231228 14:38:01.253"/>
</kw>
<msg timestamp="20231228 14:38:01.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:01.226" endtime="20231228 14:38:01.254"/>
</kw>
<status status="PASS" starttime="20231228 14:38:01.225" endtime="20231228 14:38:01.254"/>
</kw>
<status status="PASS" starttime="20231228 14:38:01.225" endtime="20231228 14:38:01.254"/>
</kw>
<status status="PASS" starttime="20231228 14:38:01.217" endtime="20231228 14:38:01.254"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231228 14:38:01.216" endtime="20231228 14:38:01.254"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231228 14:38:01.173" endtime="20231228 14:38:01.255"/>
</suite>
<suite id="s1-s4" name="Data-Validation-After-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-validation-after-om-bootstrap.robot">
<test id="s1-s4-t1" name="Check number of checkpoints made" line="85">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:06.085" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:06.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:06.088" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:38:06.084" endtime="20231228 14:38:06.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:06.088" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:38:06.088" endtime="20231228 14:38:06.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:06.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:06.088" endtime="20231228 14:38:06.089"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.083" endtime="20231228 14:38:06.089"/>
</kw>
<msg timestamp="20231228 14:38:06.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:06.083" endtime="20231228 14:38:06.089"/>
</kw>
<msg timestamp="20231228 14:38:06.089" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:38:06.083" endtime="20231228 14:38:06.089"/>
</kw>
<msg timestamp="20231228 14:38:06.089" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:06.082" endtime="20231228 14:38:06.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:38:06.090" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:06.090" endtime="20231228 14:38:06.090"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:06.093" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:06.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:06.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:38:06.092" endtime="20231228 14:38:06.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:06.124" level="INFO"/>
<status status="PASS" starttime="20231228 14:38:06.124" endtime="20231228 14:38:06.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:06.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:06.124" endtime="20231228 14:38:06.125"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.091" endtime="20231228 14:38:06.125"/>
</kw>
<msg timestamp="20231228 14:38:06.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:06.091" endtime="20231228 14:38:06.125"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.090" endtime="20231228 14:38:06.125"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.090" endtime="20231228 14:38:06.125"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.082" endtime="20231228 14:38:06.125"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.081" endtime="20231228 14:38:06.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Number of checkpoints equals 2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Number of checkpoints equals 2">
<kw name="Execute" library="os">
<var>${checkpoints}</var>
<arg>ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:06.128" level="INFO">Running command 'ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:06.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:06.131" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231228 14:38:06.127" endtime="20231228 14:38:06.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:06.132" level="INFO">2</msg>
<status status="PASS" starttime="20231228 14:38:06.131" endtime="20231228 14:38:06.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:06.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:06.132" endtime="20231228 14:38:06.132"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.127" endtime="20231228 14:38:06.132"/>
</kw>
<msg timestamp="20231228 14:38:06.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:06.126" endtime="20231228 14:38:06.133"/>
</kw>
<msg timestamp="20231228 14:38:06.133" level="INFO">${checkpoints} = 2</msg>
<status status="PASS" starttime="20231228 14:38:06.126" endtime="20231228 14:38:06.133"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${checkpoints} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231228 14:38:06.133" endtime="20231228 14:38:06.133"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.126" endtime="20231228 14:38:06.133"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.125" endtime="20231228 14:38:06.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:38:06.081" endtime="20231228 14:38:06.134"/>
</test>
<test id="s1-s4-t2" name="Check current leader and transfer leadership to 'om3'" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:06.138" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:06.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:06.140" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:38:06.137" endtime="20231228 14:38:06.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:06.141" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:38:06.141" endtime="20231228 14:38:06.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:06.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:06.141" endtime="20231228 14:38:06.142"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.137" endtime="20231228 14:38:06.142"/>
</kw>
<msg timestamp="20231228 14:38:06.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:06.137" endtime="20231228 14:38:06.142"/>
</kw>
<msg timestamp="20231228 14:38:06.142" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:38:06.136" endtime="20231228 14:38:06.142"/>
</kw>
<msg timestamp="20231228 14:38:06.142" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:06.136" endtime="20231228 14:38:06.142"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:38:06.143" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:06.143" endtime="20231228 14:38:06.143"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:06.146" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:06.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:06.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:38:06.144" endtime="20231228 14:38:06.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:06.168" level="INFO"/>
<status status="PASS" starttime="20231228 14:38:06.168" endtime="20231228 14:38:06.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:06.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:06.169" endtime="20231228 14:38:06.169"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.144" endtime="20231228 14:38:06.169"/>
</kw>
<msg timestamp="20231228 14:38:06.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:06.144" endtime="20231228 14:38:06.169"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.143" endtime="20231228 14:38:06.169"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.143" endtime="20231228 14:38:06.170"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.135" endtime="20231228 14:38:06.170"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.135" endtime="20231228 14:38:06.170"/>
</kw>
<kw name="Check current leader is different than OM">
<arg>${BOOTSTRAPPED_OM}</arg>
<kw name="Execute" library="os">
<var>${leader}</var>
<arg>ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:06.172" level="INFO">Running command 'ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:09.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:09.777" level="INFO">${output} = om1 </msg>
<status status="PASS" starttime="20231228 14:38:06.171" endtime="20231228 14:38:09.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:09.779" level="INFO">om1 </msg>
<status status="PASS" starttime="20231228 14:38:09.778" endtime="20231228 14:38:09.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:09.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:09.780" endtime="20231228 14:38:09.780"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.171" endtime="20231228 14:38:09.780"/>
</kw>
<msg timestamp="20231228 14:38:09.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:06.171" endtime="20231228 14:38:09.780"/>
</kw>
<msg timestamp="20231228 14:38:09.780" level="INFO">${leader} = om1 </msg>
<status status="PASS" starttime="20231228 14:38:06.170" endtime="20231228 14:38:09.780"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${leader}</arg>
<arg>${om}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:09.781" endtime="20231228 14:38:09.781"/>
</kw>
<status status="PASS" starttime="20231228 14:38:06.170" endtime="20231228 14:38:09.781"/>
</kw>
<kw name="Transfer leadership to OM">
<arg>${BOOTSTRAPPED_OM}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -n ${new_leader}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:09.784" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -n om3 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:16.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:16.936" level="INFO">${output} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20231228 14:38:09.783" endtime="20231228 14:38:16.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:16.937" level="INFO">Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20231228 14:38:16.936" endtime="20231228 14:38:16.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:16.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:16.937" endtime="20231228 14:38:16.937"/>
</kw>
<status status="PASS" starttime="20231228 14:38:09.782" endtime="20231228 14:38:16.937"/>
</kw>
<msg timestamp="20231228 14:38:16.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:09.782" endtime="20231228 14:38:16.937"/>
</kw>
<msg timestamp="20231228 14:38:16.938" level="INFO">${result} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20231228 14:38:09.782" endtime="20231228 14:38:16.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:16.938" endtime="20231228 14:38:16.938"/>
</kw>
<status status="PASS" starttime="20231228 14:38:09.781" endtime="20231228 14:38:16.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:38:06.134" endtime="20231228 14:38:16.938"/>
</test>
<test id="s1-s4-t3" name="Snapshots exist on 'om3'" line="92">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:16.943" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:16.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:16.945" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:38:16.942" endtime="20231228 14:38:16.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:16.946" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:38:16.946" endtime="20231228 14:38:16.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:16.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:16.946" endtime="20231228 14:38:16.947"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.941" endtime="20231228 14:38:16.947"/>
</kw>
<msg timestamp="20231228 14:38:16.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:16.941" endtime="20231228 14:38:16.947"/>
</kw>
<msg timestamp="20231228 14:38:16.947" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:38:16.941" endtime="20231228 14:38:16.947"/>
</kw>
<msg timestamp="20231228 14:38:16.947" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:16.940" endtime="20231228 14:38:16.947"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:38:16.948" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:16.947" endtime="20231228 14:38:16.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:16.950" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:16.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:16.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:38:16.949" endtime="20231228 14:38:16.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:16.973" level="INFO"/>
<status status="PASS" starttime="20231228 14:38:16.973" endtime="20231228 14:38:16.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:16.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:16.974" endtime="20231228 14:38:16.974"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.949" endtime="20231228 14:38:16.974"/>
</kw>
<msg timestamp="20231228 14:38:16.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:16.949" endtime="20231228 14:38:16.974"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.948" endtime="20231228 14:38:16.974"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.948" endtime="20231228 14:38:16.974"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.940" endtime="20231228 14:38:16.975"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.939" endtime="20231228 14:38:16.975"/>
</kw>
<kw name="Check snapshots on OM">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<kw name="Execute" library="os">
<var>${snap_list}</var>
<arg>ozone sh snapshot list /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:16.978" level="INFO">Running command 'ozone sh snapshot list /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:21.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:21.189" level="INFO">${output} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1703774225056,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e8965a82-ed93-406b-8d08-8d71015...</msg>
<status status="PASS" starttime="20231228 14:38:16.976" endtime="20231228 14:38:21.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:21.190" level="INFO">[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1703774225056,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e8965a82-ed93-406b-8d08-8d71015cbf82",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-e8965a82-ed93-406b-8d08-8d71015cbf82",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1703774253956,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "39068659-cc03-45ad-a104-84878e2540f4",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-39068659-cc03-45ad-a104-84878e2540f4",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]</msg>
<status status="PASS" starttime="20231228 14:38:21.189" endtime="20231228 14:38:21.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:21.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:21.190" endtime="20231228 14:38:21.190"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.976" endtime="20231228 14:38:21.191"/>
</kw>
<msg timestamp="20231228 14:38:21.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:16.976" endtime="20231228 14:38:21.191"/>
</kw>
<msg timestamp="20231228 14:38:21.191" level="INFO">${snap_list} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1703774225056,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e8965a82-ed93-406b-8d08-8d71015...</msg>
<status status="PASS" starttime="20231228 14:38:16.975" endtime="20231228 14:38:21.191"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${snap_list}</arg>
<arg>[ ]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:21.191" endtime="20231228 14:38:21.191"/>
</kw>
<kw name="Execute" library="os">
<var>${snap1_res}</var>
<arg>echo "${snap_list}" | grep ${snap_1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:21.194" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1703774225056,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e8965a82-ed93-406b-8d08-8d71015cbf82",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-e8965a82-ed93-406b-8d08-8d71015cbf82",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1703774253956,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "39068659-cc03-45ad-a104-84878e2540f4",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-39068659-cc03-45ad-a104-84878e2540f4",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:21.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:21.196" level="INFO">${output} =   name : snap1,</msg>
<status status="PASS" starttime="20231228 14:38:21.193" endtime="20231228 14:38:21.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:21.197" level="INFO">  name : snap1,</msg>
<status status="PASS" starttime="20231228 14:38:21.197" endtime="20231228 14:38:21.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:21.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:21.197" endtime="20231228 14:38:21.198"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.192" endtime="20231228 14:38:21.198"/>
</kw>
<msg timestamp="20231228 14:38:21.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:21.192" endtime="20231228 14:38:21.198"/>
</kw>
<msg timestamp="20231228 14:38:21.198" level="INFO">${snap1_res} =   name : snap1,</msg>
<status status="PASS" starttime="20231228 14:38:21.192" endtime="20231228 14:38:21.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${snap1_res}</arg>
<arg>${snap_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:21.198" endtime="20231228 14:38:21.198"/>
</kw>
<kw name="Execute" library="os">
<var>${snap2_res}</var>
<arg>echo "${snap_list}" | grep ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:21.201" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1703774225056,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e8965a82-ed93-406b-8d08-8d71015cbf82",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-e8965a82-ed93-406b-8d08-8d71015cbf82",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1703774253956,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "39068659-cc03-45ad-a104-84878e2540f4",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-39068659-cc03-45ad-a104-84878e2540f4",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:21.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:21.203" level="INFO">${output} =   name : snap2,</msg>
<status status="PASS" starttime="20231228 14:38:21.200" endtime="20231228 14:38:21.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:21.203" level="INFO">  name : snap2,</msg>
<status status="PASS" starttime="20231228 14:38:21.203" endtime="20231228 14:38:21.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:21.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:21.204" endtime="20231228 14:38:21.204"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.199" endtime="20231228 14:38:21.204"/>
</kw>
<msg timestamp="20231228 14:38:21.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:21.199" endtime="20231228 14:38:21.204"/>
</kw>
<msg timestamp="20231228 14:38:21.204" level="INFO">${snap2_res} =   name : snap2,</msg>
<status status="PASS" starttime="20231228 14:38:21.199" endtime="20231228 14:38:21.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${snap2_res}</arg>
<arg>${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:21.205" endtime="20231228 14:38:21.205"/>
</kw>
<status status="PASS" starttime="20231228 14:38:16.975" endtime="20231228 14:38:21.205"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:38:16.939" endtime="20231228 14:38:21.205"/>
</test>
<test id="s1-s4-t4" name="Run snap diff on 'om3' and check diff keys" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:21.210" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:21.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:21.212" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:38:21.209" endtime="20231228 14:38:21.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:21.212" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:38:21.212" endtime="20231228 14:38:21.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:21.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:21.213" endtime="20231228 14:38:21.213"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.208" endtime="20231228 14:38:21.213"/>
</kw>
<msg timestamp="20231228 14:38:21.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:21.208" endtime="20231228 14:38:21.213"/>
</kw>
<msg timestamp="20231228 14:38:21.213" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:38:21.207" endtime="20231228 14:38:21.213"/>
</kw>
<msg timestamp="20231228 14:38:21.214" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:21.207" endtime="20231228 14:38:21.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:38:21.214" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:21.214" endtime="20231228 14:38:21.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:21.217" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:21.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:21.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:38:21.216" endtime="20231228 14:38:21.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:21.236" level="INFO"/>
<status status="PASS" starttime="20231228 14:38:21.236" endtime="20231228 14:38:21.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:21.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:21.236" endtime="20231228 14:38:21.237"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.215" endtime="20231228 14:38:21.237"/>
</kw>
<msg timestamp="20231228 14:38:21.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:21.215" endtime="20231228 14:38:21.237"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.215" endtime="20231228 14:38:21.237"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.214" endtime="20231228 14:38:21.237"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.207" endtime="20231228 14:38:21.237"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.206" endtime="20231228 14:38:21.237"/>
</kw>
<kw name="Run snap diff and validate results">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>3sec</arg>
<arg>Snap diff finished</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Snap diff finished">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:21.242" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:25.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:25.178" level="INFO">${output} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231228 14:38:21.240" endtime="20231228 14:38:25.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:25.180" level="INFO">Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231228 14:38:25.178" endtime="20231228 14:38:25.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:25.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:25.180" endtime="20231228 14:38:25.180"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.240" endtime="20231228 14:38:25.181"/>
</kw>
<msg timestamp="20231228 14:38:25.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:21.240" endtime="20231228 14:38:25.181"/>
</kw>
<msg timestamp="20231228 14:38:25.181" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231228 14:38:21.239" endtime="20231228 14:38:25.181"/>
</kw>
<msg timestamp="20231228 14:38:25.181" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231228 14:38:21.239" endtime="20231228 14:38:25.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231228 14:38:25.182" level="FAIL">'Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
' does not contain 'Difference between snapshot: snap1 and snapshot: snap2'</msg>
<status status="FAIL" starttime="20231228 14:38:25.181" endtime="20231228 14:38:25.182"/>
</kw>
<status status="FAIL" starttime="20231228 14:38:21.238" endtime="20231228 14:38:25.182"/>
</kw>
<kw name="Snap diff finished">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:28.187" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:32.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:32.131" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:28.185" endtime="20231228 14:38:32.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:32.132" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:32.131" endtime="20231228 14:38:32.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:32.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:32.132" endtime="20231228 14:38:32.132"/>
</kw>
<status status="PASS" starttime="20231228 14:38:28.185" endtime="20231228 14:38:32.133"/>
</kw>
<msg timestamp="20231228 14:38:32.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:28.185" endtime="20231228 14:38:32.133"/>
</kw>
<msg timestamp="20231228 14:38:32.133" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:28.184" endtime="20231228 14:38:32.133"/>
</kw>
<msg timestamp="20231228 14:38:32.133" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:28.184" endtime="20231228 14:38:32.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:32.133" endtime="20231228 14:38:32.134"/>
</kw>
<status status="PASS" starttime="20231228 14:38:28.183" endtime="20231228 14:38:32.134"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.238" endtime="20231228 14:38:32.134"/>
</kw>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:32.137" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:35.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:35.953" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:32.136" endtime="20231228 14:38:35.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:35.954" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:35.953" endtime="20231228 14:38:35.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:35.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:35.954" endtime="20231228 14:38:35.954"/>
</kw>
<status status="PASS" starttime="20231228 14:38:32.135" endtime="20231228 14:38:35.954"/>
</kw>
<msg timestamp="20231228 14:38:35.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:32.135" endtime="20231228 14:38:35.955"/>
</kw>
<msg timestamp="20231228 14:38:35.955" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:32.135" endtime="20231228 14:38:35.955"/>
</kw>
<msg timestamp="20231228 14:38:35.955" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231228 14:38:32.134" endtime="20231228 14:38:35.955"/>
</kw>
<kw name="Execute" library="os">
<var>${key_num}</var>
<arg>echo "${diff_res}" | grep 'key' | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:35.958" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep 'key' | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:35.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:35.960" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231228 14:38:35.956" endtime="20231228 14:38:35.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:35.961" level="INFO">2</msg>
<status status="PASS" starttime="20231228 14:38:35.960" endtime="20231228 14:38:35.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:35.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:35.961" endtime="20231228 14:38:35.962"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.956" endtime="20231228 14:38:35.962"/>
</kw>
<msg timestamp="20231228 14:38:35.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:35.956" endtime="20231228 14:38:35.962"/>
</kw>
<msg timestamp="20231228 14:38:35.962" level="INFO">${key_num} = 2</msg>
<status status="PASS" starttime="20231228 14:38:35.955" endtime="20231228 14:38:35.962"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${key_num} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231228 14:38:35.962" endtime="20231228 14:38:35.963"/>
</kw>
<kw name="Execute" library="os">
<var>${diff_key1}</var>
<arg>echo "${diff_res}" | grep ${key_1} | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:35.965" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key1 | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:35.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:35.967" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20231228 14:38:35.964" endtime="20231228 14:38:35.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:35.968" level="INFO">1</msg>
<status status="PASS" starttime="20231228 14:38:35.967" endtime="20231228 14:38:35.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:35.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:35.968" endtime="20231228 14:38:35.968"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.963" endtime="20231228 14:38:35.969"/>
</kw>
<msg timestamp="20231228 14:38:35.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:35.963" endtime="20231228 14:38:35.969"/>
</kw>
<msg timestamp="20231228 14:38:35.969" level="INFO">${diff_key1} = 1</msg>
<status status="PASS" starttime="20231228 14:38:35.963" endtime="20231228 14:38:35.969"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${diff_key1} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231228 14:38:35.969" endtime="20231228 14:38:35.969"/>
</kw>
<kw name="Execute" library="os">
<var>${diff_key2}</var>
<arg>echo "${diff_res}" | grep ${key_2} | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:35.972" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key2 | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:35.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:35.974" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20231228 14:38:35.971" endtime="20231228 14:38:35.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:35.975" level="INFO">1</msg>
<status status="PASS" starttime="20231228 14:38:35.975" endtime="20231228 14:38:35.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:35.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:35.975" endtime="20231228 14:38:35.976"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.970" endtime="20231228 14:38:35.976"/>
</kw>
<msg timestamp="20231228 14:38:35.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:35.970" endtime="20231228 14:38:35.976"/>
</kw>
<msg timestamp="20231228 14:38:35.976" level="INFO">${diff_key2} = 1</msg>
<status status="PASS" starttime="20231228 14:38:35.970" endtime="20231228 14:38:35.976"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${diff_key2} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231228 14:38:35.976" endtime="20231228 14:38:35.977"/>
</kw>
<status status="PASS" starttime="20231228 14:38:21.237" endtime="20231228 14:38:35.977"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:38:21.206" endtime="20231228 14:38:35.977"/>
</test>
<test id="s1-s4-t5" name="Cat snapshot keys and validate contents" line="98">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:35.982" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:35.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:35.985" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231228 14:38:35.981" endtime="20231228 14:38:35.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:35.985" level="INFO">om</msg>
<status status="PASS" starttime="20231228 14:38:35.985" endtime="20231228 14:38:35.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:35.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:35.986" endtime="20231228 14:38:35.986"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.980" endtime="20231228 14:38:35.986"/>
</kw>
<msg timestamp="20231228 14:38:35.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:35.980" endtime="20231228 14:38:35.987"/>
</kw>
<msg timestamp="20231228 14:38:35.987" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231228 14:38:35.979" endtime="20231228 14:38:35.987"/>
</kw>
<msg timestamp="20231228 14:38:35.987" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:35.979" endtime="20231228 14:38:35.987"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231228 14:38:35.987" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231228 14:38:35.987" endtime="20231228 14:38:35.987"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:35.990" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:36.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:36.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231228 14:38:35.989" endtime="20231228 14:38:36.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:36.005" level="INFO"/>
<status status="PASS" starttime="20231228 14:38:36.005" endtime="20231228 14:38:36.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:36.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:36.005" endtime="20231228 14:38:36.006"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.989" endtime="20231228 14:38:36.006"/>
</kw>
<msg timestamp="20231228 14:38:36.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:35.988" endtime="20231228 14:38:36.006"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.988" endtime="20231228 14:38:36.006"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.988" endtime="20231228 14:38:36.006"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.979" endtime="20231228 14:38:36.006"/>
</kw>
<status status="PASS" starttime="20231228 14:38:35.978" endtime="20231228 14:38:36.006"/>
</kw>
<kw name="Validate keys under snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<kw name="Execute" library="os">
<var>${key1_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:36.010" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:41.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:41.485" level="INFO">${output} = sn/key1</msg>
<status status="PASS" starttime="20231228 14:38:36.008" endtime="20231228 14:38:41.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:41.487" level="INFO">sn/key1</msg>
<status status="PASS" starttime="20231228 14:38:41.486" endtime="20231228 14:38:41.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:41.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:41.487" endtime="20231228 14:38:41.487"/>
</kw>
<status status="PASS" starttime="20231228 14:38:36.008" endtime="20231228 14:38:41.487"/>
</kw>
<msg timestamp="20231228 14:38:41.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:36.008" endtime="20231228 14:38:41.488"/>
</kw>
<msg timestamp="20231228 14:38:41.488" level="INFO">${key1_res} = sn/key1</msg>
<status status="PASS" starttime="20231228 14:38:36.007" endtime="20231228 14:38:41.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key1_res}</arg>
<arg>${key_prefix}/${key_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:41.488" endtime="20231228 14:38:41.488"/>
</kw>
<kw name="Execute" library="os">
<var>${key2_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231228 14:38:41.491" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231228 14:38:47.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20231228 14:38:47.345" level="INFO">${output} = sn/key2</msg>
<status status="PASS" starttime="20231228 14:38:41.490" endtime="20231228 14:38:47.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 14:38:47.346" level="INFO">sn/key2</msg>
<status status="PASS" starttime="20231228 14:38:47.345" endtime="20231228 14:38:47.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231228 14:38:47.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231228 14:38:47.346" endtime="20231228 14:38:47.346"/>
</kw>
<status status="PASS" starttime="20231228 14:38:41.489" endtime="20231228 14:38:47.346"/>
</kw>
<msg timestamp="20231228 14:38:47.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231228 14:38:41.489" endtime="20231228 14:38:47.346"/>
</kw>
<msg timestamp="20231228 14:38:47.347" level="INFO">${key2_res} = sn/key2</msg>
<status status="PASS" starttime="20231228 14:38:41.488" endtime="20231228 14:38:47.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key2_res}</arg>
<arg>${key_prefix}/${key_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231228 14:38:47.347" endtime="20231228 14:38:47.347"/>
</kw>
<status status="PASS" starttime="20231228 14:38:36.007" endtime="20231228 14:38:47.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231228 14:38:35.978" endtime="20231228 14:38:47.347"/>
</test>
<doc>Smoke test for validating snapshot data after om bootstrap.</doc>
<status status="PASS" starttime="20231228 14:38:06.038" endtime="20231228 14:38:47.348"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="91127"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozonesecure-ha-om-bootstrap">ozonesecure-ha-om-bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Data-Creation-Before-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Creation-Before-Om-Bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Data-Validation-After-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Validation-After-Om-Bootstrap</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
