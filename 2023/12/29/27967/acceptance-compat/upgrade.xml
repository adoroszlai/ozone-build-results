<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231229 14:43:02.103" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:51.557" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:51.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:51.559" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:35:51.555" endtime="20231229 14:35:51.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:51.560" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:35:51.560" endtime="20231229 14:35:51.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:51.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:51.560" endtime="20231229 14:35:51.561"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.554" endtime="20231229 14:35:51.561"/>
</kw>
<msg timestamp="20231229 14:35:51.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:51.554" endtime="20231229 14:35:51.562"/>
</kw>
<msg timestamp="20231229 14:35:51.563" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:35:51.554" endtime="20231229 14:35:51.563"/>
</kw>
<msg timestamp="20231229 14:35:51.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:35:51.553" endtime="20231229 14:35:51.563"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:35:51.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:35:51.563" endtime="20231229 14:35:51.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:51.570" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:51.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:51.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:35:51.565" endtime="20231229 14:35:51.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:51.623" level="INFO"/>
<status status="PASS" starttime="20231229 14:35:51.622" endtime="20231229 14:35:51.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:51.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:51.623" endtime="20231229 14:35:51.624"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.565" endtime="20231229 14:35:51.624"/>
</kw>
<msg timestamp="20231229 14:35:51.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:51.564" endtime="20231229 14:35:51.624"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.564" endtime="20231229 14:35:51.624"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.563" endtime="20231229 14:35:51.624"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.552" endtime="20231229 14:35:51.625"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.552" endtime="20231229 14:35:51.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:51.627" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:51.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:51.628" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231229 14:35:51.626" endtime="20231229 14:35:51.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:51.629" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231229 14:35:51.628" endtime="20231229 14:35:51.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:51.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:51.629" endtime="20231229 14:35:51.629"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.625" endtime="20231229 14:35:51.630"/>
</kw>
<msg timestamp="20231229 14:35:51.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:51.625" endtime="20231229 14:35:51.630"/>
</kw>
<msg timestamp="20231229 14:35:51.630" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20231229 14:35:51.625" endtime="20231229 14:35:51.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:51.631" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231229 14:35:51.630" endtime="20231229 14:35:51.631"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231229 14:35:51.631" endtime="20231229 14:35:51.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:51.633" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:53.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:53.839" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231229 14:35:51.632" endtime="20231229 14:35:53.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:53.840" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231229 14:35:53.839" endtime="20231229 14:35:53.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:53.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:53.840" endtime="20231229 14:35:53.841"/>
</kw>
<status status="PASS" starttime="20231229 14:35:51.632" endtime="20231229 14:35:53.841"/>
</kw>
<msg timestamp="20231229 14:35:53.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:51.632" endtime="20231229 14:35:53.841"/>
</kw>
<msg timestamp="20231229 14:35:53.841" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231229 14:35:51.631" endtime="20231229 14:35:53.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:53.842" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231229 14:35:53.842" endtime="20231229 14:35:53.842"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231229 14:35:53.842" endtime="20231229 14:35:53.842"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231229 14:35:51.551" endtime="20231229 14:35:53.842"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:53.847" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:53.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:53.849" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:35:53.846" endtime="20231229 14:35:53.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:53.850" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:35:53.849" endtime="20231229 14:35:53.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:53.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:53.850" endtime="20231229 14:35:53.850"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.845" endtime="20231229 14:35:53.850"/>
</kw>
<msg timestamp="20231229 14:35:53.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:53.845" endtime="20231229 14:35:53.851"/>
</kw>
<msg timestamp="20231229 14:35:53.851" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:35:53.845" endtime="20231229 14:35:53.851"/>
</kw>
<msg timestamp="20231229 14:35:53.851" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:35:53.844" endtime="20231229 14:35:53.851"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:35:53.852" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:35:53.851" endtime="20231229 14:35:53.852"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:53.854" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:53.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:53.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:35:53.853" endtime="20231229 14:35:53.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:53.887" level="INFO"/>
<status status="PASS" starttime="20231229 14:35:53.886" endtime="20231229 14:35:53.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:53.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:53.887" endtime="20231229 14:35:53.888"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.853" endtime="20231229 14:35:53.888"/>
</kw>
<msg timestamp="20231229 14:35:53.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:53.853" endtime="20231229 14:35:53.888"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.852" endtime="20231229 14:35:53.888"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.852" endtime="20231229 14:35:53.888"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.844" endtime="20231229 14:35:53.889"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.844" endtime="20231229 14:35:53.889"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231229 14:35:53.889" endtime="20231229 14:35:53.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:53.891" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:56.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:56.040" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231229 14:35:53.890" endtime="20231229 14:35:56.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:56.041" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231229 14:35:56.041" endtime="20231229 14:35:56.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:56.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:56.041" endtime="20231229 14:35:56.042"/>
</kw>
<status status="PASS" starttime="20231229 14:35:53.890" endtime="20231229 14:35:56.042"/>
</kw>
<msg timestamp="20231229 14:35:56.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:53.890" endtime="20231229 14:35:56.042"/>
</kw>
<msg timestamp="20231229 14:35:56.042" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231229 14:35:53.889" endtime="20231229 14:35:56.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:56.043" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231229 14:35:56.043" endtime="20231229 14:35:56.043"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231229 14:35:56.043" endtime="20231229 14:35:56.043"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231229 14:35:53.843" endtime="20231229 14:35:56.043"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231229 14:35:51.515" endtime="20231229 14:35:56.044"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:58.987" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:58.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:58.989" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:35:58.984" endtime="20231229 14:35:58.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:58.989" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:35:58.989" endtime="20231229 14:35:58.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:58.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:58.989" endtime="20231229 14:35:58.990"/>
</kw>
<status status="PASS" starttime="20231229 14:35:58.984" endtime="20231229 14:35:58.990"/>
</kw>
<msg timestamp="20231229 14:35:58.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:58.984" endtime="20231229 14:35:58.991"/>
</kw>
<msg timestamp="20231229 14:35:58.991" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:35:58.983" endtime="20231229 14:35:58.991"/>
</kw>
<msg timestamp="20231229 14:35:58.991" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:35:58.983" endtime="20231229 14:35:58.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:35:58.992" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:35:58.991" endtime="20231229 14:35:58.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:58.994" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:35:59.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:35:59.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:35:58.993" endtime="20231229 14:35:59.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:35:59.008" level="INFO"/>
<status status="PASS" starttime="20231229 14:35:59.008" endtime="20231229 14:35:59.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:35:59.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:35:59.009" endtime="20231229 14:35:59.009"/>
</kw>
<status status="PASS" starttime="20231229 14:35:58.993" endtime="20231229 14:35:59.009"/>
</kw>
<msg timestamp="20231229 14:35:59.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:58.992" endtime="20231229 14:35:59.010"/>
</kw>
<status status="PASS" starttime="20231229 14:35:58.992" endtime="20231229 14:35:59.010"/>
</kw>
<status status="PASS" starttime="20231229 14:35:58.992" endtime="20231229 14:35:59.010"/>
</kw>
<status status="PASS" starttime="20231229 14:35:58.983" endtime="20231229 14:35:59.010"/>
</kw>
<status status="PASS" starttime="20231229 14:35:58.982" endtime="20231229 14:35:59.010"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:35:59.013" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:01.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:01.240" level="INFO">${output} = 2023-12-29 14:36:01,150 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231229 14:35:59.012" endtime="20231229 14:36:01.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:01.241" level="INFO">2023-12-29 14:36:01,150 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231229 14:36:01.240" endtime="20231229 14:36:01.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:01.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:01.241" endtime="20231229 14:36:01.242"/>
</kw>
<status status="PASS" starttime="20231229 14:35:59.012" endtime="20231229 14:36:01.242"/>
</kw>
<msg timestamp="20231229 14:36:01.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:35:59.011" endtime="20231229 14:36:01.243"/>
</kw>
<msg timestamp="20231229 14:36:01.243" level="INFO">${output} = 2023-12-29 14:36:01,150 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231229 14:35:59.011" endtime="20231229 14:36:01.243"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:01.243" endtime="20231229 14:36:01.244"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:01.249" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:03.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:03.585" level="INFO">${output} = 2023-12-29 14:36:03,546 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231229 14:36:01.246" endtime="20231229 14:36:03.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:03.586" level="INFO">2023-12-29 14:36:03,546 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231229 14:36:03.586" endtime="20231229 14:36:03.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:03.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:03.586" endtime="20231229 14:36:03.587"/>
</kw>
<status status="PASS" starttime="20231229 14:36:01.245" endtime="20231229 14:36:03.587"/>
</kw>
<msg timestamp="20231229 14:36:03.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:01.245" endtime="20231229 14:36:03.587"/>
</kw>
<msg timestamp="20231229 14:36:03.587" level="INFO">${output} = 2023-12-29 14:36:03,546 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20231229 14:36:01.244" endtime="20231229 14:36:03.587"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:03.588" endtime="20231229 14:36:03.588"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:35:59.010" endtime="20231229 14:36:03.588"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:03.591" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231229 14:36:03.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:03.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:03.590" endtime="20231229 14:36:03.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:03.593" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:03.592" endtime="20231229 14:36:03.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:03.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:03.593" endtime="20231229 14:36:03.593"/>
</kw>
<status status="PASS" starttime="20231229 14:36:03.589" endtime="20231229 14:36:03.593"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:03.596" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:07.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:07.990" level="INFO">${output} = 2023-12-29 14:36:06,389 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:06,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231229 14:36:03.595" endtime="20231229 14:36:07.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:07.990" level="INFO">2023-12-29 14:36:06,389 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:06,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-29 14:36:06,456 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-29 14:36:06,643 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231229 14:36:07.990" endtime="20231229 14:36:07.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:07.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:07.991" endtime="20231229 14:36:07.991"/>
</kw>
<status status="PASS" starttime="20231229 14:36:03.594" endtime="20231229 14:36:07.991"/>
</kw>
<msg timestamp="20231229 14:36:07.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:03.594" endtime="20231229 14:36:07.992"/>
</kw>
<msg timestamp="20231229 14:36:07.992" level="INFO">${output} = 2023-12-29 14:36:06,389 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:06,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231229 14:36:03.593" endtime="20231229 14:36:07.992"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:07.992" endtime="20231229 14:36:07.992"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:07.994" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:07.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:07.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:07.993" endtime="20231229 14:36:07.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:07.996" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:07.996" endtime="20231229 14:36:07.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:07.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:07.996" endtime="20231229 14:36:07.997"/>
</kw>
<status status="PASS" starttime="20231229 14:36:07.992" endtime="20231229 14:36:07.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:03.589" endtime="20231229 14:36:07.997"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:08.000" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:10.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:10.240" level="INFO">${output} = 2023-12-29 14:36:10,199 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231229 14:36:07.999" endtime="20231229 14:36:10.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:10.241" level="INFO">2023-12-29 14:36:10,199 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231229 14:36:10.241" endtime="20231229 14:36:10.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:10.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:10.241" endtime="20231229 14:36:10.242"/>
</kw>
<status status="PASS" starttime="20231229 14:36:07.999" endtime="20231229 14:36:10.242"/>
</kw>
<msg timestamp="20231229 14:36:10.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:07.999" endtime="20231229 14:36:10.242"/>
</kw>
<msg timestamp="20231229 14:36:10.242" level="INFO">${output} = 2023-12-29 14:36:10,199 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20231229 14:36:07.998" endtime="20231229 14:36:10.242"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:10.243" endtime="20231229 14:36:10.243"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:07.998" endtime="20231229 14:36:10.243"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:10.246" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231229 14:36:10.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:10.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:10.245" endtime="20231229 14:36:10.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:10.248" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:10.247" endtime="20231229 14:36:10.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:10.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:10.248" endtime="20231229 14:36:10.248"/>
</kw>
<status status="PASS" starttime="20231229 14:36:10.244" endtime="20231229 14:36:10.248"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:10.250" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:13.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:13.995" level="INFO">${output} = 2023-12-29 14:36:12,803 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:12,869 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231229 14:36:10.249" endtime="20231229 14:36:13.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:13.996" level="INFO">2023-12-29 14:36:12,803 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:12,869 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-29 14:36:12,869 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-12-29 14:36:13,037 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231229 14:36:13.996" endtime="20231229 14:36:13.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:13.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:13.996" endtime="20231229 14:36:13.997"/>
</kw>
<status status="PASS" starttime="20231229 14:36:10.249" endtime="20231229 14:36:13.997"/>
</kw>
<msg timestamp="20231229 14:36:13.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:10.249" endtime="20231229 14:36:13.997"/>
</kw>
<msg timestamp="20231229 14:36:13.997" level="INFO">${output} = 2023-12-29 14:36:12,803 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:12,869 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231229 14:36:10.248" endtime="20231229 14:36:13.997"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:13.998" endtime="20231229 14:36:13.998"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:14.000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:14.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:14.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:13.998" endtime="20231229 14:36:14.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:14.002" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:14.002" endtime="20231229 14:36:14.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:14.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:14.002" endtime="20231229 14:36:14.002"/>
</kw>
<status status="PASS" starttime="20231229 14:36:13.998" endtime="20231229 14:36:14.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:10.244" endtime="20231229 14:36:14.003"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:14.007" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:14.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:14.009" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:36:14.006" endtime="20231229 14:36:14.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:14.010" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:36:14.009" endtime="20231229 14:36:14.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:14.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:14.010" endtime="20231229 14:36:14.010"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.006" endtime="20231229 14:36:14.011"/>
</kw>
<msg timestamp="20231229 14:36:14.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:14.006" endtime="20231229 14:36:14.011"/>
</kw>
<msg timestamp="20231229 14:36:14.011" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:36:14.005" endtime="20231229 14:36:14.011"/>
</kw>
<msg timestamp="20231229 14:36:14.011" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:14.005" endtime="20231229 14:36:14.011"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:36:14.012" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:14.012" endtime="20231229 14:36:14.012"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:14.014" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:14.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:14.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:14.013" endtime="20231229 14:36:14.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:14.068" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:14.068" endtime="20231229 14:36:14.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:14.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:14.069" endtime="20231229 14:36:14.069"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.013" endtime="20231229 14:36:14.069"/>
</kw>
<msg timestamp="20231229 14:36:14.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:14.013" endtime="20231229 14:36:14.070"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.012" endtime="20231229 14:36:14.070"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.012" endtime="20231229 14:36:14.070"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.005" endtime="20231229 14:36:14.070"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.004" endtime="20231229 14:36:14.070"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:14.072" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:15.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:15.910" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:14.071" endtime="20231229 14:36:15.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:15.911" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:15.910" endtime="20231229 14:36:15.911"/>
</kw>
<msg timestamp="20231229 14:36:15.911" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:14.071" endtime="20231229 14:36:15.911"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231229 14:36:15.912" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231229 14:36:15.912" endtime="20231229 14:36:15.912"/>
</kw>
<msg timestamp="20231229 14:36:15.912" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231229 14:36:15.911" endtime="20231229 14:36:15.912"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231229 14:36:15.913" endtime="20231229 14:36:15.913"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231229 14:36:15.913" endtime="20231229 14:36:15.913"/>
</kw>
<status status="NOT RUN" starttime="20231229 14:36:15.913" endtime="20231229 14:36:15.913"/>
</branch>
<status status="PASS" starttime="20231229 14:36:15.912" endtime="20231229 14:36:15.913"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231229 14:36:15.913" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231229 14:36:15.913" endtime="20231229 14:36:15.914"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231229 14:36:15.914" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231229 14:36:15.914" endtime="20231229 14:36:15.914"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231229 14:36:15.914" level="INFO">${secret} = ['947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff']</msg>
<status status="PASS" starttime="20231229 14:36:15.914" endtime="20231229 14:36:15.914"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231229 14:36:15.916" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:15.915" endtime="20231229 14:36:15.916"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231229 14:36:15.916" level="INFO">${secret} = 947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:15.916" endtime="20231229 14:36:15.916"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:15.919" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:16.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:16.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:15.918" endtime="20231229 14:36:16.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:16.289" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:16.288" endtime="20231229 14:36:16.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:16.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:16.289" endtime="20231229 14:36:16.289"/>
</kw>
<status status="PASS" starttime="20231229 14:36:15.917" endtime="20231229 14:36:16.289"/>
</kw>
<msg timestamp="20231229 14:36:16.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:15.917" endtime="20231229 14:36:16.290"/>
</kw>
<status status="PASS" starttime="20231229 14:36:15.917" endtime="20231229 14:36:16.290"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:16.292" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:16.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:16.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:16.291" endtime="20231229 14:36:16.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:16.657" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:16.657" endtime="20231229 14:36:16.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:16.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:16.657" endtime="20231229 14:36:16.658"/>
</kw>
<status status="PASS" starttime="20231229 14:36:16.291" endtime="20231229 14:36:16.658"/>
</kw>
<msg timestamp="20231229 14:36:16.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:16.290" endtime="20231229 14:36:16.659"/>
</kw>
<status status="PASS" starttime="20231229 14:36:16.290" endtime="20231229 14:36:16.659"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:16.661" level="INFO">Running command 'aws configure set aws_secret_access_key 947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:17.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:17.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:16.660" endtime="20231229 14:36:17.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:17.019" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:17.018" endtime="20231229 14:36:17.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:17.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:17.019" endtime="20231229 14:36:17.019"/>
</kw>
<status status="PASS" starttime="20231229 14:36:16.659" endtime="20231229 14:36:17.020"/>
</kw>
<msg timestamp="20231229 14:36:17.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:16.659" endtime="20231229 14:36:17.020"/>
</kw>
<status status="PASS" starttime="20231229 14:36:16.659" endtime="20231229 14:36:17.020"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:17.022" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:17.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:17.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:17.021" endtime="20231229 14:36:17.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:17.414" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:17.414" endtime="20231229 14:36:17.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:17.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:17.415" endtime="20231229 14:36:17.415"/>
</kw>
<status status="PASS" starttime="20231229 14:36:17.021" endtime="20231229 14:36:17.415"/>
</kw>
<msg timestamp="20231229 14:36:17.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:17.021" endtime="20231229 14:36:17.416"/>
</kw>
<status status="PASS" starttime="20231229 14:36:17.020" endtime="20231229 14:36:17.416"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:17.418" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:17.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:17.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:17.417" endtime="20231229 14:36:17.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:17.769" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:17.768" endtime="20231229 14:36:17.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:17.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:17.769" endtime="20231229 14:36:17.770"/>
</kw>
<status status="PASS" starttime="20231229 14:36:17.417" endtime="20231229 14:36:17.770"/>
</kw>
<msg timestamp="20231229 14:36:17.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:17.416" endtime="20231229 14:36:17.770"/>
</kw>
<status status="PASS" starttime="20231229 14:36:17.416" endtime="20231229 14:36:17.770"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.070" endtime="20231229 14:36:17.771"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.070" endtime="20231229 14:36:17.771"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231229 14:36:17.771" endtime="20231229 14:36:17.771"/>
</kw>
<status status="PASS" starttime="20231229 14:36:14.004" endtime="20231229 14:36:17.771"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231229 14:36:17.772" level="INFO">${randStr} = 4774749014</msg>
<status status="PASS" starttime="20231229 14:36:17.772" endtime="20231229 14:36:17.772"/>
</kw>
<msg timestamp="20231229 14:36:17.772" level="INFO">${random} = ozone-test-4774749014</msg>
<status status="PASS" starttime="20231229 14:36:17.771" endtime="20231229 14:36:17.773"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:17.775" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-4774749014 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:19.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:19.352" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4774749014"
}</msg>
<status status="PASS" starttime="20231229 14:36:17.774" endtime="20231229 14:36:19.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:19.353" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4774749014"
}</msg>
<status status="PASS" starttime="20231229 14:36:19.352" endtime="20231229 14:36:19.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:19.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:19.353" endtime="20231229 14:36:19.353"/>
</kw>
<status status="PASS" starttime="20231229 14:36:17.774" endtime="20231229 14:36:19.354"/>
</kw>
<msg timestamp="20231229 14:36:19.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:17.774" endtime="20231229 14:36:19.355"/>
</kw>
<msg timestamp="20231229 14:36:19.355" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4774749014"
}</msg>
<status status="PASS" starttime="20231229 14:36:17.773" endtime="20231229 14:36:19.355"/>
</kw>
<msg timestamp="20231229 14:36:19.355" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4774749014"
}</msg>
<status status="PASS" starttime="20231229 14:36:17.773" endtime="20231229 14:36:19.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:19.355" endtime="20231229 14:36:19.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:19.356" endtime="20231229 14:36:19.356"/>
</kw>
<msg timestamp="20231229 14:36:19.357" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231229 14:36:17.773" endtime="20231229 14:36:19.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231229 14:36:19.357" endtime="20231229 14:36:19.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:14.003" endtime="20231229 14:36:19.358"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:19.362" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231229 14:36:19.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:19.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:19.360" endtime="20231229 14:36:19.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:19.365" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:19.364" endtime="20231229 14:36:19.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:19.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:19.365" endtime="20231229 14:36:19.365"/>
</kw>
<status status="PASS" starttime="20231229 14:36:19.359" endtime="20231229 14:36:19.366"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:19.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:20.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:20.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:19.367" endtime="20231229 14:36:20.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:20.625" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:20.625" endtime="20231229 14:36:20.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:20.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:20.625" endtime="20231229 14:36:20.626"/>
</kw>
<msg timestamp="20231229 14:36:20.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:19.367" endtime="20231229 14:36:20.626"/>
</kw>
<msg timestamp="20231229 14:36:20.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:19.366" endtime="20231229 14:36:20.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:20.626" endtime="20231229 14:36:20.627"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:20.629" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:20.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:20.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:20.627" endtime="20231229 14:36:20.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:20.631" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:20.630" endtime="20231229 14:36:20.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:20.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:20.631" endtime="20231229 14:36:20.631"/>
</kw>
<status status="PASS" starttime="20231229 14:36:20.627" endtime="20231229 14:36:20.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:19.358" endtime="20231229 14:36:20.632"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231229 14:35:58.922" endtime="20231229 14:36:20.633"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:23.605" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:23.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:23.606" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:36:23.602" endtime="20231229 14:36:23.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:23.607" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:36:23.607" endtime="20231229 14:36:23.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:23.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:23.607" endtime="20231229 14:36:23.607"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.602" endtime="20231229 14:36:23.608"/>
</kw>
<msg timestamp="20231229 14:36:23.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:23.601" endtime="20231229 14:36:23.608"/>
</kw>
<msg timestamp="20231229 14:36:23.609" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:36:23.601" endtime="20231229 14:36:23.609"/>
</kw>
<msg timestamp="20231229 14:36:23.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:23.601" endtime="20231229 14:36:23.609"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:36:23.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:23.609" endtime="20231229 14:36:23.609"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:23.611" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:23.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:23.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:23.610" endtime="20231229 14:36:23.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:23.634" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:23.634" endtime="20231229 14:36:23.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:23.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:23.634" endtime="20231229 14:36:23.635"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.610" endtime="20231229 14:36:23.635"/>
</kw>
<msg timestamp="20231229 14:36:23.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:23.610" endtime="20231229 14:36:23.635"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.610" endtime="20231229 14:36:23.635"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.609" endtime="20231229 14:36:23.636"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.601" endtime="20231229 14:36:23.636"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.600" endtime="20231229 14:36:23.636"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231229 14:36:23.637" level="INFO">${random} = 46823</msg>
<status status="PASS" starttime="20231229 14:36:23.637" endtime="20231229 14:36:23.637"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:23.639" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-46823 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:27.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:27.415" level="INFO">${output} = 2023-12-29 14:36:26,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:26,353 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231229 14:36:23.638" endtime="20231229 14:36:27.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:27.416" level="INFO">2023-12-29 14:36:26,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:26,353 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-29 14:36:26,353 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231229 14:36:27.415" endtime="20231229 14:36:27.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:27.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:27.416" endtime="20231229 14:36:27.417"/>
</kw>
<status status="PASS" starttime="20231229 14:36:23.638" endtime="20231229 14:36:27.417"/>
</kw>
<msg timestamp="20231229 14:36:27.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:23.638" endtime="20231229 14:36:27.417"/>
</kw>
<msg timestamp="20231229 14:36:27.417" level="INFO">${output} = 2023-12-29 14:36:26,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-29 14:36:26,353 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231229 14:36:23.637" endtime="20231229 14:36:27.417"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:27.417" endtime="20231229 14:36:27.418"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:27.420" level="INFO">Running command 'cat /tmp/key-46823 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:27.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:27.421" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231229 14:36:27.418" endtime="20231229 14:36:27.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:27.422" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231229 14:36:27.421" endtime="20231229 14:36:27.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:27.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:27.422" endtime="20231229 14:36:27.422"/>
</kw>
<msg timestamp="20231229 14:36:27.423" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231229 14:36:27.418" endtime="20231229 14:36:27.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:27.423" endtime="20231229 14:36:27.423"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:27.425" level="INFO">Running command 'rm /tmp/key-46823 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:27.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:27.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:27.424" endtime="20231229 14:36:27.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:27.427" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:27.427" endtime="20231229 14:36:27.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:27.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:27.427" endtime="20231229 14:36:27.428"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.423" endtime="20231229 14:36:27.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:23.636" endtime="20231229 14:36:27.428"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:27.433" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:27.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:27.435" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:36:27.432" endtime="20231229 14:36:27.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:27.436" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:36:27.435" endtime="20231229 14:36:27.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:27.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:27.436" endtime="20231229 14:36:27.436"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.431" endtime="20231229 14:36:27.437"/>
</kw>
<msg timestamp="20231229 14:36:27.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:27.431" endtime="20231229 14:36:27.437"/>
</kw>
<msg timestamp="20231229 14:36:27.437" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:36:27.431" endtime="20231229 14:36:27.437"/>
</kw>
<msg timestamp="20231229 14:36:27.437" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:27.431" endtime="20231229 14:36:27.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:36:27.438" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:27.438" endtime="20231229 14:36:27.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:27.441" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:27.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:27.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:27.439" endtime="20231229 14:36:27.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:27.462" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:27.461" endtime="20231229 14:36:27.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:27.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:27.462" endtime="20231229 14:36:27.463"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.439" endtime="20231229 14:36:27.463"/>
</kw>
<msg timestamp="20231229 14:36:27.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:27.439" endtime="20231229 14:36:27.464"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.438" endtime="20231229 14:36:27.464"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.438" endtime="20231229 14:36:27.464"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.430" endtime="20231229 14:36:27.464"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.430" endtime="20231229 14:36:27.464"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:27.467" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:29.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:29.250" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:27.466" endtime="20231229 14:36:29.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:29.251" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:29.250" endtime="20231229 14:36:29.251"/>
</kw>
<msg timestamp="20231229 14:36:29.251" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:27.465" endtime="20231229 14:36:29.251"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231229 14:36:29.252" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231229 14:36:29.252" endtime="20231229 14:36:29.253"/>
</kw>
<msg timestamp="20231229 14:36:29.253" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231229 14:36:29.251" endtime="20231229 14:36:29.253"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231229 14:36:29.253" endtime="20231229 14:36:29.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231229 14:36:29.253" endtime="20231229 14:36:29.253"/>
</kw>
<status status="NOT RUN" starttime="20231229 14:36:29.253" endtime="20231229 14:36:29.253"/>
</branch>
<status status="PASS" starttime="20231229 14:36:29.253" endtime="20231229 14:36:29.253"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231229 14:36:29.254" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231229 14:36:29.253" endtime="20231229 14:36:29.254"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231229 14:36:29.255" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231229 14:36:29.254" endtime="20231229 14:36:29.255"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231229 14:36:29.255" level="INFO">${secret} = ['947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff']</msg>
<status status="PASS" starttime="20231229 14:36:29.255" endtime="20231229 14:36:29.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231229 14:36:29.256" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:29.255" endtime="20231229 14:36:29.256"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231229 14:36:29.257" level="INFO">${secret} = 947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:29.256" endtime="20231229 14:36:29.257"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:29.259" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:29.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:29.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:29.258" endtime="20231229 14:36:29.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:29.620" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:29.620" endtime="20231229 14:36:29.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:29.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:29.620" endtime="20231229 14:36:29.621"/>
</kw>
<status status="PASS" starttime="20231229 14:36:29.258" endtime="20231229 14:36:29.621"/>
</kw>
<msg timestamp="20231229 14:36:29.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:29.258" endtime="20231229 14:36:29.621"/>
</kw>
<status status="PASS" starttime="20231229 14:36:29.257" endtime="20231229 14:36:29.621"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:29.624" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:29.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:29.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:29.622" endtime="20231229 14:36:29.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:29.985" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:29.985" endtime="20231229 14:36:29.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:29.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:29.986" endtime="20231229 14:36:29.986"/>
</kw>
<status status="PASS" starttime="20231229 14:36:29.622" endtime="20231229 14:36:29.986"/>
</kw>
<msg timestamp="20231229 14:36:29.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:29.622" endtime="20231229 14:36:29.987"/>
</kw>
<status status="PASS" starttime="20231229 14:36:29.621" endtime="20231229 14:36:29.987"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:29.989" level="INFO">Running command 'aws configure set aws_secret_access_key 947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:30.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:30.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:29.988" endtime="20231229 14:36:30.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:30.344" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:30.344" endtime="20231229 14:36:30.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:30.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:30.344" endtime="20231229 14:36:30.345"/>
</kw>
<status status="PASS" starttime="20231229 14:36:29.988" endtime="20231229 14:36:30.345"/>
</kw>
<msg timestamp="20231229 14:36:30.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:29.987" endtime="20231229 14:36:30.345"/>
</kw>
<status status="PASS" starttime="20231229 14:36:29.987" endtime="20231229 14:36:30.346"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:30.348" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:30.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:30.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:30.347" endtime="20231229 14:36:30.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:30.715" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:30.715" endtime="20231229 14:36:30.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:30.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:30.715" endtime="20231229 14:36:30.716"/>
</kw>
<status status="PASS" starttime="20231229 14:36:30.346" endtime="20231229 14:36:30.716"/>
</kw>
<msg timestamp="20231229 14:36:30.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:30.346" endtime="20231229 14:36:30.717"/>
</kw>
<status status="PASS" starttime="20231229 14:36:30.346" endtime="20231229 14:36:30.717"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:30.719" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:31.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:31.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:30.718" endtime="20231229 14:36:31.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:31.067" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:31.066" endtime="20231229 14:36:31.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:31.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:31.067" endtime="20231229 14:36:31.067"/>
</kw>
<status status="PASS" starttime="20231229 14:36:30.718" endtime="20231229 14:36:31.068"/>
</kw>
<msg timestamp="20231229 14:36:31.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:30.717" endtime="20231229 14:36:31.068"/>
</kw>
<status status="PASS" starttime="20231229 14:36:30.717" endtime="20231229 14:36:31.068"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.465" endtime="20231229 14:36:31.068"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.464" endtime="20231229 14:36:31.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231229 14:36:31.068" endtime="20231229 14:36:31.069"/>
</kw>
<status status="PASS" starttime="20231229 14:36:27.429" endtime="20231229 14:36:31.069"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:31.071" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:31.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:31.627" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231229 14:36:31.070" endtime="20231229 14:36:31.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:31.628" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 29 Dec 2023 14:36:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231229 14:36:31.627" endtime="20231229 14:36:31.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:31.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:31.628" endtime="20231229 14:36:31.628"/>
</kw>
<msg timestamp="20231229 14:36:31.629" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231229 14:36:31.069" endtime="20231229 14:36:31.629"/>
</kw>
<msg timestamp="20231229 14:36:31.629" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231229 14:36:31.069" endtime="20231229 14:36:31.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:31.629" endtime="20231229 14:36:31.629"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:31.631" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:31.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:31.633" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231229 14:36:31.630" endtime="20231229 14:36:31.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:31.633" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231229 14:36:31.633" endtime="20231229 14:36:31.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:31.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:31.634" endtime="20231229 14:36:31.634"/>
</kw>
<msg timestamp="20231229 14:36:31.634" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231229 14:36:31.630" endtime="20231229 14:36:31.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:31.634" endtime="20231229 14:36:31.635"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:31.636" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:31.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:31.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:31.635" endtime="20231229 14:36:31.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:31.639" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:31.638" endtime="20231229 14:36:31.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:31.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:31.639" endtime="20231229 14:36:31.639"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.635" endtime="20231229 14:36:31.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:27.429" endtime="20231229 14:36:31.640"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:31.644" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:31.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:31.646" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:36:31.643" endtime="20231229 14:36:31.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:31.647" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:36:31.646" endtime="20231229 14:36:31.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:31.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:31.647" endtime="20231229 14:36:31.647"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.642" endtime="20231229 14:36:31.648"/>
</kw>
<msg timestamp="20231229 14:36:31.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:31.642" endtime="20231229 14:36:31.648"/>
</kw>
<msg timestamp="20231229 14:36:31.648" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:36:31.642" endtime="20231229 14:36:31.648"/>
</kw>
<msg timestamp="20231229 14:36:31.649" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:31.642" endtime="20231229 14:36:31.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:36:31.649" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:31.649" endtime="20231229 14:36:31.649"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:31.652" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:31.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:31.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:31.651" endtime="20231229 14:36:31.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:31.675" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:31.674" endtime="20231229 14:36:31.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:31.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:31.675" endtime="20231229 14:36:31.675"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.650" endtime="20231229 14:36:31.676"/>
</kw>
<msg timestamp="20231229 14:36:31.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:31.650" endtime="20231229 14:36:31.676"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.650" endtime="20231229 14:36:31.676"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.649" endtime="20231229 14:36:31.676"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.641" endtime="20231229 14:36:31.676"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.641" endtime="20231229 14:36:31.676"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:31.679" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:33.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:33.441" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:31.678" endtime="20231229 14:36:33.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:33.442" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:33.442" endtime="20231229 14:36:33.442"/>
</kw>
<msg timestamp="20231229 14:36:33.443" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:31.677" endtime="20231229 14:36:33.443"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231229 14:36:33.444" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231229 14:36:33.443" endtime="20231229 14:36:33.444"/>
</kw>
<msg timestamp="20231229 14:36:33.444" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231229 14:36:33.443" endtime="20231229 14:36:33.444"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231229 14:36:33.444" endtime="20231229 14:36:33.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231229 14:36:33.444" endtime="20231229 14:36:33.444"/>
</kw>
<status status="NOT RUN" starttime="20231229 14:36:33.444" endtime="20231229 14:36:33.444"/>
</branch>
<status status="PASS" starttime="20231229 14:36:33.444" endtime="20231229 14:36:33.444"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231229 14:36:33.445" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231229 14:36:33.445" endtime="20231229 14:36:33.445"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231229 14:36:33.445" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231229 14:36:33.445" endtime="20231229 14:36:33.445"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231229 14:36:33.446" level="INFO">${secret} = ['947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff']</msg>
<status status="PASS" starttime="20231229 14:36:33.445" endtime="20231229 14:36:33.446"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231229 14:36:33.447" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:33.446" endtime="20231229 14:36:33.447"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231229 14:36:33.448" level="INFO">${secret} = 947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff</msg>
<status status="PASS" starttime="20231229 14:36:33.447" endtime="20231229 14:36:33.448"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:33.450" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:33.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:33.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:33.449" endtime="20231229 14:36:33.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:33.798" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:33.797" endtime="20231229 14:36:33.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:33.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:33.798" endtime="20231229 14:36:33.798"/>
</kw>
<status status="PASS" starttime="20231229 14:36:33.448" endtime="20231229 14:36:33.798"/>
</kw>
<msg timestamp="20231229 14:36:33.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:33.448" endtime="20231229 14:36:33.799"/>
</kw>
<status status="PASS" starttime="20231229 14:36:33.448" endtime="20231229 14:36:33.799"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:33.802" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:34.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:34.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:33.800" endtime="20231229 14:36:34.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:34.152" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:34.151" endtime="20231229 14:36:34.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:34.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:34.152" endtime="20231229 14:36:34.152"/>
</kw>
<status status="PASS" starttime="20231229 14:36:33.800" endtime="20231229 14:36:34.152"/>
</kw>
<msg timestamp="20231229 14:36:34.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:33.799" endtime="20231229 14:36:34.153"/>
</kw>
<status status="PASS" starttime="20231229 14:36:33.799" endtime="20231229 14:36:34.153"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:34.156" level="INFO">Running command 'aws configure set aws_secret_access_key 947f3cd659f9d707646580dc60f3db970456614bf9c17c0dad489ef2c9cebfff 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:34.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:34.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:34.154" endtime="20231229 14:36:34.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:34.505" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:34.505" endtime="20231229 14:36:34.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:34.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:34.506" endtime="20231229 14:36:34.506"/>
</kw>
<status status="PASS" starttime="20231229 14:36:34.154" endtime="20231229 14:36:34.506"/>
</kw>
<msg timestamp="20231229 14:36:34.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:34.154" endtime="20231229 14:36:34.507"/>
</kw>
<status status="PASS" starttime="20231229 14:36:34.153" endtime="20231229 14:36:34.507"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:34.509" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:34.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:34.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:34.508" endtime="20231229 14:36:34.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:34.862" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:34.861" endtime="20231229 14:36:34.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:34.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:34.862" endtime="20231229 14:36:34.862"/>
</kw>
<status status="PASS" starttime="20231229 14:36:34.507" endtime="20231229 14:36:34.863"/>
</kw>
<msg timestamp="20231229 14:36:34.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:34.507" endtime="20231229 14:36:34.863"/>
</kw>
<status status="PASS" starttime="20231229 14:36:34.507" endtime="20231229 14:36:34.863"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:34.866" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:35.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:35.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:34.864" endtime="20231229 14:36:35.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:35.221" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:35.220" endtime="20231229 14:36:35.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:35.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:35.221" endtime="20231229 14:36:35.221"/>
</kw>
<status status="PASS" starttime="20231229 14:36:34.864" endtime="20231229 14:36:35.222"/>
</kw>
<msg timestamp="20231229 14:36:35.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:34.864" endtime="20231229 14:36:35.222"/>
</kw>
<status status="PASS" starttime="20231229 14:36:34.863" endtime="20231229 14:36:35.222"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.677" endtime="20231229 14:36:35.222"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.677" endtime="20231229 14:36:35.222"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231229 14:36:35.222" endtime="20231229 14:36:35.223"/>
</kw>
<status status="PASS" starttime="20231229 14:36:31.641" endtime="20231229 14:36:35.223"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:35.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:35.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:35.679" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231229 14:36:35.224" endtime="20231229 14:36:35.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:35.680" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 29 Dec 2023 14:36:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231229 14:36:35.679" endtime="20231229 14:36:35.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:35.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:35.680" endtime="20231229 14:36:35.680"/>
</kw>
<msg timestamp="20231229 14:36:35.680" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231229 14:36:35.223" endtime="20231229 14:36:35.680"/>
</kw>
<msg timestamp="20231229 14:36:35.681" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 29 Dec 2023 14:36:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231229 14:36:35.223" endtime="20231229 14:36:35.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:35.681" endtime="20231229 14:36:35.681"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:35.683" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:35.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:35.685" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231229 14:36:35.682" endtime="20231229 14:36:35.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:35.685" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231229 14:36:35.685" endtime="20231229 14:36:35.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:35.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:35.685" endtime="20231229 14:36:35.686"/>
</kw>
<msg timestamp="20231229 14:36:35.686" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231229 14:36:35.681" endtime="20231229 14:36:35.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231229 14:36:35.686" endtime="20231229 14:36:35.686"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:35.688" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:35.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:35.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:35.687" endtime="20231229 14:36:35.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:35.690" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:35.690" endtime="20231229 14:36:35.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:35.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:35.690" endtime="20231229 14:36:35.691"/>
</kw>
<status status="PASS" starttime="20231229 14:36:35.686" endtime="20231229 14:36:35.691"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231229 14:36:31.640" endtime="20231229 14:36:35.691"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231229 14:36:23.540" endtime="20231229 14:36:35.692"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:38.671" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:38.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:38.672" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231229 14:36:38.668" endtime="20231229 14:36:38.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:38.673" level="INFO">scm</msg>
<status status="PASS" starttime="20231229 14:36:38.673" endtime="20231229 14:36:38.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:38.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:38.673" endtime="20231229 14:36:38.674"/>
</kw>
<status status="PASS" starttime="20231229 14:36:38.668" endtime="20231229 14:36:38.674"/>
</kw>
<msg timestamp="20231229 14:36:38.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:38.668" endtime="20231229 14:36:38.675"/>
</kw>
<msg timestamp="20231229 14:36:38.675" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231229 14:36:38.668" endtime="20231229 14:36:38.675"/>
</kw>
<msg timestamp="20231229 14:36:38.675" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:38.667" endtime="20231229 14:36:38.675"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231229 14:36:38.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231229 14:36:38.675" endtime="20231229 14:36:38.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:38.678" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:36:38.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20231229 14:36:38.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231229 14:36:38.677" endtime="20231229 14:36:38.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231229 14:36:38.715" level="INFO"/>
<status status="PASS" starttime="20231229 14:36:38.715" endtime="20231229 14:36:38.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231229 14:36:38.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231229 14:36:38.715" endtime="20231229 14:36:38.716"/>
</kw>
<status status="PASS" starttime="20231229 14:36:38.677" endtime="20231229 14:36:38.716"/>
</kw>
<msg timestamp="20231229 14:36:38.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231229 14:36:38.676" endtime="20231229 14:36:38.716"/>
</kw>
<status status="PASS" starttime="20231229 14:36:38.676" endtime="20231229 14:36:38.716"/>
</kw>
<status status="PASS" starttime="20231229 14:36:38.676" endtime="20231229 14:36:38.716"/>
</kw>
<status status="PASS" starttime="20231229 14:36:38.667" endtime="20231229 14:36:38.716"/>
</kw>
<status status="PASS" starttime="20231229 14:36:38.666" endtime="20231229 14:36:38.716"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231229 14:36:38.717" endtime="20231229 14:36:38.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231229 14:36:38.719" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231229 14:41:38.667" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231229 14:36:38.718" endtime="20231229 14:41:38.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231229 14:41:38.667" endtime="20231229 14:41:38.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231229 14:41:38.667" endtime="20231229 14:41:38.668"/>
</kw>
<status status="FAIL" starttime="20231229 14:36:38.717" endtime="20231229 14:41:38.668"/>
</kw>
<msg timestamp="20231229 14:41:38.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231229 14:36:38.717" endtime="20231229 14:41:38.668"/>
</kw>
<status status="FAIL" starttime="20231229 14:36:38.717" endtime="20231229 14:41:38.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231229 14:41:38.669" endtime="20231229 14:41:38.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231229 14:36:38.666" endtime="20231229 14:41:38.669">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231229 14:36:38.630" endtime="20231229 14:41:38.670"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="338432"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="11" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
