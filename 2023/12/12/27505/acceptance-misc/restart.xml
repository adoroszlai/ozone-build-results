<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231212 06:39:22.371" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:37:01.975" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:37:07.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:37:07.156" level="INFO">${output} = 2023-12-12 06:37:03,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:03,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:01.974" endtime="20231212 06:37:07.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:37:07.157" level="INFO">2023-12-12 06:37:03,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:03,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:37:03,628 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:37:03,735 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-12-12 06:37:03,783 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:04,427 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-12 06:37:04,524 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-12 06:37:04,784 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:05,235 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:37:05,411 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:37:05,784 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:06,784 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:37:06,817 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1530.843021, max=1530.843021, mean=1530.843021, stddev=0.0, median=1530.843021, p75=1530.843021, p95=1530.843021, p98=1530.843021, p99=1530.843021, p999=1530.843021, mean_rate=0.4412330608046744, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:37:06,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:37:06,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:37:06,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:37:07.156" endtime="20231212 06:37:07.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:37:07.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:37:07.157" endtime="20231212 06:37:07.158"/>
</kw>
<status status="PASS" starttime="20231212 06:37:01.973" endtime="20231212 06:37:07.158"/>
</kw>
<msg timestamp="20231212 06:37:07.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:37:01.973" endtime="20231212 06:37:07.158"/>
</kw>
<msg timestamp="20231212 06:37:07.158" level="INFO">${result} = 2023-12-12 06:37:03,538 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:03,628 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:01.973" endtime="20231212 06:37:07.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:37:07.158" endtime="20231212 06:37:07.159"/>
</kw>
<status status="PASS" starttime="20231212 06:37:01.971" endtime="20231212 06:37:07.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:37:01.971" endtime="20231212 06:37:07.159"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:37:07.166" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:37:10.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:37:10.756" level="INFO">${output} = 2023-12-12 06:37:08,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:08,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:07.164" endtime="20231212 06:37:10.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:37:10.757" level="INFO">2023-12-12 06:37:08,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:08,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:37:08,982 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:37:09,089 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2023-12-12 06:37:09,131 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:10,132 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:37:10,716 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=69.088992, max=69.088992, mean=69.088992, stddev=0.0, median=69.088992, p75=69.088992, p95=69.088992, p98=69.088992, p99=69.088992, p999=69.088992, mean_rate=0.9804791195931288, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:37:10,717 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 06:37:10,717 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:37:10,717 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:37:10.757" endtime="20231212 06:37:10.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:37:10.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:37:10.758" endtime="20231212 06:37:10.758"/>
</kw>
<status status="PASS" starttime="20231212 06:37:07.164" endtime="20231212 06:37:10.758"/>
</kw>
<msg timestamp="20231212 06:37:10.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:37:07.163" endtime="20231212 06:37:10.758"/>
</kw>
<msg timestamp="20231212 06:37:10.759" level="INFO">${result} = 2023-12-12 06:37:08,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:08,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:07.163" endtime="20231212 06:37:10.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:37:10.759" endtime="20231212 06:37:10.759"/>
</kw>
<status status="PASS" starttime="20231212 06:37:07.161" endtime="20231212 06:37:10.759"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:37:07.160" endtime="20231212 06:37:10.759"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:37:10.765" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:37:14.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:37:14.065" level="INFO">${output} = 2023-12-12 06:37:12,250 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:12,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:10.763" endtime="20231212 06:37:14.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:37:14.066" level="INFO">2023-12-12 06:37:12,250 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:12,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:37:12,351 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:37:12,438 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2023-12-12 06:37:12,471 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:13,485 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:37:14,024 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=22.172202, max=22.172202, mean=22.172202, stddev=0.0, median=22.172202, p75=22.172202, p95=22.172202, p98=22.172202, p99=22.172202, p999=22.172202, mean_rate=0.9820539037524558, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:37:14,024 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 06:37:14,025 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:37:14,025 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:37:14.065" endtime="20231212 06:37:14.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:37:14.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:37:14.066" endtime="20231212 06:37:14.066"/>
</kw>
<status status="PASS" starttime="20231212 06:37:10.762" endtime="20231212 06:37:14.066"/>
</kw>
<msg timestamp="20231212 06:37:14.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:37:10.762" endtime="20231212 06:37:14.067"/>
</kw>
<msg timestamp="20231212 06:37:14.067" level="INFO">${result} = 2023-12-12 06:37:12,250 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:12,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:10.761" endtime="20231212 06:37:14.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:37:14.067" endtime="20231212 06:37:14.067"/>
</kw>
<status status="PASS" starttime="20231212 06:37:10.760" endtime="20231212 06:37:14.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:37:10.760" endtime="20231212 06:37:14.067"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20231212 06:37:01.930" endtime="20231212 06:37:14.068"/>
</suite>
<suite id="s1-s2" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:39:04.723" endtime="20231212 06:39:04.723"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:39:04.726" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:39:09.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:39:09.106" level="INFO">${output} = 2023-12-12 06:39:06,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:39:06,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:39:04.725" endtime="20231212 06:39:09.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:39:09.107" level="INFO">2023-12-12 06:39:06,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:39:06,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:39:06,156 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:39:06,218 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-12-12 06:39:06,261 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:39:06,602 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=5772919d-9dd4-4614-9bec-2ccf8163476b
2023-12-12 06:39:06,982 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:39:07,233 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:39:07,262 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:39:08,263 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:39:08,754 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.406402, max=4.424929, mean=2.110660319999999, stddev=0.6081036577771405, median=1.900492, p75=2.153714, p95=3.527575, p98=4.082779, p99=4.086647, p999=4.424929, mean_rate=97.3323624014899, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:39:08,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 06:39:08,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:39:08,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:39:09.107" endtime="20231212 06:39:09.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:39:09.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:39:09.107" endtime="20231212 06:39:09.108"/>
</kw>
<status status="PASS" starttime="20231212 06:39:04.724" endtime="20231212 06:39:09.108"/>
</kw>
<msg timestamp="20231212 06:39:09.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:39:04.724" endtime="20231212 06:39:09.108"/>
</kw>
<msg timestamp="20231212 06:39:09.108" level="INFO">${result} = 2023-12-12 06:39:06,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:39:06,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:39:04.724" endtime="20231212 06:39:09.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:39:09.109" endtime="20231212 06:39:09.109"/>
</kw>
<status status="PASS" starttime="20231212 06:39:04.722" endtime="20231212 06:39:09.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:39:04.721" endtime="20231212 06:39:09.109"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20231212 06:39:04.683" endtime="20231212 06:39:09.110"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:37:16.079" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:37:20.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:37:20.816" level="INFO">${output} = 2023-12-12 06:37:17,634 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:17,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:16.077" endtime="20231212 06:37:20.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:37:20.816" level="INFO">2023-12-12 06:37:17,634 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:17,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:37:17,730 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:37:17,806 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-12-12 06:37:17,835 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:18,791 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:37:18,836 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:37:19,837 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:37:20,472 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=25.83563, max=25.83563, mean=25.83563, stddev=0.0, median=25.83563, p75=25.83563, p95=25.83563, p98=25.83563, p99=25.83563, p999=25.83563, mean_rate=0.9841603137314121, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:37:20,472 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:37:20,472 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:37:20,473 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:37:20.816" endtime="20231212 06:37:20.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:37:20.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:37:20.817" endtime="20231212 06:37:20.817"/>
</kw>
<status status="PASS" starttime="20231212 06:37:16.077" endtime="20231212 06:37:20.817"/>
</kw>
<msg timestamp="20231212 06:37:20.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:37:16.077" endtime="20231212 06:37:20.817"/>
</kw>
<msg timestamp="20231212 06:37:20.818" level="INFO">${result} = 2023-12-12 06:37:17,634 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:17,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:16.076" endtime="20231212 06:37:20.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:37:20.818" endtime="20231212 06:37:20.818"/>
</kw>
<status status="PASS" starttime="20231212 06:37:16.075" endtime="20231212 06:37:20.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:37:16.075" endtime="20231212 06:37:20.818"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20231212 06:37:16.036" endtime="20231212 06:37:20.819"/>
</suite>
<suite id="s1-s4" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:37:22.758" endtime="20231212 06:37:22.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:37:22.760" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:37:28.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:37:28.660" level="INFO">${output} = 2023-12-12 06:37:24,161 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:24,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:22.759" endtime="20231212 06:37:28.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:37:28.661" level="INFO">2023-12-12 06:37:24,161 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:24,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:37:24,258 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:37:24,694 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-12-12 06:37:24,728 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:37:25,121 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:37:25,359 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:37:25,737 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:37:26,737 [Thread-4] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2023-12-12 06:37:27,738 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:37:28,310 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.668027, max=746.948933, mean=21.14921415701898, stddev=72.97508969914676, median=12.562482, p75=15.986012, p95=24.148725, p98=28.662247, p99=54.641013, p999=746.948933, mean_rate=32.68036314150236, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:37:28,310 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 06:37:28,310 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:37:28,310 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:37:28.660" endtime="20231212 06:37:28.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:37:28.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:37:28.661" endtime="20231212 06:37:28.662"/>
</kw>
<status status="PASS" starttime="20231212 06:37:22.759" endtime="20231212 06:37:28.662"/>
</kw>
<msg timestamp="20231212 06:37:28.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:37:22.758" endtime="20231212 06:37:28.662"/>
</kw>
<msg timestamp="20231212 06:37:28.662" level="INFO">${result} = 2023-12-12 06:37:24,161 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:24,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:22.758" endtime="20231212 06:37:28.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:37:28.662" endtime="20231212 06:37:28.663"/>
</kw>
<status status="PASS" starttime="20231212 06:37:22.756" endtime="20231212 06:37:28.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:37:22.756" endtime="20231212 06:37:28.663"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20231212 06:37:22.717" endtime="20231212 06:37:28.664"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:37:30.637" endtime="20231212 06:37:30.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:37:30.640" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:37:35.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:37:35.018" level="INFO">${output} = 2023-12-12 06:37:32,036 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:32,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:30.638" endtime="20231212 06:37:35.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:37:35.019" level="INFO">2023-12-12 06:37:32,036 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:32,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:37:32,140 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:37:32,218 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-12-12 06:37:32,250 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:37:32,630 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=5772919d-9dd4-4614-9bec-2ccf8163476b
2023-12-12 06:37:32,982 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:37:33,173 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:37:33,252 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:37:34,252 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:37:34,672 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.369493, max=6.880172, mean=2.17735523, stddev=0.8571552836076654, median=1.94695, p75=2.21017, p95=3.744938, p98=5.101357, p99=5.659628, p999=6.880172, mean_rate=97.05849582281927, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:37:34,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 06:37:34,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:37:34,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:37:35.018" endtime="20231212 06:37:35.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:37:35.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:37:35.019" endtime="20231212 06:37:35.020"/>
</kw>
<status status="PASS" starttime="20231212 06:37:30.638" endtime="20231212 06:37:35.020"/>
</kw>
<msg timestamp="20231212 06:37:35.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:37:30.638" endtime="20231212 06:37:35.020"/>
</kw>
<msg timestamp="20231212 06:37:35.020" level="INFO">${result} = 2023-12-12 06:37:32,036 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:37:32,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:37:30.637" endtime="20231212 06:37:35.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:37:35.020" endtime="20231212 06:37:35.021"/>
</kw>
<status status="PASS" starttime="20231212 06:37:30.636" endtime="20231212 06:37:35.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:37:30.635" endtime="20231212 06:37:35.021"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20231212 06:37:30.597" endtime="20231212 06:37:35.022"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:20.492" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:38:28.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:38:28.983" level="INFO">${output} = 2023-12-12 06:38:23,133 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:23,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:20.484" endtime="20231212 06:38:28.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:38:28.984" level="INFO">2023-12-12 06:38:23,133 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:23,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:23,247 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:23,334 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-12-12 06:38:23,375 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:24,377 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:25,377 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:26,379 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:26,809 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:38:27,380 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:28,380 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:38:28,634 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=42.527031, max=42.527031, mean=42.527031, stddev=0.0, median=42.527031, p75=42.527031, p95=42.527031, p98=42.527031, p99=42.527031, p999=42.527031, mean_rate=0.9811885009935456, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:38:28,635 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-12-12 06:38:28,635 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:38:28,635 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:38:28.983" endtime="20231212 06:38:28.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:38:28.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:38:28.984" endtime="20231212 06:38:28.985"/>
</kw>
<status status="PASS" starttime="20231212 06:38:20.484" endtime="20231212 06:38:28.985"/>
</kw>
<msg timestamp="20231212 06:38:28.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:20.483" endtime="20231212 06:38:28.985"/>
</kw>
<msg timestamp="20231212 06:38:28.985" level="INFO">${result} = 2023-12-12 06:38:23,133 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:23,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:20.473" endtime="20231212 06:38:28.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:38:28.985" endtime="20231212 06:38:28.986"/>
</kw>
<status status="PASS" starttime="20231212 06:38:20.471" endtime="20231212 06:38:28.986"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:20.470" endtime="20231212 06:38:28.986"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20231212 06:38:20.401" endtime="20231212 06:38:28.987"/>
</suite>
<suite id="s1-s7" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s7-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:38:31.000" endtime="20231212 06:38:31.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:31.003" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:38:36.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:38:36.029" level="INFO">${output} = 2023-12-12 06:38:32,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:32,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:31.001" endtime="20231212 06:38:36.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:38:36.029" level="INFO">2023-12-12 06:38:32,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:32,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:32,505 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:32,599 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-12-12 06:38:32,627 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:38:33,046 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=5772919d-9dd4-4614-9bec-2ccf8163476b
2023-12-12 06:38:33,505 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:38:33,628 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:38:33,716 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:38:34,628 [Thread-3] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2023-12-12 06:38:35,629 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:38:35,681 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.694076, max=11.18213, mean=3.0154222600000002, stddev=1.474499797361279, median=2.520839, p75=3.094959, p95=5.942055, p98=7.668973, p99=7.809235, p999=11.18213, mean_rate=76.67453129857704, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:38:35,681 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:38:35,682 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:38:35,682 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:38:36.029" endtime="20231212 06:38:36.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:38:36.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:38:36.030" endtime="20231212 06:38:36.030"/>
</kw>
<status status="PASS" starttime="20231212 06:38:31.001" endtime="20231212 06:38:36.030"/>
</kw>
<msg timestamp="20231212 06:38:36.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:31.001" endtime="20231212 06:38:36.030"/>
</kw>
<msg timestamp="20231212 06:38:36.031" level="INFO">${result} = 2023-12-12 06:38:32,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:32,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:31.000" endtime="20231212 06:38:36.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:38:36.031" endtime="20231212 06:38:36.031"/>
</kw>
<status status="PASS" starttime="20231212 06:38:30.999" endtime="20231212 06:38:36.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:30.998" endtime="20231212 06:38:36.031"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20231212 06:38:30.960" endtime="20231212 06:38:36.032"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:38.060" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:38:42.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:38:42.573" level="INFO">${output} = 2023-12-12 06:38:39,485 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:39,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:38.058" endtime="20231212 06:38:42.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:38:42.574" level="INFO">2023-12-12 06:38:39,485 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:39,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:39,580 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:39,651 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-12-12 06:38:39,679 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:40,680 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:40,912 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:38:41,132 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:38:41,681 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:38:42,226 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1475.537643, max=1475.537643, mean=1475.537643, stddev=0.0, median=1475.537643, p75=1475.537643, p95=1475.537643, p98=1475.537643, p99=1475.537643, p999=1475.537643, mean_rate=0.4922817332770389, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:38:42,226 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:38:42,226 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:38:42,226 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:38:42.573" endtime="20231212 06:38:42.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:38:42.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:38:42.574" endtime="20231212 06:38:42.575"/>
</kw>
<status status="PASS" starttime="20231212 06:38:38.058" endtime="20231212 06:38:42.575"/>
</kw>
<msg timestamp="20231212 06:38:42.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:38.058" endtime="20231212 06:38:42.575"/>
</kw>
<msg timestamp="20231212 06:38:42.575" level="INFO">${result} = 2023-12-12 06:38:39,485 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:39,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:38.057" endtime="20231212 06:38:42.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:38:42.576" endtime="20231212 06:38:42.576"/>
</kw>
<status status="PASS" starttime="20231212 06:38:38.056" endtime="20231212 06:38:42.576"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:38.056" endtime="20231212 06:38:42.576"/>
</test>
<test id="s1-s8-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:42.582" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:38:45.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:38:45.795" level="INFO">${output} = 2023-12-12 06:38:43,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:44,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:42.580" endtime="20231212 06:38:45.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:38:45.796" level="INFO">2023-12-12 06:38:43,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:44,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:44,090 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:44,168 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2023-12-12 06:38:44,201 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:45,202 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:38:45,754 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=84.267244, max=84.267244, mean=84.267244, stddev=0.0, median=84.267244, p75=84.267244, p95=84.267244, p98=84.267244, p99=84.267244, p999=84.267244, mean_rate=0.9888559553049924, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:38:45,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 06:38:45,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:38:45,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:38:45.796" endtime="20231212 06:38:45.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:38:45.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:38:45.796" endtime="20231212 06:38:45.797"/>
</kw>
<status status="PASS" starttime="20231212 06:38:42.579" endtime="20231212 06:38:45.797"/>
</kw>
<msg timestamp="20231212 06:38:45.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:42.579" endtime="20231212 06:38:45.797"/>
</kw>
<msg timestamp="20231212 06:38:45.797" level="INFO">${result} = 2023-12-12 06:38:43,988 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:44,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:42.579" endtime="20231212 06:38:45.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:38:45.798" endtime="20231212 06:38:45.798"/>
</kw>
<status status="PASS" starttime="20231212 06:38:42.578" endtime="20231212 06:38:45.798"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:42.577" endtime="20231212 06:38:45.798"/>
</test>
<test id="s1-s8-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:45.803" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:38:49.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:38:49.127" level="INFO">${output} = 2023-12-12 06:38:47,259 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:47,398 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:45.801" endtime="20231212 06:38:49.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:38:49.128" level="INFO">2023-12-12 06:38:47,259 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:47,398 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:47,398 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:47,474 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2023-12-12 06:38:47,531 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:48,532 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:38:49,084 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=32.230347, max=32.230347, mean=32.230347, stddev=0.0, median=32.230347, p75=32.230347, p95=32.230347, p98=32.230347, p99=32.230347, p999=32.230347, mean_rate=0.9828515984508687, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:38:49,084 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-12-12 06:38:49,085 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:38:49,085 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:38:49.127" endtime="20231212 06:38:49.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:38:49.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:38:49.128" endtime="20231212 06:38:49.128"/>
</kw>
<status status="PASS" starttime="20231212 06:38:45.801" endtime="20231212 06:38:49.129"/>
</kw>
<msg timestamp="20231212 06:38:49.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:45.801" endtime="20231212 06:38:49.129"/>
</kw>
<msg timestamp="20231212 06:38:49.129" level="INFO">${result} = 2023-12-12 06:38:47,259 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:47,398 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:45.800" endtime="20231212 06:38:49.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:38:49.129" endtime="20231212 06:38:49.129"/>
</kw>
<status status="PASS" starttime="20231212 06:38:45.799" endtime="20231212 06:38:49.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:45.799" endtime="20231212 06:38:49.130"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20231212 06:38:38.016" endtime="20231212 06:38:49.131"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s9-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:51.078" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:38:55.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:38:55.507" level="INFO">${output} = 2023-12-12 06:38:52,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:52,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:51.076" endtime="20231212 06:38:55.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:38:55.508" level="INFO">2023-12-12 06:38:52,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:52,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:52,552 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:52,628 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-12-12 06:38:52,655 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:53,578 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:38:53,655 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:38:54,656 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:38:55,164 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=22.542896, max=22.542896, mean=22.542896, stddev=0.0, median=22.542896, p75=22.542896, p95=22.542896, p98=22.542896, p99=22.542896, p999=22.542896, mean_rate=0.9830360689932147, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:38:55,164 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:38:55,164 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:38:55,164 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:38:55.508" endtime="20231212 06:38:55.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:38:55.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:38:55.509" endtime="20231212 06:38:55.509"/>
</kw>
<status status="PASS" starttime="20231212 06:38:51.076" endtime="20231212 06:38:55.509"/>
</kw>
<msg timestamp="20231212 06:38:55.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:51.076" endtime="20231212 06:38:55.509"/>
</kw>
<msg timestamp="20231212 06:38:55.509" level="INFO">${result} = 2023-12-12 06:38:52,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:52,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:51.075" endtime="20231212 06:38:55.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:38:55.510" endtime="20231212 06:38:55.510"/>
</kw>
<status status="PASS" starttime="20231212 06:38:51.074" endtime="20231212 06:38:55.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:51.074" endtime="20231212 06:38:55.510"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20231212 06:38:51.034" endtime="20231212 06:38:55.511"/>
</suite>
<suite id="s1-s10" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:38:57.473" endtime="20231212 06:38:57.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:38:57.476" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:39:02.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:39:02.773" level="INFO">${output} = 2023-12-12 06:38:58,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:58,949 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:57.474" endtime="20231212 06:39:02.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:39:02.774" level="INFO">2023-12-12 06:38:58,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:58,949 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:38:58,950 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:38:59,382 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-12-12 06:38:59,406 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:38:59,744 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:38:59,951 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:39:00,412 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:39:01,412 [Thread-4] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2023-12-12 06:39:02,412 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:39:02,435 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.430917, max=633.432163, mean=17.806474949482244, stddev=61.71971431088924, median=10.851638, p75=12.772358, p95=17.418018, p98=25.67543, p99=42.754567, p999=633.432163, mean_rate=38.67012653702611, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:39:02,435 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:39:02,435 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:39:02,435 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:39:02.773" endtime="20231212 06:39:02.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:39:02.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:39:02.774" endtime="20231212 06:39:02.774"/>
</kw>
<status status="PASS" starttime="20231212 06:38:57.474" endtime="20231212 06:39:02.774"/>
</kw>
<msg timestamp="20231212 06:39:02.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:38:57.474" endtime="20231212 06:39:02.775"/>
</kw>
<msg timestamp="20231212 06:39:02.775" level="INFO">${result} = 2023-12-12 06:38:58,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:38:58,949 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:38:57.474" endtime="20231212 06:39:02.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:39:02.775" endtime="20231212 06:39:02.775"/>
</kw>
<status status="PASS" starttime="20231212 06:38:57.472" endtime="20231212 06:39:02.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:38:57.471" endtime="20231212 06:39:02.776"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20231212 06:38:57.433" endtime="20231212 06:39:02.776"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="66313"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Generate-Chunk">restart.Generate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
