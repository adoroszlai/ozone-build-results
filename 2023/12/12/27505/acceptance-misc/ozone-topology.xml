<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231212 06:25:42.030" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:20:50.153" endtime="20231212 06:20:50.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:20:50.159" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:20:50.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:20:50.255" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 12 Dec 2023 06:20:50 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 12 Dec 2023 05:52:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20231212 06:20:50.157" endtime="20231212 06:20:50.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:20:50.257" level="INFO">HTTP/1.1 200 OK
Date: Tue, 12 Dec 2023 06:20:50 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 12 Dec 2023 05:52:24 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20231212 06:20:50.256" endtime="20231212 06:20:50.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:20:50.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:20:50.257" endtime="20231212 06:20:50.258"/>
</kw>
<status status="PASS" starttime="20231212 06:20:50.156" endtime="20231212 06:20:50.258"/>
</kw>
<msg timestamp="20231212 06:20:50.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:20:50.156" endtime="20231212 06:20:50.258"/>
</kw>
<msg timestamp="20231212 06:20:50.261" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 12 Dec 2023 06:20:50 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Tue, 12 Dec 2023 05:52:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20231212 06:20:50.155" endtime="20231212 06:20:50.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:20:50.261" endtime="20231212 06:20:50.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:20:50.152" endtime="20231212 06:20:50.262"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:20:50.263" endtime="20231212 06:20:50.264"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:20:50.264" level="INFO">${random} = ZTkVrBbeHE</msg>
<status status="PASS" starttime="20231212 06:20:50.264" endtime="20231212 06:20:50.264"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:20:50.270" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ZTkVrBbeHE  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:00.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:00.942" level="INFO">${output} = 2023-12-12 06:20:53,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:20:53,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:20:50.268" endtime="20231212 06:21:00.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:00.943" level="INFO">2023-12-12 06:20:53,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:20:53,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:20:53,419 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:20:53,494 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ZTkVrBbeHE and number-of-tests 1
2023-12-12 06:20:53,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:20:54,531 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:20:55,531 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:20:56,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:20:57,018 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-12 06:20:57,205 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-12 06:20:57,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:20:57,919 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:20:58,256 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:20:58,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:20:59,533 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:21:00,533 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:21:00,599 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2305.869534, max=2305.869534, mean=2305.869534, stddev=0.0, median=2305.869534, p75=2305.869534, p95=2305.869534, p98=2305.869534, p99=2305.869534, p999=2305.869534, mean_rate=0.29961415231055794, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:21:00,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-12-12 06:21:00,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:21:00,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:21:00.942" endtime="20231212 06:21:00.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:00.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:00.943" endtime="20231212 06:21:00.944"/>
</kw>
<status status="PASS" starttime="20231212 06:20:50.267" endtime="20231212 06:21:00.944"/>
</kw>
<msg timestamp="20231212 06:21:00.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:20:50.267" endtime="20231212 06:21:00.944"/>
</kw>
<msg timestamp="20231212 06:21:00.944" level="INFO">${result} = 2023-12-12 06:20:53,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:20:53,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:20:50.266" endtime="20231212 06:21:00.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:00.944" endtime="20231212 06:21:00.945"/>
</kw>
<status status="PASS" starttime="20231212 06:20:50.264" endtime="20231212 06:21:00.945"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:00.949" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ZTkVrBbeHE  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:07.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:07.385" level="INFO">${output} = 2023-12-12 06:21:02,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:21:03,052 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:21:00.947" endtime="20231212 06:21:07.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:07.386" level="INFO">2023-12-12 06:21:02,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:21:03,052 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:21:03,052 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:21:03,136 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ZTkVrBbeHE and number-of-tests 1
2023-12-12 06:21:03,185 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:21:04,192 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:21:05,101 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:21:05,193 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:21:06,193 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:21:07,047 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=53.189742, max=53.189742, mean=53.189742, stddev=0.0, median=53.189742, p75=53.189742, p95=53.189742, p98=53.189742, p99=53.189742, p999=53.189742, mean_rate=0.9510045083072459, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:21:07,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 06:21:07,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:21:07,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:21:07.386" endtime="20231212 06:21:07.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:07.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:07.386" endtime="20231212 06:21:07.387"/>
</kw>
<status status="PASS" starttime="20231212 06:21:00.947" endtime="20231212 06:21:07.387"/>
</kw>
<msg timestamp="20231212 06:21:07.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:00.946" endtime="20231212 06:21:07.387"/>
</kw>
<msg timestamp="20231212 06:21:07.387" level="INFO">${result} = 2023-12-12 06:21:02,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:21:03,052 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:21:00.946" endtime="20231212 06:21:07.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:07.388" endtime="20231212 06:21:07.388"/>
</kw>
<status status="PASS" starttime="20231212 06:21:00.945" endtime="20231212 06:21:07.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:20:50.262" endtime="20231212 06:21:07.388"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:20:50.044" endtime="20231212 06:21:07.389"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:09.551" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:12.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:12.589" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231212 06:21:09.550" endtime="20231212 06:21:12.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:12.589" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231212 06:21:12.589" endtime="20231212 06:21:12.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:12.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:12.590" endtime="20231212 06:21:12.590"/>
</kw>
<status status="PASS" starttime="20231212 06:21:09.549" endtime="20231212 06:21:12.590"/>
</kw>
<msg timestamp="20231212 06:21:12.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:09.549" endtime="20231212 06:21:12.590"/>
</kw>
<msg timestamp="20231212 06:21:12.591" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231212 06:21:09.548" endtime="20231212 06:21:12.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:12.591" endtime="20231212 06:21:12.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:21:09.547" endtime="20231212 06:21:12.591"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:12.595" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:15.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:15.562" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20231212 06:21:12.593" endtime="20231212 06:21:15.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:15.563" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20231212 06:21:15.563" endtime="20231212 06:21:15.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:15.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:15.563" endtime="20231212 06:21:15.564"/>
</kw>
<status status="PASS" starttime="20231212 06:21:12.593" endtime="20231212 06:21:15.564"/>
</kw>
<msg timestamp="20231212 06:21:15.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:12.593" endtime="20231212 06:21:15.564"/>
</kw>
<msg timestamp="20231212 06:21:15.564" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20231212 06:21:12.592" endtime="20231212 06:21:15.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:15.564" endtime="20231212 06:21:15.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:15.565" endtime="20231212 06:21:15.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:21:12.592" endtime="20231212 06:21:15.565"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:15.569" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:18.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:18.643" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231212 06:21:15.567" endtime="20231212 06:21:18.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:18.644" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231212 06:21:18.644" endtime="20231212 06:21:18.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:18.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:18.644" endtime="20231212 06:21:18.645"/>
</kw>
<status status="PASS" starttime="20231212 06:21:15.567" endtime="20231212 06:21:18.645"/>
</kw>
<msg timestamp="20231212 06:21:18.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:15.567" endtime="20231212 06:21:18.645"/>
</kw>
<msg timestamp="20231212 06:21:18.645" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231212 06:21:15.566" endtime="20231212 06:21:18.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:18.645" endtime="20231212 06:21:18.646"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:21:15.566" endtime="20231212 06:21:18.646"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:18.649" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:21.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:21.581" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231212 06:21:18.648" endtime="20231212 06:21:21.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:21.582" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231212 06:21:21.581" endtime="20231212 06:21:21.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:21.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:21.582" endtime="20231212 06:21:21.583"/>
</kw>
<status status="PASS" starttime="20231212 06:21:18.648" endtime="20231212 06:21:21.583"/>
</kw>
<msg timestamp="20231212 06:21:21.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:18.647" endtime="20231212 06:21:21.583"/>
</kw>
<msg timestamp="20231212 06:21:21.583" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=19864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /ra...</msg>
<status status="PASS" starttime="20231212 06:21:18.647" endtime="20231212 06:21:21.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:21.583" endtime="20231212 06:21:21.584"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:21:18.646" endtime="20231212 06:21:21.584"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:21:09.505" endtime="20231212 06:21:21.585"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:23.744" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:27.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:27.066" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:21:23.743" endtime="20231212 06:21:27.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:27.067" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:21:27.066" endtime="20231212 06:21:27.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:27.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:27.067" endtime="20231212 06:21:27.067"/>
</kw>
<status status="PASS" starttime="20231212 06:21:23.742" endtime="20231212 06:21:27.068"/>
</kw>
<msg timestamp="20231212 06:21:27.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:23.742" endtime="20231212 06:21:27.068"/>
</kw>
<status status="PASS" starttime="20231212 06:21:23.742" endtime="20231212 06:21:27.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:27.071" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:30.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:30.596" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:21:27.070" endtime="20231212 06:21:30.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:30.597" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:21:30.597" endtime="20231212 06:21:30.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:30.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:30.597" endtime="20231212 06:21:30.598"/>
</kw>
<status status="PASS" starttime="20231212 06:21:27.069" endtime="20231212 06:21:30.598"/>
</kw>
<msg timestamp="20231212 06:21:30.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:27.068" endtime="20231212 06:21:30.598"/>
</kw>
<status status="PASS" starttime="20231212 06:21:27.068" endtime="20231212 06:21:30.598"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:30.603" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:37.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:37.373" level="INFO">${output} = 2023-12-12 06:21:32,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:21:32,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:21:30.601" endtime="20231212 06:21:37.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:37.374" level="INFO">2023-12-12 06:21:32,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:21:32,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:21:32,836 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:21:32,925 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-12-12 06:21:32,962 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 06:21:33,963 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 06:21:34,493 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:21:34,767 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:21:34,964 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-12-12 06:21:35,964 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2023-12-12 06:21:36,965 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-12-12 06:21:37,034 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=52.960316, max=1360.817709, mean=265.55827972672074, stddev=383.4907550682215, median=80.8326, p75=315.07416, p95=1360.817709, p98=1360.817709, p99=1360.817709, p999=1360.817709, mean_rate=3.2505808510868874, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:21:37,035 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-12-12 06:21:37,035 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:21:37,035 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231212 06:21:37.373" endtime="20231212 06:21:37.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:37.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:37.374" endtime="20231212 06:21:37.375"/>
</kw>
<status status="PASS" starttime="20231212 06:21:30.600" endtime="20231212 06:21:37.375"/>
</kw>
<msg timestamp="20231212 06:21:37.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:30.600" endtime="20231212 06:21:37.375"/>
</kw>
<msg timestamp="20231212 06:21:37.375" level="INFO">${result} = 2023-12-12 06:21:32,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:21:32,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:21:30.599" endtime="20231212 06:21:37.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:37.375" endtime="20231212 06:21:37.376"/>
</kw>
<status status="PASS" starttime="20231212 06:21:30.598" endtime="20231212 06:21:37.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:21:37.377" endtime="20231212 06:21:37.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:37.380" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:37.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:37.531" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:21:37.378" endtime="20231212 06:21:37.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:37.532" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:21:37.531" endtime="20231212 06:21:37.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:37.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:37.532" endtime="20231212 06:21:37.533"/>
</kw>
<status status="PASS" starttime="20231212 06:21:37.378" endtime="20231212 06:21:37.533"/>
</kw>
<msg timestamp="20231212 06:21:37.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:37.377" endtime="20231212 06:21:37.533"/>
</kw>
<msg timestamp="20231212 06:21:37.534" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:21:37.377" endtime="20231212 06:21:37.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:37.534" endtime="20231212 06:21:37.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:37.537" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:37.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:37.556" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:37.535" endtime="20231212 06:21:37.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:37.557" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:37.556" endtime="20231212 06:21:37.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:37.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:37.557" endtime="20231212 06:21:37.558"/>
</kw>
<status status="PASS" starttime="20231212 06:21:37.535" endtime="20231212 06:21:37.558"/>
</kw>
<msg timestamp="20231212 06:21:37.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:37.535" endtime="20231212 06:21:37.558"/>
</kw>
<msg timestamp="20231212 06:21:37.558" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:37.534" endtime="20231212 06:21:37.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:21:37.558" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231212 06:21:37.558" endtime="20231212 06:21:37.558"/>
</kw>
<status status="FAIL" starttime="20231212 06:21:37.376" endtime="20231212 06:21:37.559"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:21:47.560" endtime="20231212 06:21:47.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:47.564" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:47.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:47.578" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:21:47.562" endtime="20231212 06:21:47.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:47.579" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:21:47.578" endtime="20231212 06:21:47.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:47.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:47.579" endtime="20231212 06:21:47.580"/>
</kw>
<status status="PASS" starttime="20231212 06:21:47.561" endtime="20231212 06:21:47.580"/>
</kw>
<msg timestamp="20231212 06:21:47.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:47.561" endtime="20231212 06:21:47.580"/>
</kw>
<msg timestamp="20231212 06:21:47.580" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:21:47.560" endtime="20231212 06:21:47.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:47.580" endtime="20231212 06:21:47.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:47.583" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:47.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:47.596" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:47.582" endtime="20231212 06:21:47.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:47.596" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:47.596" endtime="20231212 06:21:47.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:47.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:47.597" endtime="20231212 06:21:47.597"/>
</kw>
<status status="PASS" starttime="20231212 06:21:47.581" endtime="20231212 06:21:47.597"/>
</kw>
<msg timestamp="20231212 06:21:47.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:47.581" endtime="20231212 06:21:47.597"/>
</kw>
<msg timestamp="20231212 06:21:47.597" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:47.581" endtime="20231212 06:21:47.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:21:47.598" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231212 06:21:47.598" endtime="20231212 06:21:47.598"/>
</kw>
<status status="FAIL" starttime="20231212 06:21:47.559" endtime="20231212 06:21:47.598"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:21:57.599" endtime="20231212 06:21:57.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:57.603" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:57.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:57.618" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:21:57.601" endtime="20231212 06:21:57.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:57.619" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:21:57.619" endtime="20231212 06:21:57.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:57.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:57.619" endtime="20231212 06:21:57.620"/>
</kw>
<status status="PASS" starttime="20231212 06:21:57.600" endtime="20231212 06:21:57.620"/>
</kw>
<msg timestamp="20231212 06:21:57.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:57.600" endtime="20231212 06:21:57.620"/>
</kw>
<msg timestamp="20231212 06:21:57.620" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:21:57.600" endtime="20231212 06:21:57.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:21:57.620" endtime="20231212 06:21:57.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:21:57.623" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:21:57.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:21:57.635" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:57.622" endtime="20231212 06:21:57.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:21:57.635" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:57.635" endtime="20231212 06:21:57.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:21:57.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:21:57.635" endtime="20231212 06:21:57.636"/>
</kw>
<status status="PASS" starttime="20231212 06:21:57.621" endtime="20231212 06:21:57.636"/>
</kw>
<msg timestamp="20231212 06:21:57.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:21:57.621" endtime="20231212 06:21:57.636"/>
</kw>
<msg timestamp="20231212 06:21:57.636" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:21:57.621" endtime="20231212 06:21:57.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:21:57.637" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231212 06:21:57.636" endtime="20231212 06:21:57.637"/>
</kw>
<status status="FAIL" starttime="20231212 06:21:57.599" endtime="20231212 06:21:57.637"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:07.638" endtime="20231212 06:22:07.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:07.642" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:07.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:07.653" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:07.640" endtime="20231212 06:22:07.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:07.654" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:22:07.653" endtime="20231212 06:22:07.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:07.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:07.654" endtime="20231212 06:22:07.655"/>
</kw>
<status status="PASS" starttime="20231212 06:22:07.639" endtime="20231212 06:22:07.655"/>
</kw>
<msg timestamp="20231212 06:22:07.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:07.639" endtime="20231212 06:22:07.655"/>
</kw>
<msg timestamp="20231212 06:22:07.655" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:07.639" endtime="20231212 06:22:07.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:07.655" endtime="20231212 06:22:07.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:07.658" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:07.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:07.670" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:07.657" endtime="20231212 06:22:07.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:07.671" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:07.670" endtime="20231212 06:22:07.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:07.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:07.671" endtime="20231212 06:22:07.671"/>
</kw>
<status status="PASS" starttime="20231212 06:22:07.656" endtime="20231212 06:22:07.672"/>
</kw>
<msg timestamp="20231212 06:22:07.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:07.656" endtime="20231212 06:22:07.672"/>
</kw>
<msg timestamp="20231212 06:22:07.672" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:07.656" endtime="20231212 06:22:07.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:22:07.672" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231212 06:22:07.672" endtime="20231212 06:22:07.672"/>
</kw>
<status status="FAIL" starttime="20231212 06:22:07.638" endtime="20231212 06:22:07.673"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:17.674" endtime="20231212 06:22:17.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:17.677" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:17.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:17.689" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:17.675" endtime="20231212 06:22:17.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:17.690" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:22:17.689" endtime="20231212 06:22:17.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:17.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:17.690" endtime="20231212 06:22:17.691"/>
</kw>
<status status="PASS" starttime="20231212 06:22:17.675" endtime="20231212 06:22:17.691"/>
</kw>
<msg timestamp="20231212 06:22:17.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:17.675" endtime="20231212 06:22:17.691"/>
</kw>
<msg timestamp="20231212 06:22:17.691" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:17.674" endtime="20231212 06:22:17.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:17.691" endtime="20231212 06:22:17.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:17.694" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:17.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:17.706" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:17.693" endtime="20231212 06:22:17.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:17.706" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:17.706" endtime="20231212 06:22:17.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:17.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:17.707" endtime="20231212 06:22:17.707"/>
</kw>
<status status="PASS" starttime="20231212 06:22:17.692" endtime="20231212 06:22:17.707"/>
</kw>
<msg timestamp="20231212 06:22:17.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:17.692" endtime="20231212 06:22:17.707"/>
</kw>
<msg timestamp="20231212 06:22:17.707" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:17.692" endtime="20231212 06:22:17.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:22:17.708" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231212 06:22:17.708" endtime="20231212 06:22:17.708"/>
</kw>
<status status="FAIL" starttime="20231212 06:22:17.673" endtime="20231212 06:22:17.708"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:27.709" endtime="20231212 06:22:27.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:27.713" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:27.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:27.724" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:27.711" endtime="20231212 06:22:27.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:27.725" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:22:27.725" endtime="20231212 06:22:27.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:27.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:27.725" endtime="20231212 06:22:27.726"/>
</kw>
<status status="PASS" starttime="20231212 06:22:27.711" endtime="20231212 06:22:27.726"/>
</kw>
<msg timestamp="20231212 06:22:27.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:27.710" endtime="20231212 06:22:27.726"/>
</kw>
<msg timestamp="20231212 06:22:27.726" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:27.710" endtime="20231212 06:22:27.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:27.726" endtime="20231212 06:22:27.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:27.729" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:27.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:27.741" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:27.728" endtime="20231212 06:22:27.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:27.742" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:27.741" endtime="20231212 06:22:27.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:27.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:27.742" endtime="20231212 06:22:27.742"/>
</kw>
<status status="PASS" starttime="20231212 06:22:27.728" endtime="20231212 06:22:27.743"/>
</kw>
<msg timestamp="20231212 06:22:27.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:27.727" endtime="20231212 06:22:27.743"/>
</kw>
<msg timestamp="20231212 06:22:27.743" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231212 06:22:27.727" endtime="20231212 06:22:27.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:22:27.743" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231212 06:22:27.743" endtime="20231212 06:22:27.744"/>
</kw>
<status status="FAIL" starttime="20231212 06:22:27.709" endtime="20231212 06:22:27.744"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:37.745" endtime="20231212 06:22:37.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.748" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.759" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:37.746" endtime="20231212 06:22:37.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.760" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231212 06:22:37.759" endtime="20231212 06:22:37.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.760" endtime="20231212 06:22:37.761"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.746" endtime="20231212 06:22:37.761"/>
</kw>
<msg timestamp="20231212 06:22:37.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.746" endtime="20231212 06:22:37.761"/>
</kw>
<msg timestamp="20231212 06:22:37.761" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231212 06:22:37.745" endtime="20231212 06:22:37.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.761" endtime="20231212 06:22:37.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.764" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.775" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231212 06:22:37.763" endtime="20231212 06:22:37.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.776" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231212 06:22:37.776" endtime="20231212 06:22:37.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.776" endtime="20231212 06:22:37.777"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.762" endtime="20231212 06:22:37.777"/>
</kw>
<msg timestamp="20231212 06:22:37.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.762" endtime="20231212 06:22:37.777"/>
</kw>
<msg timestamp="20231212 06:22:37.777" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231212 06:22:37.762" endtime="20231212 06:22:37.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.777" endtime="20231212 06:22:37.778"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.744" endtime="20231212 06:22:37.778"/>
</kw>
<status status="PASS" starttime="20231212 06:21:37.376" endtime="20231212 06:22:37.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:21:23.741" endtime="20231212 06:22:37.778"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.782" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.810" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"e8dfc659-e050-42ac-b638-16181afbad11","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362...</msg>
<status status="PASS" starttime="20231212 06:22:37.781" endtime="20231212 06:22:37.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.811" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"e8dfc659-e050-42ac-b638-16181afbad11","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362155419,"storageReport":{"capacity":89297309696,"used":26632,"remaining":21393936384},"pipelines":[{"pipelineID":"821284b3-2902-4bea-8372-c88220789dc3","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"8935acff-39ff-41d1-af18-6309375d8a50","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"b9ba7695-e00f-45ea-b3db-dc010e5f5525","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1702361998840,"revision":"23104c258f8208874e9c997c94fb44b89add30d2","buildDate":"2023-12-12T05:52Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"79344951-8b9a-4296-a87a-90bc09fd10f3","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362155963,"storageReport":{"capacity":89297309696,"used":22536,"remaining":21393936384},"pipelines":[{"pipelineID":"068f1424-9fcf-4c67-9f58-4650b1f5a1de","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"01c214ce-71d1-41c3-928c-d7dc8795ad13","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"b9ba7695-e00f-45ea-b3db-dc010e5f5525","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1702361999960,"revision":"23104c258f8208874e9c997c94fb44b89add30d2","buildDate":"2023-12-12T05:52Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"d5bac167-6c20-48a1-9934-7764081dff78","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362155576,"storageReport":{"capacity":89297309696,"used":6146,"remaining":21393936384},"pipelines":[{"pipelineID":"9bc4dafc-07a6-4311-87c4-bf5519afc867","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"8935acff-39ff-41d1-af18-6309375d8a50","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"a8cc9d9a-db79-4a5b-ad63-7f9e928b2c4e","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1702361998500,"revision":"23104c258f8208874e9c997c94fb44b89add30d2","buildDate":"2023-12-12T05:52Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"32620d5f-3e58-4ef8-8285-c99add4dc594","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362156167,"storageReport":{"capacity":89297309696,"used":6146,"remaining":21393936384},"pipelines":[{"pipelineID":"068f1424-9fcf-4c67-9f58-4650b1f5a1de","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"a8cc9d9a-db79-4a5b-ad63-7f9e928b2c4e","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"cd121786-933f-43de-ad9e-4519e22f5b92","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1702361999770,"revision":"23104c258f8208874e9c997c94fb44b89add30d2","buildDate":"2023-12-12T05:52Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"7ac692fc-369b-4380-85fa-813c882c9667","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362155430,"storageReport":{"capacity":89297309696,"used":26632,"remaining":21393936384},"pipelines":[{"pipelineID":"e2ffd04b-d50c-4c90-a5ac-719a7dec8c54","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"8935acff-39ff-41d1-af18-6309375d8a50","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"b9ba7695-e00f-45ea-b3db-dc010e5f5525","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1702361998419,"revision":"23104c258f8208874e9c997c94fb44b89add30d2","buildDate":"2023-12-12T05:52Z","layoutVersion":7,"networkLocation":"/default-rack"},{"uuid":"64418745-d6f6-48e4-a870-8a44562fbce3","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362156034,"storageReport":{"capacity":89297309696,"used":6146,"remaining":21393936384},"pipelines":[{"pipelineID":"068f1424-9fcf-4c67-9f58-4650b1f5a1de","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"c38130e1-342e-4fb7-9aad-1c988b1056c7","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"a8cc9d9a-db79-4a5b-ad63-7f9e928b2c4e","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1702361998450,"revision":"23104c258f8208874e9c997c94fb44b89add30d2","buildDate":"2023-12-12T05:52Z","layoutVersion":7,"networkLocation":"/default-rack"}]}</msg>
<status status="PASS" starttime="20231212 06:22:37.810" endtime="20231212 06:22:37.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.811" endtime="20231212 06:22:37.812"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.780" endtime="20231212 06:22:37.812"/>
</kw>
<msg timestamp="20231212 06:22:37.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.780" endtime="20231212 06:22:37.812"/>
</kw>
<msg timestamp="20231212 06:22:37.812" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"e8dfc659-e050-42ac-b638-16181afbad11","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1702362...</msg>
<status status="PASS" starttime="20231212 06:22:37.779" endtime="20231212 06:22:37.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.812" endtime="20231212 06:22:37.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.813" endtime="20231212 06:22:37.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.813" endtime="20231212 06:22:37.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.814" endtime="20231212 06:22:37.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.817" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.852" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"068f1424-9fcf-4c67-9f58-4650b1f5a1de","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20231212 06:22:37.815" endtime="20231212 06:22:37.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.853" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"068f1424-9fcf-4c67-9f58-4650b1f5a1de","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"79344951-8b9a-4296-a87a-90bc09fd10f3","uuidString":"79344951-8b9a-4296-a87a-90bc09fd10f3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-619353510,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/79344951-8b9a-4296-a87a-90bc09fd10f3","networkLocation":"/rack2","numOfLeaves":1,"networkName":"79344951-8b9a-4296-a87a-90bc09fd10f3"},{"level":0,"parent":null,"cost":0,"uuid":"64418745-d6f6-48e4-a870-8a44562fbce3","uuidString":"64418745-d6f6-48e4-a870-8a44562fbce3","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1713687724,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/64418745-d6f6-48e4-a870-8a44562fbce3","networkLocation":"/rack1","numOfLeaves":1,"networkName":"64418745-d6f6-48e4-a870-8a44562fbce3"},{"level":0,"parent":null,"cost":0,"uuid":"32620d5f-3e58-4ef8-8285-c99add4dc594","uuidString":"32620d5f-3e58-4ef8-8285-c99add4dc594","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-625385776,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/32620d5f-3e58-4ef8-8285-c99add4dc594","networkLocation":"/rack2","numOfLeaves":1,"networkName":"32620d5f-3e58-4ef8-8285-c99add4dc594"}],"lastLeaderElection":0,"duration":120586,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"821284b3-2902-4bea-8372-c88220789dc3","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e8dfc659-e050-42ac-b638-16181afbad11","uuidString":"e8dfc659-e050-42ac-b638-16181afbad11","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1588845095,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/e8dfc659-e050-42ac-b638-16181afbad11","networkLocation":"/rack1","numOfLeaves":1,"networkName":"e8dfc659-e050-42ac-b638-16181afbad11"}],"lastLeaderElection":0,"duration":120700,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e2ffd04b-d50c-4c90-a5ac-719a7dec8c54","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"7ac692fc-369b-4380-85fa-813c882c9667","uuidString":"7ac692fc-369b-4380-85fa-813c882c9667","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1853508314,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/7ac692fc-369b-4380-85fa-813c882c9667","networkLocation":"/rack1","numOfLeaves":1,"networkName":"7ac692fc-369b-4380-85fa-813c882c9667"}],"lastLeaderElection":0,"duration":121216,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"9bc4dafc-07a6-4311-87c4-bf5519afc867","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d5bac167-6c20-48a1-9934-7764081dff78","uuidString":"d5bac167-6c20-48a1-9934-7764081dff78","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2018624912,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/d5bac167-6c20-48a1-9934-7764081dff78","networkLocation":"/rack2","numOfLeaves":1,"networkName":"d5bac167-6c20-48a1-9934-7764081dff78"}],"lastLeaderElection":0,"duration":120867,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8935acff-39ff-41d1-af18-6309375d8a50","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e8dfc659-e050-42ac-b638-16181afbad11","uuidString":"e8dfc659-e050-42ac-b638-16181afbad11","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1588845095,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/e8dfc659-e050-42ac-b638-16181afbad11","networkLocation":"/rack1","numOfLeaves":1,"networkName":"e8dfc659-e050-42ac-b638-16181afbad11"},{"level":0,"parent":null,"cost":0,"uuid":"d5bac167-6c20-48a1-9934-7764081dff78","uuidString":"d5bac167-6c20-48a1-9934-7764081dff78","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2018624912,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/d5bac167-6c20-48a1-9934-7764081dff78","networkLocation":"/rack2","numOfLeaves":1,"networkName":"d5bac167-6c20-48a1-9934-7764081dff78"},{"level":0,"parent":null,"cost":0,"uuid":"7ac692fc-369b-4380-85fa-813c882c9667","uuidString":"7ac692fc-369b-4380-85fa-813c882c9667","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1853508314,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/7ac692fc-369b-4380-85fa-813c882c9667","networkLocation":"/rack1","numOfLeaves":1,"networkName":"7ac692fc-369b-4380-85fa-813c882c9667"}],"lastLeaderElection":0,"duration":120685,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"01c214ce-71d1-41c3-928c-d7dc8795ad13","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"79344951-8b9a-4296-a87a-90bc09fd10f3","uuidString":"79344951-8b9a-4296-a87a-90bc09fd10f3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-619353510,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/79344951-8b9a-4296-a87a-90bc09fd10f3","networkLocation":"/rack2","numOfLeaves":1,"networkName":"79344951-8b9a-4296-a87a-90bc09fd10f3"}],"lastLeaderElection":0,"duration":120659,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b9ba7695-e00f-45ea-b3db-dc010e5f5525","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"e8dfc659-e050-42ac-b638-16181afbad11","uuidString":"e8dfc659-e050-42ac-b638-16181afbad11","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1588845095,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/e8dfc659-e050-42ac-b638-16181afbad11","networkLocation":"/rack1","numOfLeaves":1,"networkName":"e8dfc659-e050-42ac-b638-16181afbad11"},{"level":0,"parent":null,"cost":0,"uuid":"79344951-8b9a-4296-a87a-90bc09fd10f3","uuidString":"79344951-8b9a-4296-a87a-90bc09fd10f3","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-619353510,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/79344951-8b9a-4296-a87a-90bc09fd10f3","networkLocation":"/rack2","numOfLeaves":1,"networkName":"79344951-8b9a-4296-a87a-90bc09fd10f3"},{"level":0,"parent":null,"cost":0,"uuid":"7ac692fc-369b-4380-85fa-813c882c9667","uuidString":"7ac692fc-369b-4380-85fa-813c882c9667","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1853508314,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/7ac692fc-369b-4380-85fa-813c882c9667","networkLocation":"/rack1","numOfLeaves":1,"networkName":"7ac692fc-369b-4380-85fa-813c882c9667"}],"lastLeaderElection":0,"duration":120545,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"c38130e1-342e-4fb7-9aad-1c988b1056c7","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"64418745-d6f6-48e4-a870-8a44562fbce3","uuidString":"64418745-d6f6-48e4-a870-8a44562fbce3","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1713687724,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/64418745-d6f6-48e4-a870-8a44562fbce3","networkLocation":"/rack1","numOfLeaves":1,"networkName":"64418745-d6f6-48e4-a870-8a44562fbce3"}],"lastLeaderElection":0,"duration":120565,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a8cc9d9a-db79-4a5b-ad63-7f9e928b2c4e","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"d5bac167-6c20-48a1-9934-7764081dff78","uuidString":"d5bac167-6c20-48a1-9934-7764081dff78","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2018624912,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/d5bac167-6c20-48a1-9934-7764081dff78","networkLocation":"/rack2","numOfLeaves":1,"networkName":"d5bac167-6c20-48a1-9934-7764081dff78"},{"level":0,"parent":null,"cost":0,"uuid":"64418745-d6f6-48e4-a870-8a44562fbce3","uuidString":"64418745-d6f6-48e4-a870-8a44562fbce3","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1713687724,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack1/64418745-d6f6-48e4-a870-8a44562fbce3","networkLocation":"/rack1","numOfLeaves":1,"networkName":"64418745-d6f6-48e4-a870-8a44562fbce3"},{"level":0,"parent":null,"cost":0,"uuid":"32620d5f-3e58-4ef8-8285-c99add4dc594","uuidString":"32620d5f-3e58-4ef8-8285-c99add4dc594","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-625385776,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/32620d5f-3e58-4ef8-8285-c99add4dc594","networkLocation":"/rack2","numOfLeaves":1,"networkName":"32620d5f-3e58-4ef8-8285-c99add4dc594"}],"lastLeaderElection":0,"duration":120522,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":0},{"pipelineId":"cd121786-933f-43de-ad9e-4519e22f5b92","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"32620d5f-3e58-4ef8-8285-c99add4dc594","uuidString":"32620d5f-3e58-4ef8-8285-c99add4dc594","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-625385776,"decommissioned":false,"maintenance":false,"networkFullPath":"/rack2/32620d5f-3e58-4ef8-8285-c99add4dc594","networkLocation":"/rack2","numOfLeaves":1,"networkName":"32620d5f-3e58-4ef8-8285-c99add4dc594"}],"lastLeaderElection":0,"duration":121416,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20231212 06:22:37.852" endtime="20231212 06:22:37.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.853" endtime="20231212 06:22:37.854"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.815" endtime="20231212 06:22:37.854"/>
</kw>
<msg timestamp="20231212 06:22:37.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.814" endtime="20231212 06:22:37.854"/>
</kw>
<msg timestamp="20231212 06:22:37.855" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"068f1424-9fcf-4c67-9f58-4650b1f5a1de","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"...</msg>
<status status="PASS" starttime="20231212 06:22:37.814" endtime="20231212 06:22:37.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.855" endtime="20231212 06:22:37.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.855" endtime="20231212 06:22:37.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.856" endtime="20231212 06:22:37.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.856" endtime="20231212 06:22:37.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.856" endtime="20231212 06:22:37.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.857" endtime="20231212 06:22:37.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.860" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.896" level="INFO">${output} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":94238,"remaining":128363618304},"containers":3,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20231212 06:22:37.858" endtime="20231212 06:22:37.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.897" level="INFO">{"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":94238,"remaining":128363618304},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20231212 06:22:37.897" endtime="20231212 06:22:37.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.898" endtime="20231212 06:22:37.898"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.858" endtime="20231212 06:22:37.898"/>
</kw>
<msg timestamp="20231212 06:22:37.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.858" endtime="20231212 06:22:37.898"/>
</kw>
<msg timestamp="20231212 06:22:37.899" level="INFO">${result} = {"deletedDirs":0,"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":94238,"remaining":128363618304},"containers":3,"missingContainers":0,"openContai...</msg>
<status status="PASS" starttime="20231212 06:22:37.857" endtime="20231212 06:22:37.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.899" endtime="20231212 06:22:37.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.899" endtime="20231212 06:22:37.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.900" endtime="20231212 06:22:37.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.903" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.919" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"e8dfc659-e050-42ac-b638-16181afbad11","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1702362059327,"lastSeenTime":1702362059327,"stat...</msg>
<status status="PASS" starttime="20231212 06:22:37.901" endtime="20231212 06:22:37.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.920" level="INFO">[{"containerId":1,"datanodeUuid":"e8dfc659-e050-42ac-b638-16181afbad11","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1702362059327,"lastSeenTime":1702362059327,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"79344951-8b9a-4296-a87a-90bc09fd10f3","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1702362059073,"lastSeenTime":1702362059073,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"7ac692fc-369b-4380-85fa-813c882c9667","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1702362059191,"lastSeenTime":1702362059191,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20231212 06:22:37.919" endtime="20231212 06:22:37.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.920" endtime="20231212 06:22:37.921"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.901" endtime="20231212 06:22:37.921"/>
</kw>
<msg timestamp="20231212 06:22:37.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.901" endtime="20231212 06:22:37.921"/>
</kw>
<msg timestamp="20231212 06:22:37.921" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"e8dfc659-e050-42ac-b638-16181afbad11","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1702362059327,"lastSeenTime":1702362059327,"stat...</msg>
<status status="PASS" starttime="20231212 06:22:37.900" endtime="20231212 06:22:37.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.921" endtime="20231212 06:22:37.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:37.779" endtime="20231212 06:22:37.922"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:37.923" endtime="20231212 06:22:37.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.926" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.939" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20231212 06:22:37.924" endtime="20231212 06:22:37.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.940" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.221a50ab.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.5ac28d52.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.97653368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.4fc326ee.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.940" endtime="20231212 06:22:37.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.940" endtime="20231212 06:22:37.941"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.924" endtime="20231212 06:22:37.941"/>
</kw>
<msg timestamp="20231212 06:22:37.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.924" endtime="20231212 06:22:37.941"/>
</kw>
<msg timestamp="20231212 06:22:37.941" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20231212 06:22:37.923" endtime="20231212 06:22:37.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.941" endtime="20231212 06:22:37.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:37.922" endtime="20231212 06:22:37.942"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.945" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.948" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:37.944" endtime="20231212 06:22:37.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.948" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:37.948" endtime="20231212 06:22:37.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.949" endtime="20231212 06:22:37.949"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.943" endtime="20231212 06:22:37.949"/>
</kw>
<msg timestamp="20231212 06:22:37.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.943" endtime="20231212 06:22:37.949"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.943" endtime="20231212 06:22:37.949"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.952" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.963" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:37.951" endtime="20231212 06:22:37.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.964" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:37.963" endtime="20231212 06:22:37.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.964" endtime="20231212 06:22:37.964"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.950" endtime="20231212 06:22:37.965"/>
</kw>
<msg timestamp="20231212 06:22:37.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.950" endtime="20231212 06:22:37.965"/>
</kw>
<msg timestamp="20231212 06:22:37.965" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:37.950" endtime="20231212 06:22:37.965"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:37.966" endtime="20231212 06:22:37.966"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:37.965" endtime="20231212 06:22:37.966"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.966" endtime="20231212 06:22:37.966"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.966" endtime="20231212 06:22:37.967"/>
</branch>
<status status="PASS" starttime="20231212 06:22:37.965" endtime="20231212 06:22:37.967"/>
</if>
<status status="PASS" starttime="20231212 06:22:37.949" endtime="20231212 06:22:37.967"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:37.967" endtime="20231212 06:22:37.968"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.967" endtime="20231212 06:22:37.968"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.971" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.981" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:37.969" endtime="20231212 06:22:37.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.981" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:37.981" endtime="20231212 06:22:37.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.981" endtime="20231212 06:22:37.982"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.969" endtime="20231212 06:22:37.982"/>
</kw>
<msg timestamp="20231212 06:22:37.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.968" endtime="20231212 06:22:37.982"/>
</kw>
<msg timestamp="20231212 06:22:37.982" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:37.968" endtime="20231212 06:22:37.982"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:37.983" endtime="20231212 06:22:37.983"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:37.982" endtime="20231212 06:22:37.983"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:37.983" endtime="20231212 06:22:37.983"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.983" endtime="20231212 06:22:37.983"/>
</branch>
<status status="PASS" starttime="20231212 06:22:37.982" endtime="20231212 06:22:37.983"/>
</if>
<status status="PASS" starttime="20231212 06:22:37.968" endtime="20231212 06:22:37.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:37.942" endtime="20231212 06:22:37.984"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.987" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:37.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:37.989" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:37.986" endtime="20231212 06:22:37.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:37.990" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:37.989" endtime="20231212 06:22:37.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:37.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:37.990" endtime="20231212 06:22:37.990"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.985" endtime="20231212 06:22:37.990"/>
</kw>
<msg timestamp="20231212 06:22:37.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.985" endtime="20231212 06:22:37.991"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.985" endtime="20231212 06:22:37.991"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:37.994" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.005" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:37.992" endtime="20231212 06:22:38.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.006" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.005" endtime="20231212 06:22:38.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.006" endtime="20231212 06:22:38.006"/>
</kw>
<status status="PASS" starttime="20231212 06:22:37.992" endtime="20231212 06:22:38.007"/>
</kw>
<msg timestamp="20231212 06:22:38.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:37.992" endtime="20231212 06:22:38.007"/>
</kw>
<msg timestamp="20231212 06:22:38.007" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:37.991" endtime="20231212 06:22:38.007"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.007" endtime="20231212 06:22:38.007"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.007" endtime="20231212 06:22:38.007"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.008" endtime="20231212 06:22:38.008"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.007" endtime="20231212 06:22:38.008"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.007" endtime="20231212 06:22:38.008"/>
</if>
<status status="PASS" starttime="20231212 06:22:37.991" endtime="20231212 06:22:38.008"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.009" endtime="20231212 06:22:38.009"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.008" endtime="20231212 06:22:38.009"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.012" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.023" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.010" endtime="20231212 06:22:38.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.024" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.024" endtime="20231212 06:22:38.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.024" endtime="20231212 06:22:38.025"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.010" endtime="20231212 06:22:38.025"/>
</kw>
<msg timestamp="20231212 06:22:38.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.010" endtime="20231212 06:22:38.025"/>
</kw>
<msg timestamp="20231212 06:22:38.025" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.009" endtime="20231212 06:22:38.025"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.026" endtime="20231212 06:22:38.026"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.026" endtime="20231212 06:22:38.026"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.026" endtime="20231212 06:22:38.026"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.026" endtime="20231212 06:22:38.027"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.026" endtime="20231212 06:22:38.027"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.009" endtime="20231212 06:22:38.027"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.027" endtime="20231212 06:22:38.027"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.027" endtime="20231212 06:22:38.028"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.031" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.042" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.029" endtime="20231212 06:22:38.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.042" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.042" endtime="20231212 06:22:38.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.043" endtime="20231212 06:22:38.043"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.029" endtime="20231212 06:22:38.043"/>
</kw>
<msg timestamp="20231212 06:22:38.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.028" endtime="20231212 06:22:38.043"/>
</kw>
<msg timestamp="20231212 06:22:38.043" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.028" endtime="20231212 06:22:38.043"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.044" endtime="20231212 06:22:38.044"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.044" endtime="20231212 06:22:38.044"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.044" endtime="20231212 06:22:38.044"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.044" endtime="20231212 06:22:38.044"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.043" endtime="20231212 06:22:38.044"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.028" endtime="20231212 06:22:38.044"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.045" endtime="20231212 06:22:38.045"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.045" endtime="20231212 06:22:38.045"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.049" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.063" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.047" endtime="20231212 06:22:38.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.064" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.063" endtime="20231212 06:22:38.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.064" endtime="20231212 06:22:38.065"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.046" endtime="20231212 06:22:38.065"/>
</kw>
<msg timestamp="20231212 06:22:38.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.046" endtime="20231212 06:22:38.065"/>
</kw>
<msg timestamp="20231212 06:22:38.065" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.046" endtime="20231212 06:22:38.065"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.066" endtime="20231212 06:22:38.066"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.065" endtime="20231212 06:22:38.066"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.066" endtime="20231212 06:22:38.066"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.066" endtime="20231212 06:22:38.066"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.065" endtime="20231212 06:22:38.066"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.045" endtime="20231212 06:22:38.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:37.984" endtime="20231212 06:22:38.067"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.070" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.073" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:38.069" endtime="20231212 06:22:38.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.074" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:38.073" endtime="20231212 06:22:38.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.074" endtime="20231212 06:22:38.074"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.068" endtime="20231212 06:22:38.074"/>
</kw>
<msg timestamp="20231212 06:22:38.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.068" endtime="20231212 06:22:38.074"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.068" endtime="20231212 06:22:38.075"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.078" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.104" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.076" endtime="20231212 06:22:38.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.105" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.104" endtime="20231212 06:22:38.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.105" endtime="20231212 06:22:38.106"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.076" endtime="20231212 06:22:38.106"/>
</kw>
<msg timestamp="20231212 06:22:38.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.076" endtime="20231212 06:22:38.106"/>
</kw>
<msg timestamp="20231212 06:22:38.106" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.075" endtime="20231212 06:22:38.106"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.107" endtime="20231212 06:22:38.107"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.106" endtime="20231212 06:22:38.107"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.107" endtime="20231212 06:22:38.107"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.107" endtime="20231212 06:22:38.107"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.106" endtime="20231212 06:22:38.107"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.075" endtime="20231212 06:22:38.107"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.108" endtime="20231212 06:22:38.108"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.107" endtime="20231212 06:22:38.108"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.112" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.125" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.110" endtime="20231212 06:22:38.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.126" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.125" endtime="20231212 06:22:38.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.126" endtime="20231212 06:22:38.127"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.109" endtime="20231212 06:22:38.127"/>
</kw>
<msg timestamp="20231212 06:22:38.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.109" endtime="20231212 06:22:38.127"/>
</kw>
<msg timestamp="20231212 06:22:38.127" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.109" endtime="20231212 06:22:38.127"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.128" endtime="20231212 06:22:38.128"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.127" endtime="20231212 06:22:38.128"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.128" endtime="20231212 06:22:38.128"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.128" endtime="20231212 06:22:38.128"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.127" endtime="20231212 06:22:38.128"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.108" endtime="20231212 06:22:38.128"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.129" endtime="20231212 06:22:38.129"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.128" endtime="20231212 06:22:38.129"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.132" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.144" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.130" endtime="20231212 06:22:38.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.145" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.144" endtime="20231212 06:22:38.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.145" endtime="20231212 06:22:38.146"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.130" endtime="20231212 06:22:38.146"/>
</kw>
<msg timestamp="20231212 06:22:38.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.130" endtime="20231212 06:22:38.146"/>
</kw>
<msg timestamp="20231212 06:22:38.146" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.130" endtime="20231212 06:22:38.146"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.147" endtime="20231212 06:22:38.147"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.146" endtime="20231212 06:22:38.147"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.147" endtime="20231212 06:22:38.147"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.147" endtime="20231212 06:22:38.147"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.146" endtime="20231212 06:22:38.147"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.129" endtime="20231212 06:22:38.147"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.148" endtime="20231212 06:22:38.148"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.147" endtime="20231212 06:22:38.148"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.151" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.165" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.150" endtime="20231212 06:22:38.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.165" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.165" endtime="20231212 06:22:38.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.166" endtime="20231212 06:22:38.166"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.149" endtime="20231212 06:22:38.166"/>
</kw>
<msg timestamp="20231212 06:22:38.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.149" endtime="20231212 06:22:38.166"/>
</kw>
<msg timestamp="20231212 06:22:38.167" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.149" endtime="20231212 06:22:38.167"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.167" endtime="20231212 06:22:38.167"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.167" endtime="20231212 06:22:38.167"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.167" endtime="20231212 06:22:38.168"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.167" endtime="20231212 06:22:38.168"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.167" endtime="20231212 06:22:38.168"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.148" endtime="20231212 06:22:38.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:38.067" endtime="20231212 06:22:38.168"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.172" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.174" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:38.170" endtime="20231212 06:22:38.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.175" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:38.175" endtime="20231212 06:22:38.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.175" endtime="20231212 06:22:38.176"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.170" endtime="20231212 06:22:38.176"/>
</kw>
<msg timestamp="20231212 06:22:38.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.169" endtime="20231212 06:22:38.176"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.169" endtime="20231212 06:22:38.176"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.179" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.200" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.178" endtime="20231212 06:22:38.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.201" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.200" endtime="20231212 06:22:38.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.201" endtime="20231212 06:22:38.201"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.177" endtime="20231212 06:22:38.202"/>
</kw>
<msg timestamp="20231212 06:22:38.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.177" endtime="20231212 06:22:38.202"/>
</kw>
<msg timestamp="20231212 06:22:38.202" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.177" endtime="20231212 06:22:38.202"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.202" endtime="20231212 06:22:38.202"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.202" endtime="20231212 06:22:38.203"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.203" endtime="20231212 06:22:38.203"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.203" endtime="20231212 06:22:38.203"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.202" endtime="20231212 06:22:38.203"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.176" endtime="20231212 06:22:38.203"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.204" endtime="20231212 06:22:38.204"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.203" endtime="20231212 06:22:38.204"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.207" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.224" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.206" endtime="20231212 06:22:38.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.225" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:38.225" endtime="20231212 06:22:38.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.225" endtime="20231212 06:22:38.226"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.205" endtime="20231212 06:22:38.226"/>
</kw>
<msg timestamp="20231212 06:22:38.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.205" endtime="20231212 06:22:38.226"/>
</kw>
<msg timestamp="20231212 06:22:38.226" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:38.205" endtime="20231212 06:22:38.226"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:38.227" endtime="20231212 06:22:38.227"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:38.227" endtime="20231212 06:22:38.227"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:38.227" endtime="20231212 06:22:38.228"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.227" endtime="20231212 06:22:38.228"/>
</branch>
<status status="PASS" starttime="20231212 06:22:38.227" endtime="20231212 06:22:38.228"/>
</if>
<status status="PASS" starttime="20231212 06:22:38.204" endtime="20231212 06:22:38.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:38.169" endtime="20231212 06:22:38.228"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20231212 06:21:23.710" endtime="20231212 06:22:38.229"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.253" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:38.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:38.255" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:38.251" endtime="20231212 06:22:38.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:38.256" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:38.256" endtime="20231212 06:22:38.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:38.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:38.256" endtime="20231212 06:22:38.257"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.251" endtime="20231212 06:22:38.257"/>
</kw>
<msg timestamp="20231212 06:22:38.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.251" endtime="20231212 06:22:38.257"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.250" endtime="20231212 06:22:38.257"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:38.258" endtime="20231212 06:22:38.258"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.257" endtime="20231212 06:22:38.258"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:22:38.259" level="INFO">${random} = hwhpj</msg>
<status status="PASS" starttime="20231212 06:22:38.258" endtime="20231212 06:22:38.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:22:38.259" level="INFO">${VOLUME} = vol-hwhpj</msg>
<status status="PASS" starttime="20231212 06:22:38.259" endtime="20231212 06:22:38.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:38.272" level="INFO">Running command 'ozone sh volume create /vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:41.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:41.533" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:38.271" endtime="20231212 06:22:41.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:41.534" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:41.533" endtime="20231212 06:22:41.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:41.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:41.534" endtime="20231212 06:22:41.535"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.271" endtime="20231212 06:22:41.535"/>
</kw>
<msg timestamp="20231212 06:22:41.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:38.270" endtime="20231212 06:22:41.535"/>
</kw>
<msg timestamp="20231212 06:22:41.535" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:38.259" endtime="20231212 06:22:41.535"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:41.535" endtime="20231212 06:22:41.536"/>
</kw>
<status status="PASS" starttime="20231212 06:22:38.258" endtime="20231212 06:22:41.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:38.250" endtime="20231212 06:22:41.536"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:22:41.538" level="INFO">${random} = makjw</msg>
<status status="PASS" starttime="20231212 06:22:41.537" endtime="20231212 06:22:41.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:22:41.538" level="INFO">${BUCKET} = buc-makjw</msg>
<status status="PASS" starttime="20231212 06:22:41.538" endtime="20231212 06:22:41.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:41.541" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-hwhpj/buc-makjw 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:44.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:44.479" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:41.539" endtime="20231212 06:22:44.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:44.480" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:44.480" endtime="20231212 06:22:44.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:44.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:44.480" endtime="20231212 06:22:44.481"/>
</kw>
<status status="PASS" starttime="20231212 06:22:41.539" endtime="20231212 06:22:44.481"/>
</kw>
<msg timestamp="20231212 06:22:44.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:41.539" endtime="20231212 06:22:44.481"/>
</kw>
<msg timestamp="20231212 06:22:44.481" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:41.538" endtime="20231212 06:22:44.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:44.481" endtime="20231212 06:22:44.482"/>
</kw>
<status status="PASS" starttime="20231212 06:22:41.537" endtime="20231212 06:22:44.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:41.536" endtime="20231212 06:22:44.482"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:44.486" level="INFO">Running command 'ozone sh key put /vol-hwhpj/buc-makjw/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:49.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:49.448" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:44.484" endtime="20231212 06:22:49.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:49.449" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:49.449" endtime="20231212 06:22:49.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:49.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:49.450" endtime="20231212 06:22:49.450"/>
</kw>
<status status="PASS" starttime="20231212 06:22:44.484" endtime="20231212 06:22:49.450"/>
</kw>
<msg timestamp="20231212 06:22:49.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:44.484" endtime="20231212 06:22:49.450"/>
</kw>
<msg timestamp="20231212 06:22:49.450" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:44.483" endtime="20231212 06:22:49.450"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:49.451" endtime="20231212 06:22:49.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:49.454" level="INFO">Running command 'ozone sh key put /vol-hwhpj/buc-makjw/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.259" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:49.452" endtime="20231212 06:22:54.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.260" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:54.260" endtime="20231212 06:22:54.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.261" endtime="20231212 06:22:54.261"/>
</kw>
<status status="PASS" starttime="20231212 06:22:49.452" endtime="20231212 06:22:54.261"/>
</kw>
<msg timestamp="20231212 06:22:54.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:49.452" endtime="20231212 06:22:54.261"/>
</kw>
<msg timestamp="20231212 06:22:54.262" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:22:49.451" endtime="20231212 06:22:54.262"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.262" endtime="20231212 06:22:54.262"/>
</kw>
<status status="PASS" starttime="20231212 06:22:44.483" endtime="20231212 06:22:54.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:44.482" endtime="20231212 06:22:54.262"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.266" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.269" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.265" endtime="20231212 06:22:54.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.269" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.269" endtime="20231212 06:22:54.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.270" endtime="20231212 06:22:54.270"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.264" endtime="20231212 06:22:54.270"/>
</kw>
<msg timestamp="20231212 06:22:54.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.264" endtime="20231212 06:22:54.270"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.264" endtime="20231212 06:22:54.270"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.273" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.302" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.272" endtime="20231212 06:22:54.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.303" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.303" endtime="20231212 06:22:54.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.303" endtime="20231212 06:22:54.304"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.272" endtime="20231212 06:22:54.304"/>
</kw>
<msg timestamp="20231212 06:22:54.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.271" endtime="20231212 06:22:54.304"/>
</kw>
<msg timestamp="20231212 06:22:54.304" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.271" endtime="20231212 06:22:54.304"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.305" endtime="20231212 06:22:54.305"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.304" endtime="20231212 06:22:54.305"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.305" endtime="20231212 06:22:54.305"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.305" endtime="20231212 06:22:54.305"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.304" endtime="20231212 06:22:54.305"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.270" endtime="20231212 06:22:54.306"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.306" endtime="20231212 06:22:54.306"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.306" endtime="20231212 06:22:54.306"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.309" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.321" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.308" endtime="20231212 06:22:54.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.322" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.322" endtime="20231212 06:22:54.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.322" endtime="20231212 06:22:54.323"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.308" endtime="20231212 06:22:54.323"/>
</kw>
<msg timestamp="20231212 06:22:54.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.307" endtime="20231212 06:22:54.323"/>
</kw>
<msg timestamp="20231212 06:22:54.323" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.307" endtime="20231212 06:22:54.323"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.324" endtime="20231212 06:22:54.324"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.323" endtime="20231212 06:22:54.324"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.324" endtime="20231212 06:22:54.324"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.324" endtime="20231212 06:22:54.324"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.323" endtime="20231212 06:22:54.324"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.306" endtime="20231212 06:22:54.324"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.325" endtime="20231212 06:22:54.325"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.325" endtime="20231212 06:22:54.325"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.328" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.339" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.327" endtime="20231212 06:22:54.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.340" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.340" endtime="20231212 06:22:54.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.340" endtime="20231212 06:22:54.341"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.326" endtime="20231212 06:22:54.341"/>
</kw>
<msg timestamp="20231212 06:22:54.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.326" endtime="20231212 06:22:54.341"/>
</kw>
<msg timestamp="20231212 06:22:54.341" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.326" endtime="20231212 06:22:54.341"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.342" endtime="20231212 06:22:54.342"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.341" endtime="20231212 06:22:54.342"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.342" endtime="20231212 06:22:54.342"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.342" endtime="20231212 06:22:54.342"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.341" endtime="20231212 06:22:54.342"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.325" endtime="20231212 06:22:54.342"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.343" endtime="20231212 06:22:54.343"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.343" endtime="20231212 06:22:54.343"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.346" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.358" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.345" endtime="20231212 06:22:54.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.358" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.358" endtime="20231212 06:22:54.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.358" endtime="20231212 06:22:54.359"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.345" endtime="20231212 06:22:54.359"/>
</kw>
<msg timestamp="20231212 06:22:54.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.344" endtime="20231212 06:22:54.359"/>
</kw>
<msg timestamp="20231212 06:22:54.359" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.344" endtime="20231212 06:22:54.359"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.360" endtime="20231212 06:22:54.360"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.360" endtime="20231212 06:22:54.360"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.360" endtime="20231212 06:22:54.360"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.360" endtime="20231212 06:22:54.360"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.360" endtime="20231212 06:22:54.360"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.343" endtime="20231212 06:22:54.361"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.263" endtime="20231212 06:22:54.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:54.263" endtime="20231212 06:22:54.361"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.365" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.367" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.363" endtime="20231212 06:22:54.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.367" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.367" endtime="20231212 06:22:54.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.368" endtime="20231212 06:22:54.368"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.363" endtime="20231212 06:22:54.368"/>
</kw>
<msg timestamp="20231212 06:22:54.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.363" endtime="20231212 06:22:54.368"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.362" endtime="20231212 06:22:54.368"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.371" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.391" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.370" endtime="20231212 06:22:54.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.392" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.391" endtime="20231212 06:22:54.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.392" endtime="20231212 06:22:54.393"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.370" endtime="20231212 06:22:54.393"/>
</kw>
<msg timestamp="20231212 06:22:54.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.369" endtime="20231212 06:22:54.393"/>
</kw>
<msg timestamp="20231212 06:22:54.393" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.369" endtime="20231212 06:22:54.393"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.394" endtime="20231212 06:22:54.394"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.393" endtime="20231212 06:22:54.394"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.394" endtime="20231212 06:22:54.394"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.394" endtime="20231212 06:22:54.394"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.393" endtime="20231212 06:22:54.394"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.368" endtime="20231212 06:22:54.394"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.395" endtime="20231212 06:22:54.395"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.394" endtime="20231212 06:22:54.395"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.398" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.411" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.397" endtime="20231212 06:22:54.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.412" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.411" endtime="20231212 06:22:54.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.412" endtime="20231212 06:22:54.412"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.396" endtime="20231212 06:22:54.412"/>
</kw>
<msg timestamp="20231212 06:22:54.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.396" endtime="20231212 06:22:54.413"/>
</kw>
<msg timestamp="20231212 06:22:54.413" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.396" endtime="20231212 06:22:54.413"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.413" endtime="20231212 06:22:54.413"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.413" endtime="20231212 06:22:54.413"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.413" endtime="20231212 06:22:54.414"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.413" endtime="20231212 06:22:54.414"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.413" endtime="20231212 06:22:54.414"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.395" endtime="20231212 06:22:54.414"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.414" endtime="20231212 06:22:54.415"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.414" endtime="20231212 06:22:54.415"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.418" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.431" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.416" endtime="20231212 06:22:54.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.432" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.431" endtime="20231212 06:22:54.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.432" endtime="20231212 06:22:54.433"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.416" endtime="20231212 06:22:54.433"/>
</kw>
<msg timestamp="20231212 06:22:54.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.416" endtime="20231212 06:22:54.433"/>
</kw>
<msg timestamp="20231212 06:22:54.434" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.415" endtime="20231212 06:22:54.434"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.434" endtime="20231212 06:22:54.434"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.434" endtime="20231212 06:22:54.434"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.434" endtime="20231212 06:22:54.435"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.434" endtime="20231212 06:22:54.435"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.434" endtime="20231212 06:22:54.435"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.415" endtime="20231212 06:22:54.435"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.435" endtime="20231212 06:22:54.436"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.435" endtime="20231212 06:22:54.436"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.438" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.455" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.437" endtime="20231212 06:22:54.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.456" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.455" endtime="20231212 06:22:54.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.456" endtime="20231212 06:22:54.456"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.437" endtime="20231212 06:22:54.456"/>
</kw>
<msg timestamp="20231212 06:22:54.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.437" endtime="20231212 06:22:54.457"/>
</kw>
<msg timestamp="20231212 06:22:54.457" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.436" endtime="20231212 06:22:54.457"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.457" endtime="20231212 06:22:54.457"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.457" endtime="20231212 06:22:54.457"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.457" endtime="20231212 06:22:54.458"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.457" endtime="20231212 06:22:54.458"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.457" endtime="20231212 06:22:54.458"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.436" endtime="20231212 06:22:54.458"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.362" endtime="20231212 06:22:54.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:54.361" endtime="20231212 06:22:54.458"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.463" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.465" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.461" endtime="20231212 06:22:54.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.466" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.465" endtime="20231212 06:22:54.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.466" endtime="20231212 06:22:54.466"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.461" endtime="20231212 06:22:54.466"/>
</kw>
<msg timestamp="20231212 06:22:54.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.460" endtime="20231212 06:22:54.467"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.460" endtime="20231212 06:22:54.467"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.470" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.491" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.468" endtime="20231212 06:22:54.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.492" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.491" endtime="20231212 06:22:54.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.492" endtime="20231212 06:22:54.492"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.468" endtime="20231212 06:22:54.493"/>
</kw>
<msg timestamp="20231212 06:22:54.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.468" endtime="20231212 06:22:54.493"/>
</kw>
<msg timestamp="20231212 06:22:54.493" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.467" endtime="20231212 06:22:54.493"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.493" endtime="20231212 06:22:54.493"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.493" endtime="20231212 06:22:54.493"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.494" endtime="20231212 06:22:54.494"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.493" endtime="20231212 06:22:54.494"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.493" endtime="20231212 06:22:54.494"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.467" endtime="20231212 06:22:54.494"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.495" endtime="20231212 06:22:54.495"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.494" endtime="20231212 06:22:54.495"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.498" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.511" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.496" endtime="20231212 06:22:54.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.512" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.512" endtime="20231212 06:22:54.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.512" endtime="20231212 06:22:54.513"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.496" endtime="20231212 06:22:54.513"/>
</kw>
<msg timestamp="20231212 06:22:54.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.496" endtime="20231212 06:22:54.513"/>
</kw>
<msg timestamp="20231212 06:22:54.513" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.495" endtime="20231212 06:22:54.513"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.513" endtime="20231212 06:22:54.514"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.513" endtime="20231212 06:22:54.514"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.514" endtime="20231212 06:22:54.514"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.514" endtime="20231212 06:22:54.514"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.513" endtime="20231212 06:22:54.514"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.495" endtime="20231212 06:22:54.514"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.515" endtime="20231212 06:22:54.515"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.514" endtime="20231212 06:22:54.515"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.518" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.531" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.517" endtime="20231212 06:22:54.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.532" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.531" endtime="20231212 06:22:54.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.532" endtime="20231212 06:22:54.532"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.516" endtime="20231212 06:22:54.532"/>
</kw>
<msg timestamp="20231212 06:22:54.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.516" endtime="20231212 06:22:54.532"/>
</kw>
<msg timestamp="20231212 06:22:54.533" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.516" endtime="20231212 06:22:54.533"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.533" endtime="20231212 06:22:54.533"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.533" endtime="20231212 06:22:54.533"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.533" endtime="20231212 06:22:54.534"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.533" endtime="20231212 06:22:54.534"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.533" endtime="20231212 06:22:54.534"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.515" endtime="20231212 06:22:54.534"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.534" endtime="20231212 06:22:54.534"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.534" endtime="20231212 06:22:54.535"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.538" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.551" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.536" endtime="20231212 06:22:54.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.552" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.552" endtime="20231212 06:22:54.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.552" endtime="20231212 06:22:54.553"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.536" endtime="20231212 06:22:54.553"/>
</kw>
<msg timestamp="20231212 06:22:54.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.536" endtime="20231212 06:22:54.553"/>
</kw>
<msg timestamp="20231212 06:22:54.553" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.535" endtime="20231212 06:22:54.553"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.553" endtime="20231212 06:22:54.554"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.553" endtime="20231212 06:22:54.554"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.554" endtime="20231212 06:22:54.554"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.554" endtime="20231212 06:22:54.554"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.553" endtime="20231212 06:22:54.554"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.535" endtime="20231212 06:22:54.554"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.459" endtime="20231212 06:22:54.554"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:54.459" endtime="20231212 06:22:54.554"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.558" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.561" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.557" endtime="20231212 06:22:54.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.561" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231212 06:22:54.561" endtime="20231212 06:22:54.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.562" endtime="20231212 06:22:54.562"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.557" endtime="20231212 06:22:54.562"/>
</kw>
<msg timestamp="20231212 06:22:54.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.556" endtime="20231212 06:22:54.562"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.556" endtime="20231212 06:22:54.562"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.566" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.582" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.564" endtime="20231212 06:22:54.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.583" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.583" endtime="20231212 06:22:54.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.583" endtime="20231212 06:22:54.584"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.564" endtime="20231212 06:22:54.584"/>
</kw>
<msg timestamp="20231212 06:22:54.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.564" endtime="20231212 06:22:54.584"/>
</kw>
<msg timestamp="20231212 06:22:54.585" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.563" endtime="20231212 06:22:54.585"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.585" endtime="20231212 06:22:54.585"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.585" endtime="20231212 06:22:54.585"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.586" endtime="20231212 06:22:54.586"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.585" endtime="20231212 06:22:54.586"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.585" endtime="20231212 06:22:54.586"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.562" endtime="20231212 06:22:54.586"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.587" endtime="20231212 06:22:54.587"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.586" endtime="20231212 06:22:54.587"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.591" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.602" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.589" endtime="20231212 06:22:54.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.603" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.602" endtime="20231212 06:22:54.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.603" endtime="20231212 06:22:54.603"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.589" endtime="20231212 06:22:54.603"/>
</kw>
<msg timestamp="20231212 06:22:54.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.588" endtime="20231212 06:22:54.604"/>
</kw>
<msg timestamp="20231212 06:22:54.604" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.588" endtime="20231212 06:22:54.604"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.604" endtime="20231212 06:22:54.604"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.604" endtime="20231212 06:22:54.604"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.604" endtime="20231212 06:22:54.605"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.604" endtime="20231212 06:22:54.605"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.604" endtime="20231212 06:22:54.605"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.587" endtime="20231212 06:22:54.605"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.605" endtime="20231212 06:22:54.606"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.605" endtime="20231212 06:22:54.606"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.609" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.619" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.607" endtime="20231212 06:22:54.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.620" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.620" endtime="20231212 06:22:54.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.620" endtime="20231212 06:22:54.621"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.607" endtime="20231212 06:22:54.621"/>
</kw>
<msg timestamp="20231212 06:22:54.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.606" endtime="20231212 06:22:54.621"/>
</kw>
<msg timestamp="20231212 06:22:54.621" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.606" endtime="20231212 06:22:54.621"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.622" endtime="20231212 06:22:54.622"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.622" endtime="20231212 06:22:54.622"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.622" endtime="20231212 06:22:54.623"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.622" endtime="20231212 06:22:54.623"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.621" endtime="20231212 06:22:54.623"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.606" endtime="20231212 06:22:54.623"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:22:54.623" endtime="20231212 06:22:54.624"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.623" endtime="20231212 06:22:54.624"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.627" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.638" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.625" endtime="20231212 06:22:54.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.639" level="INFO">200</msg>
<status status="PASS" starttime="20231212 06:22:54.638" endtime="20231212 06:22:54.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.639" endtime="20231212 06:22:54.639"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.625" endtime="20231212 06:22:54.640"/>
</kw>
<msg timestamp="20231212 06:22:54.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.625" endtime="20231212 06:22:54.640"/>
</kw>
<msg timestamp="20231212 06:22:54.640" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231212 06:22:54.624" endtime="20231212 06:22:54.640"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.640" endtime="20231212 06:22:54.640"/>
</kw>
<status status="NOT RUN" starttime="20231212 06:22:54.640" endtime="20231212 06:22:54.640"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.641" endtime="20231212 06:22:54.641"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.640" endtime="20231212 06:22:54.641"/>
</branch>
<status status="PASS" starttime="20231212 06:22:54.640" endtime="20231212 06:22:54.641"/>
</if>
<status status="PASS" starttime="20231212 06:22:54.624" endtime="20231212 06:22:54.641"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.556" endtime="20231212 06:22:54.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:54.555" endtime="20231212 06:22:54.641"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.646" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.657" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231212 06:22:54.645" endtime="20231212 06:22:54.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.658" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:22:54.658" endtime="20231212 06:22:54.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.658" endtime="20231212 06:22:54.659"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.644" endtime="20231212 06:22:54.659"/>
</kw>
<msg timestamp="20231212 06:22:54.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.644" endtime="20231212 06:22:54.659"/>
</kw>
<msg timestamp="20231212 06:22:54.659" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231212 06:22:54.644" endtime="20231212 06:22:54.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.659" endtime="20231212 06:22:54.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:22:54.660" endtime="20231212 06:22:54.660"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.643" endtime="20231212 06:22:54.660"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.643" endtime="20231212 06:22:54.660"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.642" endtime="20231212 06:22:54.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:54.642" endtime="20231212 06:22:54.660"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:22:54.666" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:22:54.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:22:54.676" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:22:54.664" endtime="20231212 06:22:54.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:22:54.677" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:22:54.677" endtime="20231212 06:22:54.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:22:54.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:22:54.677" endtime="20231212 06:22:54.678"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.664" endtime="20231212 06:22:54.678"/>
</kw>
<msg timestamp="20231212 06:22:54.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:22:54.664" endtime="20231212 06:22:54.678"/>
</kw>
<msg timestamp="20231212 06:22:54.678" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:22:54.663" endtime="20231212 06:22:54.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:22:54.679" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231212 06:22:54.678" endtime="20231212 06:22:54.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:22:54.679" endtime="20231212 06:22:54.679"/>
</kw>
<status status="FAIL" starttime="20231212 06:22:54.662" endtime="20231212 06:22:54.679"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:04.683" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:04.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:04.695" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:04.682" endtime="20231212 06:23:04.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:04.696" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:04.695" endtime="20231212 06:23:04.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:04.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:04.696" endtime="20231212 06:23:04.696"/>
</kw>
<status status="PASS" starttime="20231212 06:23:04.681" endtime="20231212 06:23:04.696"/>
</kw>
<msg timestamp="20231212 06:23:04.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:04.681" endtime="20231212 06:23:04.697"/>
</kw>
<msg timestamp="20231212 06:23:04.697" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:04.680" endtime="20231212 06:23:04.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:23:04.697" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231212 06:23:04.697" endtime="20231212 06:23:04.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:23:04.697" endtime="20231212 06:23:04.697"/>
</kw>
<status status="FAIL" starttime="20231212 06:23:04.680" endtime="20231212 06:23:04.698"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:14.702" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:14.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:14.714" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:14.700" endtime="20231212 06:23:14.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:14.714" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:14.714" endtime="20231212 06:23:14.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:14.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:14.715" endtime="20231212 06:23:14.715"/>
</kw>
<status status="PASS" starttime="20231212 06:23:14.700" endtime="20231212 06:23:14.715"/>
</kw>
<msg timestamp="20231212 06:23:14.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:14.699" endtime="20231212 06:23:14.715"/>
</kw>
<msg timestamp="20231212 06:23:14.716" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:14.699" endtime="20231212 06:23:14.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:23:14.716" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231212 06:23:14.716" endtime="20231212 06:23:14.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:23:14.716" endtime="20231212 06:23:14.716"/>
</kw>
<status status="FAIL" starttime="20231212 06:23:14.698" endtime="20231212 06:23:14.717"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:24.721" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:24.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:24.732" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:24.719" endtime="20231212 06:23:24.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:24.733" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:24.732" endtime="20231212 06:23:24.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:24.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:24.733" endtime="20231212 06:23:24.734"/>
</kw>
<status status="PASS" starttime="20231212 06:23:24.718" endtime="20231212 06:23:24.734"/>
</kw>
<msg timestamp="20231212 06:23:24.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:24.718" endtime="20231212 06:23:24.734"/>
</kw>
<msg timestamp="20231212 06:23:24.734" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231212 06:23:24.718" endtime="20231212 06:23:24.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 06:23:24.735" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231212 06:23:24.734" endtime="20231212 06:23:24.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231212 06:23:24.735" endtime="20231212 06:23:24.735"/>
</kw>
<status status="FAIL" starttime="20231212 06:23:24.717" endtime="20231212 06:23:24.735"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.739" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.758" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hwhpj","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231212 06:23:34.737" endtime="20231212 06:23:34.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.759" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hwhpj","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1702362161475,"modificationTime":1702362161475,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-hwhpj"},"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.759" endtime="20231212 06:23:34.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.760" endtime="20231212 06:23:34.760"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.737" endtime="20231212 06:23:34.760"/>
</kw>
<msg timestamp="20231212 06:23:34.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.737" endtime="20231212 06:23:34.760"/>
</kw>
<msg timestamp="20231212 06:23:34.760" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-hwhpj","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231212 06:23:34.736" endtime="20231212 06:23:34.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.761" endtime="20231212 06:23:34.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.761" endtime="20231212 06:23:34.761"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.735" endtime="20231212 06:23:34.762"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.662" endtime="20231212 06:23:34.762"/>
</kw>
<status status="PASS" starttime="20231212 06:22:54.662" endtime="20231212 06:23:34.762"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:22:54.661" endtime="20231212 06:23:34.762"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.768" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj/buc-makjw 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.786" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-makjw","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231212 06:23:34.767" endtime="20231212 06:23:34.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.787" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-makjw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1702362164405,"modificationTime":1702362164405,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-hwhpj","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.786" endtime="20231212 06:23:34.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.787" endtime="20231212 06:23:34.787"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.766" endtime="20231212 06:23:34.787"/>
</kw>
<msg timestamp="20231212 06:23:34.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.766" endtime="20231212 06:23:34.788"/>
</kw>
<msg timestamp="20231212 06:23:34.788" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-makjw","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231212 06:23:34.766" endtime="20231212 06:23:34.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.788" endtime="20231212 06:23:34.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.788" endtime="20231212 06:23:34.789"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.765" endtime="20231212 06:23:34.789"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.765" endtime="20231212 06:23:34.789"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.764" endtime="20231212 06:23:34.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.763" endtime="20231212 06:23:34.789"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.794" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj/buc-makjw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.832" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231212 06:23:34.792" endtime="20231212 06:23:34.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.833" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1702362167552,"modificationTime":1702362169036,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-hwhpj","bucketName":"buc-makjw","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":10,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":10}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.832" endtime="20231212 06:23:34.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.833" endtime="20231212 06:23:34.834"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.792" endtime="20231212 06:23:34.834"/>
</kw>
<msg timestamp="20231212 06:23:34.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.792" endtime="20231212 06:23:34.834"/>
</kw>
<msg timestamp="20231212 06:23:34.834" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231212 06:23:34.791" endtime="20231212 06:23:34.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.834" endtime="20231212 06:23:34.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.835" endtime="20231212 06:23:34.835"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.791" endtime="20231212 06:23:34.835"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.791" endtime="20231212 06:23:34.835"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.790" endtime="20231212 06:23:34.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.789" endtime="20231212 06:23:34.836"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:23:34.837" endtime="20231212 06:23:34.837"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.842" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-hwhpj/buc-makjw/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.859" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231212 06:23:34.841" endtime="20231212 06:23:34.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.860" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1702362172391,"modificationTime":1702362172391,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.859" endtime="20231212 06:23:34.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.860" endtime="20231212 06:23:34.860"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.840" endtime="20231212 06:23:34.861"/>
</kw>
<msg timestamp="20231212 06:23:34.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.840" endtime="20231212 06:23:34.861"/>
</kw>
<msg timestamp="20231212 06:23:34.861" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231212 06:23:34.839" endtime="20231212 06:23:34.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.861" endtime="20231212 06:23:34.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.862" endtime="20231212 06:23:34.862"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.838" endtime="20231212 06:23:34.862"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.838" endtime="20231212 06:23:34.862"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.838" endtime="20231212 06:23:34.862"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.837" endtime="20231212 06:23:34.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.836" endtime="20231212 06:23:34.863"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.868" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-hwhpj/buc-makjw&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.880" level="INFO">${output} = {"status":"OK","path":"/vol-hwhpj/buc-makjw","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hwhpj/buc-makjw/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231212 06:23:34.867" endtime="20231212 06:23:34.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.881" level="INFO">{"status":"OK","path":"/vol-hwhpj/buc-makjw","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hwhpj/buc-makjw/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20231212 06:23:34.880" endtime="20231212 06:23:34.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.881" endtime="20231212 06:23:34.882"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.866" endtime="20231212 06:23:34.882"/>
</kw>
<msg timestamp="20231212 06:23:34.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.866" endtime="20231212 06:23:34.882"/>
</kw>
<msg timestamp="20231212 06:23:34.882" level="INFO">${result} = {"status":"OK","path":"/vol-hwhpj/buc-makjw","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-hwhpj/buc-makjw/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231212 06:23:34.865" endtime="20231212 06:23:34.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.882" endtime="20231212 06:23:34.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.883" endtime="20231212 06:23:34.883"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.865" endtime="20231212 06:23:34.883"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.864" endtime="20231212 06:23:34.883"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.864" endtime="20231212 06:23:34.883"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.863" endtime="20231212 06:23:34.884"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.889" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-hwhpj 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.899" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.887" endtime="20231212 06:23:34.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.900" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.900" endtime="20231212 06:23:34.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.900" endtime="20231212 06:23:34.901"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.887" endtime="20231212 06:23:34.901"/>
</kw>
<msg timestamp="20231212 06:23:34.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.886" endtime="20231212 06:23:34.901"/>
</kw>
<msg timestamp="20231212 06:23:34.901" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.886" endtime="20231212 06:23:34.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.901" endtime="20231212 06:23:34.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.902" endtime="20231212 06:23:34.902"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.886" endtime="20231212 06:23:34.902"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.885" endtime="20231212 06:23:34.902"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.885" endtime="20231212 06:23:34.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.884" endtime="20231212 06:23:34.903"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.907" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-hwhpj/buc-makjw 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.918" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.906" endtime="20231212 06:23:34.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.919" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.918" endtime="20231212 06:23:34.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.919" endtime="20231212 06:23:34.919"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.906" endtime="20231212 06:23:34.919"/>
</kw>
<msg timestamp="20231212 06:23:34.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.905" endtime="20231212 06:23:34.920"/>
</kw>
<msg timestamp="20231212 06:23:34.920" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.905" endtime="20231212 06:23:34.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.920" endtime="20231212 06:23:34.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.920" endtime="20231212 06:23:34.921"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.905" endtime="20231212 06:23:34.921"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.904" endtime="20231212 06:23:34.921"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.904" endtime="20231212 06:23:34.921"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.903" endtime="20231212 06:23:34.921"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:34.925" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:34.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:34.936" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.924" endtime="20231212 06:23:34.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:34.937" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.937" endtime="20231212 06:23:34.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:34.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:34.937" endtime="20231212 06:23:34.938"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.924" endtime="20231212 06:23:34.938"/>
</kw>
<msg timestamp="20231212 06:23:34.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:34.924" endtime="20231212 06:23:34.938"/>
</kw>
<msg timestamp="20231212 06:23:34.938" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231212 06:23:34.923" endtime="20231212 06:23:34.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.938" endtime="20231212 06:23:34.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:34.938" endtime="20231212 06:23:34.939"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.923" endtime="20231212 06:23:34.939"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.922" endtime="20231212 06:23:34.939"/>
</kw>
<status status="PASS" starttime="20231212 06:23:34.922" endtime="20231212 06:23:34.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:34.921" endtime="20231212 06:23:34.939"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20231212 06:22:38.235" endtime="20231212 06:23:34.940"/>
</suite>
<status status="PASS" starttime="20231212 06:21:23.688" endtime="20231212 06:23:34.942"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:37.055" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:40.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:40.038" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:37.053" endtime="20231212 06:23:40.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:40.039" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:40.038" endtime="20231212 06:23:40.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:40.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:40.039" endtime="20231212 06:23:40.039"/>
</kw>
<status status="PASS" starttime="20231212 06:23:37.053" endtime="20231212 06:23:40.040"/>
</kw>
<msg timestamp="20231212 06:23:40.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:37.053" endtime="20231212 06:23:40.040"/>
</kw>
<msg timestamp="20231212 06:23:40.040" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:37.052" endtime="20231212 06:23:40.040"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:40.040" endtime="20231212 06:23:40.040"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:40.043" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:43.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:43.107" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:40.041" endtime="20231212 06:23:43.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:43.108" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:43.108" endtime="20231212 06:23:43.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:43.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:43.108" endtime="20231212 06:23:43.109"/>
</kw>
<status status="PASS" starttime="20231212 06:23:40.041" endtime="20231212 06:23:43.109"/>
</kw>
<msg timestamp="20231212 06:23:43.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:40.041" endtime="20231212 06:23:43.109"/>
</kw>
<msg timestamp="20231212 06:23:43.109" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:40.040" endtime="20231212 06:23:43.109"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:43.109" endtime="20231212 06:23:43.110"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:43.112" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:23:48.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:23:48.113" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:43.111" endtime="20231212 06:23:48.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:23:48.114" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:48.113" endtime="20231212 06:23:48.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:23:48.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:23:48.114" endtime="20231212 06:23:48.115"/>
</kw>
<status status="PASS" starttime="20231212 06:23:43.110" endtime="20231212 06:23:48.115"/>
</kw>
<msg timestamp="20231212 06:23:48.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:43.110" endtime="20231212 06:23:48.115"/>
</kw>
<msg timestamp="20231212 06:23:48.115" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:43.110" endtime="20231212 06:23:48.115"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:23:48.115" endtime="20231212 06:23:48.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:37.052" endtime="20231212 06:23:48.116"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:23:37.011" endtime="20231212 06:23:48.116"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:23:54.673" level="INFO">${random} = 74258</msg>
<status status="PASS" starttime="20231212 06:23:54.672" endtime="20231212 06:23:54.673"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:23:54.676" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-74258 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:24:53.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:24:53.791" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:54.674" endtime="20231212 06:24:53.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:24:53.792" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:24:53.792" endtime="20231212 06:24:53.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:24:53.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:24:53.793" endtime="20231212 06:24:53.793"/>
</kw>
<status status="PASS" starttime="20231212 06:23:54.674" endtime="20231212 06:24:53.793"/>
</kw>
<msg timestamp="20231212 06:24:53.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:23:54.673" endtime="20231212 06:24:53.793"/>
</kw>
<msg timestamp="20231212 06:24:53.793" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:23:54.673" endtime="20231212 06:24:53.793"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:24:53.794" endtime="20231212 06:24:53.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:23:54.672" endtime="20231212 06:24:53.794"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:23:54.631" endtime="20231212 06:24:53.795"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:25:23.002" level="INFO">${random} = 78522</msg>
<status status="PASS" starttime="20231212 06:25:23.002" endtime="20231212 06:25:23.002"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:25:23.005" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-78522 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:25:28.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:25:28.463" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:25:23.003" endtime="20231212 06:25:28.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:25:28.464" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:25:28.464" endtime="20231212 06:25:28.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:25:28.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:25:28.464" endtime="20231212 06:25:28.465"/>
</kw>
<status status="PASS" starttime="20231212 06:25:23.003" endtime="20231212 06:25:28.465"/>
</kw>
<msg timestamp="20231212 06:25:28.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:25:23.003" endtime="20231212 06:25:28.465"/>
</kw>
<msg timestamp="20231212 06:25:28.465" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231212 06:25:23.002" endtime="20231212 06:25:28.465"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:25:28.465" endtime="20231212 06:25:28.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:25:23.001" endtime="20231212 06:25:28.466"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:25:22.956" endtime="20231212 06:25:28.467"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="236459"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
