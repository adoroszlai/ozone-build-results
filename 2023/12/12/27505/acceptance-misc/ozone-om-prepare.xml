<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231212 06:19:45.644" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:15:38.623" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:15:48.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:15:48.673" level="INFO">${output} = 2023-12-12 06:15:40,076 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:15:40,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:15:38.622" endtime="20231212 06:15:48.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:15:48.674" level="INFO">2023-12-12 06:15:40,076 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:15:40,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:15:40,175 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:15:40,243 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-12-12 06:15:40,279 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:15:40,887 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-12 06:15:41,033 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-12 06:15:41,287 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:15:41,700 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:15:41,943 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:15:42,287 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:15:43,288 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2023-12-12 06:15:44,288 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2023-12-12 06:15:45,289 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2023-12-12 06:15:46,293 [Thread-3] INFO freon.ProgressBar: Progress: 72.00 % (72 out of 100)
2023-12-12 06:15:47,294 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-12-12 06:15:48,294 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:15:48,327 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=30.374233, max=1478.690843, mean=61.560583892581505, stddev=141.89491797726504, median=41.567134, p75=52.346994, p95=66.751545, p98=208.994964, p99=234.029071, p999=1478.690843, mean_rate=13.829936194666908, m1=13.399999999999999, m5=13.399999999999999, m15=13.399999999999999, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:15:48,327 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-12-12 06:15:48,327 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:15:48,327 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:15:48.674" endtime="20231212 06:15:48.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:15:48.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:15:48.674" endtime="20231212 06:15:48.675"/>
</kw>
<status status="PASS" starttime="20231212 06:15:38.622" endtime="20231212 06:15:48.675"/>
</kw>
<msg timestamp="20231212 06:15:48.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:15:38.621" endtime="20231212 06:15:48.675"/>
</kw>
<msg timestamp="20231212 06:15:48.675" level="INFO">${result} = 2023-12-12 06:15:40,076 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:15:40,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:15:38.621" endtime="20231212 06:15:48.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:15:48.675" endtime="20231212 06:15:48.676"/>
</kw>
<status status="PASS" starttime="20231212 06:15:38.620" endtime="20231212 06:15:48.676"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:15:48.676" level="INFO">${random} = 30175</msg>
<status status="PASS" starttime="20231212 06:15:48.676" endtime="20231212 06:15:48.676"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:15:48.677" level="INFO">${volume_name} = 30175-volume-for-prepare</msg>
<status status="PASS" starttime="20231212 06:15:48.676" endtime="20231212 06:15:48.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:15:48.679" level="INFO">${bucket_name} = 30175-bucket-for-prepare</msg>
<status status="PASS" starttime="20231212 06:15:48.678" endtime="20231212 06:15:48.679"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:15:48.681" level="INFO">Running command 'ozone sh volume create /30175-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:15:50.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:15:50.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:15:48.680" endtime="20231212 06:15:50.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:15:50.803" level="INFO"/>
<status status="PASS" starttime="20231212 06:15:50.803" endtime="20231212 06:15:50.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:15:50.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:15:50.803" endtime="20231212 06:15:50.804"/>
</kw>
<status status="PASS" starttime="20231212 06:15:48.679" endtime="20231212 06:15:50.804"/>
</kw>
<msg timestamp="20231212 06:15:50.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:15:48.679" endtime="20231212 06:15:50.804"/>
</kw>
<status status="PASS" starttime="20231212 06:15:48.679" endtime="20231212 06:15:50.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:15:50.806" level="INFO">Running command 'ozone sh bucket create /30175-volume-for-prepare/30175-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:15:52.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:15:52.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:15:50.805" endtime="20231212 06:15:52.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:15:52.958" level="INFO"/>
<status status="PASS" starttime="20231212 06:15:52.958" endtime="20231212 06:15:52.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:15:52.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:15:52.958" endtime="20231212 06:15:52.959"/>
</kw>
<status status="PASS" starttime="20231212 06:15:50.805" endtime="20231212 06:15:52.959"/>
</kw>
<msg timestamp="20231212 06:15:52.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:15:50.805" endtime="20231212 06:15:52.959"/>
</kw>
<status status="PASS" starttime="20231212 06:15:50.804" endtime="20231212 06:15:52.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:15:52.961" level="INFO">Running command 'ozone sh key put /30175-volume-for-prepare/30175-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:15:56.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:15:56.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:15:52.960" endtime="20231212 06:15:56.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:15:56.649" level="INFO"/>
<status status="PASS" starttime="20231212 06:15:56.649" endtime="20231212 06:15:56.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:15:56.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:15:56.650" endtime="20231212 06:15:56.650"/>
</kw>
<status status="PASS" starttime="20231212 06:15:52.960" endtime="20231212 06:15:56.650"/>
</kw>
<msg timestamp="20231212 06:15:56.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:15:52.960" endtime="20231212 06:15:56.650"/>
</kw>
<status status="PASS" starttime="20231212 06:15:52.959" endtime="20231212 06:15:56.650"/>
</kw>
<status status="PASS" starttime="20231212 06:15:38.620" endtime="20231212 06:15:56.650"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:15:56.651" endtime="20231212 06:15:56.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:15:56.654" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:03.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:03.982" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231212 06:15:56.653" endtime="20231212 06:16:03.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:03.983" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231212 06:16:03.982" endtime="20231212 06:16:03.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:03.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:03.983" endtime="20231212 06:16:03.983"/>
</kw>
<status status="PASS" starttime="20231212 06:15:56.652" endtime="20231212 06:16:03.984"/>
</kw>
<msg timestamp="20231212 06:16:03.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:15:56.652" endtime="20231212 06:16:03.984"/>
</kw>
<msg timestamp="20231212 06:16:03.984" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231212 06:15:56.652" endtime="20231212 06:16:03.984"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:03.984" endtime="20231212 06:16:03.985"/>
</kw>
<status status="PASS" starttime="20231212 06:16:03.984" endtime="20231212 06:16:03.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:15:56.651" endtime="20231212 06:16:03.985"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:03.986" endtime="20231212 06:16:03.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:03.989" level="INFO">Running command 'ozone sh key info /30175-volume-for-prepare/30175-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:06.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:06.441" level="INFO">${output} = {
  "volumeName" : "30175-volume-for-prepare",
  "bucketName" : "30175-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:15:54.987Z",
  "modificati...</msg>
<status status="PASS" starttime="20231212 06:16:03.987" endtime="20231212 06:16:06.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:06.442" level="INFO">{
  "volumeName" : "30175-volume-for-prepare",
  "bucketName" : "30175-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:15:54.987Z",
  "modificationTime" : "2023-12-12T06:15:56.293Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231212 06:16:06.441" endtime="20231212 06:16:06.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:06.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:06.442" endtime="20231212 06:16:06.442"/>
</kw>
<status status="PASS" starttime="20231212 06:16:03.987" endtime="20231212 06:16:06.442"/>
</kw>
<msg timestamp="20231212 06:16:06.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:03.987" endtime="20231212 06:16:06.442"/>
</kw>
<msg timestamp="20231212 06:16:06.443" level="INFO">${result} = {
  "volumeName" : "30175-volume-for-prepare",
  "bucketName" : "30175-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:15:54.987Z",
  "modificati...</msg>
<status status="PASS" starttime="20231212 06:16:03.986" endtime="20231212 06:16:06.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:06.443" endtime="20231212 06:16:06.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:03.985" endtime="20231212 06:16:06.443"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:06.444" endtime="20231212 06:16:06.444"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:06.446" level="INFO">Running command 'ozone sh key put /30175-volume-for-prepare/30175-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:08.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:16:08.539" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:06.445" endtime="20231212 06:16:08.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:08.540" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:08.539" endtime="20231212 06:16:08.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:08.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:08.540" endtime="20231212 06:16:08.540"/>
</kw>
<msg timestamp="20231212 06:16:08.540" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:06.445" endtime="20231212 06:16:08.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:08.541" endtime="20231212 06:16:08.541"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:08.543" level="INFO">Running command 'ozone sh key info /30175-volume-for-prepare/30175-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:10.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:16:10.754" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231212 06:16:08.541" endtime="20231212 06:16:10.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:10.755" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231212 06:16:10.754" endtime="20231212 06:16:10.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:10.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:10.755" endtime="20231212 06:16:10.755"/>
</kw>
<status status="PASS" starttime="20231212 06:16:08.541" endtime="20231212 06:16:10.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:06.444" endtime="20231212 06:16:10.756"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20231212 06:15:38.572" endtime="20231212 06:16:10.757"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:16:12.649" level="INFO">${random} = 50717</msg>
<status status="PASS" starttime="20231212 06:16:12.649" endtime="20231212 06:16:12.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:16:12.650" level="INFO">${volume_name} = 50717-volume-for-cancel</msg>
<status status="PASS" starttime="20231212 06:16:12.649" endtime="20231212 06:16:12.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:16:12.651" level="INFO">${bucket_name} = 50717-bucket-for-cancel</msg>
<status status="PASS" starttime="20231212 06:16:12.651" endtime="20231212 06:16:12.651"/>
</kw>
<status status="PASS" starttime="20231212 06:16:12.648" endtime="20231212 06:16:12.652"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:12.652" endtime="20231212 06:16:12.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:12.655" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:14.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:14.865" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231212 06:16:12.653" endtime="20231212 06:16:14.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:14.866" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231212 06:16:14.865" endtime="20231212 06:16:14.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:14.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:14.866" endtime="20231212 06:16:14.866"/>
</kw>
<status status="PASS" starttime="20231212 06:16:12.653" endtime="20231212 06:16:14.867"/>
</kw>
<msg timestamp="20231212 06:16:14.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:12.653" endtime="20231212 06:16:14.867"/>
</kw>
<msg timestamp="20231212 06:16:14.867" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231212 06:16:12.652" endtime="20231212 06:16:14.867"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:14.867" endtime="20231212 06:16:14.868"/>
</kw>
<status status="PASS" starttime="20231212 06:16:14.867" endtime="20231212 06:16:14.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:12.652" endtime="20231212 06:16:14.868"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:14.869" endtime="20231212 06:16:14.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:14.872" level="INFO">Running command 'ozone sh volume create /50717-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:16.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:16.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:16:14.870" endtime="20231212 06:16:16.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:16.945" level="INFO"/>
<status status="PASS" starttime="20231212 06:16:16.944" endtime="20231212 06:16:16.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:16.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:16.945" endtime="20231212 06:16:16.945"/>
</kw>
<status status="PASS" starttime="20231212 06:16:14.870" endtime="20231212 06:16:16.946"/>
</kw>
<msg timestamp="20231212 06:16:16.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:14.870" endtime="20231212 06:16:16.946"/>
</kw>
<status status="PASS" starttime="20231212 06:16:14.869" endtime="20231212 06:16:16.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:16.948" level="INFO">Running command 'ozone sh bucket create /50717-volume-for-cancel/50717-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:19.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:19.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:16:16.947" endtime="20231212 06:16:19.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:19.005" level="INFO"/>
<status status="PASS" starttime="20231212 06:16:19.004" endtime="20231212 06:16:19.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:19.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:19.005" endtime="20231212 06:16:19.005"/>
</kw>
<status status="PASS" starttime="20231212 06:16:16.947" endtime="20231212 06:16:19.005"/>
</kw>
<msg timestamp="20231212 06:16:19.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:16.946" endtime="20231212 06:16:19.005"/>
</kw>
<status status="PASS" starttime="20231212 06:16:16.946" endtime="20231212 06:16:19.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:19.008" level="INFO">Running command 'ozone sh key put /50717-volume-for-cancel/50717-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:22.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:22.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:16:19.007" endtime="20231212 06:16:22.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:22.734" level="INFO"/>
<status status="PASS" starttime="20231212 06:16:22.734" endtime="20231212 06:16:22.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:22.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:22.735" endtime="20231212 06:16:22.735"/>
</kw>
<status status="PASS" starttime="20231212 06:16:19.006" endtime="20231212 06:16:22.735"/>
</kw>
<msg timestamp="20231212 06:16:22.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:19.006" endtime="20231212 06:16:22.735"/>
</kw>
<msg timestamp="20231212 06:16:22.735" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231212 06:16:19.006" endtime="20231212 06:16:22.736"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:22.738" level="INFO">Running command 'ozone sh key info /50717-volume-for-cancel/50717-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:25.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:25.036" level="INFO">${output} = {
  "volumeName" : "50717-volume-for-cancel",
  "bucketName" : "50717-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:16:21.091Z",
  "modificationT...</msg>
<status status="PASS" starttime="20231212 06:16:22.737" endtime="20231212 06:16:25.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:25.037" level="INFO">{
  "volumeName" : "50717-volume-for-cancel",
  "bucketName" : "50717-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:16:21.091Z",
  "modificationTime" : "2023-12-12T06:16:22.384Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231212 06:16:25.036" endtime="20231212 06:16:25.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:25.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:25.037" endtime="20231212 06:16:25.038"/>
</kw>
<status status="PASS" starttime="20231212 06:16:22.736" endtime="20231212 06:16:25.038"/>
</kw>
<msg timestamp="20231212 06:16:25.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:22.736" endtime="20231212 06:16:25.038"/>
</kw>
<msg timestamp="20231212 06:16:25.038" level="INFO">${result} = {
  "volumeName" : "50717-volume-for-cancel",
  "bucketName" : "50717-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:16:21.091Z",
  "modificationT...</msg>
<status status="PASS" starttime="20231212 06:16:22.736" endtime="20231212 06:16:25.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:25.038" endtime="20231212 06:16:25.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:14.868" endtime="20231212 06:16:25.039"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20231212 06:16:12.608" endtime="20231212 06:16:25.039"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:26.945" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:34.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:34.902" level="INFO">${output} = 2023-12-12 06:16:28,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:16:28,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:16:26.943" endtime="20231212 06:16:34.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:34.903" level="INFO">2023-12-12 06:16:28,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:16:28,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:16:28,415 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:16:28,498 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-12-12 06:16:28,529 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:16:29,512 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:16:29,531 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 06:16:29,712 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:16:30,531 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-12-12 06:16:31,535 [Thread-3] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2023-12-12 06:16:32,536 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2023-12-12 06:16:33,537 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-12-12 06:16:34,537 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 06:16:34,563 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=22.192801, max=1061.55934, mean=44.759255963655576, stddev=101.62770179451608, median=31.675196, p75=37.357801, p95=57.850465, p98=74.286213, p99=96.449028, p999=1061.55934, mean_rate=18.207316084651133, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:16:34,564 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-12-12 06:16:34,564 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:16:34,564 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 06:16:34.902" endtime="20231212 06:16:34.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:34.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:34.903" endtime="20231212 06:16:34.903"/>
</kw>
<status status="PASS" starttime="20231212 06:16:26.943" endtime="20231212 06:16:34.904"/>
</kw>
<msg timestamp="20231212 06:16:34.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:26.942" endtime="20231212 06:16:34.904"/>
</kw>
<msg timestamp="20231212 06:16:34.904" level="INFO">${result} = 2023-12-12 06:16:28,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:16:28,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:16:26.942" endtime="20231212 06:16:34.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:34.904" endtime="20231212 06:16:34.904"/>
</kw>
<status status="PASS" starttime="20231212 06:16:26.941" endtime="20231212 06:16:34.905"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:16:34.905" level="INFO">${random} = 16198</msg>
<status status="PASS" starttime="20231212 06:16:34.905" endtime="20231212 06:16:34.905"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:16:34.906" level="INFO">${volume_name} = 16198-volume-for-prepare</msg>
<status status="PASS" starttime="20231212 06:16:34.905" endtime="20231212 06:16:34.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:16:34.907" level="INFO">${bucket_name} = 16198-bucket-for-prepare</msg>
<status status="PASS" starttime="20231212 06:16:34.906" endtime="20231212 06:16:34.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:34.910" level="INFO">Running command 'ozone sh volume create /16198-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:37.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:37.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:16:34.908" endtime="20231212 06:16:37.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:37.005" level="INFO"/>
<status status="PASS" starttime="20231212 06:16:37.005" endtime="20231212 06:16:37.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:37.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:37.005" endtime="20231212 06:16:37.006"/>
</kw>
<status status="PASS" starttime="20231212 06:16:34.908" endtime="20231212 06:16:37.006"/>
</kw>
<msg timestamp="20231212 06:16:37.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:34.908" endtime="20231212 06:16:37.006"/>
</kw>
<status status="PASS" starttime="20231212 06:16:34.907" endtime="20231212 06:16:37.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:37.009" level="INFO">Running command 'ozone sh bucket create /16198-volume-for-prepare/16198-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:39.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:39.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:16:37.007" endtime="20231212 06:16:39.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:39.111" level="INFO"/>
<status status="PASS" starttime="20231212 06:16:39.110" endtime="20231212 06:16:39.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:39.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:39.111" endtime="20231212 06:16:39.111"/>
</kw>
<status status="PASS" starttime="20231212 06:16:37.007" endtime="20231212 06:16:39.111"/>
</kw>
<msg timestamp="20231212 06:16:39.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:37.007" endtime="20231212 06:16:39.111"/>
</kw>
<status status="PASS" starttime="20231212 06:16:37.006" endtime="20231212 06:16:39.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:39.114" level="INFO">Running command 'ozone sh key put /16198-volume-for-prepare/16198-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:42.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:42.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:16:39.113" endtime="20231212 06:16:42.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:42.906" level="INFO"/>
<status status="PASS" starttime="20231212 06:16:42.905" endtime="20231212 06:16:42.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:42.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:42.906" endtime="20231212 06:16:42.906"/>
</kw>
<status status="PASS" starttime="20231212 06:16:39.112" endtime="20231212 06:16:42.906"/>
</kw>
<msg timestamp="20231212 06:16:42.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:39.112" endtime="20231212 06:16:42.906"/>
</kw>
<status status="PASS" starttime="20231212 06:16:39.112" endtime="20231212 06:16:42.907"/>
</kw>
<status status="PASS" starttime="20231212 06:16:26.941" endtime="20231212 06:16:42.907"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:42.908" endtime="20231212 06:16:42.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:42.910" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:50.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:50.259" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231212 06:16:42.909" endtime="20231212 06:16:50.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:50.260" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231212 06:16:50.259" endtime="20231212 06:16:50.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:50.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:50.260" endtime="20231212 06:16:50.260"/>
</kw>
<status status="PASS" starttime="20231212 06:16:42.909" endtime="20231212 06:16:50.260"/>
</kw>
<msg timestamp="20231212 06:16:50.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:42.908" endtime="20231212 06:16:50.260"/>
</kw>
<msg timestamp="20231212 06:16:50.261" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231212 06:16:42.908" endtime="20231212 06:16:50.261"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:50.261" endtime="20231212 06:16:50.261"/>
</kw>
<status status="PASS" starttime="20231212 06:16:50.261" endtime="20231212 06:16:50.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:42.907" endtime="20231212 06:16:50.262"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:50.263" endtime="20231212 06:16:50.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:50.266" level="INFO">Running command 'ozone sh key info /16198-volume-for-prepare/16198-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:52.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:16:52.739" level="INFO">${output} = {
  "volumeName" : "16198-volume-for-prepare",
  "bucketName" : "16198-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:16:41.316Z",
  "modificati...</msg>
<status status="PASS" starttime="20231212 06:16:50.264" endtime="20231212 06:16:52.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:52.739" level="INFO">{
  "volumeName" : "16198-volume-for-prepare",
  "bucketName" : "16198-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:16:41.316Z",
  "modificationTime" : "2023-12-12T06:16:42.558Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231212 06:16:52.739" endtime="20231212 06:16:52.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:52.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:52.740" endtime="20231212 06:16:52.740"/>
</kw>
<status status="PASS" starttime="20231212 06:16:50.264" endtime="20231212 06:16:52.740"/>
</kw>
<msg timestamp="20231212 06:16:52.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:16:50.264" endtime="20231212 06:16:52.740"/>
</kw>
<msg timestamp="20231212 06:16:52.740" level="INFO">${result} = {
  "volumeName" : "16198-volume-for-prepare",
  "bucketName" : "16198-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-12-12T06:16:41.316Z",
  "modificati...</msg>
<status status="PASS" starttime="20231212 06:16:50.263" endtime="20231212 06:16:52.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:52.741" endtime="20231212 06:16:52.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:50.262" endtime="20231212 06:16:52.741"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:52.742" endtime="20231212 06:16:52.743"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:52.745" level="INFO">Running command 'ozone sh key put /16198-volume-for-prepare/16198-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:54.811" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:16:54.811" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:52.743" endtime="20231212 06:16:54.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:54.812" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:54.811" endtime="20231212 06:16:54.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:54.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:54.812" endtime="20231212 06:16:54.812"/>
</kw>
<msg timestamp="20231212 06:16:54.813" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:52.743" endtime="20231212 06:16:54.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:16:54.813" endtime="20231212 06:16:54.813"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:54.815" level="INFO">Running command 'ozone sh key info /16198-volume-for-prepare/16198-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:16:57.001" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:16:57.001" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231212 06:16:54.814" endtime="20231212 06:16:57.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:16:57.002" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231212 06:16:57.001" endtime="20231212 06:16:57.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:16:57.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:16:57.002" endtime="20231212 06:16:57.002"/>
</kw>
<status status="PASS" starttime="20231212 06:16:54.813" endtime="20231212 06:16:57.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:52.742" endtime="20231212 06:16:57.003"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20231212 06:16:26.895" endtime="20231212 06:16:57.004"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:16:58.893" endtime="20231212 06:16:58.894"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:16:58.894" level="INFO">${random} = 73164</msg>
<status status="PASS" starttime="20231212 06:16:58.894" endtime="20231212 06:16:58.894"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:16:58.895" level="INFO">${volume_name} = 73164-volume-for-prepare</msg>
<status status="PASS" starttime="20231212 06:16:58.894" endtime="20231212 06:16:58.895"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:16:58.897" level="INFO">Running command 'ozone sh volume create /73164-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:17:00.953" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:17:00.953" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:58.896" endtime="20231212 06:17:00.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:17:00.954" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:17:00.954" endtime="20231212 06:17:00.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:17:00.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:17:00.954" endtime="20231212 06:17:00.955"/>
</kw>
<msg timestamp="20231212 06:17:00.955" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:16:58.896" endtime="20231212 06:17:00.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:17:00.955" endtime="20231212 06:17:00.956"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:17:00.957" level="INFO">Running command 'ozone sh volume info /73164-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:17:03.076" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:17:03.076" level="INFO">${output} = VOLUME_NOT_FOUND Volume 73164-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231212 06:17:00.956" endtime="20231212 06:17:03.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:17:03.077" level="INFO">VOLUME_NOT_FOUND Volume 73164-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231212 06:17:03.077" endtime="20231212 06:17:03.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:17:03.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:17:03.077" endtime="20231212 06:17:03.078"/>
</kw>
<msg timestamp="20231212 06:17:03.078" level="INFO">${result} = VOLUME_NOT_FOUND Volume 73164-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231212 06:17:00.956" endtime="20231212 06:17:03.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:17:03.078" endtime="20231212 06:17:03.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:16:58.893" endtime="20231212 06:17:03.078"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:17:03.080" endtime="20231212 06:17:03.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:17:03.082" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:17:05.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:17:05.325" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "16198-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231212 06:17:03.081" endtime="20231212 06:17:05.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:17:05.326" level="INFO">[ {
  "metadata" : { },
  "name" : "16198-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:16:36.989Z",
  "modificationTime" : "2023-12-12T06:16:36.989Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "50717-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:16:16.925Z",
  "modificationTime" : "2023-12-12T06:16:16.925Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-12T06:15:15.451Z",
  "modificationTime" : "2023-12-12T06:15:15.451Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "30175-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:15:50.784Z",
  "modificationTime" : "2023-12-12T06:15:50.784Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:15:40.896Z",
  "modificationTime" : "2023-12-12T06:15:40.896Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231212 06:17:05.326" endtime="20231212 06:17:05.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:17:05.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:17:05.327" endtime="20231212 06:17:05.327"/>
</kw>
<status status="PASS" starttime="20231212 06:17:03.081" endtime="20231212 06:17:05.327"/>
</kw>
<msg timestamp="20231212 06:17:05.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:17:03.080" endtime="20231212 06:17:05.327"/>
</kw>
<msg timestamp="20231212 06:17:05.328" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "16198-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231212 06:17:03.080" endtime="20231212 06:17:05.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:17:03.079" endtime="20231212 06:17:05.328"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20231212 06:16:58.851" endtime="20231212 06:17:05.329"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:18:05.475" endtime="20231212 06:18:05.475"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:18:05.476" level="INFO">${random} = 98814</msg>
<status status="PASS" starttime="20231212 06:18:05.475" endtime="20231212 06:18:05.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:18:05.477" level="INFO">${volume_name} = 98814-volume-for-prepare</msg>
<status status="PASS" starttime="20231212 06:18:05.476" endtime="20231212 06:18:05.477"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:18:05.479" level="INFO">Running command 'ozone sh volume create /98814-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:18:07.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:18:07.914" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:18:05.477" endtime="20231212 06:18:07.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:18:07.914" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:18:07.914" endtime="20231212 06:18:07.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:18:07.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:18:07.915" endtime="20231212 06:18:07.915"/>
</kw>
<msg timestamp="20231212 06:18:07.915" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231212 06:18:05.477" endtime="20231212 06:18:07.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:18:07.915" endtime="20231212 06:18:07.916"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:18:07.918" level="INFO">Running command 'ozone sh volume info /98814-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:18:10.132" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:18:10.132" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98814-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231212 06:18:07.916" endtime="20231212 06:18:10.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:18:10.133" level="INFO">VOLUME_NOT_FOUND Volume 98814-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231212 06:18:10.133" endtime="20231212 06:18:10.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:18:10.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:18:10.134" endtime="20231212 06:18:10.134"/>
</kw>
<msg timestamp="20231212 06:18:10.134" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98814-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231212 06:18:07.916" endtime="20231212 06:18:10.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:18:10.134" endtime="20231212 06:18:10.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:18:05.474" endtime="20231212 06:18:10.135"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:18:10.136" endtime="20231212 06:18:10.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:18:10.138" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:18:12.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:18:12.763" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "16198-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231212 06:18:10.137" endtime="20231212 06:18:12.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:18:12.764" level="INFO">[ {
  "metadata" : { },
  "name" : "16198-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:16:36.989Z",
  "modificationTime" : "2023-12-12T06:16:36.989Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "50717-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:16:16.925Z",
  "modificationTime" : "2023-12-12T06:16:16.925Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-12-12T06:15:15.451Z",
  "modificationTime" : "2023-12-12T06:15:15.451Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "30175-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:15:50.784Z",
  "modificationTime" : "2023-12-12T06:15:50.784Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-12-12T06:15:40.896Z",
  "modificationTime" : "2023-12-12T06:15:40.896Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231212 06:18:12.764" endtime="20231212 06:18:12.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:18:12.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:18:12.765" endtime="20231212 06:18:12.765"/>
</kw>
<status status="PASS" starttime="20231212 06:18:10.137" endtime="20231212 06:18:12.765"/>
</kw>
<msg timestamp="20231212 06:18:12.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:18:10.137" endtime="20231212 06:18:12.765"/>
</kw>
<msg timestamp="20231212 06:18:12.766" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "16198-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231212 06:18:10.136" endtime="20231212 06:18:12.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:18:10.135" endtime="20231212 06:18:12.766"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20231212 06:18:05.433" endtime="20231212 06:18:12.768"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:19:17.240" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:19:19.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:19:19.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:17.238" endtime="20231212 06:19:19.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:19:19.639" level="INFO"/>
<status status="PASS" starttime="20231212 06:19:19.639" endtime="20231212 06:19:19.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:19:19.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:19:19.640" endtime="20231212 06:19:19.640"/>
</kw>
<status status="PASS" starttime="20231212 06:19:17.237" endtime="20231212 06:19:19.640"/>
</kw>
<msg timestamp="20231212 06:19:19.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:19:17.237" endtime="20231212 06:19:19.640"/>
</kw>
<msg timestamp="20231212 06:19:19.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:17.237" endtime="20231212 06:19:19.641"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:19:19.641" endtime="20231212 06:19:19.641"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:19:19.645" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:19:21.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:19:21.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:19.643" endtime="20231212 06:19:21.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:19:21.955" level="INFO"/>
<status status="PASS" starttime="20231212 06:19:21.955" endtime="20231212 06:19:21.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:19:21.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:19:21.955" endtime="20231212 06:19:21.956"/>
</kw>
<status status="PASS" starttime="20231212 06:19:19.642" endtime="20231212 06:19:21.956"/>
</kw>
<msg timestamp="20231212 06:19:21.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:19:19.642" endtime="20231212 06:19:21.956"/>
</kw>
<msg timestamp="20231212 06:19:21.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:19.641" endtime="20231212 06:19:21.956"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:19:21.956" endtime="20231212 06:19:21.957"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:19:21.959" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:19:26.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:19:26.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:21.958" endtime="20231212 06:19:26.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:19:26.567" level="INFO"/>
<status status="PASS" starttime="20231212 06:19:26.566" endtime="20231212 06:19:26.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:19:26.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:19:26.567" endtime="20231212 06:19:26.568"/>
</kw>
<status status="PASS" starttime="20231212 06:19:21.957" endtime="20231212 06:19:26.568"/>
</kw>
<msg timestamp="20231212 06:19:26.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:19:21.957" endtime="20231212 06:19:26.568"/>
</kw>
<msg timestamp="20231212 06:19:26.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:21.957" endtime="20231212 06:19:26.568"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:19:26.568" endtime="20231212 06:19:26.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:19:17.236" endtime="20231212 06:19:26.569"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:19:17.196" endtime="20231212 06:19:26.570"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:19:28.534" level="INFO">${random} = 68807</msg>
<status status="PASS" starttime="20231212 06:19:28.534" endtime="20231212 06:19:28.534"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:19:28.537" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-68807 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:19:32.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:19:32.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:28.535" endtime="20231212 06:19:32.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:19:32.365" level="INFO"/>
<status status="PASS" starttime="20231212 06:19:32.364" endtime="20231212 06:19:32.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:19:32.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:19:32.365" endtime="20231212 06:19:32.365"/>
</kw>
<status status="PASS" starttime="20231212 06:19:28.535" endtime="20231212 06:19:32.365"/>
</kw>
<msg timestamp="20231212 06:19:32.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:19:28.535" endtime="20231212 06:19:32.366"/>
</kw>
<msg timestamp="20231212 06:19:32.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:19:28.534" endtime="20231212 06:19:32.366"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:19:32.366" endtime="20231212 06:19:32.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:19:28.533" endtime="20231212 06:19:32.366"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231212 06:19:28.494" endtime="20231212 06:19:32.367"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="101785"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
