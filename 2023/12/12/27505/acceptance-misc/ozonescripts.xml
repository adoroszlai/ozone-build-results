<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231212 06:28:56.763" rpa="false" schemaversion="4">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:26:51.403" endtime="20231212 06:26:51.403"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231212 06:26:51.404" level="INFO">${random} = l688r5kFin</msg>
<status status="PASS" starttime="20231212 06:26:51.403" endtime="20231212 06:26:51.404"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:26:51.407" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p l688r5kFin --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:26:58.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:26:58.371" level="INFO">${output} = 2023-12-12 06:26:52,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:26:52,893 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:26:51.405" endtime="20231212 06:26:58.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:26:58.371" level="INFO">2023-12-12 06:26:52,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:26:52,893 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:26:52,893 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:26:52,959 [main] INFO freon.BaseFreonGenerator: Executing test with prefix l688r5kFin and number-of-tests 1
2023-12-12 06:26:52,984 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:26:53,988 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:26:54,989 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:26:55,639 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-12-12 06:26:55,723 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-12-12 06:26:55,989 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:26:56,312 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:26:56,520 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2023-12-12 06:26:56,989 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:26:57,990 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:26:58,017 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1526.450824, max=1526.450824, mean=1526.450824, stddev=0.0, median=1526.450824, p75=1526.450824, p95=1526.450824, p98=1526.450824, p99=1526.450824, p999=1526.450824, mean_rate=0.4412655524992699, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:26:58,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-12-12 06:26:58,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:26:58,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:26:58.371" endtime="20231212 06:26:58.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:26:58.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:26:58.372" endtime="20231212 06:26:58.372"/>
</kw>
<status status="PASS" starttime="20231212 06:26:51.405" endtime="20231212 06:26:58.372"/>
</kw>
<msg timestamp="20231212 06:26:58.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:26:51.405" endtime="20231212 06:26:58.372"/>
</kw>
<msg timestamp="20231212 06:26:58.373" level="INFO">${result} = 2023-12-12 06:26:52,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:26:52,893 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:26:51.404" endtime="20231212 06:26:58.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:26:58.373" endtime="20231212 06:26:58.373"/>
</kw>
<status status="PASS" starttime="20231212 06:26:51.404" endtime="20231212 06:26:58.373"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:26:58.377" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p l688r5kFin  2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:03.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:03.159" level="INFO">${output} = 2023-12-12 06:26:59,925 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:27:00,041 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:26:58.376" endtime="20231212 06:27:03.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:03.160" level="INFO">2023-12-12 06:26:59,925 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:27:00,041 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 06:27:00,041 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 06:27:00,102 [main] INFO freon.BaseFreonGenerator: Executing test with prefix l688r5kFin and number-of-tests 1
2023-12-12 06:27:00,148 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:27:01,150 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-12-12 06:27:01,233 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-12-12 06:27:02,150 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-12-12 06:27:02,817 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=28.102494, max=28.102494, mean=28.102494, stddev=0.0, median=28.102494, p75=28.102494, p95=28.102494, p98=28.102494, p99=28.102494, p999=28.102494, mean_rate=0.9828350173875554, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 06:27:02,818 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-12-12 06:27:02,818 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 06:27:02,818 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231212 06:27:03.159" endtime="20231212 06:27:03.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:03.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:03.160" endtime="20231212 06:27:03.160"/>
</kw>
<status status="PASS" starttime="20231212 06:26:58.375" endtime="20231212 06:27:03.161"/>
</kw>
<msg timestamp="20231212 06:27:03.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:26:58.375" endtime="20231212 06:27:03.161"/>
</kw>
<msg timestamp="20231212 06:27:03.161" level="INFO">${result} = 2023-12-12 06:26:59,925 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 06:27:00,041 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 06:26:58.374" endtime="20231212 06:27:03.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:03.161" endtime="20231212 06:27:03.161"/>
</kw>
<status status="PASS" starttime="20231212 06:26:58.373" endtime="20231212 06:27:03.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:26:51.402" endtime="20231212 06:27:03.162"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20231212 06:26:51.358" endtime="20231212 06:27:03.162"/>
</suite>
<suite id="s1-s2" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231212 06:27:04.905" endtime="20231212 06:27:04.905"/>
</kw>
<test id="s1-s2-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:04.908" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:07.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:07.118" level="INFO">${output} = PipelineID=8670ee7d-ef96-47c3-9854-83becf0799f4 is created. Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default...</msg>
<status status="PASS" starttime="20231212 06:27:04.907" endtime="20231212 06:27:07.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:07.119" level="INFO">PipelineID=8670ee7d-ef96-47c3-9854-83becf0799f4 is created. Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]</msg>
<status status="PASS" starttime="20231212 06:27:07.118" endtime="20231212 06:27:07.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:07.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:07.119" endtime="20231212 06:27:07.120"/>
</kw>
<status status="PASS" starttime="20231212 06:27:04.906" endtime="20231212 06:27:07.120"/>
</kw>
<msg timestamp="20231212 06:27:07.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:04.906" endtime="20231212 06:27:07.120"/>
</kw>
<msg timestamp="20231212 06:27:07.120" level="INFO">${output} = PipelineID=8670ee7d-ef96-47c3-9854-83becf0799f4 is created. Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default...</msg>
<status status="PASS" starttime="20231212 06:27:04.906" endtime="20231212 06:27:07.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:07.120" endtime="20231212 06:27:07.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:07.121" endtime="20231212 06:27:07.121"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:07.125" level="INFO">Running command 'echo "PipelineID=8670ee7d-ef96-47c3-9854-83becf0799f4 is created. Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:07.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:07.127" level="INFO">${output} = 8670ee7d-ef96-47c3-9854-83becf0799f4</msg>
<status status="PASS" starttime="20231212 06:27:07.123" endtime="20231212 06:27:07.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:07.128" level="INFO">8670ee7d-ef96-47c3-9854-83becf0799f4</msg>
<status status="PASS" starttime="20231212 06:27:07.127" endtime="20231212 06:27:07.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:07.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:07.128" endtime="20231212 06:27:07.128"/>
</kw>
<status status="PASS" starttime="20231212 06:27:07.122" endtime="20231212 06:27:07.129"/>
</kw>
<msg timestamp="20231212 06:27:07.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:07.122" endtime="20231212 06:27:07.129"/>
</kw>
<msg timestamp="20231212 06:27:07.129" level="INFO">${pipeline} = 8670ee7d-ef96-47c3-9854-83becf0799f4</msg>
<status status="PASS" starttime="20231212 06:27:07.121" endtime="20231212 06:27:07.129"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 06:27:07.129" level="INFO">${PIPELINE} = 8670ee7d-ef96-47c3-9854-83becf0799f4</msg>
<status status="PASS" starttime="20231212 06:27:07.129" endtime="20231212 06:27:07.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:04.905" endtime="20231212 06:27:07.129"/>
</test>
<test id="s1-s2-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:07.132" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:09.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:09.339" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN,...</msg>
<status status="PASS" starttime="20231212 06:27:07.131" endtime="20231212 06:27:09.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:09.340" level="INFO">Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]
Pipeline[ Id: fa21a110-20ff-47ca-ae3d-1671b3186639, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:bbe35253-a855-4e3e-a2e6-2a5b7f896e4b, CreationTimestamp2023-12-12T06:26:36.007Z[UTC]]</msg>
<status status="PASS" starttime="20231212 06:27:09.340" endtime="20231212 06:27:09.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:09.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:09.340" endtime="20231212 06:27:09.341"/>
</kw>
<status status="PASS" starttime="20231212 06:27:07.131" endtime="20231212 06:27:09.341"/>
</kw>
<msg timestamp="20231212 06:27:09.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:07.131" endtime="20231212 06:27:09.341"/>
</kw>
<msg timestamp="20231212 06:27:09.341" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN,...</msg>
<status status="PASS" starttime="20231212 06:27:07.130" endtime="20231212 06:27:09.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:09.341" endtime="20231212 06:27:09.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:07.130" endtime="20231212 06:27:09.342"/>
</test>
<test id="s1-s2-t3" name="List pipeline with json option" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "STANDALONE"}])'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:09.345" level="INFO">Running command 'ozone admin pipeline list --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "STANDALONE"}])' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:11.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:11.670" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20231212 06:27:09.344" endtime="20231212 06:27:11.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:11.671" level="INFO">true</msg>
<status status="PASS" starttime="20231212 06:27:11.671" endtime="20231212 06:27:11.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:11.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:11.671" endtime="20231212 06:27:11.672"/>
</kw>
<status status="PASS" starttime="20231212 06:27:09.343" endtime="20231212 06:27:11.672"/>
</kw>
<msg timestamp="20231212 06:27:11.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:09.343" endtime="20231212 06:27:11.672"/>
</kw>
<msg timestamp="20231212 06:27:11.672" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20231212 06:27:09.343" endtime="20231212 06:27:11.672"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>$output</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 06:27:11.672" endtime="20231212 06:27:11.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:09.342" endtime="20231212 06:27:11.678"/>
</test>
<test id="s1-s2-t4" name="List pipelines with explicit host" line="44">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:11.681" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:13.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:13.961" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN,...</msg>
<status status="PASS" starttime="20231212 06:27:11.680" endtime="20231212 06:27:13.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:13.962" level="INFO">Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]
Pipeline[ Id: fa21a110-20ff-47ca-ae3d-1671b3186639, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:bbe35253-a855-4e3e-a2e6-2a5b7f896e4b, CreationTimestamp2023-12-12T06:26:36.007Z[UTC]]</msg>
<status status="PASS" starttime="20231212 06:27:13.962" endtime="20231212 06:27:13.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:13.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:13.962" endtime="20231212 06:27:13.963"/>
</kw>
<status status="PASS" starttime="20231212 06:27:11.680" endtime="20231212 06:27:13.963"/>
</kw>
<msg timestamp="20231212 06:27:13.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:11.679" endtime="20231212 06:27:13.963"/>
</kw>
<msg timestamp="20231212 06:27:13.963" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN,...</msg>
<status status="PASS" starttime="20231212 06:27:11.679" endtime="20231212 06:27:13.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:13.963" endtime="20231212 06:27:13.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:11.678" endtime="20231212 06:27:13.964"/>
</test>
<test id="s1-s2-t5" name="List pipelines with explicit host and json option" line="48">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM} --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "STANDALONE"}])'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:13.967" level="INFO">Running command 'ozone admin pipeline list --scm scm --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "STANDALONE"}])' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:16.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:16.295" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20231212 06:27:13.966" endtime="20231212 06:27:16.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:16.296" level="INFO">true</msg>
<status status="PASS" starttime="20231212 06:27:16.295" endtime="20231212 06:27:16.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:16.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:16.296" endtime="20231212 06:27:16.296"/>
</kw>
<status status="PASS" starttime="20231212 06:27:13.965" endtime="20231212 06:27:16.296"/>
</kw>
<msg timestamp="20231212 06:27:16.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:13.965" endtime="20231212 06:27:16.296"/>
</kw>
<msg timestamp="20231212 06:27:16.297" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20231212 06:27:13.965" endtime="20231212 06:27:16.297"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>$output</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 06:27:16.297" endtime="20231212 06:27:16.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:13.964" endtime="20231212 06:27:16.297"/>
</test>
<test id="s1-s2-t6" name="Deactivate pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:16.301" level="INFO">Running command 'ozone admin pipeline deactivate "8670ee7d-ef96-47c3-9854-83becf0799f4" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:18.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:18.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:27:16.299" endtime="20231212 06:27:18.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:18.404" level="INFO"/>
<status status="PASS" starttime="20231212 06:27:18.404" endtime="20231212 06:27:18.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:18.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:18.404" endtime="20231212 06:27:18.405"/>
</kw>
<status status="PASS" starttime="20231212 06:27:16.299" endtime="20231212 06:27:18.405"/>
</kw>
<msg timestamp="20231212 06:27:18.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:16.299" endtime="20231212 06:27:18.405"/>
</kw>
<status status="PASS" starttime="20231212 06:27:16.298" endtime="20231212 06:27:18.405"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:18.408" level="INFO">Running command 'ozone admin pipeline list | grep "8670ee7d-ef96-47c3-9854-83becf0799f4" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:20.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:20.640" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:DORMA...</msg>
<status status="PASS" starttime="20231212 06:27:18.406" endtime="20231212 06:27:20.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:20.641" level="INFO">Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]</msg>
<status status="PASS" starttime="20231212 06:27:20.641" endtime="20231212 06:27:20.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:20.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:20.641" endtime="20231212 06:27:20.642"/>
</kw>
<status status="PASS" starttime="20231212 06:27:18.406" endtime="20231212 06:27:20.642"/>
</kw>
<msg timestamp="20231212 06:27:20.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:18.406" endtime="20231212 06:27:20.642"/>
</kw>
<msg timestamp="20231212 06:27:20.642" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:DORMA...</msg>
<status status="PASS" starttime="20231212 06:27:18.405" endtime="20231212 06:27:20.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:20.642" endtime="20231212 06:27:20.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:16.298" endtime="20231212 06:27:20.643"/>
</test>
<test id="s1-s2-t7" name="Activate pipeline" line="58">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:20.646" level="INFO">Running command 'ozone admin pipeline activate "8670ee7d-ef96-47c3-9854-83becf0799f4" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:22.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:22.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:27:20.645" endtime="20231212 06:27:22.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:22.769" level="INFO"/>
<status status="PASS" starttime="20231212 06:27:22.768" endtime="20231212 06:27:22.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:22.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:22.769" endtime="20231212 06:27:22.769"/>
</kw>
<status status="PASS" starttime="20231212 06:27:20.644" endtime="20231212 06:27:22.769"/>
</kw>
<msg timestamp="20231212 06:27:22.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:20.644" endtime="20231212 06:27:22.770"/>
</kw>
<status status="PASS" starttime="20231212 06:27:20.644" endtime="20231212 06:27:22.770"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:22.772" level="INFO">Running command 'ozone admin pipeline list | grep "8670ee7d-ef96-47c3-9854-83becf0799f4" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:25.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:25.029" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN,...</msg>
<status status="PASS" starttime="20231212 06:27:22.771" endtime="20231212 06:27:25.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:25.030" level="INFO">Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]</msg>
<status status="PASS" starttime="20231212 06:27:25.029" endtime="20231212 06:27:25.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:25.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:25.030" endtime="20231212 06:27:25.030"/>
</kw>
<status status="PASS" starttime="20231212 06:27:22.770" endtime="20231212 06:27:25.030"/>
</kw>
<msg timestamp="20231212 06:27:25.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:22.770" endtime="20231212 06:27:25.031"/>
</kw>
<msg timestamp="20231212 06:27:25.031" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:OPEN,...</msg>
<status status="PASS" starttime="20231212 06:27:22.770" endtime="20231212 06:27:25.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:25.031" endtime="20231212 06:27:25.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:20.643" endtime="20231212 06:27:25.031"/>
</test>
<test id="s1-s2-t8" name="Close pipeline" line="63">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:25.034" level="INFO">Running command 'ozone admin pipeline close "8670ee7d-ef96-47c3-9854-83becf0799f4" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:27.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:27.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 06:27:25.033" endtime="20231212 06:27:27.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:27.211" level="INFO"/>
<status status="PASS" starttime="20231212 06:27:27.210" endtime="20231212 06:27:27.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:27.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:27.211" endtime="20231212 06:27:27.211"/>
</kw>
<status status="PASS" starttime="20231212 06:27:25.033" endtime="20231212 06:27:27.212"/>
</kw>
<msg timestamp="20231212 06:27:27.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:25.033" endtime="20231212 06:27:27.212"/>
</kw>
<status status="PASS" starttime="20231212 06:27:25.032" endtime="20231212 06:27:27.212"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:27.215" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:29.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 06:27:29.509" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:CLOSE...</msg>
<status status="PASS" starttime="20231212 06:27:27.213" endtime="20231212 06:27:29.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:29.510" level="INFO">Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-12-12T06:27:07.001Z[UTC]]
Pipeline[ Id: fa21a110-20ff-47ca-ae3d-1671b3186639, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:bbe35253-a855-4e3e-a2e6-2a5b7f896e4b, CreationTimestamp2023-12-12T06:26:36.007Z[UTC]]</msg>
<status status="PASS" starttime="20231212 06:27:29.509" endtime="20231212 06:27:29.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 06:27:29.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 06:27:29.510" endtime="20231212 06:27:29.510"/>
</kw>
<status status="PASS" starttime="20231212 06:27:27.213" endtime="20231212 06:27:29.510"/>
</kw>
<msg timestamp="20231212 06:27:29.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 06:27:27.212" endtime="20231212 06:27:29.510"/>
</kw>
<msg timestamp="20231212 06:27:29.511" level="INFO">${output} = Pipeline[ Id: 8670ee7d-ef96-47c3-9854-83becf0799f4, Nodes: bbe35253-a855-4e3e-a2e6-2a5b7f896e4b(ozonescripts_datanode_1.ozonescripts_default/172.19.0.3), ReplicationConfig: STANDALONE/ONE, State:CLOSE...</msg>
<status status="PASS" starttime="20231212 06:27:27.212" endtime="20231212 06:27:29.511"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231212 06:27:29.511" endtime="20231212 06:27:29.511"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231212 06:27:29.511" endtime="20231212 06:27:29.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:25.032" endtime="20231212 06:27:29.512"/>
</test>
<test id="s1-s2-t9" name="Incomplete command" line="69">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 06:27:29.515" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 06:27:31.291" level="INFO">${rc} = 255</msg>
<msg timestamp="20231212 06:27:31.291" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20231212 06:27:29.513" endtime="20231212 06:27:31.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 06:27:31.292" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20231212 06:27:31.291" endtime="20231212 06:27:31.292"/>
</kw>
<msg timestamp="20231212 06:27:31.292" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20231212 06:27:29.513" endtime="20231212 06:27:31.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:31.292" endtime="20231212 06:27:31.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:31.293" endtime="20231212 06:27:31.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:31.293" endtime="20231212 06:27:31.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:31.293" endtime="20231212 06:27:31.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 06:27:31.294" endtime="20231212 06:27:31.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 06:27:29.512" endtime="20231212 06:27:31.294"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20231212 06:27:04.866" endtime="20231212 06:27:31.295"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="38233"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Single Node">ozonescripts.Single Node</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2" name="Pipeline">ozonescripts.Pipeline</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
