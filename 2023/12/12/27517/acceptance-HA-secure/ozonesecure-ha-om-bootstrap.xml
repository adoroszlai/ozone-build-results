<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231212 10:36:09.711" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-om-bootstrap">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:35.154" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:35.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:35.157" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:33:35.152" endtime="20231212 10:33:35.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:35.158" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:33:35.157" endtime="20231212 10:33:35.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:35.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:35.158" endtime="20231212 10:33:35.158"/>
</kw>
<status status="PASS" starttime="20231212 10:33:35.151" endtime="20231212 10:33:35.158"/>
</kw>
<msg timestamp="20231212 10:33:35.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:35.151" endtime="20231212 10:33:35.159"/>
</kw>
<msg timestamp="20231212 10:33:35.159" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:33:35.150" endtime="20231212 10:33:35.159"/>
</kw>
<msg timestamp="20231212 10:33:35.159" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:35.150" endtime="20231212 10:33:35.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:33:35.159" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:35.159" endtime="20231212 10:33:35.159"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:35.162" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:35.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:35.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:35.161" endtime="20231212 10:33:35.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:35.206" level="INFO"/>
<status status="PASS" starttime="20231212 10:33:35.205" endtime="20231212 10:33:35.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:35.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:35.206" endtime="20231212 10:33:35.206"/>
</kw>
<status status="PASS" starttime="20231212 10:33:35.161" endtime="20231212 10:33:35.207"/>
</kw>
<msg timestamp="20231212 10:33:35.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:35.160" endtime="20231212 10:33:35.207"/>
</kw>
<status status="PASS" starttime="20231212 10:33:35.160" endtime="20231212 10:33:35.207"/>
</kw>
<status status="PASS" starttime="20231212 10:33:35.160" endtime="20231212 10:33:35.207"/>
</kw>
<status status="PASS" starttime="20231212 10:33:35.149" endtime="20231212 10:33:35.207"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:33:35.148" endtime="20231212 10:33:35.207"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231212 10:33:35.106" endtime="20231212 10:33:35.208"/>
</suite>
<suite id="s1-s2" name="Data-Creation-Before-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-creation-before-om-bootstrap.robot">
<test id="s1-s2-t1" name="Volume-bucket init" line="77">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:40.194" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:40.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:40.197" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:33:40.193" endtime="20231212 10:33:40.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:40.198" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:33:40.197" endtime="20231212 10:33:40.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:40.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:40.198" endtime="20231212 10:33:40.198"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.192" endtime="20231212 10:33:40.198"/>
</kw>
<msg timestamp="20231212 10:33:40.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:40.192" endtime="20231212 10:33:40.199"/>
</kw>
<msg timestamp="20231212 10:33:40.199" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:33:40.192" endtime="20231212 10:33:40.199"/>
</kw>
<msg timestamp="20231212 10:33:40.199" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:40.192" endtime="20231212 10:33:40.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:33:40.199" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:40.199" endtime="20231212 10:33:40.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:40.202" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:40.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:40.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:40.201" endtime="20231212 10:33:40.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:40.240" level="INFO"/>
<status status="PASS" starttime="20231212 10:33:40.239" endtime="20231212 10:33:40.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:40.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:40.240" endtime="20231212 10:33:40.241"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.201" endtime="20231212 10:33:40.241"/>
</kw>
<msg timestamp="20231212 10:33:40.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:40.200" endtime="20231212 10:33:40.241"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.200" endtime="20231212 10:33:40.241"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.200" endtime="20231212 10:33:40.241"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.191" endtime="20231212 10:33:40.241"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.191" endtime="20231212 10:33:40.241"/>
</kw>
<kw name="Create volume and bucket">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${vol_res}</var>
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:40.244" level="INFO">Running command 'ozone sh volume create /vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:44.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:44.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:40.243" endtime="20231212 10:33:44.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:44.580" level="INFO"/>
<status status="PASS" starttime="20231212 10:33:44.579" endtime="20231212 10:33:44.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:44.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:44.580" endtime="20231212 10:33:44.581"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.242" endtime="20231212 10:33:44.581"/>
</kw>
<msg timestamp="20231212 10:33:44.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:40.242" endtime="20231212 10:33:44.581"/>
</kw>
<msg timestamp="20231212 10:33:44.581" level="INFO">${vol_res} = </msg>
<status status="PASS" starttime="20231212 10:33:40.242" endtime="20231212 10:33:44.581"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${vol_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:33:44.582" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:33:44.581" endtime="20231212 10:33:44.582"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_res}</var>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:44.585" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:48.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:48.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:44.583" endtime="20231212 10:33:48.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:48.741" level="INFO"/>
<status status="PASS" starttime="20231212 10:33:48.741" endtime="20231212 10:33:48.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:48.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:48.742" endtime="20231212 10:33:48.742"/>
</kw>
<status status="PASS" starttime="20231212 10:33:44.583" endtime="20231212 10:33:48.743"/>
</kw>
<msg timestamp="20231212 10:33:48.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:44.583" endtime="20231212 10:33:48.743"/>
</kw>
<msg timestamp="20231212 10:33:48.743" level="INFO">${bucket_res} = </msg>
<status status="PASS" starttime="20231212 10:33:44.582" endtime="20231212 10:33:48.743"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${bucket_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:33:48.743" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:33:48.743" endtime="20231212 10:33:48.743"/>
</kw>
<status status="PASS" starttime="20231212 10:33:40.241" endtime="20231212 10:33:48.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:33:40.190" endtime="20231212 10:33:48.744"/>
</test>
<test id="s1-s2-t2" name="Create 100 metadata keys under /vol1/bucket1" line="80">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:48.749" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:48.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:48.752" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:33:48.748" endtime="20231212 10:33:48.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:48.752" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:33:48.752" endtime="20231212 10:33:48.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:48.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:48.753" endtime="20231212 10:33:48.753"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.747" endtime="20231212 10:33:48.753"/>
</kw>
<msg timestamp="20231212 10:33:48.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:48.747" endtime="20231212 10:33:48.753"/>
</kw>
<msg timestamp="20231212 10:33:48.753" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:33:48.747" endtime="20231212 10:33:48.753"/>
</kw>
<msg timestamp="20231212 10:33:48.754" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:48.746" endtime="20231212 10:33:48.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:33:48.754" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:48.754" endtime="20231212 10:33:48.754"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:48.757" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:48.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:48.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:48.756" endtime="20231212 10:33:48.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:48.795" level="INFO"/>
<status status="PASS" starttime="20231212 10:33:48.795" endtime="20231212 10:33:48.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:48.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:48.795" endtime="20231212 10:33:48.796"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.755" endtime="20231212 10:33:48.796"/>
</kw>
<msg timestamp="20231212 10:33:48.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:48.755" endtime="20231212 10:33:48.796"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.755" endtime="20231212 10:33:48.796"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.754" endtime="20231212 10:33:48.796"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.746" endtime="20231212 10:33:48.796"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.745" endtime="20231212 10:33:48.796"/>
</kw>
<kw name="Create metadata keys">
<arg>10</arg>
<arg>100</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${freon_res}</var>
<arg>ozone freon omkg -t ${threads} -n ${key_num} -v ${volume} -b ${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:48.800" level="INFO">Running command 'ozone freon omkg -t 10 -n 100 -v vol1 -b bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:56.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:56.338" level="INFO">${output} = 2023-12-12 10:33:50,996 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:33:51,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:33:48.798" endtime="20231212 10:33:56.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:56.339" level="INFO">2023-12-12 10:33:50,996 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:33:51,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-12-12 10:33:51,100 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-12-12 10:33:51,209 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jnfetdg9wg and number-of-tests 100
2023-12-12 10:33:51,256 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 10:33:52,257 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 10:33:52,326 [main] INFO client.ClientTrustManager: Loading certificates for client.
2023-12-12 10:33:53,258 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-12-12 10:33:54,259 [Thread-5] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2023-12-12 10:33:55,260 [Thread-5] INFO freon.ProgressBar: Progress: 77.00 % (77 out of 100)
2023-12-12 10:33:56,260 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-12-12 10:33:56,291 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=98.188109, max=803.301652, mean=263.6481967940191, stddev=148.25580000278202, median=212.369898, p75=266.405865, p95=681.759386, p98=732.694125, p99=770.063116, p999=803.301652, mean_rate=29.53511409660603, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-12-12 10:33:56,291 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-12-12 10:33:56,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-12-12 10:33:56,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231212 10:33:56.339" endtime="20231212 10:33:56.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:56.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:56.340" endtime="20231212 10:33:56.340"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.798" endtime="20231212 10:33:56.340"/>
</kw>
<msg timestamp="20231212 10:33:56.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:48.798" endtime="20231212 10:33:56.340"/>
</kw>
<msg timestamp="20231212 10:33:56.341" level="INFO">${freon_res} = 2023-12-12 10:33:50,996 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-12-12 10:33:51,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231212 10:33:48.797" endtime="20231212 10:33:56.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${freon_res}</arg>
<arg>Successful executions: ${key_num}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:33:56.341" endtime="20231212 10:33:56.341"/>
</kw>
<status status="PASS" starttime="20231212 10:33:48.797" endtime="20231212 10:33:56.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:33:48.745" endtime="20231212 10:33:56.341"/>
</test>
<test id="s1-s2-t3" name="Create snapshot 'snap1'" line="83">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:56.347" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:56.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:56.349" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:33:56.345" endtime="20231212 10:33:56.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:56.350" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:33:56.349" endtime="20231212 10:33:56.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:56.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:56.350" endtime="20231212 10:33:56.351"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.344" endtime="20231212 10:33:56.351"/>
</kw>
<msg timestamp="20231212 10:33:56.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:56.344" endtime="20231212 10:33:56.351"/>
</kw>
<msg timestamp="20231212 10:33:56.351" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:33:56.344" endtime="20231212 10:33:56.351"/>
</kw>
<msg timestamp="20231212 10:33:56.351" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:56.343" endtime="20231212 10:33:56.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:33:56.352" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:33:56.351" endtime="20231212 10:33:56.352"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:56.355" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:33:56.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:33:56.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:56.353" endtime="20231212 10:33:56.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:33:56.386" level="INFO"/>
<status status="PASS" starttime="20231212 10:33:56.385" endtime="20231212 10:33:56.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:33:56.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:33:56.386" endtime="20231212 10:33:56.387"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.353" endtime="20231212 10:33:56.387"/>
</kw>
<msg timestamp="20231212 10:33:56.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:56.353" endtime="20231212 10:33:56.387"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.352" endtime="20231212 10:33:56.387"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.352" endtime="20231212 10:33:56.387"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.343" endtime="20231212 10:33:56.387"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.343" endtime="20231212 10:33:56.387"/>
</kw>
<kw name="Create snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<kw name="Execute" library="os">
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:33:56.390" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:33:56.389" endtime="20231212 10:34:00.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.500" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:00.499" endtime="20231212 10:34:00.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.500" endtime="20231212 10:34:00.501"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.389" endtime="20231212 10:34:00.501"/>
</kw>
<msg timestamp="20231212 10:34:00.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:33:56.388" endtime="20231212 10:34:00.501"/>
</kw>
<msg timestamp="20231212 10:34:00.501" level="INFO">${snap_res} = </msg>
<status status="PASS" starttime="20231212 10:33:56.388" endtime="20231212 10:34:00.501"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:34:00.502" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:34:00.501" endtime="20231212 10:34:00.502"/>
</kw>
<status status="PASS" starttime="20231212 10:33:56.387" endtime="20231212 10:34:00.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:33:56.342" endtime="20231212 10:34:00.502"/>
</test>
<test id="s1-s2-t4" name="Create tmp file to be used for key creation" line="86">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.508" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.511" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:34:00.506" endtime="20231212 10:34:00.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.511" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:34:00.511" endtime="20231212 10:34:00.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.511" endtime="20231212 10:34:00.512"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.505" endtime="20231212 10:34:00.512"/>
</kw>
<msg timestamp="20231212 10:34:00.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.505" endtime="20231212 10:34:00.512"/>
</kw>
<msg timestamp="20231212 10:34:00.512" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:34:00.505" endtime="20231212 10:34:00.512"/>
</kw>
<msg timestamp="20231212 10:34:00.513" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:00.504" endtime="20231212 10:34:00.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:34:00.513" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:00.513" endtime="20231212 10:34:00.513"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.516" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:00.515" endtime="20231212 10:34:00.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.561" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:00.561" endtime="20231212 10:34:00.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.561" endtime="20231212 10:34:00.562"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.515" endtime="20231212 10:34:00.562"/>
</kw>
<msg timestamp="20231212 10:34:00.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.514" endtime="20231212 10:34:00.562"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.514" endtime="20231212 10:34:00.562"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.513" endtime="20231212 10:34:00.563"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.504" endtime="20231212 10:34:00.563"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.503" endtime="20231212 10:34:00.563"/>
</kw>
<kw name="Create tmp file">
<arg>${TMP_FILE}</arg>
<kw name="Execute" library="os">
<var>${create_res}</var>
<arg>touch ${file_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.566" level="INFO">Running command 'touch tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:00.564" endtime="20231212 10:34:00.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.569" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:00.568" endtime="20231212 10:34:00.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.569" endtime="20231212 10:34:00.569"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.564" endtime="20231212 10:34:00.569"/>
</kw>
<msg timestamp="20231212 10:34:00.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.564" endtime="20231212 10:34:00.569"/>
</kw>
<msg timestamp="20231212 10:34:00.570" level="INFO">${create_res} = </msg>
<status status="PASS" starttime="20231212 10:34:00.563" endtime="20231212 10:34:00.570"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${create_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:34:00.570" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:34:00.570" endtime="20231212 10:34:00.570"/>
</kw>
<kw name="Execute" library="os">
<var>${ls_grep_res}</var>
<arg>ls -lah | grep '${file_name}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.573" level="INFO">Running command 'ls -lah | grep 'tmp.txt' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.575" level="INFO">${output} = -rw-r--r--  1 hadoop hadoop    0 Dec 12 10:34 tmp.txt</msg>
<status status="PASS" starttime="20231212 10:34:00.571" endtime="20231212 10:34:00.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.576" level="INFO">-rw-r--r--  1 hadoop hadoop    0 Dec 12 10:34 tmp.txt</msg>
<status status="PASS" starttime="20231212 10:34:00.576" endtime="20231212 10:34:00.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.576" endtime="20231212 10:34:00.577"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.571" endtime="20231212 10:34:00.577"/>
</kw>
<msg timestamp="20231212 10:34:00.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.571" endtime="20231212 10:34:00.577"/>
</kw>
<msg timestamp="20231212 10:34:00.577" level="INFO">${ls_grep_res} = -rw-r--r--  1 hadoop hadoop    0 Dec 12 10:34 tmp.txt</msg>
<status status="PASS" starttime="20231212 10:34:00.570" endtime="20231212 10:34:00.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${ls_grep_res}</arg>
<arg>${file_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:34:00.577" endtime="20231212 10:34:00.578"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.563" endtime="20231212 10:34:00.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:34:00.503" endtime="20231212 10:34:00.578"/>
</test>
<test id="s1-s2-t5" name="Create 2 actual keys with prefix 'sn', key contents the same as the key name" line="89">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.584" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.586" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:34:00.582" endtime="20231212 10:34:00.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.587" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:34:00.586" endtime="20231212 10:34:00.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.587" endtime="20231212 10:34:00.587"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.582" endtime="20231212 10:34:00.587"/>
</kw>
<msg timestamp="20231212 10:34:00.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.581" endtime="20231212 10:34:00.588"/>
</kw>
<msg timestamp="20231212 10:34:00.588" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:34:00.581" endtime="20231212 10:34:00.588"/>
</kw>
<msg timestamp="20231212 10:34:00.588" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:00.580" endtime="20231212 10:34:00.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:34:00.588" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:00.588" endtime="20231212 10:34:00.588"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.592" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:00.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:00.590" endtime="20231212 10:34:00.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.628" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:00.628" endtime="20231212 10:34:00.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.628" endtime="20231212 10:34:00.629"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.590" endtime="20231212 10:34:00.629"/>
</kw>
<msg timestamp="20231212 10:34:00.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.589" endtime="20231212 10:34:00.629"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.589" endtime="20231212 10:34:00.629"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.589" endtime="20231212 10:34:00.629"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.580" endtime="20231212 10:34:00.629"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.579" endtime="20231212 10:34:00.629"/>
</kw>
<kw name="Create actual keys">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<arg>${TMP_FILE}</arg>
<kw name="Create a key and set contents same as the keyName">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_1}</arg>
<arg>${tmp_file}</arg>
<kw name="Execute" library="os">
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.633" level="INFO">Running command 'echo "sn/key1" &gt; tmp.txt'.</msg>
<msg timestamp="20231212 10:34:00.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:00.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:00.632" endtime="20231212 10:34:00.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:00.635" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:00.635" endtime="20231212 10:34:00.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:00.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:00.636" endtime="20231212 10:34:00.636"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.632" endtime="20231212 10:34:00.636"/>
</kw>
<msg timestamp="20231212 10:34:00.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.631" endtime="20231212 10:34:00.636"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.631" endtime="20231212 10:34:00.636"/>
</kw>
<kw name="Execute" library="os">
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:00.639" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key1 tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:07.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:07.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:00.638" endtime="20231212 10:34:07.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:07.506" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:07.505" endtime="20231212 10:34:07.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:07.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:07.506" endtime="20231212 10:34:07.506"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.637" endtime="20231212 10:34:07.506"/>
</kw>
<msg timestamp="20231212 10:34:07.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:00.637" endtime="20231212 10:34:07.507"/>
</kw>
<msg timestamp="20231212 10:34:07.507" level="INFO">${key_res} = </msg>
<status status="PASS" starttime="20231212 10:34:00.637" endtime="20231212 10:34:07.507"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:34:07.507" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:34:07.507" endtime="20231212 10:34:07.507"/>
</kw>
<kw name="Execute" library="os">
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:07.510" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:13.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:13.941" level="INFO">${output} = sn/key1</msg>
<status status="PASS" starttime="20231212 10:34:07.509" endtime="20231212 10:34:13.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:13.942" level="INFO">sn/key1</msg>
<status status="PASS" starttime="20231212 10:34:13.941" endtime="20231212 10:34:13.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:13.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:13.943" endtime="20231212 10:34:13.943"/>
</kw>
<status status="PASS" starttime="20231212 10:34:07.508" endtime="20231212 10:34:13.944"/>
</kw>
<msg timestamp="20231212 10:34:13.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:07.508" endtime="20231212 10:34:13.944"/>
</kw>
<msg timestamp="20231212 10:34:13.944" level="INFO">${key_cat_res} = sn/key1</msg>
<status status="PASS" starttime="20231212 10:34:07.507" endtime="20231212 10:34:13.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:34:13.944" endtime="20231212 10:34:13.945"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.630" endtime="20231212 10:34:13.945"/>
</kw>
<kw name="Create a key and set contents same as the keyName">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_2}</arg>
<arg>${tmp_file}</arg>
<kw name="Execute" library="os">
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:13.949" level="INFO">Running command 'echo "sn/key2" &gt; tmp.txt'.</msg>
<msg timestamp="20231212 10:34:13.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:13.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:13.947" endtime="20231212 10:34:13.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:13.952" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:13.951" endtime="20231212 10:34:13.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:13.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:13.952" endtime="20231212 10:34:13.952"/>
</kw>
<status status="PASS" starttime="20231212 10:34:13.947" endtime="20231212 10:34:13.953"/>
</kw>
<msg timestamp="20231212 10:34:13.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:13.947" endtime="20231212 10:34:13.953"/>
</kw>
<status status="PASS" starttime="20231212 10:34:13.946" endtime="20231212 10:34:13.953"/>
</kw>
<kw name="Execute" library="os">
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:13.956" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key2 tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:19.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:19.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:13.955" endtime="20231212 10:34:19.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:19.878" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:19.878" endtime="20231212 10:34:19.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:19.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:19.879" endtime="20231212 10:34:19.879"/>
</kw>
<status status="PASS" starttime="20231212 10:34:13.954" endtime="20231212 10:34:19.880"/>
</kw>
<msg timestamp="20231212 10:34:19.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:13.954" endtime="20231212 10:34:19.880"/>
</kw>
<msg timestamp="20231212 10:34:19.880" level="INFO">${key_res} = </msg>
<status status="PASS" starttime="20231212 10:34:13.953" endtime="20231212 10:34:19.880"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:34:19.880" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:34:19.880" endtime="20231212 10:34:19.880"/>
</kw>
<kw name="Execute" library="os">
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:19.884" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:25.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:25.794" level="INFO">${output} = sn/key2</msg>
<status status="PASS" starttime="20231212 10:34:19.882" endtime="20231212 10:34:25.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:25.795" level="INFO">sn/key2</msg>
<status status="PASS" starttime="20231212 10:34:25.794" endtime="20231212 10:34:25.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:25.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:25.795" endtime="20231212 10:34:25.795"/>
</kw>
<status status="PASS" starttime="20231212 10:34:19.882" endtime="20231212 10:34:25.796"/>
</kw>
<msg timestamp="20231212 10:34:25.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:19.881" endtime="20231212 10:34:25.796"/>
</kw>
<msg timestamp="20231212 10:34:25.796" level="INFO">${key_cat_res} = sn/key2</msg>
<status status="PASS" starttime="20231212 10:34:19.881" endtime="20231212 10:34:25.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:34:25.796" endtime="20231212 10:34:25.797"/>
</kw>
<status status="PASS" starttime="20231212 10:34:13.945" endtime="20231212 10:34:25.797"/>
</kw>
<status status="PASS" starttime="20231212 10:34:00.630" endtime="20231212 10:34:25.797"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:34:00.579" endtime="20231212 10:34:25.797"/>
</test>
<test id="s1-s2-t6" name="Create snapshot 'snap2'" line="92">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:25.802" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:25.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:25.804" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:34:25.800" endtime="20231212 10:34:25.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:25.805" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:34:25.804" endtime="20231212 10:34:25.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:25.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:25.805" endtime="20231212 10:34:25.806"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.800" endtime="20231212 10:34:25.806"/>
</kw>
<msg timestamp="20231212 10:34:25.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:25.800" endtime="20231212 10:34:25.806"/>
</kw>
<msg timestamp="20231212 10:34:25.806" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:34:25.799" endtime="20231212 10:34:25.806"/>
</kw>
<msg timestamp="20231212 10:34:25.806" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:25.799" endtime="20231212 10:34:25.806"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:34:25.807" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:25.806" endtime="20231212 10:34:25.807"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:25.810" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:25.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:25.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:25.808" endtime="20231212 10:34:25.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:25.863" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:25.862" endtime="20231212 10:34:25.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:25.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:25.863" endtime="20231212 10:34:25.863"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.808" endtime="20231212 10:34:25.864"/>
</kw>
<msg timestamp="20231212 10:34:25.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:25.808" endtime="20231212 10:34:25.864"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.807" endtime="20231212 10:34:25.864"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.807" endtime="20231212 10:34:25.864"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.798" endtime="20231212 10:34:25.864"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.798" endtime="20231212 10:34:25.864"/>
</kw>
<kw name="Create snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<kw name="Execute" library="os">
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:25.867" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:30.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:30.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:25.866" endtime="20231212 10:34:30.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:30.018" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:30.018" endtime="20231212 10:34:30.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:30.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:30.019" endtime="20231212 10:34:30.019"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.866" endtime="20231212 10:34:30.019"/>
</kw>
<msg timestamp="20231212 10:34:30.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:25.865" endtime="20231212 10:34:30.019"/>
</kw>
<msg timestamp="20231212 10:34:30.020" level="INFO">${snap_res} = </msg>
<status status="PASS" starttime="20231212 10:34:25.865" endtime="20231212 10:34:30.020"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231212 10:34:30.020" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231212 10:34:30.020" endtime="20231212 10:34:30.020"/>
</kw>
<status status="PASS" starttime="20231212 10:34:25.864" endtime="20231212 10:34:30.020"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:34:25.797" endtime="20231212 10:34:30.020"/>
</test>
<test id="s1-s2-t7" name="Cleanup tmp file" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:30.025" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:30.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:30.027" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:34:30.024" endtime="20231212 10:34:30.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:30.028" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:34:30.028" endtime="20231212 10:34:30.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:30.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:30.028" endtime="20231212 10:34:30.029"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.023" endtime="20231212 10:34:30.029"/>
</kw>
<msg timestamp="20231212 10:34:30.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:30.023" endtime="20231212 10:34:30.029"/>
</kw>
<msg timestamp="20231212 10:34:30.029" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:34:30.023" endtime="20231212 10:34:30.029"/>
</kw>
<msg timestamp="20231212 10:34:30.029" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:30.022" endtime="20231212 10:34:30.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:34:30.030" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:34:30.030" endtime="20231212 10:34:30.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:30.033" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:30.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:30.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:30.031" endtime="20231212 10:34:30.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:30.057" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:30.057" endtime="20231212 10:34:30.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:30.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:30.057" endtime="20231212 10:34:30.058"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.031" endtime="20231212 10:34:30.058"/>
</kw>
<msg timestamp="20231212 10:34:30.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:30.031" endtime="20231212 10:34:30.058"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.030" endtime="20231212 10:34:30.058"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.030" endtime="20231212 10:34:30.058"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.022" endtime="20231212 10:34:30.058"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.021" endtime="20231212 10:34:30.058"/>
</kw>
<kw name="Delete tmp file">
<arg>${TMP_FILE}</arg>
<kw name="Execute" library="os">
<arg>rm ${file_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:30.061" level="INFO">Running command 'rm tmp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:30.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:30.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:34:30.060" endtime="20231212 10:34:30.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:30.064" level="INFO"/>
<status status="PASS" starttime="20231212 10:34:30.064" endtime="20231212 10:34:30.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:30.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:30.064" endtime="20231212 10:34:30.064"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.060" endtime="20231212 10:34:30.065"/>
</kw>
<msg timestamp="20231212 10:34:30.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:30.059" endtime="20231212 10:34:30.065"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.059" endtime="20231212 10:34:30.065"/>
</kw>
<kw name="Execute" library="os">
<var>${file_exists}</var>
<arg>[[ -f ${file_name} ]] &amp;&amp; echo "File exists" || echo "File doesn't exist"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:34:30.067" level="INFO">Running command '[[ -f tmp.txt ]] &amp;&amp; echo "File exists" || echo "File doesn't exist" 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:34:30.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:34:30.068" level="INFO">${output} = File doesn't exist</msg>
<status status="PASS" starttime="20231212 10:34:30.066" endtime="20231212 10:34:30.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:34:30.069" level="INFO">File doesn't exist</msg>
<status status="PASS" starttime="20231212 10:34:30.069" endtime="20231212 10:34:30.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:34:30.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:34:30.069" endtime="20231212 10:34:30.070"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.066" endtime="20231212 10:34:30.070"/>
</kw>
<msg timestamp="20231212 10:34:30.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:34:30.065" endtime="20231212 10:34:30.070"/>
</kw>
<msg timestamp="20231212 10:34:30.070" level="INFO">${file_exists} = File doesn't exist</msg>
<status status="PASS" starttime="20231212 10:34:30.065" endtime="20231212 10:34:30.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file_exists}</arg>
<arg>File doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:34:30.070" endtime="20231212 10:34:30.071"/>
</kw>
<status status="PASS" starttime="20231212 10:34:30.059" endtime="20231212 10:34:30.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:34:30.021" endtime="20231212 10:34:30.071"/>
</test>
<doc>Smoke test for creating data needed for om bootstrap load test.</doc>
<status status="PASS" starttime="20231212 10:33:40.147" endtime="20231212 10:34:30.072"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:00.421" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:00.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:00.424" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:35:00.419" endtime="20231212 10:35:00.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:00.425" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:35:00.425" endtime="20231212 10:35:00.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:00.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:00.426" endtime="20231212 10:35:00.426"/>
</kw>
<status status="PASS" starttime="20231212 10:35:00.418" endtime="20231212 10:35:00.426"/>
</kw>
<msg timestamp="20231212 10:35:00.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:00.418" endtime="20231212 10:35:00.427"/>
</kw>
<msg timestamp="20231212 10:35:00.427" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:35:00.417" endtime="20231212 10:35:00.427"/>
</kw>
<msg timestamp="20231212 10:35:00.427" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:00.416" endtime="20231212 10:35:00.427"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:35:00.428" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:00.428" endtime="20231212 10:35:00.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:00.432" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:00.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:00.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:35:00.430" endtime="20231212 10:35:00.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:00.456" level="INFO"/>
<status status="PASS" starttime="20231212 10:35:00.455" endtime="20231212 10:35:00.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:00.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:00.456" endtime="20231212 10:35:00.457"/>
</kw>
<status status="PASS" starttime="20231212 10:35:00.430" endtime="20231212 10:35:00.457"/>
</kw>
<msg timestamp="20231212 10:35:00.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:00.429" endtime="20231212 10:35:00.457"/>
</kw>
<status status="PASS" starttime="20231212 10:35:00.429" endtime="20231212 10:35:00.457"/>
</kw>
<status status="PASS" starttime="20231212 10:35:00.428" endtime="20231212 10:35:00.457"/>
</kw>
<status status="PASS" starttime="20231212 10:35:00.415" endtime="20231212 10:35:00.457"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231212 10:35:00.414" endtime="20231212 10:35:00.457"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231212 10:35:00.353" endtime="20231212 10:35:00.458"/>
</suite>
<suite id="s1-s4" name="Data-Validation-After-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-validation-after-om-bootstrap.robot">
<test id="s1-s4-t1" name="Check number of checkpoints made" line="85">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:05.761" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:05.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:05.763" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:35:05.759" endtime="20231212 10:35:05.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:05.764" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:35:05.763" endtime="20231212 10:35:05.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:05.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:05.764" endtime="20231212 10:35:05.765"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.759" endtime="20231212 10:35:05.765"/>
</kw>
<msg timestamp="20231212 10:35:05.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:05.759" endtime="20231212 10:35:05.765"/>
</kw>
<msg timestamp="20231212 10:35:05.765" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:35:05.758" endtime="20231212 10:35:05.765"/>
</kw>
<msg timestamp="20231212 10:35:05.765" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:05.758" endtime="20231212 10:35:05.765"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:35:05.766" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:05.765" endtime="20231212 10:35:05.766"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:05.769" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:05.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:05.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:35:05.767" endtime="20231212 10:35:05.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:05.788" level="INFO"/>
<status status="PASS" starttime="20231212 10:35:05.788" endtime="20231212 10:35:05.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:05.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:05.788" endtime="20231212 10:35:05.789"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.767" endtime="20231212 10:35:05.789"/>
</kw>
<msg timestamp="20231212 10:35:05.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:05.767" endtime="20231212 10:35:05.789"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.766" endtime="20231212 10:35:05.789"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.766" endtime="20231212 10:35:05.789"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.758" endtime="20231212 10:35:05.789"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.757" endtime="20231212 10:35:05.789"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Number of checkpoints equals 2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Number of checkpoints equals 2">
<kw name="Execute" library="os">
<var>${checkpoints}</var>
<arg>ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:05.793" level="INFO">Running command 'ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:05.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:05.797" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231212 10:35:05.792" endtime="20231212 10:35:05.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:05.797" level="INFO">2</msg>
<status status="PASS" starttime="20231212 10:35:05.797" endtime="20231212 10:35:05.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:05.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:05.798" endtime="20231212 10:35:05.798"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.791" endtime="20231212 10:35:05.798"/>
</kw>
<msg timestamp="20231212 10:35:05.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:05.791" endtime="20231212 10:35:05.798"/>
</kw>
<msg timestamp="20231212 10:35:05.799" level="INFO">${checkpoints} = 2</msg>
<status status="PASS" starttime="20231212 10:35:05.791" endtime="20231212 10:35:05.799"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${checkpoints} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:35:05.799" endtime="20231212 10:35:05.799"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.790" endtime="20231212 10:35:05.799"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.790" endtime="20231212 10:35:05.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:35:05.757" endtime="20231212 10:35:05.800"/>
</test>
<test id="s1-s4-t2" name="Check current leader and transfer leadership to 'om3'" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:05.805" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:05.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:05.807" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:35:05.803" endtime="20231212 10:35:05.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:05.808" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:35:05.808" endtime="20231212 10:35:05.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:05.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:05.808" endtime="20231212 10:35:05.809"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.803" endtime="20231212 10:35:05.809"/>
</kw>
<msg timestamp="20231212 10:35:05.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:05.803" endtime="20231212 10:35:05.809"/>
</kw>
<msg timestamp="20231212 10:35:05.809" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:35:05.802" endtime="20231212 10:35:05.809"/>
</kw>
<msg timestamp="20231212 10:35:05.809" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:05.802" endtime="20231212 10:35:05.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:35:05.810" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:05.809" endtime="20231212 10:35:05.810"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:05.813" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:05.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:05.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:35:05.812" endtime="20231212 10:35:05.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:05.831" level="INFO"/>
<status status="PASS" starttime="20231212 10:35:05.831" endtime="20231212 10:35:05.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:05.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:05.831" endtime="20231212 10:35:05.832"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.811" endtime="20231212 10:35:05.832"/>
</kw>
<msg timestamp="20231212 10:35:05.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:05.811" endtime="20231212 10:35:05.832"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.810" endtime="20231212 10:35:05.832"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.810" endtime="20231212 10:35:05.832"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.802" endtime="20231212 10:35:05.832"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.801" endtime="20231212 10:35:05.832"/>
</kw>
<kw name="Check current leader is different than OM">
<arg>${BOOTSTRAPPED_OM}</arg>
<kw name="Execute" library="os">
<var>${leader}</var>
<arg>ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:05.835" level="INFO">Running command 'ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:09.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:09.555" level="INFO">${output} = om1 </msg>
<status status="PASS" starttime="20231212 10:35:05.834" endtime="20231212 10:35:09.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:09.557" level="INFO">om1 </msg>
<status status="PASS" starttime="20231212 10:35:09.555" endtime="20231212 10:35:09.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:09.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:09.557" endtime="20231212 10:35:09.557"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.833" endtime="20231212 10:35:09.558"/>
</kw>
<msg timestamp="20231212 10:35:09.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:05.833" endtime="20231212 10:35:09.558"/>
</kw>
<msg timestamp="20231212 10:35:09.558" level="INFO">${leader} = om1 </msg>
<status status="PASS" starttime="20231212 10:35:05.833" endtime="20231212 10:35:09.558"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${leader}</arg>
<arg>${om}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:09.558" endtime="20231212 10:35:09.558"/>
</kw>
<status status="PASS" starttime="20231212 10:35:05.832" endtime="20231212 10:35:09.558"/>
</kw>
<kw name="Transfer leadership to OM">
<arg>${BOOTSTRAPPED_OM}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -n ${new_leader}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:09.561" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -n om3 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:18.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:18.726" level="INFO">${output} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20231212 10:35:09.560" endtime="20231212 10:35:18.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:18.727" level="INFO">Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20231212 10:35:18.727" endtime="20231212 10:35:18.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:18.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:18.727" endtime="20231212 10:35:18.728"/>
</kw>
<status status="PASS" starttime="20231212 10:35:09.560" endtime="20231212 10:35:18.728"/>
</kw>
<msg timestamp="20231212 10:35:18.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:09.559" endtime="20231212 10:35:18.728"/>
</kw>
<msg timestamp="20231212 10:35:18.728" level="INFO">${result} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20231212 10:35:09.559" endtime="20231212 10:35:18.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:18.728" endtime="20231212 10:35:18.729"/>
</kw>
<status status="PASS" starttime="20231212 10:35:09.559" endtime="20231212 10:35:18.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:35:05.800" endtime="20231212 10:35:18.729"/>
</test>
<test id="s1-s4-t3" name="Snapshots exist on 'om3'" line="92">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:18.733" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:18.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:18.736" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:35:18.732" endtime="20231212 10:35:18.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:18.737" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:35:18.736" endtime="20231212 10:35:18.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:18.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:18.737" endtime="20231212 10:35:18.737"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.732" endtime="20231212 10:35:18.737"/>
</kw>
<msg timestamp="20231212 10:35:18.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:18.731" endtime="20231212 10:35:18.737"/>
</kw>
<msg timestamp="20231212 10:35:18.738" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:35:18.731" endtime="20231212 10:35:18.738"/>
</kw>
<msg timestamp="20231212 10:35:18.738" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:18.731" endtime="20231212 10:35:18.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:35:18.738" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:18.738" endtime="20231212 10:35:18.738"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:18.741" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:18.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:18.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:35:18.740" endtime="20231212 10:35:18.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:18.756" level="INFO"/>
<status status="PASS" starttime="20231212 10:35:18.755" endtime="20231212 10:35:18.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:18.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:18.756" endtime="20231212 10:35:18.756"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.739" endtime="20231212 10:35:18.756"/>
</kw>
<msg timestamp="20231212 10:35:18.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:18.739" endtime="20231212 10:35:18.757"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.739" endtime="20231212 10:35:18.757"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.738" endtime="20231212 10:35:18.757"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.730" endtime="20231212 10:35:18.757"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.730" endtime="20231212 10:35:18.757"/>
</kw>
<kw name="Check snapshots on OM">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<kw name="Execute" library="os">
<var>${snap_list}</var>
<arg>ozone sh snapshot list /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:18.760" level="INFO">Running command 'ozone sh snapshot list /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:23.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:23.369" level="INFO">${output} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1702377240325,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "b99e5a20-19e6-4da2-9d37-a14989d...</msg>
<status status="PASS" starttime="20231212 10:35:18.759" endtime="20231212 10:35:23.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:23.370" level="INFO">[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1702377240325,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "b99e5a20-19e6-4da2-9d37-a14989d910a4",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-b99e5a20-19e6-4da2-9d37-a14989d910a4",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1702377269887,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e2f0e719-6a90-4032-89f9-c97836fbc2ca",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-e2f0e719-6a90-4032-89f9-c97836fbc2ca",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]</msg>
<status status="PASS" starttime="20231212 10:35:23.369" endtime="20231212 10:35:23.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:23.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:23.370" endtime="20231212 10:35:23.371"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.758" endtime="20231212 10:35:23.371"/>
</kw>
<msg timestamp="20231212 10:35:23.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:18.758" endtime="20231212 10:35:23.371"/>
</kw>
<msg timestamp="20231212 10:35:23.371" level="INFO">${snap_list} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1702377240325,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "b99e5a20-19e6-4da2-9d37-a14989d...</msg>
<status status="PASS" starttime="20231212 10:35:18.758" endtime="20231212 10:35:23.371"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${snap_list}</arg>
<arg>[ ]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:23.372" endtime="20231212 10:35:23.372"/>
</kw>
<kw name="Execute" library="os">
<var>${snap1_res}</var>
<arg>echo "${snap_list}" | grep ${snap_1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:23.375" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1702377240325,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "b99e5a20-19e6-4da2-9d37-a14989d910a4",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-b99e5a20-19e6-4da2-9d37-a14989d910a4",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1702377269887,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e2f0e719-6a90-4032-89f9-c97836fbc2ca",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-e2f0e719-6a90-4032-89f9-c97836fbc2ca",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:23.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:23.378" level="INFO">${output} =   name : snap1,</msg>
<status status="PASS" starttime="20231212 10:35:23.374" endtime="20231212 10:35:23.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:23.379" level="INFO">  name : snap1,</msg>
<status status="PASS" starttime="20231212 10:35:23.379" endtime="20231212 10:35:23.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:23.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:23.379" endtime="20231212 10:35:23.380"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.373" endtime="20231212 10:35:23.380"/>
</kw>
<msg timestamp="20231212 10:35:23.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:23.373" endtime="20231212 10:35:23.380"/>
</kw>
<msg timestamp="20231212 10:35:23.380" level="INFO">${snap1_res} =   name : snap1,</msg>
<status status="PASS" starttime="20231212 10:35:23.372" endtime="20231212 10:35:23.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${snap1_res}</arg>
<arg>${snap_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:23.381" endtime="20231212 10:35:23.381"/>
</kw>
<kw name="Execute" library="os">
<var>${snap2_res}</var>
<arg>echo "${snap_list}" | grep ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:23.384" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1702377240325,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "b99e5a20-19e6-4da2-9d37-a14989d910a4",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-b99e5a20-19e6-4da2-9d37-a14989d910a4",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1702377269887,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "e2f0e719-6a90-4032-89f9-c97836fbc2ca",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-e2f0e719-6a90-4032-89f9-c97836fbc2ca",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:23.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:23.388" level="INFO">${output} =   name : snap2,</msg>
<status status="PASS" starttime="20231212 10:35:23.383" endtime="20231212 10:35:23.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:23.389" level="INFO">  name : snap2,</msg>
<status status="PASS" starttime="20231212 10:35:23.388" endtime="20231212 10:35:23.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:23.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:23.389" endtime="20231212 10:35:23.389"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.382" endtime="20231212 10:35:23.390"/>
</kw>
<msg timestamp="20231212 10:35:23.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:23.382" endtime="20231212 10:35:23.390"/>
</kw>
<msg timestamp="20231212 10:35:23.390" level="INFO">${snap2_res} =   name : snap2,</msg>
<status status="PASS" starttime="20231212 10:35:23.381" endtime="20231212 10:35:23.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${snap2_res}</arg>
<arg>${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:23.390" endtime="20231212 10:35:23.390"/>
</kw>
<status status="PASS" starttime="20231212 10:35:18.757" endtime="20231212 10:35:23.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:35:18.729" endtime="20231212 10:35:23.391"/>
</test>
<test id="s1-s4-t4" name="Run snap diff on 'om3' and check diff keys" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:23.397" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:23.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:23.401" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:35:23.396" endtime="20231212 10:35:23.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:23.402" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:35:23.401" endtime="20231212 10:35:23.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:23.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:23.402" endtime="20231212 10:35:23.402"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.395" endtime="20231212 10:35:23.403"/>
</kw>
<msg timestamp="20231212 10:35:23.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:23.395" endtime="20231212 10:35:23.403"/>
</kw>
<msg timestamp="20231212 10:35:23.403" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:35:23.394" endtime="20231212 10:35:23.403"/>
</kw>
<msg timestamp="20231212 10:35:23.403" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:23.394" endtime="20231212 10:35:23.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:35:23.404" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:23.404" endtime="20231212 10:35:23.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:23.407" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:23.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:23.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:35:23.406" endtime="20231212 10:35:23.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:23.424" level="INFO"/>
<status status="PASS" starttime="20231212 10:35:23.424" endtime="20231212 10:35:23.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:23.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:23.424" endtime="20231212 10:35:23.425"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.405" endtime="20231212 10:35:23.425"/>
</kw>
<msg timestamp="20231212 10:35:23.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:23.405" endtime="20231212 10:35:23.425"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.405" endtime="20231212 10:35:23.425"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.404" endtime="20231212 10:35:23.425"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.393" endtime="20231212 10:35:23.425"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.393" endtime="20231212 10:35:23.425"/>
</kw>
<kw name="Run snap diff and validate results">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>3sec</arg>
<arg>Snap diff finished</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Snap diff finished">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:23.433" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:27.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:27.645" level="INFO">${output} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231212 10:35:23.430" endtime="20231212 10:35:27.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:27.646" level="INFO">Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231212 10:35:27.645" endtime="20231212 10:35:27.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:27.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:27.647" endtime="20231212 10:35:27.648"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.429" endtime="20231212 10:35:27.648"/>
</kw>
<msg timestamp="20231212 10:35:27.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:23.429" endtime="20231212 10:35:27.648"/>
</kw>
<msg timestamp="20231212 10:35:27.648" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231212 10:35:23.428" endtime="20231212 10:35:27.648"/>
</kw>
<msg timestamp="20231212 10:35:27.649" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<status status="PASS" starttime="20231212 10:35:23.428" endtime="20231212 10:35:27.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231212 10:35:27.651" level="FAIL">'Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
' does not contain 'Difference between snapshot: snap1 and snapshot: snap2'</msg>
<status status="FAIL" starttime="20231212 10:35:27.649" endtime="20231212 10:35:27.651"/>
</kw>
<status status="FAIL" starttime="20231212 10:35:23.427" endtime="20231212 10:35:27.651"/>
</kw>
<kw name="Snap diff finished">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:30.656" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:34.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:34.731" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:30.654" endtime="20231212 10:35:34.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:34.732" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:34.732" endtime="20231212 10:35:34.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:34.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:34.733" endtime="20231212 10:35:34.733"/>
</kw>
<status status="PASS" starttime="20231212 10:35:30.654" endtime="20231212 10:35:34.733"/>
</kw>
<msg timestamp="20231212 10:35:34.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:30.653" endtime="20231212 10:35:34.733"/>
</kw>
<msg timestamp="20231212 10:35:34.733" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:30.653" endtime="20231212 10:35:34.733"/>
</kw>
<msg timestamp="20231212 10:35:34.734" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:30.652" endtime="20231212 10:35:34.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:34.734" endtime="20231212 10:35:34.734"/>
</kw>
<status status="PASS" starttime="20231212 10:35:30.652" endtime="20231212 10:35:34.734"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.426" endtime="20231212 10:35:34.734"/>
</kw>
<kw name="Run snap diff and get response">
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<kw name="Execute" library="os">
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:34.738" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:38.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:38.980" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:34.736" endtime="20231212 10:35:38.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:38.981" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:38.980" endtime="20231212 10:35:38.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:38.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:38.981" endtime="20231212 10:35:38.981"/>
</kw>
<status status="PASS" starttime="20231212 10:35:34.736" endtime="20231212 10:35:38.982"/>
</kw>
<msg timestamp="20231212 10:35:38.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:34.736" endtime="20231212 10:35:38.982"/>
</kw>
<msg timestamp="20231212 10:35:38.982" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:34.735" endtime="20231212 10:35:38.982"/>
</kw>
<msg timestamp="20231212 10:35:38.982" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<status status="PASS" starttime="20231212 10:35:34.735" endtime="20231212 10:35:38.982"/>
</kw>
<kw name="Execute" library="os">
<var>${key_num}</var>
<arg>echo "${diff_res}" | grep 'key' | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:38.986" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep 'key' | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:38.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:38.988" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231212 10:35:38.984" endtime="20231212 10:35:38.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:38.989" level="INFO">2</msg>
<status status="PASS" starttime="20231212 10:35:38.988" endtime="20231212 10:35:38.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:38.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:38.989" endtime="20231212 10:35:38.989"/>
</kw>
<status status="PASS" starttime="20231212 10:35:38.983" endtime="20231212 10:35:38.990"/>
</kw>
<msg timestamp="20231212 10:35:38.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:38.983" endtime="20231212 10:35:38.990"/>
</kw>
<msg timestamp="20231212 10:35:38.990" level="INFO">${key_num} = 2</msg>
<status status="PASS" starttime="20231212 10:35:38.982" endtime="20231212 10:35:38.990"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${key_num} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:35:38.990" endtime="20231212 10:35:38.990"/>
</kw>
<kw name="Execute" library="os">
<var>${diff_key1}</var>
<arg>echo "${diff_res}" | grep ${key_1} | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:38.993" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key1 | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:38.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:38.996" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20231212 10:35:38.992" endtime="20231212 10:35:38.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:38.996" level="INFO">1</msg>
<status status="PASS" starttime="20231212 10:35:38.996" endtime="20231212 10:35:38.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:38.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:38.997" endtime="20231212 10:35:38.997"/>
</kw>
<status status="PASS" starttime="20231212 10:35:38.991" endtime="20231212 10:35:38.997"/>
</kw>
<msg timestamp="20231212 10:35:38.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:38.991" endtime="20231212 10:35:38.997"/>
</kw>
<msg timestamp="20231212 10:35:38.997" level="INFO">${diff_key1} = 1</msg>
<status status="PASS" starttime="20231212 10:35:38.991" endtime="20231212 10:35:38.997"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${diff_key1} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:35:38.998" endtime="20231212 10:35:38.998"/>
</kw>
<kw name="Execute" library="os">
<var>${diff_key2}</var>
<arg>echo "${diff_res}" | grep ${key_2} | wc -l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:39.000" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key2 | wc -l 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:39.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:39.003" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20231212 10:35:38.999" endtime="20231212 10:35:39.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:39.003" level="INFO">1</msg>
<status status="PASS" starttime="20231212 10:35:39.003" endtime="20231212 10:35:39.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:39.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:39.004" endtime="20231212 10:35:39.004"/>
</kw>
<status status="PASS" starttime="20231212 10:35:38.999" endtime="20231212 10:35:39.004"/>
</kw>
<msg timestamp="20231212 10:35:39.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:38.999" endtime="20231212 10:35:39.004"/>
</kw>
<msg timestamp="20231212 10:35:39.004" level="INFO">${diff_key2} = 1</msg>
<status status="PASS" starttime="20231212 10:35:38.998" endtime="20231212 10:35:39.004"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${diff_key2} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231212 10:35:39.005" endtime="20231212 10:35:39.005"/>
</kw>
<status status="PASS" starttime="20231212 10:35:23.425" endtime="20231212 10:35:39.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:35:23.392" endtime="20231212 10:35:39.005"/>
</test>
<test id="s1-s4-t5" name="Cat snapshot keys and validate contents" line="98">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:39.010" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:39.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:39.012" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231212 10:35:39.008" endtime="20231212 10:35:39.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:39.013" level="INFO">om</msg>
<status status="PASS" starttime="20231212 10:35:39.013" endtime="20231212 10:35:39.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:39.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:39.013" endtime="20231212 10:35:39.014"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.008" endtime="20231212 10:35:39.014"/>
</kw>
<msg timestamp="20231212 10:35:39.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:39.008" endtime="20231212 10:35:39.014"/>
</kw>
<msg timestamp="20231212 10:35:39.014" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231212 10:35:39.008" endtime="20231212 10:35:39.014"/>
</kw>
<msg timestamp="20231212 10:35:39.014" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:39.007" endtime="20231212 10:35:39.014"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231212 10:35:39.015" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231212 10:35:39.014" endtime="20231212 10:35:39.015"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:39.018" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:39.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:39.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231212 10:35:39.016" endtime="20231212 10:35:39.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:39.045" level="INFO"/>
<status status="PASS" starttime="20231212 10:35:39.044" endtime="20231212 10:35:39.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:39.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:39.045" endtime="20231212 10:35:39.046"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.016" endtime="20231212 10:35:39.046"/>
</kw>
<msg timestamp="20231212 10:35:39.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:39.016" endtime="20231212 10:35:39.046"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.015" endtime="20231212 10:35:39.046"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.015" endtime="20231212 10:35:39.046"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.007" endtime="20231212 10:35:39.046"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.006" endtime="20231212 10:35:39.046"/>
</kw>
<kw name="Validate keys under snapshot">
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<kw name="Execute" library="os">
<var>${key1_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:39.051" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:45.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:45.339" level="INFO">${output} = sn/key1</msg>
<status status="PASS" starttime="20231212 10:35:39.049" endtime="20231212 10:35:45.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:45.340" level="INFO">sn/key1</msg>
<status status="PASS" starttime="20231212 10:35:45.339" endtime="20231212 10:35:45.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:45.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:45.340" endtime="20231212 10:35:45.341"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.049" endtime="20231212 10:35:45.341"/>
</kw>
<msg timestamp="20231212 10:35:45.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:39.048" endtime="20231212 10:35:45.341"/>
</kw>
<msg timestamp="20231212 10:35:45.341" level="INFO">${key1_res} = sn/key1</msg>
<status status="PASS" starttime="20231212 10:35:39.048" endtime="20231212 10:35:45.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key1_res}</arg>
<arg>${key_prefix}/${key_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:45.341" endtime="20231212 10:35:45.342"/>
</kw>
<kw name="Execute" library="os">
<var>${key2_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231212 10:35:45.345" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231212 10:35:51.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231212 10:35:51.377" level="INFO">${output} = sn/key2</msg>
<status status="PASS" starttime="20231212 10:35:45.343" endtime="20231212 10:35:51.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231212 10:35:51.379" level="INFO">sn/key2</msg>
<status status="PASS" starttime="20231212 10:35:51.378" endtime="20231212 10:35:51.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231212 10:35:51.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231212 10:35:51.379" endtime="20231212 10:35:51.380"/>
</kw>
<status status="PASS" starttime="20231212 10:35:45.343" endtime="20231212 10:35:51.380"/>
</kw>
<msg timestamp="20231212 10:35:51.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231212 10:35:45.342" endtime="20231212 10:35:51.380"/>
</kw>
<msg timestamp="20231212 10:35:51.380" level="INFO">${key2_res} = sn/key2</msg>
<status status="PASS" starttime="20231212 10:35:45.342" endtime="20231212 10:35:51.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${key2_res}</arg>
<arg>${key_prefix}/${key_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231212 10:35:51.381" endtime="20231212 10:35:51.381"/>
</kw>
<status status="PASS" starttime="20231212 10:35:39.047" endtime="20231212 10:35:51.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231212 10:35:39.006" endtime="20231212 10:35:51.382"/>
</test>
<doc>Smoke test for validating snapshot data after om bootstrap.</doc>
<status status="PASS" starttime="20231212 10:35:05.711" endtime="20231212 10:35:51.384"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="95805"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozonesecure-ha-om-bootstrap">ozonesecure-ha-om-bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Data-Creation-Before-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Creation-Before-Om-Bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Data-Validation-After-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Validation-After-Om-Bootstrap</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
